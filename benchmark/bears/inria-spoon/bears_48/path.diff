--- a/src/main/java/spoon/support/visitor/ClassTypingContext.java
+++ b/src/main/java/spoon/support/visitor/ClassTypingContext.java
@@ -373,7 +373,7 @@ public class ClassTypingContext implements GenericTypeAdapter {
 					throw new SpoonException("Cannot adapt type parameters of non type scope");
 				}
 				CtType<?> typeDeclarer = (CtType<?>) declarer;
-				List<CtTypeReference<?>> actualTypeArguments = typeToArguments.get(typeDeclarer.getQualifiedName());
+				List<CtTypeReference<?>> actualTypeArguments = getActualTypeArguments(typeDeclarer.getQualifiedName());
 				if (actualTypeArguments == null) {
 					/*
 					 * the actualTypeArguments of this declarer cannot be resolved.
@@ -399,6 +399,17 @@ public class ClassTypingContext implements GenericTypeAdapter {
 		return result;
 	}
 
+	private List<CtTypeReference<?>> getActualTypeArguments(String qualifiedName) {
+		List<CtTypeReference<?>> actualTypeArguments = typeToArguments.get(qualifiedName);
+		if (actualTypeArguments != null) {
+			return actualTypeArguments;
+		}
+		if (enclosingClassTypingContext != null) {
+			return enclosingClassTypingContext.getActualTypeArguments(qualifiedName);
+		}
+		return null;
+	}
+
 	private static CtTypeReference<?> getValue(List<CtTypeReference<?>> arguments, CtTypeParameter typeParam, CtFormalTypeDeclarer declarer) {
 		if (declarer.getFormalCtTypeParameters().size() != arguments.size()) {
 			throw new SpoonException("Unexpected count of actual type arguments");
