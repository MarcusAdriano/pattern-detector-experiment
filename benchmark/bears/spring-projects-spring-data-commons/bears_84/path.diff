--- a/src/main/java/org/springframework/data/auditing/AuditingHandler.java
+++ b/src/main/java/org/springframework/data/auditing/AuditingHandler.java
@@ -134,6 +134,16 @@ public class AuditingHandler implements InitializingBean {
 		touch(source, false);
 	}
 
+	/**
+	 * Returns whether the given source is considered to be auditable in the first place
+	 * 
+	 * @param source can be {@literal null}.
+	 * @return
+	 */
+	protected final boolean isAuditable(Object source) {
+		return factory.getBeanWrapperFor(source) != null;
+	}
+
 	private void touch(Object target, boolean isNew) {
 
 		AuditableBeanWrapper wrapper = factory.getBeanWrapperFor(target);
diff --git a/src/main/java/org/springframework/data/auditing/IsNewAwareAuditingHandler.java b/src/main/java/org/springframework/data/auditing/IsNewAwareAuditingHandler.java
index f9b1d4c59..74922f80b 100644
--- a/src/main/java/org/springframework/data/auditing/IsNewAwareAuditingHandler.java
+++ b/src/main/java/org/springframework/data/auditing/IsNewAwareAuditingHandler.java
@@ -73,7 +73,7 @@ public class IsNewAwareAuditingHandler extends AuditingHandler {
 	 */
 	public void markAudited(Object object) {
 
-		if (object == null) {
+		if (!isAuditable(object)) {
 			return;
 		}
 
