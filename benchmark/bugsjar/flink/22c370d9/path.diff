diff --git a/flink-java/src/main/java/org/apache/flink/api/java/typeutils/TypeExtractor.java b/flink-java/src/main/java/org/apache/flink/api/java/typeutils/TypeExtractor.java
index 7836e74..6a56e46 100644
--- a/flink-java/src/main/java/org/apache/flink/api/java/typeutils/TypeExtractor.java
+++ b/flink-java/src/main/java/org/apache/flink/api/java/typeutils/TypeExtractor.java
@@ -975,10 +974,10 @@ private boolean isValidPojoField(Field f, Class<?> clazz, ArrayList<Type> typeHi
 					// no arguments for the getter
 					m.getParameterTypes().length == 0 &&
 					// return type is same as field type (or the generic variant of it)
-					m.getReturnType().equals( fieldType ) || (fieldTypeGeneric != null && m.getGenericReturnType().equals(fieldTypeGeneric) )
+					(m.getReturnType().equals( fieldType ) || (fieldTypeGeneric != null && m.getGenericReturnType().equals(fieldTypeGeneric)) )
 				) {
 					if(hasGetter) {
-						throw new IllegalStateException("Detected more than one getters");
+						throw new IllegalStateException("Detected more than one getter");
 					}
 					hasGetter = true;
 				}
@@ -990,7 +989,7 @@ private boolean isValidPojoField(Field f, Class<?> clazz, ArrayList<Type> typeHi
 					m.getReturnType().equals(Void.TYPE)
 				) {
 					if(hasSetter) {
-						throw new IllegalStateException("Detected more than one getters");
+						throw new IllegalStateException("Detected more than one setter");
 					}
 					hasSetter = true;
 				}
