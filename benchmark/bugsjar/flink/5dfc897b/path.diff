diff --git a/flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/functions/source/FileMonitoringFunction.java b/flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/functions/source/FileMonitoringFunction.java
index 2c85650..a217923 100644
--- a/flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/functions/source/FileMonitoringFunction.java
+++ b/flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/functions/source/FileMonitoringFunction.java
@@ -17,13 +17,6 @@
 
 package org.apache.flink.streaming.api.functions.source;
 
-import java.io.IOException;
-import java.net.URI;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
 import org.apache.flink.api.java.tuple.Tuple3;
 import org.apache.flink.core.fs.FileStatus;
 import org.apache.flink.core.fs.FileSystem;
@@ -31,6 +24,13 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
+import java.io.IOException;
+import java.net.URI;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
 public class FileMonitoringFunction implements SourceFunction<Tuple3<String, Long, Long>> {
 	private static final long serialVersionUID = 1L;
 
@@ -95,6 +95,9 @@ public void run(SourceContext<Tuple3<String, Long, Long>> ctx) throws Exception
 
 		FileStatus[] statuses = fileSystem.listStatus(new Path(path));
 
+		if (statuses == null) {
+			LOG.warn("Path does not exist: {}", path);
+		} else {
 			for (FileStatus status : statuses) {
 				Path filePath = status.getPath();
 				String fileName = filePath.getName();
@@ -105,6 +108,8 @@ public void run(SourceContext<Tuple3<String, Long, Long>> ctx) throws Exception
 					modificationTimes.put(fileName, modificationTime);
 				}
 			}
+		}
+
 		return files;
 	}
 
