diff --git a/flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java b/flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java
index 99b9f65..1e58b9d 100644
--- a/flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java
+++ b/flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java
@@ -142,9 +142,15 @@ public T copy(T from) {
 		
 		try {
 			for (int i = 0; i < numFields; i++) {
-				Object copy = fieldSerializers[i].copy(fields[i].get(from));
+				Object value = fields[i].get(from);
+				if (value != null) {
+					Object copy = fieldSerializers[i].copy(value);
 					fields[i].set(target, copy);
 				}
+				else {
+					fields[i].set(target, null);
+				}
+			}
 		}
 		catch (IllegalAccessException e) {
 			throw new RuntimeException("Error during POJO copy, this should not happen since we check the fields before.");
@@ -156,9 +162,15 @@ public T copy(T from) {
 	public T copy(T from, T reuse) {
 		try {
 			for (int i = 0; i < numFields; i++) {
+				Object value = fields[i].get(from);
+				if (value != null) {
 					Object copy = fieldSerializers[i].copy(fields[i].get(from), fields[i].get(reuse));
 					fields[i].set(reuse, copy);
 				}
+				else {
+					fields[i].set(reuse, null);
+				}
+			}
 		} catch (IllegalAccessException e) {
 			throw new RuntimeException("Error during POJO copy, this should not happen since we check the fields" +
 					"before.");
@@ -257,10 +269,13 @@ public void copy(DataInputView source, DataOutputView target) throws IOException
 		// copy the Non-Null/Null tag
 		target.writeBoolean(source.readBoolean());
 		for (int i = 0; i < numFields; i++) {
-			target.writeBoolean(source.readBoolean());
+			boolean isNull = source.readBoolean();
+			target.writeBoolean(isNull);
+			if (!isNull) {
 				fieldSerializers[i].copy(source, target);
 			}
 		}
+	}
 	
 	@Override
 	public int hashCode() {
