diff --git a/camel-core/src/main/java/org/apache/camel/component/bean/DefaultAnnotationExpressionFactory.java b/camel-core/src/main/java/org/apache/camel/component/bean/DefaultAnnotationExpressionFactory.java
index 1038cdf..cf961c3 100644
--- a/camel-core/src/main/java/org/apache/camel/component/bean/DefaultAnnotationExpressionFactory.java
+++ b/camel-core/src/main/java/org/apache/camel/component/bean/DefaultAnnotationExpressionFactory.java
@@ -21,9 +21,11 @@
 
 import org.apache.camel.CamelContext;
 import org.apache.camel.Expression;
+import org.apache.camel.Predicate;
 import org.apache.camel.language.LanguageAnnotation;
 import org.apache.camel.spi.Language;
 import org.apache.camel.util.ObjectHelper;
+import org.apache.camel.util.PredicateToExpressionAdapter;
 
 /**
  * Default implementation of the {@link AnnotationExpressionFactory}.
@@ -42,8 +44,14 @@ public Expression createExpression(CamelContext camelContext, Annotation annotat
             throw new IllegalArgumentException("Cannot find the language: " + languageName + " on the classpath");
         }
         String expression = getExpressionFromAnnotation(annotation);
+
+        if (expressionReturnType == Boolean.class || expressionReturnType == boolean.class) {
+            Predicate predicate = language.createPredicate(expression);
+            return PredicateToExpressionAdapter.toExpression(predicate);
+        } else {
             return language.createExpression(expression);
         }
+    }
 
     protected String getExpressionFromAnnotation(Annotation annotation) {
         Object value = getAnnotationObjectValue(annotation, "value");
