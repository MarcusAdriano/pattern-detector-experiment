diff --git a/wicket-core/src/main/java/org/apache/wicket/markup/html/form/Form.java b/wicket-core/src/main/java/org/apache/wicket/markup/html/form/Form.java
index 35ac561..53898a6 100644
--- a/wicket-core/src/main/java/org/apache/wicket/markup/html/form/Form.java
+++ b/wicket-core/src/main/java/org/apache/wicket/markup/html/form/Form.java
@@ -928,18 +928,19 @@ public void process(IFormSubmitter submittingComponent)
 	 */
 	protected void callOnError(IFormSubmitter submitter)
 	{
+		final Form<?> processingForm = findFormToProcess(submitter);
+
 		if (submitter != null)
 		{
 			submitter.onError();
 		}
-		onError();
-		// call onError on nested forms
-		visitChildren(Form.class, new IVisitor<Component, Void>()
+
+		// invoke Form#onSubmit(..) going from innermost to outermost
+		Visits.visitPostOrder(processingForm, new IVisitor<Form<?>, Void>()
 		{
 			@Override
-			public void component(final Component component, final IVisit<Void> visit)
+			public void component(Form<?> form, IVisit<Void> visit)
 			{
-				final Form<?> form = (Form<?>)component;
 				if (!form.isEnabledInHierarchy() || !form.isVisibleInHierarchy())
 				{
 					visit.dontGoDeeper();
@@ -950,7 +951,7 @@ public void component(final Component component, final IVisit<Void> visit)
 					form.onError();
 				}
 			}
-		});
+		}, new ClassVisitFilter(Form.class));
 	}
 
 
@@ -1208,8 +1209,8 @@ protected void beforeUpdateFormComponentModels()
 	 * processing to clients.
 	 * <p>
 	 * This implementation first finds out whether the form processing was triggered by a nested
-	 * IFormSubmittingComponent of this form. If that is the case, that component's onSubmit is
-	 * called first.
+	 * IFormSubmittingComponent of this form. If that is the case, that component's
+	 * onSubmitBefore/AfterForm methods are called appropriately..
 	 * </p>
 	 * <p>
 	 * Regardless of whether a submitting component was found, the form's onSubmit method is called
