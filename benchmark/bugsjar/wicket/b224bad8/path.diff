diff --git a/wicket/src/main/java/wicket/ajax/AbstractAjaxTimerBehavior.java b/wicket/src/main/java/wicket/ajax/AbstractAjaxTimerBehavior.java
index a297a5f..59eeabc 100644
--- a/wicket/src/main/java/wicket/ajax/AbstractAjaxTimerBehavior.java
+++ b/wicket/src/main/java/wicket/ajax/AbstractAjaxTimerBehavior.java
@@ -16,6 +16,7 @@
  */
 package wicket.ajax;
 
+import wicket.RequestCycle;
 import wicket.markup.html.IHeaderResponse;
 import wicket.markup.html.WebPage;
 import wicket.util.time.Duration;
@@ -66,10 +67,16 @@ public void renderHead(IHeaderResponse response)
 		if (this.attachedBodyOnLoadModifier == false)
 		{
 			this.attachedBodyOnLoadModifier = true;
+			if (RequestCycle.get().getRequestTarget() instanceof AjaxRequestTarget) {
+				response.renderJavascript(getJsTimeoutCall(updateInterval), getComponent().getMarkupId());
+			}
+			else
+			{
 				((WebPage)getComponent().getPage()).getBodyContainer().addOnLoadModifier(
 						getJsTimeoutCall(updateInterval), getComponent());
 			}
 		}
+	}
 
 	/**
 	 * @param updateInterval
@@ -78,7 +85,8 @@ public void renderHead(IHeaderResponse response)
 	 */
 	protected final String getJsTimeoutCall(final Duration updateInterval)
 	{
-		return "setTimeout(function() { " + getCallbackScript(false, true) + " }, "
+		// this might look strange, but it is necessary for IE not to leak :(
+		return "setTimeout(\"" + getCallbackScript(false, true) + "\", "
 				+ updateInterval.getMilliseconds() + ");";
 	}
 
@@ -92,11 +100,7 @@ protected final void respond(final AjaxRequestTarget target)
 
 		if (!stopped)
 		{
-			// this might look strange, but it is necessary for IE not to leak
-			String js = "setTimeout(\"" + getCallbackScript(false, true) + "\", "
-					+ updateInterval.getMilliseconds() + ");";
-
-			target.appendJavascript(js);
+			target.appendJavascript(getJsTimeoutCall(updateInterval));
 		}
 	}
 
