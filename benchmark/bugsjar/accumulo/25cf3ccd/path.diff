diff --git a/core/src/main/java/org/apache/accumulo/core/security/Authorizations.java b/core/src/main/java/org/apache/accumulo/core/security/Authorizations.java
index 5933325..a677f3f 100644
--- a/core/src/main/java/org/apache/accumulo/core/security/Authorizations.java
+++ b/core/src/main/java/org/apache/accumulo/core/security/Authorizations.java
@@ -23,10 +23,9 @@
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Collections;
+import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
-import java.util.Set;
-import java.util.TreeSet;
 
 import org.apache.accumulo.core.data.ArrayByteSequence;
 import org.apache.accumulo.core.data.ByteSequence;
@@ -38,7 +37,7 @@
   
   private static final long serialVersionUID = 1L;
   
-  private Set<ByteSequence> auths = new TreeSet<ByteSequence>();
+  private HashSet<ByteSequence> auths = new HashSet<ByteSequence>();
   private List<byte[]> authsList = new ArrayList<byte[]>();
   private List<byte[]> immutableList = Collections.unmodifiableList(authsList);
   
@@ -177,7 +176,6 @@ private void setAuthorizations(Charset charset, String... authorizations) {
     return ByteBufferUtil.toByteBuffers(immutableList);
   }
   
-  @Override
   public String toString() {
     StringBuilder sb = new StringBuilder();
     String sep = "";
@@ -198,7 +196,6 @@ public boolean contains(ByteSequence auth) {
     return auths.contains(auth);
   }
   
-  @Override
   public boolean equals(Object o) {
     if (o == null) {
       return false;
@@ -213,7 +210,6 @@ public boolean equals(Object o) {
     return false;
   }
   
-  @Override
   public int hashCode() {
     int result = 0;
     for (ByteSequence b : auths)
