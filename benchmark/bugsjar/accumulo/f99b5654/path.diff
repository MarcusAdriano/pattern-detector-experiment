diff --git a/core/src/main/java/org/apache/accumulo/core/client/BatchWriterConfig.java b/core/src/main/java/org/apache/accumulo/core/client/BatchWriterConfig.java
index d3ad3fe..28955f5 100644
--- a/core/src/main/java/org/apache/accumulo/core/client/BatchWriterConfig.java
+++ b/core/src/main/java/org/apache/accumulo/core/client/BatchWriterConfig.java
@@ -24,6 +24,7 @@
 import java.util.List;
 import java.util.concurrent.TimeUnit;
 
+import org.apache.commons.lang.builder.HashCodeBuilder;
 import org.apache.hadoop.io.Writable;
 import org.apache.hadoop.util.StringUtils;
 
@@ -223,4 +224,70 @@ public void readFields(DataInput in) throws IOException {
       }
     }
   }
+
+  @Override
+  public boolean equals(Object o) {
+    if (o instanceof BatchWriterConfig) {
+      BatchWriterConfig other = (BatchWriterConfig) o;
+
+      if (null != maxMemory) {
+        if (!maxMemory.equals(other.maxMemory)) {
+          return false;
+        }
+      } else {
+        if (null != other.maxMemory) {
+          return false;
+        }
+      }
+
+      if (null != maxLatency) {
+        if (!maxLatency.equals(other.maxLatency)) {
+          return false;
+        }
+      } else {
+        if (null != other.maxLatency) {
+          return false;
+        }
+      }
+
+      if (null != maxWriteThreads) {
+        if (!maxWriteThreads.equals(other.maxWriteThreads)) {
+          return false;
+        }
+      } else {
+        if (null != other.maxWriteThreads) {
+          return false;
+        }
+      }
+
+      if (null != timeout) {
+        if (!timeout.equals(other.timeout)) {
+          return false;
+        }
+      } else {
+        if (null != other.timeout) {
+          return false;
+        }
+      }
+
+      return true;
+    }
+
+    return false;
+  }
+
+  @Override
+  public int hashCode() {
+    HashCodeBuilder hcb = new HashCodeBuilder();
+    hcb.append(maxMemory).append(maxLatency).append(maxWriteThreads).append(timeout);
+    return hcb.toHashCode();
+  }
+
+  @Override
+  public String toString() {
+    StringBuilder sb = new StringBuilder(32);
+    sb.append("[maxMemory=").append(getMaxMemory()).append(", maxLatency=").append(getMaxLatency(TimeUnit.MILLISECONDS)).append(", maxWriteThreads=")
+        .append(getMaxWriteThreads()).append(", timeout=").append(getTimeout(TimeUnit.MILLISECONDS)).append("]");
+    return sb.toString();
+  }
 }
