diff --git a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLDecimal.java b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLDecimal.java
index 4a65e235..8ade7dd6 100644
--- a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLDecimal.java
+++ b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLDecimal.java
@@ -371,7 +371,7 @@ public void setValue(Object theValue)
 		}
 		else if (theValue instanceof Number)
 		{
-			value = new BigDecimal(((Number)theValue).doubleValue());
+			value = new BigDecimal(Double.toString(((Number)theValue).doubleValue()));
 		}
 		else
 		{
@@ -720,7 +720,7 @@ private void setCoreValue(BigDecimal theValue)
 	}
 
 	private void setCoreValue(double theValue) {
-		value = new BigDecimal(theValue);
+		value = new BigDecimal(Double.toString(theValue));
 		rawData = null;
 	}
 
diff --git a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLDouble.java b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLDouble.java
index f8929151..40117f86 100644
--- a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLDouble.java
+++ b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLDouble.java
@@ -153,7 +153,7 @@ public double	getDouble()
 	public BigDecimal	getBigDecimal()
 	{
 		if (isNull()) return null;
-		return new BigDecimal(value);
+		return new BigDecimal(Double.toString(value));
 	}
 
     // for lack of a specification: getDouble()==0 gives true
diff --git a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLReal.java b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLReal.java
index 938845be..77419a25 100644
--- a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLReal.java
+++ b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLReal.java
@@ -161,7 +161,7 @@ public double	getDouble()
 	public BigDecimal	getBigDecimal()
 	{
 		if (isNull()) return null;
-		return new BigDecimal(value);
+		return new BigDecimal(Float.toString(value));
 	}
 
     // for lack of a specification: 0 or null is false,
diff --git a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/types/UserType.java b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/types/UserType.java
index e51ec109..ede464ea 100644
--- a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/types/UserType.java
+++ b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/types/UserType.java
@@ -195,7 +195,7 @@ public BigDecimal getBigDecimal() throws StandardException
 			if (value instanceof BigDecimal) return ((BigDecimal)value);
 
 			if (value instanceof Number)
-				return new BigDecimal(((Number) value).doubleValue());
+				return new BigDecimal(Double.toString(((Number) value).doubleValue()));
 		}
 		return super.getBigDecimal();
 	}
