diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/net/TcpConnectionManager.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/net/TcpConnectionManager.java
index f88a8a9e..a30254a3 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/net/TcpConnectionManager.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/net/TcpConnectionManager.java
@@ -66,14 +66,15 @@ TcpConnection getConnection() throws IOException
 
             TcpConnection least = getLeastLoaded();
 
-            if ( (least != null && least.pending() == 0) || allConnections_.size() == maxSize_) {
+            if ((least != null && least.pending() == 0) || allConnections_.size() == maxSize_)
+            {
                 least.inUse_ = true;
                 incUsed();
                 return least;
             }
 
             TcpConnection connection = new TcpConnection(this, localEp_, remoteEp_);
-            if ( connection != null && !contains(connection) )
+            if (connection != null && !contains(connection))
             {
                 addToPool(connection);
                 connection.inUse_ = true;
@@ -82,7 +83,7 @@ TcpConnection getConnection() throws IOException
             }
             else
             {
-                if ( connection != null )
+                if (connection != null)
                 {
                     connection.closeSocket();
                 }
@@ -102,7 +103,7 @@ protected TcpConnection getLeastLoaded()
         try
         {
             Collections.sort(allConnections_);
-            connection = (allConnections_.size() > 0 ) ? allConnections_.get(0) : null;
+            connection = (allConnections_.size() > 0) ? allConnections_.get(0) : null;
         }
         finally
         {
@@ -144,10 +145,10 @@ void addToPool(TcpConnection connection)
         lock_.lock();
         try
         {
-            if ( contains(connection) )
+            if (contains(connection))
                 return;
 
-            if ( allConnections_.size() < maxSize_ )
+            if (allConnections_.size() < maxSize_)
             {
                 allConnections_.add(connection);
             }
@@ -167,7 +168,7 @@ void shutdown()
         lock_.lock();
         try
         {
-            while ( allConnections_.size() > 0 )
+            while (allConnections_.size() > 0)
             {
                 TcpConnection connection = allConnections_.remove(0);
                 connection.closeSocket();
@@ -209,7 +210,7 @@ int getPendingWrites()
         lock_.lock();
         try
         {
-            for ( TcpConnection connection : allConnections_ )
+            for (TcpConnection connection : allConnections_)
             {
                 total += connection.pending();
             }
