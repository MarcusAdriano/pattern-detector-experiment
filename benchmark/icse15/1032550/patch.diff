diff --git a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/AbstractIntegrationTest.java b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/AbstractIntegrationTest.java
index 078b87bf..117e86c4 100644
--- a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/AbstractIntegrationTest.java
+++ b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/AbstractIntegrationTest.java
@@ -16,18 +16,18 @@
  */
 package org.apache.aries.jmx;
 
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.fail;
+import static org.ops4j.pax.exam.CoreOptions.options;
+import static org.ops4j.pax.exam.CoreOptions.wrappedBundle;
+import static org.ops4j.pax.exam.OptionUtils.combine;
+
 import java.util.Collection;
 import java.util.Dictionary;
 import java.util.Enumeration;
 import java.util.LinkedList;
 import java.util.List;
 
-import static org.ops4j.pax.exam.CoreOptions.options;
-import static org.ops4j.pax.exam.CoreOptions.wrappedBundle;
-import static org.ops4j.pax.exam.OptionUtils.combine;
-import org.ops4j.pax.exam.options.MavenArtifactProvisionOption;
-import static org.junit.Assert.*;
-
 import javax.management.InstanceNotFoundException;
 import javax.management.MBeanServer;
 import javax.management.MBeanServerFactory;
@@ -41,6 +41,7 @@
 import org.ops4j.pax.exam.Inject;
 import org.ops4j.pax.exam.Option;
 import org.ops4j.pax.exam.junit.JUnit4TestRunner;
+import org.ops4j.pax.exam.options.MavenArtifactProvisionOption;
 import org.osgi.framework.Bundle;
 import org.osgi.framework.BundleContext;
 import org.osgi.framework.Constants;
@@ -50,7 +51,6 @@
 import org.osgi.framework.ServiceReference;
 import org.osgi.framework.ServiceRegistration;
 import org.osgi.framework.Version;
-import org.osgi.jmx.framework.BundleStateMBean;
 import org.osgi.util.tracker.ServiceTracker;
 
 /**
diff --git a/incubator/aries/trunk/jmx/jmx-whiteboard/src/test/java/org/apache/aries/jmx/whiteboard/integration/helper/IntegrationTestBase.java b/incubator/aries/trunk/jmx/jmx-whiteboard/src/test/java/org/apache/aries/jmx/whiteboard/integration/helper/IntegrationTestBase.java
index e322d27c..0698715d 100644
--- a/incubator/aries/trunk/jmx/jmx-whiteboard/src/test/java/org/apache/aries/jmx/whiteboard/integration/helper/IntegrationTestBase.java
+++ b/incubator/aries/trunk/jmx/jmx-whiteboard/src/test/java/org/apache/aries/jmx/whiteboard/integration/helper/IntegrationTestBase.java
@@ -22,6 +22,8 @@
 import static org.ops4j.pax.exam.CoreOptions.options;
 import static org.ops4j.pax.exam.CoreOptions.provision;
 import static org.ops4j.pax.exam.CoreOptions.waitForFrameworkStartup;
+import static org.ops4j.pax.exam.CoreOptions.wrappedBundle;
+import static org.ops4j.pax.exam.OptionUtils.combine;
 
 import java.io.File;
 import java.util.Dictionary;
@@ -40,7 +42,6 @@
 import org.ops4j.pax.exam.CoreOptions;
 import org.ops4j.pax.exam.Inject;
 import org.ops4j.pax.exam.Option;
-import org.ops4j.pax.exam.OptionUtils;
 import org.ops4j.pax.exam.container.def.PaxRunnerOptions;
 import org.osgi.framework.BundleContext;
 import org.osgi.framework.ServiceRegistration;
@@ -103,7 +104,24 @@
         final Option vmOption = (paxRunnerVmOption != null)
                 ? PaxRunnerOptions.vmOption(paxRunnerVmOption)
                 : null;
-        return OptionUtils.combine(base, vmOption);
+        
+        Option[] options = combine(base, vmOption);
+        return updateOptions (options);
+    }
+    
+    // This method is copied from AbstractIntegrationTest 
+    // in org.apache.aries.jmx.itests
+    protected static Option[] updateOptions(Option[] options) {
+      // We need to add pax-exam-junit here when running with the ibm
+      // jdk to avoid the following exception during the test run:
+      // ClassNotFoundException: org.ops4j.pax.exam.junit.Configuration
+      if ("IBM Corporation".equals(System.getProperty("java.vendor"))) {
+          Option[] ibmOptions = options(
+              wrappedBundle(mavenBundle("org.ops4j.pax.exam", "pax-exam-junit"))
+          );
+          options = combine(ibmOptions, options);
+      }
+      return options;
     }
 
     @Before
