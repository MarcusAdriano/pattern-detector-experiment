diff --git a/lucene/solr/trunk/src/java/org/apache/solr/update/DirectUpdateHandler2.java b/lucene/solr/trunk/src/java/org/apache/solr/update/DirectUpdateHandler2.java
index 380086a7..a3f478b3 100644
--- a/lucene/solr/trunk/src/java/org/apache/solr/update/DirectUpdateHandler2.java
+++ b/lucene/solr/trunk/src/java/org/apache/solr/update/DirectUpdateHandler2.java
@@ -143,6 +143,7 @@
   // The key is the id, the value (Integer) is the number
   // of docs to save (delete all except the last "n" added)
   protected final Map<String,Integer> pset;
+  protected int maxPendingDeletes = SolrConfig.config.getInt("updateHandler/maxPendingDeletes", -1);
 
   // commonly used constants for the count in the pset
   protected final static Integer ZERO = 0;
@@ -274,6 +275,17 @@ public int addDoc(AddUpdateCommand cmd) throws IOException {
         numDocsPending.incrementAndGet();
       }
     }
+    if (maxPendingDeletes > 0 && pset.size() > maxPendingDeletes) {
+      iwCommit.lock();
+      try {
+        // note: this may be entered multiple times since the synchro is 
+        // inside the if(), but doDeletions() is a cheap no-op if it has
+        // already executed
+        doDeletions();
+      } finally {
+        iwCommit.unlock();
+      }
+    }    
     return rc;
   }
 
diff --git a/lucene/solr/trunk/src/test/org/apache/solr/update/AutoCommitTest.java b/lucene/solr/trunk/src/test/org/apache/solr/update/AutoCommitTest.java
index a4929e1b..5ed995a3 100644
--- a/lucene/solr/trunk/src/test/org/apache/solr/update/AutoCommitTest.java
+++ b/lucene/solr/trunk/src/test/org/apache/solr/update/AutoCommitTest.java
@@ -176,9 +176,40 @@ public void testMaxTime() throws Exception {
     Thread.sleep( 1000 );
     req.setContentStreams( toContentStreams(
       adoc("id", "531", "field_t", "what's inside?", "subject", "info"), null ) );
+    handler.handleRequest( req, rsp );
 
     assertQ("now it should", req("id:500") ,"//result[@numFound=1]" );
     assertQ("but not this", req("id:531") ,"//result[@numFound=0]" );
     assertEquals( 3, tracker.autoCommitCount );
   }
+
+  public void testMaxPending() throws Exception {
+    
+    DirectUpdateHandler2 updater = (DirectUpdateHandler2)SolrCore.getSolrCore().getUpdateHandler();
+    updater.maxPendingDeletes = 14;
+    
+    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();
+    handler.init( null );
+    
+    SolrCore core = SolrCore.getSolrCore();
+    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );
+    
+    // Add a single document
+    SolrQueryResponse rsp = new SolrQueryResponse();
+    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};
+    for( int i=0; i<14; i++ ) {
+      req.setContentStreams( toContentStreams(
+        adoc("id", "A"+i, "subject", "info" ), null ) );
+      handler.handleRequest( req, rsp );
+    }
+    assertEquals(updater.numDocsPending.get(), 14);
+
+    req.setContentStreams( toContentStreams(
+        adoc("id", "A14", "subject", "info" ), null ) );
+    handler.handleRequest( req, rsp );
+
+    assertEquals(updater.numDocsPending.get(), 0);
+    assertEquals(updater.commitCommands.get(), 0);
+  }
+
 }
