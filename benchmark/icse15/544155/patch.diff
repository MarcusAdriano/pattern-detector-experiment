diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/UpdatableResultSetTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/UpdatableResultSetTest.java
index 172c3d2e..11a1e40b 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/UpdatableResultSetTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/UpdatableResultSetTest.java
@@ -29,6 +29,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 import org.apache.derbyTesting.junit.BaseJDBCTestCase;
 import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
+import org.apache.derbyTesting.junit.DatabasePropertyTestSetup;
 import org.apache.derbyTesting.junit.JDBC;
 import org.apache.derbyTesting.junit.TestConfiguration;
 
@@ -291,7 +292,13 @@ public static Test suite() {
         suite.addTest(TestConfiguration.clientServerDecorator(
                 new CleanDatabaseTestSetup(clientSuite)));
         
-        return suite;
+        // DERBY-177: The internal transaction that tries to compile the
+        // trigger in testDeleteRowWithDeleteTrigger gets a lock timeout
+        // because the main transaction has an exclusive lock on the trigger
+        // statement. It does not fail, because the compilation is retried in
+        // the main transaction where it completes successfully. Reduce the
+        // lock timeout to make the test run faster until the bug is fixed.
+        return DatabasePropertyTestSetup.setLockTimeouts(suite, 2, 4);
     }
     
     private static TestSuite baseSuite(String name) {
