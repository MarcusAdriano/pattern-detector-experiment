diff --git a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.java b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.java
index 2be0300f..1b700956 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.java
@@ -67,7 +67,7 @@
   static TestIndex unsignedIndexDir;
   
   static int minId = 0;
-  static int maxId = atLeast(500);
+  static int maxId;
   
   static final int intLength = Integer.toString(Integer.MAX_VALUE).length();
   
@@ -93,6 +93,7 @@ public static String pad(int n) {
   
   @BeforeClass
   public static void beforeClassBaseTestRangeFilter() throws Exception {
+    maxId = atLeast(500);
     signedIndexDir = new TestIndex(random, Integer.MAX_VALUE, Integer.MIN_VALUE, true);
     unsignedIndexDir = new TestIndex(random, Integer.MAX_VALUE, 0, false);
     signedIndexReader = build(random, signedIndexDir);
diff --git a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestCustomSearcherSort.java b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestCustomSearcherSort.java
index a9d2f78c..e8806fd5 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestCustomSearcherSort.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestCustomSearcherSort.java
@@ -40,7 +40,7 @@
   private IndexReader reader;
   private Query query = null;
   // reduced from 20000 to 2000 to speed up test...
-  private final static int INDEX_SIZE = atLeast(2000);
+  private int INDEX_SIZE;
   
   /**
    * Create index and query for test cases.
@@ -48,6 +48,7 @@
   @Override
   public void setUp() throws Exception {
     super.setUp();
+    INDEX_SIZE = atLeast(2000);
     index = newDirectory();
     RandomIndexWriter writer = new RandomIndexWriter(random, index);
     RandomGen random = new RandomGen(this.random);
diff --git a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestFieldCache.java b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestFieldCache.java
index beac90fe..b4028d29 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestFieldCache.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestFieldCache.java
@@ -29,12 +29,13 @@
 
 public class TestFieldCache extends LuceneTestCase {
   protected IndexReader reader;
-  private static final int NUM_DOCS = atLeast(1000);
+  private int NUM_DOCS;
   private Directory directory;
 
   @Override
   public void setUp() throws Exception {
     super.setUp();
+    NUM_DOCS = atLeast(1000);
     directory = newDirectory();
     RandomIndexWriter writer= new RandomIndexWriter(random, directory, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));
     long theLong = Long.MAX_VALUE;
diff --git a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestNumericRangeQuery32.java b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestNumericRangeQuery32.java
index f87653ea..689cf046 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestNumericRangeQuery32.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestNumericRangeQuery32.java
@@ -43,7 +43,7 @@
   // shift the starting of the values to the left, to also have negative values:
   private static final int startOffset = - 1 << 15;
   // number of docs to generate for testing
-  private static final int noDocs = atLeast(5000);
+  private static int noDocs;
   
   private static Directory directory = null;
   private static IndexReader reader = null;
@@ -51,6 +51,7 @@
   
   @BeforeClass
   public static void beforeClass() throws Exception {
+    noDocs = atLeast(4096);
     directory = newDirectory();
     RandomIndexWriter writer = new RandomIndexWriter(random, directory,
         newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))
diff --git a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestNumericRangeQuery64.java b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestNumericRangeQuery64.java
index fd2f3dbe..b8341bc9 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestNumericRangeQuery64.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestNumericRangeQuery64.java
@@ -39,7 +39,7 @@
   // shift the starting of the values to the left, to also have negative values:
   private static final long startOffset = - 1L << 31;
   // number of docs to generate for testing
-  private static final int noDocs = atLeast(5000);
+  private static int noDocs;
   
   private static Directory directory = null;
   private static IndexReader reader = null;
@@ -47,6 +47,7 @@
   
   @BeforeClass
   public static void beforeClass() throws Exception {
+    noDocs = atLeast(4096);
     directory = newDirectory();
     RandomIndexWriter writer = new RandomIndexWriter(random, directory,
         newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))
diff --git a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestSort.java b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestSort.java
index 5c6296aa..dab4bc41 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestSort.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/TestSort.java
@@ -46,6 +46,7 @@
 import org.apache.lucene.util.DocIdBitSet;
 import org.apache.lucene.util.LuceneTestCase;
 import org.apache.lucene.util._TestUtil;
+import org.junit.BeforeClass;
 
 /**
  * Unit tests for sorting code.
@@ -57,7 +58,7 @@
 
 public class TestSort extends LuceneTestCase implements Serializable {
 
-  private static final int NUM_STRINGS = atLeast(6000);
+  private static int NUM_STRINGS;
   private IndexSearcher full;
   private IndexSearcher searchX;
   private IndexSearcher searchY;
@@ -69,6 +70,10 @@
   private Query queryG;
   private Sort sort;
 
+  @BeforeClass
+  public static void beforeClass() throws Exception {
+    NUM_STRINGS = atLeast(6000);
+  }
   // document data:
   // the tracer field is used to determine which document was hit
   // the contents field is used to search and sort by relevance
diff --git a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/util/TestIndexableBinaryStringTools.java b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/util/TestIndexableBinaryStringTools.java
index dde9d012..70ce3ff3 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/util/TestIndexableBinaryStringTools.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/util/TestIndexableBinaryStringTools.java
@@ -1,5 +1,7 @@
 package org.apache.lucene.util;
 
+import org.junit.BeforeClass;
+
 /**
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
@@ -21,8 +23,14 @@
 import java.nio.ByteBuffer;
 
 public class TestIndexableBinaryStringTools extends LuceneTestCase {
-  private static final int NUM_RANDOM_TESTS = atLeast(200);
-  private static final int MAX_RANDOM_BINARY_LENGTH = atLeast(300);
+  private static int NUM_RANDOM_TESTS;
+  private static int MAX_RANDOM_BINARY_LENGTH;
+
+  @BeforeClass
+  public static void beforeClass() throws Exception {
+    NUM_RANDOM_TESTS = atLeast(200);
+    MAX_RANDOM_BINARY_LENGTH = atLeast(300);
+  }
   
   /** @deprecated remove this test for Lucene 4.0 */
   @Deprecated
