diff --git a/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/map/OpenKeyTypeObjectHashMap.java.t b/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/map/OpenKeyTypeObjectHashMap.java.t
index e370e5b7..18ff8daa 100644
--- a/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/map/OpenKeyTypeObjectHashMap.java.t
+++ b/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/map/OpenKeyTypeObjectHashMap.java.t
@@ -84,8 +84,8 @@ public class Open${keyTypeCap}ObjectHashMap<T> extends Abstract${keyTypeCap}Obje
   /** Removes all (key,value) associations from the receiver. Implicitly calls <tt>trimToSize()</tt>. */
   @Override
   public void clear() {
-    Arrays.fill(state, 0, this.state.length - 1, FREE);
-    Arrays.fill(values, 0, state.length - 1, null); // delta
+    Arrays.fill(state, FREE);
+    Arrays.fill(values, null); // delta
 
     this.distinct = 0;
     this.freeEntries = table.length; // delta
diff --git a/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/map/OpenObjectValueTypeHashMap.java.t b/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/map/OpenObjectValueTypeHashMap.java.t
index 239cd68d..2c432c92 100644
--- a/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/map/OpenObjectValueTypeHashMap.java.t
+++ b/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/map/OpenObjectValueTypeHashMap.java.t
@@ -88,7 +88,7 @@ public class OpenObject${valueTypeCap}HashMap<T> extends AbstractObject${valueTy
   /** Removes all (key,value) associations from the receiver. Implicitly calls <tt>trimToSize()</tt>. */
   @Override
   public void clear() {
-    Arrays.fill(this.state, 0, state.length - 1, FREE);
+    Arrays.fill(this.state, FREE);
     distinct = 0;
     freeEntries = table.length; // delta
     trimToSize();
diff --git a/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/set/OpenKeyTypeHashSet.java.t b/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/set/OpenKeyTypeHashSet.java.t
index 3ae57bb3..8c4c0f04 100644
--- a/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/set/OpenKeyTypeHashSet.java.t
+++ b/mahout/trunk/math/src/main/java-templates/org/apache/mahout/math/set/OpenKeyTypeHashSet.java.t
@@ -83,7 +83,7 @@ public class Open${keyTypeCap}HashSet extends Abstract${keyTypeCap}Set {
   /** Removes all values associations from the receiver. Implicitly calls <tt>trimToSize()</tt>. */
   @Override
   public void clear() {
-    Arrays.fill(this.state, 0, state.length - 1, FREE);
+    Arrays.fill(this.state, FREE);
     distinct = 0;
     freeEntries = table.length; // delta
     trimToSize();
diff --git a/mahout/trunk/math/src/test/java-templates/org/apache/mahout/math/map/OpenKeyTypeObjectHashMapTest.java.t b/mahout/trunk/math/src/test/java-templates/org/apache/mahout/math/map/OpenKeyTypeObjectHashMapTest.java.t
index 7b07b931..342ff3a4 100644
--- a/mahout/trunk/math/src/test/java-templates/org/apache/mahout/math/map/OpenKeyTypeObjectHashMapTest.java.t
+++ b/mahout/trunk/math/src/test/java-templates/org/apache/mahout/math/map/OpenKeyTypeObjectHashMapTest.java.t
@@ -144,11 +144,14 @@ public class Open${keyTypeCap}ObjectHashMapTest extends Assert {
   @Test
   public void testClear() {
     Open${keyTypeCap}ObjectHashMap<TestClass> map = new Open${keyTypeCap}ObjectHashMap<TestClass>();
-    map.put((${keyType}) 11, item); 
+    for (int i = 0; i < 100; i++) {
+      map.put((${keyType}) i, item);
     assertEquals(1, map.size());
     map.clear();
     assertEquals(0, map.size());
-    assertSame(null, map.get((${keyType}) 11));
+      assertFalse("Contains: " + i, map.containsKey((${keyType}) i));
+      assertSame(null, map.get((${keyType}) i));
+    }
   }
   
   @Test
