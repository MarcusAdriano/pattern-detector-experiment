diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/LoginTimeoutTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/LoginTimeoutTest.java
index 7ba6048f..0068aebf 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/LoginTimeoutTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/LoginTimeoutTest.java
@@ -270,7 +270,8 @@ public  void    testBasic() throws Exception
 
         // make sure the database is created in order to eliminate asymmetries
         // in running the tests
-        openDefaultConnection( RUTH, RUTH_PASSWORD );
+        Connection  conn = openDefaultConnection( RUTH, RUTH_PASSWORD );
+        conn.close();
         
         vetConnector( new DriverManagerConnector( this ), true );
         vetConnector( new DataSourceConnector( JDBCDataSource.getDataSource() ), true );
@@ -307,11 +308,12 @@ private void    tryTimeout( Connector connector, boolean shouldSucceed ) throws
         try {
             Connection  conn = connector.getConnection( RUTH, RUTH_PASSWORD );
             println( "    Got a " + conn.getClass().getName() );
+            conn.close();
             if ( !shouldSucceed )   { fail( "Should not have been able to connect!" ); }
         }
         catch (SQLException se)
         {
-            if ( shouldSucceed ) { failWithTrace( se, "Should have been able to connect!" ); }
+            if ( shouldSucceed ) { fail( "Should have been able to connect!", se ); }
 
             assertTrue( "Didn't expect to see a " + se.getClass().getName(), (se instanceof SQLTimeoutException) );
             assertSQLState( LOGIN_TIMEOUT, se );
@@ -332,7 +334,8 @@ private void    vetExceptionPassthrough() throws Exception
             SluggishAuthenticator.returnValue = false;
 
             try {
-                openDefaultConnection( RUTH, RUTH_PASSWORD );
+                Connection conn = openDefaultConnection( RUTH, RUTH_PASSWORD );
+                conn.close();
                 fail( "Didn't expect to get a connection!" );
             }
             catch (SQLException se) { assertSQLState( LOGIN_FAILED, se ); }
@@ -365,6 +368,7 @@ private void    vetServerTimeouts() throws Exception
 
         // reset server timeout to default
         setServerTimeout( controlConnection, 0 );
+        controlConnection.close();
     }
     private void    vetServerTimeout
         ( Connection controlConnection, Connector connector, int serverTimeout, boolean shouldSucceed )
@@ -399,11 +403,4 @@ public  static  void    setLoginTimeout( int seconds ) throws Exception
     //
     ///////////////////////////////////////////////////////////////////////////////////
 
-    /** Fail and print a stack trace */
-    private static void    failWithTrace( Throwable t, String message )
-    {
-        printStackTrace( t );
-        fail( message );
-    }
-
 }
