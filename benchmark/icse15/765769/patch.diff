diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/RecommenderJob.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/RecommenderJob.java
index ee7041ca..b810d579 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/RecommenderJob.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/RecommenderJob.java
@@ -80,7 +80,7 @@ public static JobConf buildJobConf(String recommendClassName,
 
     JobConf jobConf = new JobConf(RecommenderJob.class);
 
-    FileSystem fs = FileSystem.get(jobConf);
+    FileSystem fs = FileSystem.get(outputPathPath.toUri(), jobConf);
     if (fs.exists(outputPathPath)) {
       fs.delete(outputPathPath, true);
     }
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/RecommenderMapper.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/RecommenderMapper.java
index 6e5f2b7b..19269472 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/RecommenderMapper.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/RecommenderMapper.java
@@ -82,10 +82,11 @@ public void configure(JobConf jobConf) {
     String recommenderClassName = jobConf.get(RECOMMENDER_CLASS_NAME);
     FileDataModel fileDataModel;
     try {
-      FileSystem fs = FileSystem.get(jobConf);
+      Path dataModelPath = new Path(dataModelFile);
+      FileSystem fs = FileSystem.get(dataModelPath.toUri(), jobConf);
       File tempDataFile = File.createTempFile("mahout-taste-hadoop", "txt");
       tempDataFile.deleteOnExit();
-      fs.copyToLocalFile(new Path(dataModelFile), new Path(tempDataFile.getAbsolutePath()));
+      fs.copyToLocalFile(dataModelPath, new Path(tempDataFile.getAbsolutePath()));
       fileDataModel = new FileDataModel(tempDataFile);
     } catch (IOException ioe) {
       throw new RuntimeException(ioe);
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/SlopeOneDiffsToAveragesJob.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/SlopeOneDiffsToAveragesJob.java
index 033636ea..218d117d 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/SlopeOneDiffsToAveragesJob.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/SlopeOneDiffsToAveragesJob.java
@@ -51,7 +51,7 @@ public static JobConf buildJobConf(String prefsFile,
 
     JobConf jobConf = new JobConf(SlopeOnePrefsToDiffsJob.class);
 
-    FileSystem fs = FileSystem.get(jobConf);
+    FileSystem fs = FileSystem.get(outputPathPath.toUri(), jobConf);
     if (fs.exists(outputPathPath)) {
       fs.delete(outputPathPath, true);
     }
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/SlopeOnePrefsToDiffsJob.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/SlopeOnePrefsToDiffsJob.java
index 6ca7be6f..90ace450 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/SlopeOnePrefsToDiffsJob.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/SlopeOnePrefsToDiffsJob.java
@@ -52,7 +52,7 @@ public static JobConf buildJobConf(String prefsFile,
 
     JobConf jobConf = new JobConf(SlopeOnePrefsToDiffsJob.class);
 
-    FileSystem fs = FileSystem.get(jobConf);
+    FileSystem fs = FileSystem.get(outputPathPath.toUri(), jobConf);
     if (fs.exists(outputPathPath)) {
       fs.delete(outputPathPath, true);
     }
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/Classify.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/Classify.java
index 6fbab5e4..5a6a73bd 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/Classify.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/Classify.java
@@ -106,7 +106,7 @@ public static void main(String[] args)
     modelPaths.put("thetaNormalizer", new Path(modelBasePath + "/trainer-thetaNormalizer/part-*"));
     modelPaths.put("weight", new Path(modelBasePath + "/trainer-tfIdf/trainer-tfIdf/part-*"));
 
-    FileSystem fs = FileSystem.get(conf);
+    FileSystem fs = FileSystem.get((new Path(modelBasePath)).toUri(), conf);
 
     log.info("Loading model from: {}", modelPaths);
 
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/BayesDriver.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/BayesDriver.java
index d3c783d7..260b48b7 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/BayesDriver.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/BayesDriver.java
@@ -65,8 +65,8 @@ public static void main(String[] args) throws IOException {
    */
   public static void runJob(String input, String output, int gramSize) throws IOException {
     JobConf conf = new JobConf(BayesDriver.class);
-    FileSystem dfs = FileSystem.get(conf);
     Path outPath = new Path(output);
+    FileSystem dfs = FileSystem.get(outPath.toUri(), conf);
     if (dfs.exists(outPath))
       dfs.delete(outPath, true);
 
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/BayesThetaNormalizerDriver.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/BayesThetaNormalizerDriver.java
index e813716a..5f8adce5 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/BayesThetaNormalizerDriver.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/BayesThetaNormalizerDriver.java
@@ -89,7 +89,7 @@ public static void runJob(String input, String output) throws IOException {
              "org.apache.hadoop.io.serializer.JavaSerialization,org.apache.hadoop.io.serializer.WritableSerialization");
     // Dont ever forget this. People should keep track of how hadoop conf parameters and make or break a piece of code
     
-    FileSystem dfs = FileSystem.get(conf);
+    FileSystem dfs = FileSystem.get(outPath.toUri(), conf);
     if (dfs.exists(outPath))
       dfs.delete(outPath, true);
 
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/common/BayesFeatureDriver.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/common/BayesFeatureDriver.java
index 41ccfe79..2190181d 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/common/BayesFeatureDriver.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/common/BayesFeatureDriver.java
@@ -86,7 +86,7 @@ public static void runJob(String input, String output, int gramSize) throws IOEx
              "org.apache.hadoop.io.serializer.JavaSerialization,org.apache.hadoop.io.serializer.WritableSerialization"); 
     // Dont ever forget this. People should keep track of how hadoop conf parameters and make or break a piece of code
 
-    FileSystem dfs = FileSystem.get(conf);
+    FileSystem dfs = FileSystem.get(outPath.toUri(), conf);
     if (dfs.exists(outPath))
       dfs.delete(outPath, true);
 
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/common/BayesTfIdfDriver.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/common/BayesTfIdfDriver.java
index 5c381fba..d18eae32 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/common/BayesTfIdfDriver.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/common/BayesTfIdfDriver.java
@@ -91,7 +91,7 @@ public static void runJob(String input, String output) throws IOException {
     conf.set("io.serializations",
              "org.apache.hadoop.io.serializer.JavaSerialization,org.apache.hadoop.io.serializer.WritableSerialization");
     // Dont ever forget this. People should keep track of how hadoop conf parameters and make or break a piece of code
-    FileSystem dfs = FileSystem.get(conf);
+    FileSystem dfs = FileSystem.get(outPath.toUri(), conf);
     if (dfs.exists(outPath))
       dfs.delete(outPath, true);
 
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/common/BayesWeightSummerDriver.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/common/BayesWeightSummerDriver.java
index efa04c67..ea6b7b0b 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/common/BayesWeightSummerDriver.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/common/BayesWeightSummerDriver.java
@@ -77,7 +77,7 @@ public static void runJob(String input, String output) throws IOException {
     conf.setCombinerClass(BayesWeightSummerReducer.class);
     conf.setReducerClass(BayesWeightSummerReducer.class);    
     conf.setOutputFormat(BayesWeightSummerOutputFormat.class);
-    FileSystem dfs = FileSystem.get(conf);
+    FileSystem dfs = FileSystem.get(outPath.toUri(), conf);
     if (dfs.exists(outPath))
       dfs.delete(outPath, true);
     client.setConf(conf);
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesDriver.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesDriver.java
index 1070123d..44fc885c 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesDriver.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesDriver.java
@@ -65,8 +65,8 @@ public static void main(String[] args) throws IOException {
    */
   public static void runJob(String input, String output, int gramSize) throws IOException {
     JobConf conf = new JobConf(CBayesDriver.class);
-    FileSystem dfs = FileSystem.get(conf);
     Path outPath = new Path(output);
+    FileSystem dfs = FileSystem.get(outPath.toUri(), conf);
     if (dfs.exists(outPath))
       dfs.delete(outPath, true);
 
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesNormalizedWeightDriver.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesNormalizedWeightDriver.java
index 7c4a23a3..ede9978b 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesNormalizedWeightDriver.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesNormalizedWeightDriver.java
@@ -89,7 +89,7 @@ public static void runJob(String input, String output) throws IOException {
     conf.set("io.serializations",
              "org.apache.hadoop.io.serializer.JavaSerialization,org.apache.hadoop.io.serializer.WritableSerialization");
     // Dont ever forget this. People should keep track of how hadoop conf parameters and make or break a piece of code
-    FileSystem dfs = FileSystem.get(conf);
+    FileSystem dfs = FileSystem.get(outPath.toUri(), conf);
     if (dfs.exists(outPath))
       dfs.delete(outPath, true);
 
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesThetaDriver.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesThetaDriver.java
index e4a86ab9..9f800c79 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesThetaDriver.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesThetaDriver.java
@@ -91,7 +91,7 @@ public static void runJob(String input, String output) throws IOException {
     conf.set("io.serializations",
              "org.apache.hadoop.io.serializer.JavaSerialization,org.apache.hadoop.io.serializer.WritableSerialization");
     // Dont ever forget this. People should keep track of how hadoop conf parameters and make or break a piece of code
-    FileSystem dfs = FileSystem.get(conf);
+    FileSystem dfs = FileSystem.get(outPath.toUri(), conf);
     if (dfs.exists(outPath))
       dfs.delete(outPath, true);
 
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesThetaNormalizerDriver.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesThetaNormalizerDriver.java
index 957f42e2..dc27af8c 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesThetaNormalizerDriver.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesThetaNormalizerDriver.java
@@ -90,7 +90,7 @@ public static void runJob(String input, String output) throws IOException {
              "org.apache.hadoop.io.serializer.JavaSerialization,org.apache.hadoop.io.serializer.WritableSerialization");
     // Dont ever forget this. People should keep track of how hadoop conf parameters and make or break a piece of code
     
-    FileSystem dfs = FileSystem.get(conf);
+    FileSystem dfs = FileSystem.get(outPath.toUri(), conf);
     if (dfs.exists(outPath))
       dfs.delete(outPath, true);
 
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/CanopyDriver.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/CanopyDriver.java
index fbbbb51e..2a0d41d8 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/CanopyDriver.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/CanopyDriver.java
@@ -74,7 +74,7 @@ public static void runJob(String input, String output,
     conf.setOutputFormat(SequenceFileOutputFormat.class);
 
     client.setConf(conf);
-    FileSystem dfs = FileSystem.get(conf);
+    FileSystem dfs = FileSystem.get(outPath.toUri(), conf);
     if (dfs.exists(outPath))
       dfs.delete(outPath, true);
     JobClient.runJob(conf);
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/ClusterDriver.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/ClusterDriver.java
index 861ef226..6e4ce177 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/ClusterDriver.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/ClusterDriver.java
@@ -75,7 +75,7 @@ public static void runJob(String points, String canopies, String output,
     conf.setReducerClass(IdentityReducer.class);
 
     client.setConf(conf);
-    FileSystem dfs = FileSystem.get(conf);
+    FileSystem dfs = FileSystem.get(outPath.toUri(), conf);
     if (dfs.exists(outPath))
       dfs.delete(outPath, true);
     JobClient.runJob(conf);
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/ClusterMapper.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/ClusterMapper.java
index 1d85a68e..167713a3 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/ClusterMapper.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/ClusterMapper.java
@@ -33,6 +33,7 @@
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
+import org.slf4j.LoggerFactory;
 
 public class ClusterMapper extends MapReduceBase implements
         Mapper<WritableComparable<?>, Text, Text, Text> {
@@ -64,8 +65,8 @@ public void configure(JobConf job) {
     canopies = new ArrayList<Canopy>();
 
     try {
-      FileSystem fs = FileSystem.get(job);
       Path path = new Path(canopyPath + "/part-00000");
+      FileSystem fs = FileSystem.get(path.toUri(), job);
       SequenceFile.Reader reader = new SequenceFile.Reader(fs, path, job);
       try {
         Text key = new Text();
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/DirichletDriver.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/DirichletDriver.java
index 55a5b3ce..666e8283 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/DirichletDriver.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/DirichletDriver.java
@@ -104,8 +104,9 @@ private static void writeInitialState(String output, String stateIn,
       IllegalAccessException, FileNotFoundException, IOException {
     DirichletState<Vector> state = createState(modelFactory, numModels, alpha_0);
     JobConf job = new JobConf(KMeansDriver.class);
-    FileSystem fs = FileSystem.get(job);
-    fs.delete(new Path(output), true);
+    Path outPath = new Path(output);
+    FileSystem fs = FileSystem.get(outPath.toUri(), job);
+    fs.delete(outPath, true);
     for (int i = 0; i < numModels; i++) {
       Path path = new Path(stateIn + "/part-" + i);
       SequenceFile.Writer writer = new SequenceFile.Writer(fs, job, path,
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/DirichletJob.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/DirichletJob.java
index 237b5f1c..f6f9174a 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/DirichletJob.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/DirichletJob.java
@@ -60,7 +60,7 @@ public static void runJob(String input, String output, String modelFactory,
     // delete the output directory
     JobConf conf = new JobConf(DirichletJob.class);
     Path outPath = new Path(output);
-    FileSystem fs = FileSystem.get(conf);
+    FileSystem fs = FileSystem.get(outPath.toUri(), conf);
     if (fs.exists(outPath)) {
       fs.delete(outPath, true);
     }
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/DirichletMapper.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/DirichletMapper.java
index a54f0832..1d7ae38c 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/DirichletMapper.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/dirichlet/DirichletMapper.java
@@ -70,8 +70,8 @@ public void configure(JobConf job) {
     try {
       DirichletState<Vector> state = DirichletDriver.createState(modelFactory,
           new Integer(numClusters), new Double(alpha_0));
-      FileSystem fs = FileSystem.get(job);
       Path path = new Path(statePath);
+      FileSystem fs = FileSystem.get(path.toUri(), job);
       FileStatus[] status = fs.listStatus(path);
       for (FileStatus s : status) {
         SequenceFile.Reader reader = new SequenceFile.Reader(fs, s.getPath(),
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver.java
index 18da3795..7f30293b 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver.java
@@ -165,7 +165,7 @@ private static boolean runIteration(String input, String clustersIn,
 
     try {
       JobClient.runJob(conf);
-      FileSystem fs = FileSystem.get(conf);
+      FileSystem fs = FileSystem.get(outPath.toUri(), conf);
       return isConverged(clustersOut, conf, fs);
     } catch (IOException e) {
       log.warn(e.toString(), e);
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/KMeansDriver.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/KMeansDriver.java
index 611e99c0..1263a132 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/KMeansDriver.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/KMeansDriver.java
@@ -120,7 +120,7 @@ private static boolean runIteration(String input, String clustersIn,
     client.setConf(conf);
     try {
       JobClient.runJob(conf);
-      FileSystem fs = FileSystem.get(conf);
+      FileSystem fs = FileSystem.get(outPath.toUri(), conf);
       return isConverged(clustersOut + "/part-00000", conf, fs);
     } catch (IOException e) {
       log.warn(e.toString(), e);
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/KMeansJob.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/KMeansJob.java
index 22ac9082..9e399b97 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/KMeansJob.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/KMeansJob.java
@@ -68,7 +68,7 @@ public static void runJob(String input, String clustersIn, String output,
     // delete the output directory
     JobConf conf = new JobConf(KMeansJob.class);
     Path outPath = new Path(output);
-    FileSystem fs = FileSystem.get(conf);
+    FileSystem fs = FileSystem.get(outPath.toUri(), conf);
     if (fs.exists(outPath)) {
       fs.delete(outPath, true);
     }
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyJob.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyJob.java
index ee49240e..734ec0bb 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyJob.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyJob.java
@@ -63,7 +63,7 @@ public static void runJob(String input, String output,
     // delete the output directory
     JobConf conf = new JobConf(MeanShiftCanopyDriver.class);
     Path outPath = new Path(output);
-    FileSystem fs = FileSystem.get(conf);
+    FileSystem fs = FileSystem.get(outPath.toUri(), conf);
     if (fs.exists(outPath)) {
       fs.delete(outPath, true);
     }
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/ga/watchmaker/MahoutEvaluator.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/ga/watchmaker/MahoutEvaluator.java
index be872b70..a359902b 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/ga/watchmaker/MahoutEvaluator.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/ga/watchmaker/MahoutEvaluator.java
@@ -61,10 +61,10 @@ public static void evaluate(FitnessEvaluator<?> evaluator, List<?> population,
       List<Double> evaluations) throws IOException {
     JobConf conf = new JobConf(MahoutEvaluator.class);
     FileSystem fs = FileSystem.get(conf);
-
     Path inpath = prepareInput(fs, population);
     Path outpath = OutputUtils.prepareOutput(fs);
 
+
     configureJob(conf, evaluator, inpath, outpath);
     JobClient.runJob(conf);
 
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/utils/WeightedDistanceMeasure.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/utils/WeightedDistanceMeasure.java
index db2262da..ed4beacb 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/utils/WeightedDistanceMeasure.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/utils/WeightedDistanceMeasure.java
@@ -63,7 +63,7 @@ public void configure(JobConf jobConf) {
       ParameteredGeneralizations.configureParameters(this, jobConf);
     }
     try {
-      FileSystem fs = FileSystem.get(jobConf);
+      FileSystem fs = FileSystem.get(weightsFile.get().toUri(), jobConf);
       if (weightsFile.get() != null) {
         Vector weights = (Vector) vectorClass.get().newInstance();
         if (!fs.exists(weightsFile.get())) {
diff --git a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/canopy/TestCanopyCreation.java b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/canopy/TestCanopyCreation.java
index 38f488ac..aaa49550 100644
--- a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/canopy/TestCanopyCreation.java
+++ b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/canopy/TestCanopyCreation.java
@@ -478,8 +478,8 @@ public void testCanopyGenManhattanMR() throws Exception {
     // verify output from sequence file
     JobConf job = new JobConf(
         org.apache.mahout.clustering.canopy.CanopyDriver.class);
-    FileSystem fs = FileSystem.get(job);
     Path path = new Path("output/canopies/part-00000");
+    FileSystem fs = FileSystem.get(path.toUri(), job);
     SequenceFile.Reader reader = new SequenceFile.Reader(fs, path, job);
     Text key = new Text();
     Text value = new Text();
@@ -514,8 +514,8 @@ public void testCanopyGenEuclideanMR() throws Exception {
     // verify output from sequence file
     JobConf job = new JobConf(
         org.apache.mahout.clustering.canopy.CanopyDriver.class);
-    FileSystem fs = FileSystem.get(job);
     Path path = new Path("output/canopies/part-00000");
+    FileSystem fs = FileSystem.get(path.toUri(), job);
     SequenceFile.Reader reader = new SequenceFile.Reader(fs, path, job);
     Text key = new Text();
     Text value = new Text();
@@ -805,8 +805,8 @@ public void testUserDefinedDistanceMeasure() throws Exception {
     // verify output from sequence file
     JobConf job = new JobConf(
         org.apache.mahout.clustering.canopy.CanopyDriver.class);
-    FileSystem fs = FileSystem.get(job);
     Path path = new Path("output/canopies/part-00000");
+    FileSystem fs = FileSystem.get(path.toUri(), job);
     SequenceFile.Reader reader = new SequenceFile.Reader(fs, path, job);
     Text key = new Text();
     Text value = new Text();
diff --git a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/fuzzykmeans/TestFuzzyKmeansClustering.java b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/fuzzykmeans/TestFuzzyKmeansClustering.java
index df2d831c..f5d80392 100644
--- a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/fuzzykmeans/TestFuzzyKmeansClustering.java
+++ b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/fuzzykmeans/TestFuzzyKmeansClustering.java
@@ -210,8 +210,8 @@ public void testFuzzyKMeansMRJob() throws Exception {
       System.out.println("testKFuzzyKMeansMRJob k= " + k);
       // pick k initial cluster centers at random
       JobConf job = new JobConf(FuzzyKMeansDriver.class);
-      FileSystem fs = FileSystem.get(job);
       Path path = new Path("testdata/clusters");
+      FileSystem fs = FileSystem.get(path.toUri(), job);
       if (fs.exists(path)) {
         fs.delete(path, true);
       }
@@ -239,7 +239,7 @@ public void testFuzzyKMeansMRJob() throws Exception {
 
       JobConf conf = new JobConf(FuzzyKMeansDriver.class);
       Path outPath = new Path("output");
-      fs = FileSystem.get(conf);
+      fs = FileSystem.get(outPath.toUri(), conf);
       if (fs.exists(outPath)) {
         fs.delete(outPath, true);
       }
diff --git a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/kmeans/TestKmeansClustering.java b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/kmeans/TestKmeansClustering.java
index d00dce1a..f920d397 100644
--- a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/kmeans/TestKmeansClustering.java
+++ b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/kmeans/TestKmeansClustering.java
@@ -389,8 +389,8 @@ public void testKMeansMRJob() throws Exception {
       System.out.println("testKMeansMRJob k= " + k);
       // pick k initial cluster centers at random
       JobConf job = new JobConf(KMeansDriver.class);
-      FileSystem fs = FileSystem.get(job);
       Path path = new Path("testdata/clusters/part-00000");
+      FileSystem fs = FileSystem.get(path.toUri(), job);
     SequenceFile.Writer writer = new SequenceFile.Writer(fs, job, path,
           Text.class, Text.class);
 
diff --git a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/meanshift/TestMeanShift.java b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/meanshift/TestMeanShift.java
index e945afa0..9a246d07 100644
--- a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/meanshift/TestMeanShift.java
+++ b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/meanshift/TestMeanShift.java
@@ -336,8 +336,8 @@ public void testCanopyEuclideanMRJob() throws Exception {
     MeanShiftCanopyJob.runJob("testdata", "output",
         EuclideanDistanceMeasure.class.getName(), 4, 1, 0.5, 10);
     JobConf conf = new JobConf(MeanShiftCanopyDriver.class);
-    FileSystem fs = FileSystem.get(conf);
     Path outPart = new Path("output/canopies-2/part-00000");
+    FileSystem fs = FileSystem.get(outPart.toUri(), conf);
     SequenceFile.Reader reader = new SequenceFile.Reader(fs, outPart, conf);
     Text key = new Text();
     Text value = new Text();
diff --git a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/ga/watchmaker/MahoutEvaluatorTest.java b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/ga/watchmaker/MahoutEvaluatorTest.java
index e679e204..67a97cdb 100644
--- a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/ga/watchmaker/MahoutEvaluatorTest.java
+++ b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/ga/watchmaker/MahoutEvaluatorTest.java
@@ -68,8 +68,8 @@ public void testStoreLoadPopulation() throws Exception {
 
   private static void storeLoadPopulation(List<DummyCandidate> population)
       throws IOException {
-    FileSystem fs = FileSystem.get(new Configuration());
     Path f = new Path("build/test.txt");
+    FileSystem fs = FileSystem.get(f.toUri(), new Configuration());
 
     // store the population
     MahoutEvaluator.storePopulation(fs, f, population);
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/bayes/TestClassifier.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/bayes/TestClassifier.java
index 9287149e..c1e77a47 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/bayes/TestClassifier.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/bayes/TestClassifier.java
@@ -107,7 +107,7 @@ public static void main(String[] args) throws IOException,
     modelPaths.put("thetaNormalizer", new Path(modelBasePath + "/trainer-thetaNormalizer/part-*"));
     modelPaths.put("weight", new Path(modelBasePath + "/trainer-tfIdf/trainer-tfIdf/part-*"));
 
-    FileSystem fs = FileSystem.get(conf);
+    FileSystem fs = FileSystem.get((new Path(modelBasePath)).toUri(), conf);
 
     log.info("Loading model from: {}", modelPaths);
 
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/bayes/WikipediaDatasetCreatorDriver.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/bayes/WikipediaDatasetCreatorDriver.java
index a29e4d95..dbd7688e 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/bayes/WikipediaDatasetCreatorDriver.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/bayes/WikipediaDatasetCreatorDriver.java
@@ -88,7 +88,7 @@ public static void runJob(String input, String output, String countriesFile) thr
              "org.apache.hadoop.io.serializer.JavaSerialization,org.apache.hadoop.io.serializer.WritableSerialization");
     // Dont ever forget this. People should keep track of how hadoop conf parameters and make or break a piece of code
 
-    FileSystem dfs = FileSystem.get(conf);
+    FileSystem dfs = FileSystem.get(outPath.toUri(), conf);
     if (dfs.exists(outPath))
       dfs.delete(outPath, true);
 
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/syntheticcontrol/canopy/Job.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/syntheticcontrol/canopy/Job.java
index 2d492d3b..3a497c03 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/syntheticcontrol/canopy/Job.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/syntheticcontrol/canopy/Job.java
@@ -66,7 +66,7 @@ private static void runJob(String input, String output,
 
     Path outPath = new Path(output);
     client.setConf(conf);
-    FileSystem dfs = FileSystem.get(conf);
+    FileSystem dfs = FileSystem.get(outPath.toUri(), conf);
     if (dfs.exists(outPath))
       dfs.delete(outPath, true);
     InputDriver.runJob(input, output + "/data");
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/syntheticcontrol/dirichlet/Job.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/syntheticcontrol/dirichlet/Job.java
index 603c34aa..b9e0106c 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/syntheticcontrol/dirichlet/Job.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/syntheticcontrol/dirichlet/Job.java
@@ -79,7 +79,7 @@ public static void runJob(String input, String output, String modelFactory,
     // delete the output directory
     JobConf conf = new JobConf(DirichletJob.class);
     Path outPath = new Path(output);
-    FileSystem fs = FileSystem.get(conf);
+    FileSystem fs = FileSystem.get(outPath.toUri(), conf);
     if (fs.exists(outPath)) {
       fs.delete(outPath, true);
     }
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/syntheticcontrol/kmeans/Job.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/syntheticcontrol/kmeans/Job.java
index b94d6e6a..51acf2f6 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/syntheticcontrol/kmeans/Job.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/syntheticcontrol/kmeans/Job.java
@@ -26,6 +26,8 @@
 import org.apache.mahout.clustering.syntheticcontrol.canopy.InputDriver;
 
 import java.io.IOException;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 public class Job {
   private Job() {
@@ -73,7 +75,7 @@ private static void runJob(String input, String output, String measureClass,
 
     Path outPath = new Path(output);
     client.setConf(conf);
-    FileSystem dfs = FileSystem.get(conf);
+    FileSystem dfs = FileSystem.get(outPath.toUri(), conf);
     if (dfs.exists(outPath))
       dfs.delete(outPath, true);
     InputDriver.runJob(input, output + "/data");
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/syntheticcontrol/meanshift/Job.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/syntheticcontrol/meanshift/Job.java
index e2264de5..38380a01 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/syntheticcontrol/meanshift/Job.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/syntheticcontrol/meanshift/Job.java
@@ -73,7 +73,7 @@ private static void runJob(String input, String output,
 
     Path outPath = new Path(output);
     client.setConf(conf);
-    FileSystem dfs = FileSystem.get(conf);
+    FileSystem dfs = FileSystem.get(outPath.toUri(), conf);
     if (dfs.exists(outPath))
       dfs.delete(outPath, true);
     InputDriver.runJob(input, output + "/data");
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/hadoop/CDMahoutEvaluator.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/hadoop/CDMahoutEvaluator.java
index 590f04be..90ea5952 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/hadoop/CDMahoutEvaluator.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/hadoop/CDMahoutEvaluator.java
@@ -66,7 +66,7 @@ public static void evaluate(List<? extends Rule> rules, int target,
       Path inpath, List<CDFitness> evaluations, DatasetSplit split)
       throws IOException {
     JobConf conf = new JobConf(CDMahoutEvaluator.class);
-    FileSystem fs = FileSystem.get(conf);
+    FileSystem fs = FileSystem.get(inpath.toUri(), conf);
 
     // check the input
     if (!fs.exists(inpath) || !fs.getFileStatus(inpath).isDir())
@@ -88,7 +88,7 @@ public static void evaluate(List<? extends Rule> rules, int target,
    */
   public static void initializeDataSet(Path inpath) throws IOException {
     JobConf conf = new JobConf(CDMahoutEvaluator.class);
-    FileSystem fs = FileSystem.get(conf);
+    FileSystem fs = FileSystem.get(inpath.toUri(), conf);
 
     // Initialize the dataset
     DataSet.initialize(FileInfoParser.parseFile(fs, inpath));
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/CDInfosTool.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/CDInfosTool.java
index 0c45de66..112c59b1 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/CDInfosTool.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/CDInfosTool.java
@@ -68,7 +68,7 @@ private CDInfosTool() {
   public static void gatherInfos(Descriptors descriptors, Path inpath,
       List<String> descriptions) throws IOException {
     JobConf conf = new JobConf(CDInfosTool.class);
-    FileSystem fs = FileSystem.get(conf);
+    FileSystem fs = FileSystem.get(inpath.toUri(), conf);
 
     // check the input
     if (!fs.exists(inpath) || !fs.getFileStatus(inpath).isDir())
@@ -211,8 +211,8 @@ public static void main(String[] args) throws IOException {
       throw new IllegalArgumentException();
     }
 
-    FileSystem fs = FileSystem.get(new Configuration());
     Path inpath = new Path(args[0]);
+    FileSystem fs = FileSystem.get(inpath.toUri(), new Configuration());
 
     log.info("Loading Descriptors...");
     Descriptors descriptors = loadDescriptors(fs, inpath);
diff --git a/lucene/mahout/trunk/examples/src/test/java/org/apache/mahout/ga/watchmaker/cd/DataLineTest.java b/lucene/mahout/trunk/examples/src/test/java/org/apache/mahout/ga/watchmaker/cd/DataLineTest.java
index 97923b1e..3434d3e6 100644
--- a/lucene/mahout/trunk/examples/src/test/java/org/apache/mahout/ga/watchmaker/cd/DataLineTest.java
+++ b/lucene/mahout/trunk/examples/src/test/java/org/apache/mahout/ga/watchmaker/cd/DataLineTest.java
@@ -31,8 +31,8 @@
       "852781,M,18.61,20.25,122.1,1094,0.0944,0.1066,0.149,0.07731,0.1697,0.05699,0.8529,1.849,5.632,93.54,0.01075,0.02722,0.05081,0.01911,0.02293,0.004217,21.31,27.26,139.9,1403,0.1338,0.2117,0.3446,0.149,0.2341,0.07421" };
 
   public void testSet() throws Exception {
-    FileSystem fs = FileSystem.get(new Configuration());
     Path inpath = new Path("target/test-classes/wdbc");
+    FileSystem fs = FileSystem.get(inpath.toUri(), new Configuration());
     DataSet dataset = FileInfoParser.parseFile(fs, inpath);
     DataSet.initialize(dataset);
     
diff --git a/lucene/mahout/trunk/examples/src/test/java/org/apache/mahout/ga/watchmaker/cd/FileInfosDatasetTest.java b/lucene/mahout/trunk/examples/src/test/java/org/apache/mahout/ga/watchmaker/cd/FileInfosDatasetTest.java
index eebcfd18..b4ef8965 100644
--- a/lucene/mahout/trunk/examples/src/test/java/org/apache/mahout/ga/watchmaker/cd/FileInfosDatasetTest.java
+++ b/lucene/mahout/trunk/examples/src/test/java/org/apache/mahout/ga/watchmaker/cd/FileInfosDatasetTest.java
@@ -31,8 +31,8 @@
 public class FileInfosDatasetTest extends TestCase {
 
   public void testRanges() throws IOException {
-    FileSystem fs = FileSystem.get(new Configuration());
     Path inpath = new Path("target/test-classes/wdbc");
+    FileSystem fs = FileSystem.get(inpath.toUri(), new Configuration());
     
     DataSet dataset = FileInfoParser.parseFile(fs, inpath);
     DataSet.initialize(dataset);
diff --git a/lucene/mahout/trunk/examples/src/test/java/org/apache/mahout/ga/watchmaker/cd/tool/CDInfosToolTest.java b/lucene/mahout/trunk/examples/src/test/java/org/apache/mahout/ga/watchmaker/cd/tool/CDInfosToolTest.java
index 8ad04829..3a67898e 100644
--- a/lucene/mahout/trunk/examples/src/test/java/org/apache/mahout/ga/watchmaker/cd/tool/CDInfosToolTest.java
+++ b/lucene/mahout/trunk/examples/src/test/java/org/apache/mahout/ga/watchmaker/cd/tool/CDInfosToolTest.java
@@ -166,8 +166,8 @@ public void testGatherInfos() throws Exception {
     Object[][] descriptions = randomDescriptions(descriptors);
 
     // random dataset
-    FileSystem fs = FileSystem.get(new Configuration());
     Path inpath = new Path("input");
+    FileSystem fs = FileSystem.get(inpath.toUri(), new Configuration());
     if (fs.exists(inpath)) {
       fs.delete(inpath, true);
     }
