diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/net/EndPoint.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/net/EndPoint.java
index 03461d31..fe7905ff 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/net/EndPoint.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/net/EndPoint.java
@@ -41,14 +41,16 @@
     private static Logger logger_ = Logger.getLogger(EndPoint.class);
     private static final long serialVersionUID = -4962625949179835907L;
     private static Map<CharBuffer, String> hostNames_ = new HashMap<CharBuffer, String>();
-    protected static final int randomPort_ = 5555;
-    public static EndPoint randomLocalEndPoint_;
+
+    // use as a kind of magic number to send ourselves a message indicating listening state
+    protected static final int sentinelPort_ = 5555;
+    public static EndPoint sentinelLocalEndPoint_;
     
     static
     {
         try
         {
-            randomLocalEndPoint_ = new EndPoint(FBUtilities.getHostAddress(), EndPoint.randomPort_);
+            sentinelLocalEndPoint_ = new EndPoint(FBUtilities.getHostAddress(), EndPoint.sentinelPort_);
         }        
         catch ( IOException ex )
         {
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/net/TcpConnection.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/net/TcpConnection.java
index cfeb3cd0..7990f399 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/net/TcpConnection.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/net/TcpConnection.java
@@ -168,7 +168,7 @@ public void write(Message message) throws IOException
         byte[] data = serializer_.serialize(message);        
         if ( data.length > 0 )
         {    
-            boolean listening = !message.getFrom().equals(EndPoint.randomLocalEndPoint_);
+            boolean listening = !message.getFrom().equals(EndPoint.sentinelLocalEndPoint_);
             ByteBuffer buffer = MessagingService.packIt( data , false, false, listening);   
             synchronized(this)
             {
@@ -460,7 +460,7 @@ public void run()
                         /* first message received */
                         if (remoteEp_ == null)
                         {             
-                            int port = ( pH.isListening_ ) ? DatabaseDescriptor.getStoragePort() : EndPoint.randomPort_;
+                            int port = ( pH.isListening_ ) ? DatabaseDescriptor.getStoragePort() : EndPoint.sentinelPort_;
                             remoteEp_ = new EndPoint( socketChannel_.socket().getInetAddress().getHostAddress(), port );                            
                             // put connection into pool if possible
                             pool_ = MessagingService.getConnectionPool(localEp_, remoteEp_);                            
