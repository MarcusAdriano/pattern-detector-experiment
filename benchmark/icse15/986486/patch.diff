diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/Table.java b/cassandra/trunk/src/java/org/apache/cassandra/db/Table.java
index 06d6ffc3..9872827a 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/Table.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/Table.java
@@ -386,7 +386,7 @@ public void apply(RowMutation mutation, Object serializedMutation, boolean write
                 }
                 else
                 {
-                    synchronized (indexLocks[Arrays.hashCode(mutation.key()) % indexLocks.length])
+                    synchronized (indexLockFor(mutation.key()))
                     {
                         // read old indexed values
                         QueryFilter filter = QueryFilter.getNamesFilter(key, new QueryPath(cfs.getColumnFamilyName()), mutatedIndexedColumns);
@@ -443,7 +443,7 @@ public void applyIndexedCF(ColumnFamilyStore indexedCfs, DecoratedKey rowKey, De
         flusherLock.readLock().lock();
         try
         {
-            synchronized (indexLocks[Arrays.hashCode(rowKey.key) % indexLocks.length])
+            synchronized (indexLockFor(rowKey.key))
             {
                 memtableToFlush = indexedCfs.apply(indexedKey, indexedColumnFamily);
             }
@@ -457,6 +457,11 @@ public void applyIndexedCF(ColumnFamilyStore indexedCfs, DecoratedKey rowKey, De
             indexedCfs.maybeSwitchMemtable(memtableToFlush, false);
     }
     
+    private Object indexLockFor(byte[] key)
+    {
+        return indexLocks[Math.abs(Arrays.hashCode(key) % indexLocks.length)];
+    }
+
     private static void applyCF(ColumnFamilyStore cfs, DecoratedKey key, ColumnFamily columnFamily, HashMap<ColumnFamilyStore, Memtable> memtablesToFlush)
     {
         Memtable memtableToFlush = cfs.apply(key, columnFamily);
diff --git a/cassandra/trunk/test/unit/org/apache/cassandra/db/ColumnFamilyStoreTest.java b/cassandra/trunk/test/unit/org/apache/cassandra/db/ColumnFamilyStoreTest.java
index fa8533ad..4643e0f0 100644
--- a/cassandra/trunk/test/unit/org/apache/cassandra/db/ColumnFamilyStoreTest.java
+++ b/cassandra/trunk/test/unit/org/apache/cassandra/db/ColumnFamilyStoreTest.java
@@ -174,6 +174,11 @@ public void testIndexScan() throws IOException
         rm.add(new QueryPath("Indexed1", null, "birthdate".getBytes("UTF8")), FBUtilities.toByteArray(1L), new TimestampClock(0));
         rm.apply();
 
+        rm = new RowMutation("Keyspace1", "k4aaaa".getBytes());
+        rm.add(new QueryPath("Indexed1", null, "notbirthdate".getBytes("UTF8")), FBUtilities.toByteArray(2L), new TimestampClock(0));
+        rm.add(new QueryPath("Indexed1", null, "birthdate".getBytes("UTF8")), FBUtilities.toByteArray(3L), new TimestampClock(0));
+        rm.apply();
+
         IndexExpression expr = new IndexExpression("birthdate".getBytes("UTF8"), IndexOperator.EQ, FBUtilities.toByteArray(1L));
         IndexClause clause = new IndexClause(Arrays.asList(expr), ArrayUtils.EMPTY_BYTE_ARRAY, 100);
         IFilter filter = new IdentityQueryFilter();
