diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/ColumnFamily.java b/cassandra/trunk/src/java/org/apache/cassandra/config/ColumnFamily.java
index 0d5d3aa2..34dbf330 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/ColumnFamily.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/ColumnFamily.java
@@ -9,5 +9,5 @@
     public double rows_cached = CFMetaData.DEFAULT_ROW_CACHE_SIZE; 
     public double keys_cached = CFMetaData.DEFAULT_KEY_CACHE_SIZE; 
     public double read_repair_chance = CFMetaData.DEFAULT_READ_REPAIR_CHANCE;
-    public boolean preloadRowCache = CFMetaData.DEFAULT_PRELOAD_ROW_CACHE;
+    public boolean preload_row_cache = CFMetaData.DEFAULT_PRELOAD_ROW_CACHE;
 }
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java b/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
index d0183882..479e29e6 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
@@ -487,7 +487,7 @@ else if (cf.compare_subcolumns_with != null)
                 {                        
                     throw new ConfigurationException("read_repair_chance must be between 0.0 and 1.0");
                 }
-                cfDefs[j++] = new CFMetaData(keyspace.name, cf.name, columnType, comparator, subcolumnComparator, cf.comment, cf.rows_cached, cf.preloadRowCache, cf.keys_cached, cf.read_repair_chance);
+                cfDefs[j++] = new CFMetaData(keyspace.name, cf.name, columnType, comparator, subcolumnComparator, cf.comment, cf.rows_cached, cf.preload_row_cache, cf.keys_cached, cf.read_repair_chance);
             }
             defs.add(new KSMetaData(keyspace.name, strategyClass, keyspace.replication_factor, cfDefs));
             
