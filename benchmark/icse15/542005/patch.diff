diff --git a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/EXTDTAInputStream.java b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/EXTDTAInputStream.java
index a0785c6e..6bc7c424 100644
--- a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/EXTDTAInputStream.java
+++ b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/EXTDTAInputStream.java
@@ -20,7 +20,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
  */
 package org.apache.derby.impl.drda;
 
-import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.BufferedInputStream;
@@ -29,8 +28,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import java.sql.Clob;
 import java.sql.SQLException;
 
-import java.io.UnsupportedEncodingException;
-
 import org.apache.derby.iapi.reference.DRDAConstants;
 import org.apache.derby.iapi.services.sanity.SanityManager;
 import org.apache.derby.impl.jdbc.Util;
@@ -252,6 +249,9 @@ public void reset() throws IOException {
 	 * @see java.io.InputStream#skip(long)
 	 */
 	public long skip(long arg0) throws IOException {
+		if (arg0 < 0L) {
+			return 0L;
+		}
 		return binaryInputStream.skip(arg0);
 	}
 
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/services/io/NewByteArrayInputStream.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/services/io/NewByteArrayInputStream.java
index b79abc3a..01d8d97b 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/services/io/NewByteArrayInputStream.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/services/io/NewByteArrayInputStream.java
@@ -81,8 +81,9 @@ public long skip(long count)  throws IOException {
 		if (data == null)
 			throw new IOException();
 
-		if (length == 0)
-			return -1;
+		if (length == 0 || count <= 0L) {
+			return 0L;
+		}
 
 		if (count > length)
 			count = length;
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/BufferedByteHolderInputStream.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/BufferedByteHolderInputStream.java
index b3197da5..d32758b8 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/BufferedByteHolderInputStream.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/BufferedByteHolderInputStream.java
@@ -21,7 +21,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 package org.apache.derby.impl.store.raw.data;
 
-import java.io.InputStream;
 import java.io.IOException;
 
 public abstract class BufferedByteHolderInputStream
@@ -48,10 +47,14 @@ public int read(byte b[], int off, int len)
 
 	public long skip(long count) throws IOException
 	{
-		int bytesSkipped = 0;
+		long bytesSkipped = 0L;
 		while (bytesSkipped < count) {
 			fillByteHolder();
-			bytesSkipped += super.skip(count - bytesSkipped);
+			long skipped = super.skip(count - bytesSkipped);
+			if (skipped <= 0L) {
+				break;
+			}
+			bytesSkipped += skipped;
 		}
 		return bytesSkipped;
 	}
