diff --git a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/search/DocIdSet.java b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/search/DocIdSet.java
index 6345e6aa..cccd1f4a 100644
--- a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/search/DocIdSet.java
+++ b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/search/DocIdSet.java
@@ -72,7 +72,7 @@ public Bits bits() {
    * external disk access (as {@link Bits} interface cannot throw
    * {@link IOException}). This is generally true for bit sets
    * like {@link org.apache.lucene.util.FixedBitSet}, which return
-   * itsself if they are used as {@code DocIdSet}.
+   * itself if they are used as {@code DocIdSet}.
    */
   public Bits bits() throws IOException {
     return null;
diff --git a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/search/NumericRangeQuery.java b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/search/NumericRangeQuery.java
index 8dbb1465..5e351976 100644
--- a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/search/NumericRangeQuery.java
+++ b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/search/NumericRangeQuery.java
@@ -289,7 +289,7 @@ private NumericRangeQuery(final String field, final int precisionStep, final Num
 
   @Override @SuppressWarnings("unchecked")
   protected TermsEnum getTermsEnum(final Terms terms, AttributeSource atts) throws IOException {
-    // very strange: java.lang.Number itsself is not Comparable, but all subclasses used here are
+    // very strange: java.lang.Number itself is not Comparable, but all subclasses used here are
     if (min != null && max != null && ((Comparable<T>) min).compareTo(max) > 0) {
       return TermsEnum.EMPTY;
     }
diff --git a/lucene/dev/branches/branch_4x/lucene/core/src/test/org/apache/lucene/util/TestNumericUtils.java b/lucene/dev/branches/branch_4x/lucene/core/src/test/org/apache/lucene/util/TestNumericUtils.java
index 93fc5733..52a22dba 100644
--- a/lucene/dev/branches/branch_4x/lucene/core/src/test/org/apache/lucene/util/TestNumericUtils.java
+++ b/lucene/dev/branches/branch_4x/lucene/core/src/test/org/apache/lucene/util/TestNumericUtils.java
@@ -450,7 +450,7 @@ public void testSplitLongRange() throws Exception {
     // a inverse range should produce no sub-ranges
     assertLongRangeSplit(9500L, -5000L, 4, false, Collections.<Long>emptyList(), Collections.<Integer>emptyList());    
 
-    // a 0-length range should reproduce the range itsself
+    // a 0-length range should reproduce the range itself
     assertLongRangeSplit(9500L, 9500L, 4, false, Arrays.asList(
       0x800000000000251cL,0x800000000000251cL
     ), Arrays.asList(
@@ -558,7 +558,7 @@ public void testSplitIntRange() throws Exception {
     // a inverse range should produce no sub-ranges
     assertIntRangeSplit(9500, -5000, 4, false, Collections.<Integer>emptyList(), Collections.<Integer>emptyList());    
 
-    // a 0-length range should reproduce the range itsself
+    // a 0-length range should reproduce the range itself
     assertIntRangeSplit(9500, 9500, 4, false, Arrays.asList(
       0x8000251c,0x8000251c
     ), Arrays.asList(
