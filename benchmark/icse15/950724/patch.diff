diff --git a/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/response/TextResponseWriter.java b/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/response/TextResponseWriter.java
index 2feff721..5af5c3dc 100644
--- a/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/response/TextResponseWriter.java
+++ b/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/response/TextResponseWriter.java
@@ -207,14 +207,28 @@ public void writeBool(String name, boolean val) throws IOException {
   public abstract void writeFloat(String name, String val) throws IOException;
 
   public void writeFloat(String name, float val) throws IOException {
-    writeFloat(name,Float.toString(val));
+    String s = Float.toString(val);
+    // If it's not a normal number, write the value as a string instead.
+    // The following test also handles NaN since comparisons are always false.
+    if (val > Float.NEGATIVE_INFINITY && val < Float.POSITIVE_INFINITY) {
+      writeFloat(name,s);
+    } else {
+      writeStr(name,s,false);
+    }
   }
 
   /** if this form of the method is called, val is the Java string form of a double */
   public abstract void writeDouble(String name, String val) throws IOException;
 
   public void writeDouble(String name, double val) throws IOException {
-    writeDouble(name,Double.toString(val));
+    String s = Double.toString(val);
+    // If it's not a normal number, write the value as a string instead.
+    // The following test also handles NaN since comparisons are always false.
+    if (val > Double.NEGATIVE_INFINITY && val < Double.POSITIVE_INFINITY) {
+      writeDouble(name,s);
+    } else {
+      writeStr(name,s,false);
+    }
   }
 
   public abstract void writeDate(String name, Date val) throws IOException;
diff --git a/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/request/JSONWriterTest.java b/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/request/JSONWriterTest.java
index 5b4d0323..154ea64d 100644
--- a/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/request/JSONWriterTest.java
+++ b/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/request/JSONWriterTest.java
@@ -68,6 +68,11 @@ public void testNaNInf() throws IOException {
     w.write(buf, req, rsp);
     assertEquals(buf.toString(), "{'data1'=>(0.0/0.0),'data2'=>-(1.0/0.0),'data3'=>(1.0/0.0)}");
 
+    w = new JSONResponseWriter();
+    buf = new StringWriter();
+    w.write(buf, req, rsp);
+    assertEquals(buf.toString(), "{\"data1\":\"NaN\",\"data2\":\"-Infinity\",\"data3\":\"Infinity\"}");
+
   }
 
   @Test
