diff --git a/incubator/cassandra/trunk/src/org/apache/cassandra/db/Memtable.java b/incubator/cassandra/trunk/src/org/apache/cassandra/db/Memtable.java
index 707fc0bf..e4eccfac 100644
--- a/incubator/cassandra/trunk/src/org/apache/cassandra/db/Memtable.java
+++ b/incubator/cassandra/trunk/src/org/apache/cassandra/db/Memtable.java
@@ -18,6 +18,7 @@
 
 package org.apache.cassandra.db;
 
+import java.io.FileOutputStream;
 import java.io.IOException;
 import java.util.*;
 import java.util.concurrent.Callable;
@@ -53,6 +54,7 @@
 	private static Logger logger_ = Logger.getLogger( Memtable.class );
     private static Map<String, ExecutorService> apartments_ = new HashMap<String, ExecutorService>();
     public static final String flushKey_ = "FlushKey";
+    
     public static void shutdown()
     {
     	Set<String> names = apartments_.keySet();
@@ -157,6 +159,28 @@ public void run()
         }
     }
 
+    /**
+     * Flushes the current memtable to disk.
+     * 
+     * @author alakshman
+     *
+     */
+    class Flusher implements Runnable
+    {
+        private CommitLog.CommitLogContext cLogCtx_;
+        
+        Flusher(CommitLog.CommitLogContext cLogCtx)
+        {
+            cLogCtx_ = cLogCtx;
+        }
+        
+        public void run()
+        {
+            ColumnFamilyStore cfStore = Table.open(table_).getColumnFamilyStore(cfName_);
+            MemtableManager.instance().submit(cfName_, Memtable.this, cLogCtx_);
+        }
+    }
+
     /**
      * Compares two Memtable based on creation time. 
      * @param rhs
@@ -235,7 +259,10 @@ void put(String key, ColumnFamily columnFamily, CommitLog.CommitLogContext cLogC
                 if (!isFrozen_)
                 {
                     isFrozen_ = true;
-                    MemtableManager.instance().submit(cfStore.getColumnFamilyName(), this, cLogCtx);
+                    /* Submit this Memtable to be flushed. */
+                    Runnable flusher = new Flusher(cLogCtx);
+                    apartments_.get(cfName_).submit(flusher);
+                    // MemtableManager.instance().submit(cfStore.getColumnFamilyName(), this, cLogCtx);
                     cfStore.switchMemtable(key, columnFamily, cLogCtx);
                 }
                 else
@@ -280,8 +307,6 @@ void forceflush(ColumnFamilyStore cfStore, boolean fRecovery) throws IOException
         }
     }
 
-
-
     private void resolve(String key, ColumnFamily columnFamily)
     {
     	ColumnFamily oldCf = columnFamilies_.get(key);
@@ -314,7 +339,6 @@ void putOnRecovery(String key, ColumnFamily columnFamily) throws IOException
         	resolve(key, columnFamily);
     }
 
-    
     ColumnFamily getLocalCopy(String key, String cfName, IFilter filter)
     {
     	String[] values = RowMutation.getColumnAndColumnFamily(cfName);
