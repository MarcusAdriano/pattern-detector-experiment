diff --git a/incubator/aries/trunk/application/application-api/src/main/java/org/apache/aries/application/management/ApplicationContextManager.java b/incubator/aries/trunk/application/application-api/src/main/java/org/apache/aries/application/management/ApplicationContextManager.java
index b13f1a69..b900eba7 100644
--- a/incubator/aries/trunk/application/application-api/src/main/java/org/apache/aries/application/management/ApplicationContextManager.java
+++ b/incubator/aries/trunk/application/application-api/src/main/java/org/apache/aries/application/management/ApplicationContextManager.java
@@ -44,4 +44,11 @@
    * @return The set of all ApplicationContexts.
    */
   public Set<ApplicationContext> getApplicationContexts();
+
+  /**
+   * Remove the provided ApplicationContext from the running system.
+   * 
+   * @param app the application to remove.
+   */
+  public void remove(ApplicationContext app);
 }
diff --git a/incubator/aries/trunk/application/application-management/src/main/java/org/apache/aries/application/management/impl/AriesApplicationManagerImpl.java b/incubator/aries/trunk/application/application-management/src/main/java/org/apache/aries/application/management/impl/AriesApplicationManagerImpl.java
index 011631e0..917f04c1 100644
--- a/incubator/aries/trunk/application/application-management/src/main/java/org/apache/aries/application/management/impl/AriesApplicationManagerImpl.java
+++ b/incubator/aries/trunk/application/application-management/src/main/java/org/apache/aries/application/management/impl/AriesApplicationManagerImpl.java
@@ -231,12 +231,14 @@ public ApplicationContext install(AriesApplication app) throws BundleException,
     return result;
   }
   
-  public void uninstall(ApplicationContext app) throws BundleException {
+  public void uninstall(ApplicationContext app) throws BundleException 
+  {
     Set<Bundle> bundles = app.getApplicationContent();
     for (Bundle b : bundles) { 
       b.uninstall();
     }
 
+    _applicationContextManager.remove(app);
   }
 
   public void addApplicationListener(ApplicationListener l) {
diff --git a/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextImpl.java b/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextImpl.java
index c97a80ad..4ced8cfe 100644
--- a/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextImpl.java
+++ b/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextImpl.java
@@ -160,4 +160,9 @@ public void stop() throws BundleException {
     }
     _state = ApplicationState.RESOLVED;
   }
+
+  public void setState(ApplicationState state)
+  {
+    _state = state;
+  }
 }
diff --git a/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextManagerImpl.java b/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextManagerImpl.java
index 3794cf54..5588a410 100644
--- a/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextManagerImpl.java
+++ b/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextManagerImpl.java
@@ -20,6 +20,7 @@
 package org.apache.aries.application.runtime.impl;
 
 import java.util.HashSet;
+import java.util.Iterator;
 import java.util.Map;
 import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
@@ -29,16 +30,17 @@
 import org.apache.aries.application.management.ApplicationContextManager;
 import org.apache.aries.application.management.AriesApplication;
 import org.apache.aries.application.management.ManagementException;
+import org.apache.aries.application.management.ApplicationContext.ApplicationState;
 import org.osgi.framework.BundleContext;
 import org.osgi.framework.BundleException;
 
 public class ApplicationContextManagerImpl implements ApplicationContextManager {
 
-  ConcurrentMap<AriesApplication, ApplicationContext> _appToContextMap;
-  BundleContext _bundleContext;
+  private ConcurrentMap<AriesApplication, ApplicationContextImpl> _appToContextMap;
+  private BundleContext _bundleContext;
   
   public ApplicationContextManagerImpl () { 
-    _appToContextMap = new ConcurrentHashMap<AriesApplication, ApplicationContext>();
+    _appToContextMap = new ConcurrentHashMap<AriesApplication, ApplicationContextImpl>();
   }
   
   public void setBundleContext (BundleContext b) { 
@@ -46,12 +48,12 @@ public void setBundleContext (BundleContext b) {
   }
   
   public ApplicationContext getApplicationContext(AriesApplication app) throws BundleException, ManagementException {
-    ApplicationContext result;
+    ApplicationContextImpl result;
     if (_appToContextMap.containsKey(app)) { 
       result = _appToContextMap.get(app);
     } else { 
       result = new ApplicationContextImpl (_bundleContext, app);
-      ApplicationContext previous = _appToContextMap.putIfAbsent(app, result);
+      ApplicationContextImpl previous = _appToContextMap.putIfAbsent(app, result);
       if (previous != null) { 
         result = previous;
       }
@@ -61,10 +63,28 @@ public ApplicationContext getApplicationContext(AriesApplication app) throws Bun
 
   public Set<ApplicationContext> getApplicationContexts() {
     Set<ApplicationContext> result = new HashSet<ApplicationContext>();
-    for (Map.Entry<AriesApplication, ApplicationContext> entry: _appToContextMap.entrySet()) {
+    for (Map.Entry<AriesApplication, ApplicationContextImpl> entry: _appToContextMap.entrySet()) {
       result.add (entry.getValue());
     }
     return result;
   }
 
+  public void remove(ApplicationContext app)
+  {
+    Iterator<Map.Entry<AriesApplication, ApplicationContextImpl>> it = _appToContextMap.entrySet().iterator();
+    
+    while (it.hasNext()) {
+      Map.Entry<AriesApplication, ApplicationContextImpl> entry = it.next();
+      
+      ApplicationContextImpl potentialMatch = entry.getValue();
+      
+      if (potentialMatch == app) {
+        it.remove();
+        
+        potentialMatch.setState(ApplicationState.UNINSTALLED);
+        
+        break;
+      }
+    }
+  }
 }
