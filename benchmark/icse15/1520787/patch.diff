diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/similarity/AbstractSimilarity.java b/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/similarity/AbstractSimilarity.java
index bb62eff7..e4d4e0f9 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/similarity/AbstractSimilarity.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/similarity/AbstractSimilarity.java
@@ -93,7 +93,7 @@ final boolean isWeighted() {
    * @param n
    *          total number of users or items
    * @param sumXY
-   *          sum of product of user/item preference values, over all items/users prefererred by both
+   *          sum of product of user/item preference values, over all items/users preferred by both
    *          users/items
    * @param sumX2
    *          sum of the square of user/item preference values, over the first item/user
@@ -102,7 +102,7 @@ final boolean isWeighted() {
    * @param sumXYdiff2
    *          sum of squares of differences in X and Y values
    * @return similarity value between -1.0 and 1.0, inclusive, or {@link Double#NaN} if no similarity can be
-   *         computed (e.g. when no items have been rated by both uesrs
+   *         computed (e.g. when no items have been rated by both users
    */
   abstract double computeResult(int n, double sumXY, double sumX2, double sumY2, double sumXYdiff2);
   
@@ -246,7 +246,7 @@ public final double itemSimilarity(long itemID1, long itemID2) throws TasteExcep
     double sumXYdiff2 = 0.0;
     int count = 0;
     
-    // No, pref inferrers and transforms don't appy here. I think.
+    // No, pref inferrers and transforms don't apply here. I think.
     
     while (true) {
       int compare = xIndex < yIndex ? -1 : xIndex > yIndex ? 1 : 0;
