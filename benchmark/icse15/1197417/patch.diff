diff --git a/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/io/sstable/SSTableLoader.java b/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/io/sstable/SSTableLoader.java
index ea0a0cf0..8701d9a7 100644
--- a/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/io/sstable/SSTableLoader.java
+++ b/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/io/sstable/SSTableLoader.java
@@ -125,6 +125,8 @@ public LoaderFuture stream(Set<InetAddress> toIgnore) throws IOException
             }
             Collection<Range> ranges = entry.getValue();
             StreamOutSession session = StreamOutSession.create(keyspace, remote, new CountDownCallback(future.latch, remote));
+            // transferSSTables assumes references have been acquired
+            SSTableReader.acquireReferences(sstables);
             StreamOut.transferSSTables(session, sstables, ranges, OperationType.BULK_LOAD);
             future.setPendings(remote, session.getFiles());
         }
diff --git a/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/tools/BulkLoader.java b/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/tools/BulkLoader.java
index 41e9c90d..364367ef 100644
--- a/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/tools/BulkLoader.java
+++ b/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/tools/BulkLoader.java
@@ -70,12 +70,14 @@ public static void main(String args[]) throws IOException
                 ProgressIndicator indicator = new ProgressIndicator(future.getPendingFiles());
                 indicator.start();
                 System.out.println("");
+                boolean printEnd = false;
                 while (!future.isDone())
                 {
                     if (indicator.printProgress())
                     {
                         // We're done with streaming
                         System.out.println("\nWaiting for targets to rebuild indexes ...");
+                        printEnd = true;
                         future.get();
                         assert future.isDone();
                     }
@@ -84,6 +86,8 @@ public static void main(String args[]) throws IOException
                         try { Thread.sleep(1000L); } catch (Exception e) {}
                     }
                 }
+                if (!printEnd)
+                    indicator.printProgress();
             }
 
             System.exit(0); // We need that to stop non daemonized threads
