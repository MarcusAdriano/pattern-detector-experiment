diff --git a/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/execute/TablePrivilegeInfo.java b/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/execute/TablePrivilegeInfo.java
index 1a9e9921..2fe8751c 100644
--- a/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/execute/TablePrivilegeInfo.java
+++ b/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/execute/TablePrivilegeInfo.java
@@ -276,6 +276,16 @@ public void executeGrantRevoke( Activation activation,
 					{
 						privileges_revoked = true;
 						dd.getDependencyManager().invalidateFor(colPermsDescs[i], DependencyManager.REVOKE_PRIVILEGE, lcc);
+						// When revoking a privilege from a Table we need to
+						// invalidate all GPSs refering to it. But GPSs aren't
+						// Dependents of colPermsDescs[i], but of the
+						// TableDescriptor itself, so we must send
+						// INTERNAL_RECOMPILE_REQUEST to the TableDescriptor's
+						// Dependents.
+						dd.getDependencyManager().invalidateFor
+							(td,
+							 DependencyManager.INTERNAL_RECOMPILE_REQUEST,
+							 lcc);
 					}
 				}
 			}
diff --git a/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GrantRevokeDDLTest.java b/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GrantRevokeDDLTest.java
index 459abaa5..32b90630 100644
--- a/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GrantRevokeDDLTest.java
+++ b/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GrantRevokeDDLTest.java
@@ -9089,6 +9089,43 @@ public void testGrantRevokeDDL2() throws SQLException {
         
         assertStatementError("42502", pSt2);
         
+        // -----------------------------------
+        // Now try with column level privilege
+        // DERBY-3736
+        st_user1.executeUpdate(
+            " grant select(i) on ttt2 to user2");
+
+        // set connection user2
+        // prepare statement, ok
+
+        pSt2 = user2.prepareStatement(
+            "select * from user1.ttt2");
+
+        // ok
+
+        rs = pSt2.executeQuery();
+        expColNames = new String [] {"I"};
+        JDBC.assertColumnNames(rs, expColNames);
+
+        expRS = new String [][]
+        {
+            {"8"}
+        };
+
+        JDBC.assertFullResultSet(rs, expRS, true);
+
+        // set connection user1
+
+        st_user1.executeUpdate(
+            " revoke select(i) on ttt2 from user2");
+
+        // set connection user2
+        // expect error
+
+        assertStatementError("42502", pSt2);
+
+        // end of test case for DERBY-3736
+        // --------------------------------
         
         // set connection user2
         // 
