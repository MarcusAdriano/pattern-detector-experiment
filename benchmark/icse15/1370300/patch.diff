diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/search/ValueSourceParser.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/search/ValueSourceParser.java
index 76a38e88..b473bfd6 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/search/ValueSourceParser.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/search/ValueSourceParser.java
@@ -148,6 +148,25 @@ public ValueSource parse(FunctionQParser fp) throws ParseException {
         return new LiteralValueSource(fp.parseArg());
       }
     });
+    addParser("threadid", new ValueSourceParser() {
+      @Override
+      public ValueSource parse(FunctionQParser fp) throws ParseException {
+        return new LongConstValueSource(Thread.currentThread().getId());
+      }
+    });
+    addParser("sleep", new ValueSourceParser() {
+      @Override
+      public ValueSource parse(FunctionQParser fp) throws ParseException {
+        int ms = fp.parseInt();
+        ValueSource source = fp.parseValueSource();
+        try {
+          Thread.sleep(ms);
+        } catch (InterruptedException e) {
+          throw new RuntimeException(e);
+        }
+        return source;
+      }
+    });
     addParser("rord", new ValueSourceParser() {
       @Override
       public ValueSource parse(FunctionQParser fp) throws ParseException {
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/update/UpdateLog.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/update/UpdateLog.java
index ac444370..490c371e 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/update/UpdateLog.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/update/UpdateLog.java
@@ -1048,6 +1048,7 @@ public boolean dropBufferedUpdates() {
     try {
       cancelApplyBufferUpdate = false;
       if (state != State.BUFFERING) return null;
+      operationFlags &= ~FLAG_GAP;
 
       // handle case when no log was even created because no updates
       // were received.
@@ -1057,7 +1058,6 @@ public boolean dropBufferedUpdates() {
       }
       tlog.incref();
       state = State.APPLYING_BUFFERED;
-      operationFlags &= ~FLAG_GAP;
     } finally {
       versionInfo.unblockUpdates();
     }
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java
index 5c79a2d1..d00dbf20 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/search/QueryEqualityTest.java
@@ -648,6 +648,11 @@ public void testFuncField() throws Exception {
                      "foo_i");
   }
 
+  public void testTestFuncs() throws Exception {
+    assertFuncEquals("sleep(1,5)", "sleep(1,5)");
+    assertFuncEquals("threadid()", "threadid()");
+  }
+
   /**
    * this test does not assert anything itself, it simply toggles a static 
    * boolean informing an @AfterClass method to assert that every default 
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/search/TestRecovery.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/search/TestRecovery.java
index 62825734..e2efbf33 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/search/TestRecovery.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/search/TestRecovery.java
@@ -559,7 +559,22 @@ public void run() {
 
       assertTrue((ulog.getStartingOperation() & UpdateLog.FLAG_GAP) == 0);
 
+      ulog.bufferUpdates();
+      // simulate receiving no updates
+      ulog.applyBufferedUpdates();
+      updateJ(jsonAdd(sdoc("id","Q7", "_version_","117")), params(DISTRIB_UPDATE_PARAM,FROM_LEADER)); // do another add to make sure flags are back to normal
+
+      req.close();
+      h.close();
+      createCore();
+
+      req = req();
+      uhandler = req.getCore().getUpdateHandler();
+      ulog = uhandler.getUpdateLog();
+
+      assertTrue((ulog.getStartingOperation() & UpdateLog.FLAG_GAP) == 0); // check flags on Q7
 
+      logReplayFinish.acquire();
       assertEquals(UpdateLog.State.ACTIVE, ulog.getState()); // leave each test method in a good state
     } finally {
       DirectUpdateHandler2.commitOnClose = true;
