diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/BooleanScorer.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/BooleanScorer.java
index a4db5bdb..6374e89f 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/BooleanScorer.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/BooleanScorer.java
@@ -229,7 +229,7 @@ public SubScorer(Scorer scorer, boolean required, boolean prohibited,
 
   // firstDocID is ignored since nextDoc() initializes 'current'
   @Override
-  protected boolean score(Collector collector, int max, int firstDocID) throws IOException {
+  public boolean score(Collector collector, int max, int firstDocID) throws IOException {
     boolean more;
     Bucket tmp;
     BucketScorer bs = new BucketScorer();
diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/BooleanScorer2.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/BooleanScorer2.java
index 0d47da6c..d1a7a6d3 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/BooleanScorer2.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/BooleanScorer2.java
@@ -280,7 +280,7 @@ public void score(Collector collector) throws IOException {
   }
   
   @Override
-  protected boolean score(Collector collector, int max, int firstDocID) throws IOException {
+  public boolean score(Collector collector, int max, int firstDocID) throws IOException {
     doc = firstDocID;
     collector.setScorer(this);
     while (doc < max) {
diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.java
index 6af8ed53..10090e98 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.java
@@ -244,10 +244,8 @@ public void score(Collector collector) throws IOException {
     }
 
     // this optimization allows out of order scoring as top scorer,
-    // TODO: theoretically this method should not be called because its protected and
-    // this class does not use it, it should be public in Scorer!
     @Override
-    protected boolean score(Collector collector, int max, int firstDocID) throws IOException {
+    public boolean score(Collector collector, int max, int firstDocID) throws IOException {
       if (docIdSetIterator instanceof Scorer) {
         return ((Scorer) docIdSetIterator).score(wrapCollector(collector), max, firstDocID);
       } else {
diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/DisjunctionSumScorer.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/DisjunctionSumScorer.java
index 7e5016d9..5ec3514e 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/DisjunctionSumScorer.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/DisjunctionSumScorer.java
@@ -123,7 +123,7 @@ public void score(Collector collector) throws IOException {
    * @return true if more matching documents may remain.
    */
   @Override
-  protected boolean score(Collector collector, int max, int firstDocID) throws IOException {
+  public boolean score(Collector collector, int max, int firstDocID) throws IOException {
     // firstDocID is ignored since nextDoc() sets 'currentDoc'
     collector.setScorer(this);
     while (currentDoc < max) {
diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/ScoreCachingWrappingScorer.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/ScoreCachingWrappingScorer.java
index 09a0bcd8..b35e4522 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/ScoreCachingWrappingScorer.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/ScoreCachingWrappingScorer.java
@@ -43,7 +43,7 @@ public ScoreCachingWrappingScorer(Scorer scorer) {
   }
 
   @Override
-  protected boolean score(Collector collector, int max, int firstDocID) throws IOException {
+  public boolean score(Collector collector, int max, int firstDocID) throws IOException {
     return scorer.score(collector, max, firstDocID);
   }
 
diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/Scorer.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/Scorer.java
index 84e51431..907cdf3a 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/Scorer.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/Scorer.java
@@ -90,7 +90,7 @@ public void score(Collector collector) throws IOException {
    *          this method.
    * @return true if more matching documents may remain.
    */
-  protected boolean score(Collector collector, int max, int firstDocID) throws IOException {
+  public boolean score(Collector collector, int max, int firstDocID) throws IOException {
     collector.setScorer(this);
     int doc = firstDocID;
     while (doc < max) {
diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/TermScorer.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/TermScorer.java
index 48ddd3e0..cffea443 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/TermScorer.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/TermScorer.java
@@ -77,7 +77,7 @@ private final void refillBuffer() throws IOException {
 
   // firstDocID is ignored since nextDoc() sets 'doc'
   @Override
-  protected boolean score(Collector c, int end, int firstDocID) throws IOException {
+  public boolean score(Collector c, int end, int firstDocID) throws IOException {
     c.setScorer(this);
     while (doc < end) {                           // for docs in window
       c.collect(doc);                      // collect score
diff --git a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/JustCompileSearch.java b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/JustCompileSearch.java
index 43cd8370..f0488f5b 100644
--- a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/JustCompileSearch.java
+++ b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/JustCompileSearch.java
@@ -215,7 +215,7 @@ protected JustCompileScorer(Similarity similarity) {
     }
 
     @Override
-    protected boolean score(Collector collector, int max, int firstDocID)
+    public boolean score(Collector collector, int max, int firstDocID)
         throws IOException {
       throw new UnsupportedOperationException(UNSUPPORTED_MSG);
     }
