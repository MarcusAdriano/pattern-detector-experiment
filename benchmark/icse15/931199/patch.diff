diff --git a/cassandra/trunk/src/java/org/apache/cassandra/auth/AllowAllAuthenticator.java b/cassandra/trunk/src/java/org/apache/cassandra/auth/AllowAllAuthenticator.java
index d15df5e0..b9329f49 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/auth/AllowAllAuthenticator.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/auth/AllowAllAuthenticator.java
@@ -21,7 +21,7 @@
  */
 
 
-import org.apache.cassandra.config.DatabaseDescriptor.ConfigurationException;
+import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.thrift.AccessLevel;
 import org.apache.cassandra.thrift.AuthenticationException;
 import org.apache.cassandra.thrift.AuthenticationRequest;
@@ -37,7 +37,8 @@ public AccessLevel login(String keyspace, AuthenticationRequest authRequest) thr
     }
     
    @Override    
-    public void validateConfiguration() throws ConfigurationException {
+    public void validateConfiguration() throws ConfigurationException
+   {
         // do nothing, no configuration to validate
     }
 }
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/auth/IAuthenticator.java b/cassandra/trunk/src/java/org/apache/cassandra/auth/IAuthenticator.java
index 0f9c6175..14cee98c 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/auth/IAuthenticator.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/auth/IAuthenticator.java
@@ -21,7 +21,7 @@
  */
 
 
-import org.apache.cassandra.config.DatabaseDescriptor.ConfigurationException;
+import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.thrift.AccessLevel;
 import org.apache.cassandra.thrift.AuthenticationException;
 import org.apache.cassandra.thrift.AuthenticationRequest;
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/auth/SimpleAuthenticator.java b/cassandra/trunk/src/java/org/apache/cassandra/auth/SimpleAuthenticator.java
index 0c48ac88..f51b9f8a 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/auth/SimpleAuthenticator.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/auth/SimpleAuthenticator.java
@@ -26,7 +26,7 @@
 import java.security.NoSuchAlgorithmException;
 import java.util.Properties;
 
-import org.apache.cassandra.config.DatabaseDescriptor.ConfigurationException;
+import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.thrift.AccessLevel;
 import org.apache.cassandra.thrift.AuthenticationException;
 import org.apache.cassandra.thrift.AuthenticationRequest;
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/ConfigurationException.java b/cassandra/trunk/src/java/org/apache/cassandra/config/ConfigurationException.java
index e69de29b..5ae78473 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/ConfigurationException.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/ConfigurationException.java
@@ -0,0 +1,27 @@
+/**
+* Licensed to the Apache Software Foundation (ASF) under one
+* or more contributor license agreements.  See the NOTICE file
+* distributed with this work for additional information
+* regarding copyright ownership.  The ASF licenses this file
+* to you under the Apache License, Version 2.0 (the
+* "License"); you may not use this file except in compliance
+* with the License.  You may obtain a copy of the License at
+* <p/>
+* http://www.apache.org/licenses/LICENSE-2.0
+* <p/>
+* Unless required by applicable law or agreed to in writing, software
+* distributed under the License is distributed on an "AS IS" BASIS,
+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+* See the License for the specific language governing permissions and
+* limitations under the License.
+*/
+
+package org.apache.cassandra.config;
+
+public class ConfigurationException extends Exception
+{
+    public ConfigurationException(String message)
+    {
+        super(message);
+    }
+}
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java b/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
index b1c36d87..618c6142 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
@@ -1135,14 +1135,6 @@ public static UUID getDefsVersion()
         return defsVersion;
     }
 
-    public static class ConfigurationException extends Exception
-    {
-        public ConfigurationException(String message)
-        {
-            super(message);
-        }
-    }
-
     public static InetAddress getListenAddress()
     {
         return listenAddress;
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/AddColumnFamily.java b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/AddColumnFamily.java
index 188600aa..982dbf31 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/AddColumnFamily.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/AddColumnFamily.java
@@ -1,19 +1,16 @@
 package org.apache.cassandra.db.migration;
 
 import org.apache.cassandra.config.CFMetaData;
+import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.config.DatabaseDescriptor;
-import org.apache.cassandra.config.DatabaseDescriptor.ConfigurationException;
 import org.apache.cassandra.config.KSMetaData;
-import org.apache.cassandra.db.DefsTable;
 import org.apache.cassandra.db.RowMutation;
 import org.apache.cassandra.db.Table;
 import org.apache.cassandra.db.commitlog.CommitLog;
-import org.apache.cassandra.db.filter.QueryPath;
 import org.apache.cassandra.io.ICompactSerializer;
 import org.apache.cassandra.utils.FBUtilities;
 import org.apache.cassandra.utils.UUIDGen;
 
-import java.io.ByteArrayOutputStream;
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
@@ -58,9 +55,9 @@ public AddColumnFamily(CFMetaData cfm) throws ConfigurationException, IOExceptio
         KSMetaData ksm = DatabaseDescriptor.getTableDefinition(cfm.tableName);
         
         if (ksm == null)
-            throw new DatabaseDescriptor.ConfigurationException("Keyspace does not already exist.");
+            throw new ConfigurationException("Keyspace does not already exist.");
         else if (ksm.cfMetaData().containsKey(cfm.cfName))
-            throw new DatabaseDescriptor.ConfigurationException("CF is already defined in that keyspace.");
+            throw new ConfigurationException("CF is already defined in that keyspace.");
         
         // clone ksm but include the new cf def.
         KSMetaData newKsm = makeNewKeyspaceDefinition(ksm);
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/AddKeyspace.java b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/AddKeyspace.java
index f01f5d4c..db54982b 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/AddKeyspace.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/AddKeyspace.java
@@ -19,8 +19,8 @@
 package org.apache.cassandra.db.migration;
 
 import org.apache.cassandra.config.CFMetaData;
+import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.config.DatabaseDescriptor;
-import org.apache.cassandra.config.DatabaseDescriptor.ConfigurationException;
 import org.apache.cassandra.config.KSMetaData;
 import org.apache.cassandra.db.RowMutation;
 import org.apache.cassandra.db.Table;
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropColumnFamily.java b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropColumnFamily.java
index 2f219a54..dc75e3a7 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropColumnFamily.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropColumnFamily.java
@@ -1,10 +1,9 @@
 package org.apache.cassandra.db.migration;
 
 import org.apache.cassandra.config.CFMetaData;
+import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.config.DatabaseDescriptor;
-import org.apache.cassandra.config.DatabaseDescriptor.ConfigurationException;
 import org.apache.cassandra.config.KSMetaData;
-import org.apache.cassandra.db.DefsTable;
 import org.apache.cassandra.db.RowMutation;
 import org.apache.cassandra.db.SystemTable;
 import org.apache.cassandra.db.Table;
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropKeyspace.java b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropKeyspace.java
index d9433495..949f41d2 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropKeyspace.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropKeyspace.java
@@ -19,8 +19,8 @@
 package org.apache.cassandra.db.migration;
 
 import org.apache.cassandra.config.CFMetaData;
+import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.config.DatabaseDescriptor;
-import org.apache.cassandra.config.DatabaseDescriptor.ConfigurationException;
 import org.apache.cassandra.config.KSMetaData;
 import org.apache.cassandra.db.HintedHandOffManager;
 import org.apache.cassandra.db.RowMutation;
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/RenameColumnFamily.java b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/RenameColumnFamily.java
index f9f856d0..346877c9 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/RenameColumnFamily.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/RenameColumnFamily.java
@@ -1,8 +1,8 @@
 package org.apache.cassandra.db.migration;
 
 import org.apache.cassandra.config.CFMetaData;
+import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.config.DatabaseDescriptor;
-import org.apache.cassandra.config.DatabaseDescriptor.ConfigurationException;
 import org.apache.cassandra.config.KSMetaData;
 import org.apache.cassandra.db.DefsTable;
 import org.apache.cassandra.db.RowMutation;
@@ -66,11 +66,11 @@ public RenameColumnFamily(String tableName, String oldName, String newName) thro
         
         KSMetaData ksm = DatabaseDescriptor.getTableDefinition(tableName);
         if (ksm == null)
-            throw new DatabaseDescriptor.ConfigurationException("Keyspace does not already exist.");
+            throw new ConfigurationException("Keyspace does not already exist.");
         if (!ksm.cfMetaData().containsKey(oldName))
-            throw new DatabaseDescriptor.ConfigurationException("CF is not defined in that keyspace.");
+            throw new ConfigurationException("CF is not defined in that keyspace.");
         if (ksm.cfMetaData().containsKey(newName))
-            throw new DatabaseDescriptor.ConfigurationException("CF is already defined in that keyspace.");
+            throw new ConfigurationException("CF is already defined in that keyspace.");
         
         // clone the ksm, replacing cfm with the new one.
         KSMetaData newKsm = makeNewKeyspaceDefinition(ksm);
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/RenameKeyspace.java b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/RenameKeyspace.java
index 346b4160..b3d8c79d 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/RenameKeyspace.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/RenameKeyspace.java
@@ -18,8 +18,8 @@
 
 package org.apache.cassandra.db.migration;
 
+import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.config.DatabaseDescriptor;
-import org.apache.cassandra.config.DatabaseDescriptor.ConfigurationException;
 import org.apache.cassandra.config.KSMetaData;
 import org.apache.cassandra.db.DefsTable;
 import org.apache.cassandra.db.HintedHandOffManager;
diff --git a/cassandra/trunk/test/unit/org/apache/cassandra/db/DefsTest.java b/cassandra/trunk/test/unit/org/apache/cassandra/db/DefsTest.java
index 3e5938f7..5ab31ba9 100644
--- a/cassandra/trunk/test/unit/org/apache/cassandra/db/DefsTest.java
+++ b/cassandra/trunk/test/unit/org/apache/cassandra/db/DefsTest.java
@@ -20,7 +20,7 @@
 
 import org.apache.cassandra.CleanupHelper;
 import org.apache.cassandra.config.CFMetaData;
-import static org.apache.cassandra.config.DatabaseDescriptor.ConfigurationException;
+import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.config.DatabaseDescriptor;
 import org.apache.cassandra.config.KSMetaData;
 import org.apache.cassandra.db.commitlog.CommitLog;
