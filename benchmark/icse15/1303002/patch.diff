diff --git a/lucene/dev/trunk/modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.java b/lucene/dev/trunk/modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.java
index 3a23c36d..b5420ca9 100644
--- a/lucene/dev/trunk/modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.java
+++ b/lucene/dev/trunk/modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.java
@@ -187,12 +187,14 @@ protected void nextTerm() throws IOException {
 
     public void collect(int doc) throws IOException {
       int groupOrd = groupFieldTermsIndex.getOrd(doc);
+      if (facetOrdTermsEnum != null) {
       reuse = facetFieldDocTermOrds.lookup(doc, reuse);
+      }
       int chunk;
       boolean first = true;
       int[] buffer = new int[5];
       do {
-        chunk = reuse.read(buffer);
+        chunk = reuse != null ? reuse.read(buffer) : 0;
         if (first && chunk == 0) {
           chunk = 1;
           buffer[0] = facetFieldDocTermOrds.numTerms(); // this facet ord is reserved for docs not containing facet field.
@@ -246,7 +248,7 @@ public void setNextReader(AtomicReaderContext context) throws IOException {
 
         int facetOrd;
         if (groupedFacetHit.facetValue != null) {
-          if (!facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {
+          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {
             continue;
           }
           facetOrd = (int) facetOrdTermsEnum.ord();
@@ -260,7 +262,13 @@ public void setNextReader(AtomicReaderContext context) throws IOException {
       }
 
       if (facetPrefix != null) {
-        TermsEnum.SeekStatus seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);
+        TermsEnum.SeekStatus seekStatus;
+        if (facetOrdTermsEnum != null) {
+          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);
+        } else {
+          seekStatus = TermsEnum.SeekStatus.END;
+        }
+
         if (seekStatus != TermsEnum.SeekStatus.END) {
           startFacetOrd = (int) facetOrdTermsEnum.ord();
         } else {
@@ -296,9 +304,11 @@ protected SegmentResult createSegmentResult() throws IOException {
             endFacetOrd == missingCountIndex + 1 ?  missingCountIndex : endFacetOrd);
         this.tenum = tenum;
         this.mergePos = startFacetOrd;
+        if (tenum != null) {
         tenum.seekExact(mergePos);
         mergeTerm = tenum.term();
       }
+      }
 
       protected void nextTerm() throws IOException {
         mergeTerm = tenum.next();
