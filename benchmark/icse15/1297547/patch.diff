diff --git a/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Direct16.java b/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Direct16.java
index b4f62821..f0351899 100644
--- a/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Direct16.java
+++ b/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Direct16.java
@@ -69,6 +69,7 @@ public Direct16(short[] values) {
   }
 
   public long get(final int index) {
+    assert index >= 0 && index < size();
     return 0xFFFFL & values[index];
   }
 
diff --git a/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Direct32.java b/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Direct32.java
index 8403ce0b..59ce9aa1 100644
--- a/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Direct32.java
+++ b/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Direct32.java
@@ -65,6 +65,7 @@ public Direct32(int[] values) {
   }
 
   public long get(final int index) {
+    assert index >= 0 && index < size();
     return 0xFFFFFFFFL & values[index];
   }
 
diff --git a/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Direct64.java b/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Direct64.java
index a25ba52a..ae50dcfc 100644
--- a/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Direct64.java
+++ b/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Direct64.java
@@ -61,6 +61,7 @@ public Direct64(long[] values) {
   }
 
   public long get(final int index) {
+    assert index >= 0 && index < size();
     return values[index];
   }
 
diff --git a/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Direct8.java b/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Direct8.java
index 2353b7ec..bed04314 100644
--- a/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Direct8.java
+++ b/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Direct8.java
@@ -70,6 +70,7 @@ public Direct8(byte[] values) {
   }
 
   public long get(final int index) {
+    assert index >= 0 && index < size();
     return 0xFFL & values[index];
   }
 
diff --git a/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Packed32.java b/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Packed32.java
index ed7b8fd8..9a1331ff 100644
--- a/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Packed32.java
+++ b/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Packed32.java
@@ -186,6 +186,7 @@ private void updateCached() {
    * @return the value at the given index.
    */
   public long get(final int index) {
+    assert index >= 0 && index < size();
     final long majorBitPos = (long)index * bitsPerValue;
     final int elementPos = (int)(majorBitPos >>> BLOCK_BITS); // / BLOCK_SIZE
     final int bitPos =     (int)(majorBitPos & MOD_MASK); // % BLOCK_SIZE);
diff --git a/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Packed64.java b/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Packed64.java
index db407519..9efe4ac5 100644
--- a/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Packed64.java
+++ b/lucene/dev/branches/branch_3x/lucene/core/src/java/org/apache/lucene/util/packed/Packed64.java
@@ -177,6 +177,7 @@ private void updateCached() {
    * @return the value at the given index.
    */
   public long get(final int index) {
+    assert index >= 0 && index < size();
     final long majorBitPos = (long)index * bitsPerValue;
     final int elementPos = (int)(majorBitPos >>> BLOCK_BITS); // / BLOCK_SIZE
     final int bitPos =     (int)(majorBitPos & MOD_MASK); // % BLOCK_SIZE);
diff --git a/lucene/dev/branches/branch_3x/lucene/core/src/test/org/apache/lucene/index/TestTermInfosReaderIndex.java b/lucene/dev/branches/branch_3x/lucene/core/src/test/org/apache/lucene/index/TestTermInfosReaderIndex.java
index d957ae08..0289b4c3 100644
--- a/lucene/dev/branches/branch_3x/lucene/core/src/test/org/apache/lucene/index/TestTermInfosReaderIndex.java
+++ b/lucene/dev/branches/branch_3x/lucene/core/src/test/org/apache/lucene/index/TestTermInfosReaderIndex.java
@@ -63,8 +63,8 @@ public static void beforeClass() throws Exception {
     NUMBER_OF_FIELDS = atLeast(Math.max(10, 3*termIndexInterval*indexDivisor/NUMBER_OF_DOCUMENTS));
     
     directory = newDirectory();
-    // turn off compound file, this test will open some index files directly.
     LogMergePolicy mp = newLogMergePolicy();
+    // turn off compound file, this test will open some index files directly.
     mp.setUseCompoundFile(false);
     config.setMergePolicy(mp);
 
@@ -156,7 +156,14 @@ private Term findTermThatWouldBeAtIndex(SegmentTermEnum termEnum, int index) thr
       // TODO: this test just uses random terms, so this is always possible
       assumeTrue("ran out of terms.", termEnum.next());
     }
-    return termEnum.term();
+    final Term term = termEnum.term();
+    // An indexed term is only written when the term after
+    // it exists, so, if the number of terms is 0 mod
+    // termIndexInterval, the last index term will not be
+    // written; so we require a term after this term
+    // as well:
+    assumeTrue("ran out of terms", termEnum.next());
+    return term;
   }
 
   private static void populate(Directory directory, IndexWriterConfig config) throws CorruptIndexException, LockObtainFailedException, IOException {
