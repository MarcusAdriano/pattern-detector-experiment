diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/BasicDistributedZk2Test.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/BasicDistributedZk2Test.java
index 1db16aec..e5ccf596 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/BasicDistributedZk2Test.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/BasicDistributedZk2Test.java
@@ -23,8 +23,6 @@
 import java.io.InputStream;
 import java.net.URL;
 import java.util.Arrays;
-import java.util.HashSet;
-import java.util.Set;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
@@ -34,7 +32,6 @@
 import org.apache.solr.client.solrj.SolrServerException;
 import org.apache.solr.client.solrj.embedded.JettySolrRunner;
 import org.apache.solr.client.solrj.impl.HttpSolrServer;
-import org.apache.solr.client.solrj.impl.HttpSolrServer.RemoteSolrException;
 import org.apache.solr.client.solrj.request.CoreAdminRequest.Create;
 import org.apache.solr.client.solrj.request.QueryRequest;
 import org.apache.solr.client.solrj.request.UpdateRequest;
@@ -179,6 +176,7 @@ private void testNodeWithoutCollectionForwarding() throws Exception,
       createCmd.setDataDir(getDataDir(dataDir.getAbsolutePath() + File.separator
           + ONE_NODE_COLLECTION));
       server.request(createCmd);
+      server.shutdown();
     } catch (Exception e) {
       e.printStackTrace();
       fail(e.getMessage());
@@ -214,6 +212,7 @@ private void addAndQueryDocs(final String baseUrl, int docs)
     SolrQuery query = new SolrQuery("*:*");
     QueryResponse results = qclient.query(query);
     assertEquals(docs - 1, results.getResults().getNumFound());
+    qclient.shutdown();
     
     qclient = new HttpSolrServer(baseUrl + "/onenodecollection");
     results = qclient.query(query);
@@ -228,6 +227,7 @@ private void addAndQueryDocs(final String baseUrl, int docs)
     query.set("rows", 0);
     results = qclient.query(query);
     assertEquals(docs, results.getResults().getNumFound());
+    qclient.shutdown();
   }
   
   private long testUpdateAndDelete() throws Exception {
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest.java
index 1ddfa24e..0a679eeb 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest.java
@@ -398,6 +398,8 @@ private void testFailedCoreCreateCleansUp() throws Exception {
       fail("Expected SolrCore create to fail");
     } catch (Exception e) {
       
+    } finally {
+      server.shutdown();
     }
     
     long timeout = System.currentTimeMillis() + 15000;
@@ -531,6 +533,7 @@ private void testStopAndStartCoresInOneInstance() throws Exception {
     
     executor.shutdown();
     executor.awaitTermination(120, TimeUnit.SECONDS);
+    server.shutdown();
     
     ChaosMonkey.stop(cloudJettys.get(0).jetty);
     printLayout();
@@ -615,7 +618,9 @@ protected void createCollection(Map<String,List<Integer>> collectionInfos,
           ((HttpSolrServer) clients.get(clientIndex)).getBaseURL().length()
               - DEFAULT_COLLECTION.length() - 1);
       
-      createNewSolrServer("", baseUrl).request(request);
+      SolrServer aClient = createNewSolrServer("", baseUrl);
+      aClient.request(request);
+      aClient.shutdown();
     } else {
       client.request(request);
     }
@@ -750,7 +755,7 @@ private Long getNumCommits(HttpSolrServer solrServer) throws
     NamedList uhandler = (NamedList) uhandlerCat.get("updateHandler");
     NamedList stats = (NamedList) uhandler.get("stats");
     Long commits = (Long) stats.get("commits");
-
+    server.shutdown();
     return commits;
   }
 
@@ -759,7 +764,6 @@ private void testANewCollectionInOneInstanceWithManualShardAssignement() throws
     System.clearProperty("numShards");
     List<SolrServer> collectionClients = new ArrayList<SolrServer>();
     SolrServer client = clients.get(0);
-    otherCollectionClients.put(oneInstanceCollection2, collectionClients);
     final String baseUrl = ((HttpSolrServer) client).getBaseURL().substring(
         0,
         ((HttpSolrServer) client).getBaseURL().length()
@@ -775,10 +779,10 @@ private void testANewCollectionInOneInstanceWithManualShardAssignement() throws
       pending.remove(future);
     }
     
-    SolrServer client1 = createNewSolrServer(oneInstanceCollection2 + "1", baseUrl);
-    SolrServer client2 = createNewSolrServer(oneInstanceCollection2 + "2", baseUrl);
-    SolrServer client3 = createNewSolrServer(oneInstanceCollection2 + "3", baseUrl);
-    SolrServer client4 = createNewSolrServer(oneInstanceCollection2 + "4", baseUrl);
+    SolrServer client1 = collectionClients.get(0);
+    SolrServer client2 = collectionClients.get(1);
+    SolrServer client3 = collectionClients.get(2);
+    SolrServer client4 = collectionClients.get(3);
     
 
     // no one should be recovering
@@ -839,6 +843,7 @@ private void testANewCollectionInOneInstanceWithManualShardAssignement() throws
     String leader = props.getCoreUrl();
     
     server.request(unloadCmd);
+    server.shutdown();
     
     int tries = 50;
     while (leader.equals(zkStateReader.getLeaderUrl(oneInstanceCollection2, "slice1", 10000))) {
@@ -848,6 +853,10 @@ private void testANewCollectionInOneInstanceWithManualShardAssignement() throws
       }
     }
 
+    for (SolrServer aClient : collectionClients) {
+      aClient.shutdown();
+    }
+
   }
 
   private void testSearchByCollectionName() throws SolrServerException {
@@ -864,6 +873,7 @@ private void testSearchByCollectionName() throws SolrServerException {
     SolrQuery query = new SolrQuery("*:*");
     long oneDocs = client1.query(query).getResults().getNumFound();
     assertEquals(3, oneDocs);
+    client1.shutdown();
   }
   
   private void testUpdateByCollectionName() throws SolrServerException, IOException {
@@ -879,13 +889,13 @@ private void testUpdateByCollectionName() throws SolrServerException, IOExceptio
     // test hitting an update url
     SolrServer client1 = createNewSolrServer(oneInstanceCollection, baseUrl);
     client1.commit();
+    client1.shutdown();
   }
 
   private void testANewCollectionInOneInstance() throws Exception {
     log.info("### STARTING testANewCollectionInOneInstance");
     List<SolrServer> collectionClients = new ArrayList<SolrServer>();
     SolrServer client = clients.get(0);
-    otherCollectionClients.put(oneInstanceCollection , collectionClients);
     final String baseUrl = ((HttpSolrServer) client).getBaseURL().substring(
         0,
         ((HttpSolrServer) client).getBaseURL().length()
@@ -902,10 +912,10 @@ private void testANewCollectionInOneInstance() throws Exception {
       pending.remove(future);
     }
     
-    SolrServer client1 = createNewSolrServer(oneInstanceCollection + "1", baseUrl);
-    SolrServer client2 = createNewSolrServer(oneInstanceCollection + "2", baseUrl);
-    SolrServer client3 = createNewSolrServer(oneInstanceCollection + "3", baseUrl);
-    SolrServer client4 = createNewSolrServer(oneInstanceCollection + "4", baseUrl);
+    SolrServer client1 = collectionClients.get(0);
+    SolrServer client2 = collectionClients.get(1);
+    SolrServer client3 = collectionClients.get(2);
+    SolrServer client4 = collectionClients.get(3);
     
     waitForRecoveriesToFinish(oneInstanceCollection, getCommonCloudSolrServer().getZkStateReader(), false);
     assertAllActive(oneInstanceCollection, getCommonCloudSolrServer().getZkStateReader());
@@ -933,6 +943,9 @@ private void testANewCollectionInOneInstance() throws Exception {
 //    System.out.println("All Docs:" + allDocs);
     
     assertEquals(3, allDocs);
+    for(SolrServer newCollectionClient:collectionClients) {
+      newCollectionClient.shutdown();
+    }
   }
 
   private void createCollection(String collection,
@@ -984,7 +997,7 @@ public Object call() {
     pending.add(completionService.submit(call));
  
     
-    collectionClients.add(createNewSolrServer(collection, baseUrl));
+    collectionClients.add(createNewSolrServer(collection + num, baseUrl));
   }
 
   private void testMultipleCollections() throws Exception {
@@ -1171,6 +1184,17 @@ public void tearDown() throws Exception {
     if (commondCloudSolrServer != null) {
       commondCloudSolrServer.shutdown();
     }
+    if (otherCollectionClients != null) {
+      for (List<SolrServer> clientList : otherCollectionClients.values()) {
+        for (SolrServer client : clientList) {
+          client.shutdown();
+        }
+      }
+    }
+    otherCollectionClients = null;
+    List<Runnable> tasks = executor.shutdownNow();
+    assertTrue(tasks.isEmpty());
+    
     System.clearProperty("numShards");
     System.clearProperty("zkHost");
     System.clearProperty("solr.xml.persist");
