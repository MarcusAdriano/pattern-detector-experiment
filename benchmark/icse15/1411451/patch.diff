diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/cloud/Overseer.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/cloud/Overseer.java
index 8ef14b1a..d11fabaf 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/cloud/Overseer.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/cloud/Overseer.java
@@ -398,8 +398,11 @@ private ClusterState removeCore(final ClusterState clusterState, ZkNodeProps mes
               if(slice.getReplicasMap().containsKey(coreNodeName)) {
                 Map<String, Replica> newReplicas = slice.getReplicasCopy();
                 newReplicas.remove(coreNodeName);
-                Slice newSlice = new Slice(slice.getName(), newReplicas, slice.getProperties());
+                if (newReplicas.size() != 0) {
+                  Slice newSlice = new Slice(slice.getName(), newReplicas,
+                      slice.getProperties());
                 newSlices.put(slice.getName(), newSlice);
+                }
               } else {
                 newSlices.put(slice.getName(), slice);
               }
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest.java
index ce4f1fa8..76128255 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/BasicDistributedZkTest.java
@@ -338,12 +338,82 @@ public void doTest() throws Exception {
     testCoreUnloadAndLeaders();
     testUnloadLotsOfCores();
     testStopAndStartCoresInOneInstance();
+    testUnloadShardAndCollection();
     // Thread.sleep(10000000000L);
     if (DEBUG) {
       super.printLayout();
     }
   }
 
+  private void testUnloadShardAndCollection() throws Exception{
+    // create one leader and one replica
+    
+    Create createCmd = new Create();
+    createCmd.setCoreName("test_unload_shard_and_collection_1");
+    String collection = "test_unload_shard_and_collection";
+    createCmd.setCollection(collection);
+    String coreDataDir = dataDir.getAbsolutePath() + File.separator
+        + System.currentTimeMillis() + collection + "1";
+    createCmd.setDataDir(coreDataDir);
+    createCmd.setNumShards(2);
+    
+    SolrServer client = clients.get(0);
+    String url1 = getBaseUrl(client);
+    HttpSolrServer server = new HttpSolrServer(url1);
+    
+    server.request(createCmd);
+    
+    createCmd = new Create();
+    createCmd.setCoreName("test_unload_shard_and_collection_2");
+    collection = "test_unload_shard_and_collection";
+    createCmd.setCollection(collection);
+    coreDataDir = dataDir.getAbsolutePath() + File.separator
+        + System.currentTimeMillis() + collection + "2";
+    createCmd.setDataDir(coreDataDir);
+    
+    server.request(createCmd);
+
+    // now unload one of the two
+    Unload unloadCmd = new Unload(false);
+    unloadCmd.setCoreName("test_unload_shard_and_collection_2");
+    server.request(unloadCmd);
+    
+    // there should be only one shard
+    Slice shard2 = solrj.getZkStateReader().getClusterState().getSlice(collection, "shard2");
+    long timeoutAt = System.currentTimeMillis() + 30000;
+    while (shard2 != null) {
+      if (System.currentTimeMillis() > timeoutAt) {
+        printLayout();
+        fail("Still found shard");
+      }
+      
+      Thread.sleep(50);
+      shard2 = solrj.getZkStateReader().getClusterState().getSlice(collection, "shard2");
+    }
+
+    Slice shard1 = solrj.getZkStateReader().getClusterState().getSlice(collection, "shard1");
+    assertNotNull(shard1);
+    assertTrue(solrj.getZkStateReader().getClusterState().getCollections().contains(collection));
+    
+    // now unload one of the other
+    unloadCmd = new Unload(false);
+    unloadCmd.setCoreName("test_unload_shard_and_collection_1");
+    server.request(unloadCmd);
+    
+    //printLayout();
+    // the collection should be gone
+    timeoutAt = System.currentTimeMillis() + 30000;
+    while (solrj.getZkStateReader().getClusterState().getCollections().contains(collection)) {
+      if (System.currentTimeMillis() > timeoutAt) {
+        printLayout();
+        fail("Still found collection");
+      }
+      
+      Thread.sleep(50);
+    }
+    
+  }
+
   /**
    * @throws Exception on any problem
    */
