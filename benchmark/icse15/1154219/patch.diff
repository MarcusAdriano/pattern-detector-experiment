diff --git a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/config/DatabaseDescriptor.java b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
index 09b36673..1ccff520 100644
--- a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
+++ b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
@@ -274,6 +274,10 @@ else if (conf.memtable_flush_writers == null)
                     throw new ConfigurationException("Unknown host in rpc_address " + conf.rpc_address);
                 }
             }
+            else
+            {
+                rpcAddress = FBUtilities.getLocalAddress();
+            }
 
             if (conf.thrift_framed_transport_size_in_mb <= 0)
                 throw new ConfigurationException("thrift_framed_transport_size_in_mb must be positive");
diff --git a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/AbstractCassandraDaemon.java b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/AbstractCassandraDaemon.java
index 5aeea792..203ecc8b 100644
--- a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/AbstractCassandraDaemon.java
+++ b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/AbstractCassandraDaemon.java
@@ -125,12 +125,6 @@ protected void setup() throws IOException
 
         listenPort = DatabaseDescriptor.getRpcPort();
         listenAddr = DatabaseDescriptor.getRpcAddress();
-        /* 
-         * If ThriftAddress was left completely unconfigured, then assume
-         * the same default as ListenAddress
-         */
-        if (listenAddr == null)
-            listenAddr = FBUtilities.getLocalAddress();
 
         Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler()
         {
diff --git a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/StorageService.java b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/StorageService.java
index 2d3ef17f..5f28b284 100644
--- a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/StorageService.java
+++ b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/StorageService.java
@@ -452,9 +452,6 @@ private void joinTokenRing() throws IOException, org.apache.cassandra.config.Con
         Gossiper.instance.start(SystemTable.incrementAndGetGeneration()); // needed for node-ring gathering.
 
         // add rpc listening info
-        if (DatabaseDescriptor.getRpcAddress() == null)
-            Gossiper.instance.addLocalApplicationState(ApplicationState.RPC_ADDRESS, valueFactory.rpcaddress(FBUtilities.getLocalAddress()));
-        else
             Gossiper.instance.addLocalApplicationState(ApplicationState.RPC_ADDRESS, valueFactory.rpcaddress(DatabaseDescriptor.getRpcAddress()));
 
         MessagingService.instance().listen(FBUtilities.getLocalAddress());
