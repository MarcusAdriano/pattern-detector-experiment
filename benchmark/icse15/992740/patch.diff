diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/jdbc/AbstractJDBCDataModel.java b/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/jdbc/AbstractJDBCDataModel.java
index 97f6016a..4de020ab 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/jdbc/AbstractJDBCDataModel.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/jdbc/AbstractJDBCDataModel.java
@@ -317,14 +317,11 @@ public PreferenceArray getPreferencesFromUser(long id) throws TasteException {
       List<Preference> currentPrefs = new ArrayList<Preference>();
       while (rs.next()) {
         long nextUserID = getLongColumn(rs, 1);
-        if ((currentUserID != null) && !currentUserID.equals(nextUserID)) {
-          if (!currentPrefs.isEmpty()) {
+        if ((currentUserID != null) && !currentUserID.equals(nextUserID) && !currentPrefs.isEmpty()) {
             result.put(currentUserID, new GenericUserPreferenceArray(currentPrefs));
             currentPrefs.clear();
           }
-        } else {
           currentPrefs.add(buildPreference(rs));
-        }
         currentUserID = nextUserID;
       }
       if (!currentPrefs.isEmpty()) {
@@ -366,14 +363,11 @@ public PreferenceArray getPreferencesFromUser(long id) throws TasteException {
       FastIDSet currentItemIDs = new FastIDSet(2);
       while (rs.next()) {
         long nextUserID = getLongColumn(rs, 1);
-        if (currentUserIDSet && (currentUserID != nextUserID)) {
-          if (!currentItemIDs.isEmpty()) {
+        if (currentUserIDSet && (currentUserID != nextUserID) && !currentItemIDs.isEmpty()) {
             result.put(currentUserID, currentItemIDs);
             currentItemIDs = new FastIDSet(2);
           }
-        } else {
           currentItemIDs.add(getLongColumn(rs, 2));
-        }
         currentUserID = nextUserID;
         currentUserIDSet = true;
       }
