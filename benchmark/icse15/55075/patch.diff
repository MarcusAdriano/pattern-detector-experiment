diff --git a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/ResourceAdapter.java b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/ResourceAdapter.java
index b3d5449e..f3345c73 100644
--- a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/ResourceAdapter.java
+++ b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/ResourceAdapter.java
@@ -355,13 +355,6 @@ the inheritence (XAConnection need to extend PooledConnection and XAConnect
 	*/
 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
 
-	/**
-	 * Used to identify this interface when finding it with the Monitor.
-     **/
-	public static final String MODULE = 
-        "org.apache.derby.iapi.jdbc.ResourceAdapter";
-
-
 	/**
 		If a run time global transaction exists, the resource adapter will find
 		it and return a capsule of information so that a Connection can be
diff --git a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/reference/Module.java b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/reference/Module.java
index 4a8c3a50..f5493031 100644
--- a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/reference/Module.java
+++ b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/reference/Module.java
@@ -24,6 +24,6 @@
 	String JavaFactory ="org.apache.derby.iapi.services.compiler.JavaFactory";
 	String LockFactory = "org.apache.derby.iapi.services.locks.LockFactory";
 	String PropertyFactory = "org.apache.derby.iapi.services.property.PropertyFactory";
-
+	String ResourceAdapter = "org.apache.derby.iapi.jdbc.ResourceAdapter";
 
 }
diff --git a/incubator/derby/code/trunk/java/engine/org/apache/derby/impl/db/BasicDatabase.java b/incubator/derby/code/trunk/java/engine/org/apache/derby/impl/db/BasicDatabase.java
index dbcbf72f..f8c269b2 100644
--- a/incubator/derby/code/trunk/java/engine/org/apache/derby/impl/db/BasicDatabase.java
+++ b/incubator/derby/code/trunk/java/engine/org/apache/derby/impl/db/BasicDatabase.java
@@ -60,7 +60,6 @@
 import org.apache.derby.iapi.jdbc.AuthenticationService;
 import org.apache.derby.iapi.services.uuid.UUIDFactory;
 import org.apache.derby.catalog.UUID;
-import org.apache.derby.iapi.jdbc.ResourceAdapter;
 
 import java.io.InputStream;
 import java.io.OutputStream;
@@ -777,7 +776,7 @@ protected void bootResourceAdapter(boolean create, Properties startParams) {
 			{
 				resourceAdapter = 
 					Monitor.bootServiceModule(create, this,
-											 ResourceAdapter.MODULE,
+											 org.apache.derby.iapi.reference.Module.ResourceAdapter,
 											 allParams);
 			}
 			catch (StandardException mse)
diff --git a/incubator/derby/code/trunk/java/engine/org/apache/derby/jdbc/Driver169.java b/incubator/derby/code/trunk/java/engine/org/apache/derby/jdbc/Driver169.java
index a4228023..ffb15735 100644
--- a/incubator/derby/code/trunk/java/engine/org/apache/derby/jdbc/Driver169.java
+++ b/incubator/derby/code/trunk/java/engine/org/apache/derby/jdbc/Driver169.java
@@ -28,8 +28,6 @@
 import org.apache.derby.iapi.error.StandardException;
 import org.apache.derby.iapi.services.i18n.MessageService;
 
-import org.apache.derby.iapi.jdbc.BrokeredConnection;
-import org.apache.derby.iapi.jdbc.BrokeredConnectionControl;
 import org.apache.derby.iapi.sql.ResultSet;
 
 import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
@@ -428,9 +426,6 @@ public boolean isActive() {
 	 */
 	public abstract Connection getNewNestedConnection(EmbedConnection conn);
 
-
-	public abstract BrokeredConnection newBrokeredConnection(BrokeredConnectionControl control);
-
 	/*
 	** methods to be overridden by subimplementations wishing to insert
 	** their classes into the mix.
diff --git a/incubator/derby/code/trunk/java/engine/org/apache/derby/jdbc/EmbedPooledConnection.java b/incubator/derby/code/trunk/java/engine/org/apache/derby/jdbc/EmbedPooledConnection.java
index 329a2103..86943721 100644
--- a/incubator/derby/code/trunk/java/engine/org/apache/derby/jdbc/EmbedPooledConnection.java
+++ b/incubator/derby/code/trunk/java/engine/org/apache/derby/jdbc/EmbedPooledConnection.java
@@ -146,7 +146,8 @@ protected final void openRealConnection() throws SQLException {
 	}
 
 	protected final Connection getNewCurrentConnectionHandle() {
-		Connection applicationConnection = currentConnectionHandle =  realConnection.getLocalDriver().newBrokeredConnection(this);
+		Connection applicationConnection = currentConnectionHandle =
+			((org.apache.derby.jdbc.Driver20) (realConnection.getLocalDriver())).newBrokeredConnection(this);
 		realConnection.setApplicationConnection(applicationConnection);
 		return applicationConnection;
 
