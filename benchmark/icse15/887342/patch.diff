diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/utils/FBUtilities.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/utils/FBUtilities.java
index 5a48281c..fc4df9b4 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/utils/FBUtilities.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/utils/FBUtilities.java
@@ -210,7 +210,13 @@ public static String bytesToHex(byte[] bytes)
     {
         StringBuilder sb = new StringBuilder();
         for (byte b : bytes)
-            sb.append(Integer.toHexString(b & 0xff));
+        {
+            int bint = b & 0xff;
+            if (bint <= 0xF)
+                // toHexString does not 0 pad its results.
+                sb.append("0");
+            sb.append(Integer.toHexString(bint));
+        }
         return sb.toString();
     }
 
diff --git a/incubator/cassandra/trunk/test/unit/org/apache/cassandra/utils/FBUtilitiesTest.java b/incubator/cassandra/trunk/test/unit/org/apache/cassandra/utils/FBUtilitiesTest.java
index 36a558d1..47a290f9 100644
--- a/incubator/cassandra/trunk/test/unit/org/apache/cassandra/utils/FBUtilitiesTest.java
+++ b/incubator/cassandra/trunk/test/unit/org/apache/cassandra/utils/FBUtilitiesTest.java
@@ -28,11 +28,14 @@
 	@Test
     public void testHexBytesConversion()
     {
-    	byte[] b = "1000".getBytes();
+        for (int i = Byte.MIN_VALUE; i <= Byte.MAX_VALUE; i++)
+        {
+            byte[] b = new byte[]{ (byte)i };
     	String s = FBUtilities.bytesToHex(b);
     	byte[] c = FBUtilities.hexToBytes(s);
     	assertArrayEquals(b, c);
     }
+    }
 
     @Test
     public void testIntBytesConversions()
