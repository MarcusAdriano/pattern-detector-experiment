diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_9.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_9.java
index e2f7cc32..c670cf49 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_9.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_9.java
@@ -999,9 +999,10 @@ public void testDisposableStatisticsExplicit()
             case PH_CREATE:
             {
                 dis.createAndPopulateTables();
-                // We expect that the maximum number of statistics have been
-                // created here, since we're using an older version of Derby
-                // that contained a bug and lacked the latest optimizations.
+                // The expected number of statistics entries depends on the
+                // version of Derby used to create the database. Some older
+                // versions of Derby contained a bug and lacked optimizations,
+                // causing the number of statistics entries to increase.
                 dis.assertStatsCount(false);
                 break;
             }
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/helpers/DisposableIndexStatistics.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/helpers/DisposableIndexStatistics.java
index 93e2bae4..22fc9128 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/helpers/DisposableIndexStatistics.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/helpers/DisposableIndexStatistics.java
@@ -218,11 +218,11 @@ public void assertStatsCount(boolean disposedOf)
             expected -= getNumDisposableStats();
         } else if (!hasDerby5681Bug(oldVersion)) {
             // Here we correct for the orphaned statistics entry, but not for
-            // entires that are considered extraneous by newer releases (for
+            // entries that are considered extraneous by newer releases (for
             // instance statistics for single column unique indexes).
             expected--;
         }
-        ArrayList entries = new ArrayList();
+        ArrayList entries = new ArrayList(); // used for reporting only
         int found = getAllRelevantStats(entries);
         if (found != expected) {
             Assert.assertEquals(
