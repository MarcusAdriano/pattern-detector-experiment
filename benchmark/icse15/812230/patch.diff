diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/SSTableReader.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/SSTableReader.java
index efc0a471..ee4babdc 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/SSTableReader.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/SSTableReader.java
@@ -23,6 +23,8 @@
 
 import org.apache.log4j.Logger;
 
+import org.apache.commons.lang.StringUtils;
+
 import org.apache.cassandra.dht.IPartitioner;
 import org.apache.cassandra.utils.BloomFilter;
 import org.apache.cassandra.utils.FileUtils;
@@ -108,7 +110,7 @@ public static synchronized SSTableReader open(String dataFileName, IPartitioner
     public static SSTableReader get(String dataFileName)
     {
         SSTableReader sstable = openedFiles.get(dataFileName);
-        assert sstable != null;
+        assert sstable != null : "No sstable opened for " + dataFileName + ": " + openedFiles;
         return sstable;
     }
 
@@ -123,6 +125,7 @@ public static SSTableReader get(String dataFileName)
     private SSTableReader(String filename, IPartitioner partitioner)
     {
         super(filename, partitioner);
+        openedFiles.put(filename, this);
     }
 
     public List<KeyPosition> getIndexPositions()
@@ -353,4 +356,10 @@ public void remove(String filename) throws IOException
     {
         map.remove(new File(filename).getCanonicalPath());
     }
+
+    @Override
+    public String toString()
+    {
+        return "FileSSTableMap {" + StringUtils.join(map.keySet(), ", ") + "}";
+    }
 }
