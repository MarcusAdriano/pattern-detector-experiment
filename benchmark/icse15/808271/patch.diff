diff --git a/incubator/cassandra/trunk/test/unit/org/apache/cassandra/db/BootstrapTest.java b/incubator/cassandra/trunk/test/unit/org/apache/cassandra/db/BootstrapTest.java
index ff17e4a1..4747a41e 100644
--- a/incubator/cassandra/trunk/test/unit/org/apache/cassandra/db/BootstrapTest.java
+++ b/incubator/cassandra/trunk/test/unit/org/apache/cassandra/db/BootstrapTest.java
@@ -29,10 +29,7 @@
 import java.util.concurrent.ExecutionException;
 
 import org.apache.cassandra.db.filter.QueryPath;
-import org.apache.cassandra.dht.Range;
-import org.apache.cassandra.dht.StringToken;
-import org.apache.cassandra.dht.BytesToken;
-import org.apache.cassandra.dht.CollatingOrderPreservingPartitioner;
+import org.apache.cassandra.dht.*;
 import org.apache.cassandra.net.EndPoint;
 import org.apache.cassandra.net.io.StreamContextManager;
 import org.junit.Test;
@@ -59,7 +56,8 @@ private void testAntiCompaction(String columnFamilyName, int insertsPerTable) th
         store.forceBlockingFlush();
         List<String> fileList = new ArrayList<String>();
         List<Range> ranges  = new ArrayList<Range>();
-        Range r = new Range(CollatingOrderPreservingPartitioner.MINIMUM, new BytesToken("zzzzzz".getBytes()));
+        IPartitioner partitioner = new CollatingOrderPreservingPartitioner();
+        Range r = new Range(partitioner.getToken("0"), partitioner.getToken("zzzzzzz"));
         ranges.add(r);
 
         boolean result = store.doAntiCompaction(ranges, new EndPoint("127.0.0.1", 9150), fileList);
