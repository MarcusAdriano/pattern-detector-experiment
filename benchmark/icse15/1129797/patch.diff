diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/util/InterruptStatus.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/util/InterruptStatus.java
index 90bd8d87..97787476 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/util/InterruptStatus.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/util/InterruptStatus.java
@@ -273,8 +273,8 @@ public static void throwIf(LanguageConnectionContext lcc)
 
         if (e != null) {
             lcc.setInterruptedException(null);
-            // Set thread's interrupt status flag back on.
-            Thread.currentThread().interrupt();
+            // Set thread's interrupt status flag back on:
+            // see TransactionResourceImpl#wrapInSQLException
 
             throw e;
         }
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/TransactionResourceImpl.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/TransactionResourceImpl.java
index ddf26dea..7f4d0b12 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/TransactionResourceImpl.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/TransactionResourceImpl.java
@@ -390,6 +390,10 @@ public static SQLException wrapInSQLException(Throwable thrownException) {
 
 			StandardException se = (StandardException) thrownException;
 
+            if (SQLState.CONN_INTERRUPT.equals(se.getSQLState())) {
+                Thread.currentThread().interrupt();
+            }
+
             if (se.getCause() == null) {
                 // se is a single, unchained exception. Just convert it to an
                 // SQLException.
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/locks/ConcurrentLockSet.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/locks/ConcurrentLockSet.java
index cca1b624..229dd85b 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/locks/ConcurrentLockSet.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/locks/ConcurrentLockSet.java
@@ -601,7 +601,6 @@ public Lock lockObject(CompatibilitySpace compatibilitySpace, Lockable ref,
                             if (wakeupReason ==
                                     Constants.WAITING_LOCK_INTERRUPTED) {
 
-                                Thread.currentThread().interrupt();
                                 throw StandardException.
                                     newException(SQLState.CONN_INTERRUPT);
 
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/locks/LockSet.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/locks/LockSet.java
index 6d390529..0b0831d7 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/locks/LockSet.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/locks/LockSet.java
@@ -413,8 +413,6 @@ public Lock lockObject(CompatibilitySpace compatibilitySpace, Lockable ref,
                             if (wakeupReason ==
                                     Constants.WAITING_LOCK_INTERRUPTED) {
 
-                                Thread.currentThread().interrupt();
-
                                 throw StandardException.
                                     newException(SQLState.CONN_INTERRUPT);
 
