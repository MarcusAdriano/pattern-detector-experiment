diff --git a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
index c5696ca1..2e332e55 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
@@ -331,7 +331,7 @@ public synchronized void initClient() throws IOException
 
     public synchronized void initServer() throws IOException
     {
-        logger_.info("Cassandra version: " + FBUtilities.getCassandraVersionString());
+        logger_.info("Cassandra version: " + FBUtilities.getReleaseVersionString());
         logger_.info("Thrift API version: " + Constants.VERSION);
 
         if (initialized)
@@ -995,13 +995,18 @@ public Token getLocalToken()
         return storageMetadata_.getToken();
     }
 
-    /* This methods belong to the MBean interface */
+    /* These methods belong to the MBean interface */
 
     public String getToken()
     {
         return getLocalToken().toString();
     }
 
+    public String getReleaseVersion()
+    {
+        return FBUtilities.getReleaseVersionString();
+    }
+
     public Set<String> getLeavingNodes()
     {
         return stringify(tokenMetadata_.getLeavingEndpoints());
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageServiceMBean.java b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageServiceMBean.java
index 4558772a..ad941668 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageServiceMBean.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageServiceMBean.java
@@ -72,6 +72,12 @@
      */
     public String getToken();
 
+    /**
+     * Fetch a string representation of the Cassandra version.
+     * @return A string representation of the Cassandra version.
+     */
+    public String getReleaseVersion();
+
     /**
      * Retrieve a map of range to end points that describe the ring topology
      * of a Cassandra cluster.
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeCmd.java b/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeCmd.java
index 250f7f15..5701eda9 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeCmd.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeCmd.java
@@ -75,7 +75,7 @@ private static void printUsage()
     {
         HelpFormatter hf = new HelpFormatter();
         String header = String.format(
-                "%nAvailable commands: ring, info, cleanup, compact, cfstats, snapshot [snapshotname], clearsnapshot, " +
+                "%nAvailable commands: ring, info, version, cleanup, compact, cfstats, snapshot [snapshotname], clearsnapshot, " +
                 "tpstats, flush, drain, repair, decommission, move, loadbalance, removetoken, " +
                 "setcachecapacity <keyspace> <cfname> <keycachecapacity> <rowcachecapacity>, " +
                 "getcompactionthreshold, setcompactionthreshold [minthreshold] ([maxthreshold]), " +
@@ -189,6 +189,11 @@ public void printInfo(PrintStream outs)
         outs.println(String.format("%-17s: %.2f / %.2f", "Heap Memory (MB)", memUsed, memMax));
     }
 
+    public void printReleaseVersion(PrintStream outs)
+    {
+        outs.println("ReleaseVersion: " + probe.getReleaseVersion());
+    }
+
     public void printStreamInfo(final InetAddress addr, PrintStream outs)
     {
         outs.println(String.format("Mode: %s", probe.getOperationMode()));
@@ -556,6 +561,10 @@ else if (cmdName.equals("streams"))
             String otherHost = arguments.length > 1 ? arguments[1] : null;
             nodeCmd.printStreamInfo(otherHost == null ? null : InetAddress.getByName(otherHost), System.out);
         }
+        else if (cmdName.equals("version"))
+        {
+            nodeCmd.printReleaseVersion(System.out);
+        }
         else
         {
             System.err.println("Unrecognized command: " + cmdName + ".");
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeProbe.java b/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeProbe.java
index a35b58bd..d11120d3 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeProbe.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeProbe.java
@@ -238,6 +238,11 @@ public String getLoadString()
         return ssProxy.getLoadString();
     }
     
+    public String getReleaseVersion()
+    {
+        return ssProxy.getReleaseVersion();
+    }
+
     public int getCurrentGenerationNumber()
     {
         return ssProxy.getCurrentGenerationNumber();
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/utils/FBUtilities.java b/cassandra/trunk/src/java/org/apache/cassandra/utils/FBUtilities.java
index 4d5057ac..855f9e5b 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/utils/FBUtilities.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/utils/FBUtilities.java
@@ -25,7 +25,6 @@
 import java.net.UnknownHostException;
 import java.nio.ByteBuffer;
 import java.nio.charset.CharacterCodingException;
-import java.nio.charset.CharsetDecoder;
 import java.security.MessageDigest;
 import java.util.*;
 import java.util.concurrent.ExecutionException;
@@ -508,7 +507,7 @@ public static String resourceToFile(String filename) throws ConfigurationExcepti
         return scpurl.getFile();
     }
 
-    public static String getCassandraVersionString()
+    public static String getReleaseVersionString()
     {
         try
         {
