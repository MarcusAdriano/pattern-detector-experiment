diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/config/DatabaseDescriptor.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
index f117f3f2..ab2af953 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
@@ -588,8 +588,6 @@ private static void readTablesFromXml() throws ConfigurationException
                 {
                     throw new ConfigurationException("'system' is a reserved table name for Cassandra internals");
                 }
-                if (!ksName.matches("\\w+"))
-                    throw new ConfigurationException("keyspace name contains invalid char");
 
                 /* See which replica placement strategy to use */
                 String replicaPlacementStrategyClassName = xmlUtils.getNodeValue("/Storage/Keyspaces/Keyspace[@Name='" + ksName + "']/ReplicaPlacementStrategy");
@@ -671,10 +669,6 @@ private static void readTablesFromXml() throws ConfigurationException
                     {
                         throw new ConfigurationException("ColumnFamily name attribute is required");
                     }
-                    if (!cfName.matches("\\w+"))
-                    {
-                        throw new ConfigurationException("ColumnFamily name contains invalid characters.");
-                    }
                     String xqlCF = xqlTable + "ColumnFamily[@Name='" + cfName + "']/";
 
                     // Parse out the column type
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInitiateVerbHandler.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInitiateVerbHandler.java
index c3bdc122..0e8f7782 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInitiateVerbHandler.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInitiateVerbHandler.java
@@ -28,6 +28,7 @@
 import java.util.Map;
 import java.util.Set;
 
+import org.apache.commons.lang.StringUtils;
 import org.apache.log4j.Logger;
 
 import org.apache.cassandra.config.DatabaseDescriptor;
@@ -145,10 +146,17 @@ public String getNewFileNameFromOldContextAndNames(Map<String, String> fileNames
         {
             String tableName;
             String[] pieces = FBUtilities.strip(distinctEntry, "-");
+
+            if(pieces.length > 2) {
+                tableName = StringUtils.join(pieces, "-", 0, pieces.length -2);
+            }
+            else {
             tableName = pieces[0];
+            }
+
             Table table = Table.open( tableName );
 
-            ColumnFamilyStore cfStore = table.getColumnFamilyStore(pieces[1]);
+            ColumnFamilyStore cfStore = table.getColumnFamilyStore(pieces[pieces.length -2]);
             if (logger.isDebugEnabled())
               logger.debug("Generating file name for " + distinctEntry + " ...");
             fileNames.put(distinctEntry, cfStore.getTempSSTableFileName());
