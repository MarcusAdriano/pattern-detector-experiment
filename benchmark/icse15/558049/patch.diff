diff --git a/db/derby/code/branches/10.3/java/engine/org/apache/derby/iapi/types/CollatorSQLVarchar.java b/db/derby/code/branches/10.3/java/engine/org/apache/derby/iapi/types/CollatorSQLVarchar.java
index c3ff2706..699d18d5 100644
--- a/db/derby/code/branches/10.3/java/engine/org/apache/derby/iapi/types/CollatorSQLVarchar.java
+++ b/db/derby/code/branches/10.3/java/engine/org/apache/derby/iapi/types/CollatorSQLVarchar.java
@@ -120,6 +120,13 @@ public DataValueDescriptor getNewNull()
 		return result;
 	}
 
+	protected StringDataValue getNewVarchar() throws StandardException
+	{
+		CollatorSQLVarchar result = new CollatorSQLVarchar(
+				holderForCollationSensitiveInfo.getCollatorForCollation());
+		return result;
+	}
+
 	/**
 	 * We do not anticipate this method on collation sensitive DVD to be
 	 * ever called in Derby 10.3 In future, when Derby will start supporting
diff --git a/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java b/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java
index 19c8f1da..a2992bad 100644
--- a/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java
+++ b/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java
@@ -967,6 +967,15 @@ private void commonTestingForTerritoryBasedDB(Statement s) throws SQLException{
     //incorrect exception about collation mismatch for the LIKE clause
     s.execute("CREATE TABLE DERBY_2955 (EMPNAME CHAR(20), CONSTRAINT " +
     		" STAFF9_EMPNAME CHECK (EMPNAME NOT LIKE 'T%'))");
+    
+    //DERBY-2960
+    //Following group by was failing earlier because we were generating
+    //SQLVarchar rather than CollatorSQLVarchar in territory based db 
+    s.execute("CREATE TABLE DERBY_2960 (C CHAR(10), V VARCHAR(50))");
+    s.execute("INSERT INTO DERBY_2960 VALUES ('duplicate', 'is duplicated')");
+    rs = s.executeQuery("SELECT SUBSTR(c||v, 1, 4), COUNT(*) FROM DERBY_2960" +
+    		" GROUP BY SUBSTR(c||v, 1, 4)");
+    JDBC.assertFullResultSet(rs,new String[][] {{"dupl","1"}});
 }
 
 private void setUpTable(Statement s) throws SQLException {
