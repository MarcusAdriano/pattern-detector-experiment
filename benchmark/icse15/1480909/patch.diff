diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CallStatementNode.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CallStatementNode.java
index e98b59ec..18fdf17f 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CallStatementNode.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CallStatementNode.java
@@ -122,15 +122,24 @@ public void bindStatement() throws StandardException
 		if (SanityManager.DEBUG)
 			SanityManager.ASSERT((dd != null), "Failed to get data dictionary");
 
+        SubqueryList subqueries = (SubqueryList) getNodeFactory().getNode(
+                C_NodeTypes.SUBQUERY_LIST, getContextManager());
+
 		getCompilerContext().pushCurrentPrivType(getPrivType());
 		methodCall = (JavaToSQLValueNode) methodCall.bindExpression(
 							(FromList) getNodeFactory().getNode(
 								C_NodeTypes.FROM_LIST,
 								getNodeFactory().doJoinOrderOptimization(),
 								getContextManager()), 
-							null,
+                            subqueries,
 							null);
 
+        // Don't allow sub-queries in CALL statements.
+        if (subqueries.size() != 0) {
+            throw StandardException.newException(
+                    SQLState.LANG_INVALID_CALL_STATEMENT);
+        }
+
 		// Disallow creation of BEFORE triggers which contain calls to 
 		// procedures that modify SQL data. 
   		checkReliability();
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangProcedureTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangProcedureTest.java
index c61e7d5a..9fbef5cf 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangProcedureTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangProcedureTest.java
@@ -48,6 +48,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 public class LangProcedureTest extends BaseJDBCTestCase {
 
     private final static String LANG_STRING_TRUNCATION = "22001";
+    private final static String LANG_INVALID_CALL_STATEMENT = "42X74";
     private final String thisClassName = getClass().getName();
 
     public LangProcedureTest(String name) {
@@ -202,6 +203,10 @@ public void testCreateRoutineErrors() throws SQLException {
             "42X15", s,
             "call syscs_util.syscs_set_database_property(\"foo\", \"bar\")");
 
+        // Not so long ago (DERBY-6212) this caused a NullPointerException.
+        assertCompileError(LANG_INVALID_CALL_STATEMENT,
+          "call syscs_util.syscs_set_database_property('foo', (values 'bar'))");
+
         s.close();
     }
 
