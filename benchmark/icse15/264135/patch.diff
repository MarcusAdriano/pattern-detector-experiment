diff --git a/db/derby/code/branches/10.1/java/tools/org/apache/derby/iapi/tools/i18n/LocalizedResource.java b/db/derby/code/branches/10.1/java/tools/org/apache/derby/iapi/tools/i18n/LocalizedResource.java
index f2bbbf7f..1a68c617 100644
--- a/db/derby/code/branches/10.1/java/tools/org/apache/derby/iapi/tools/i18n/LocalizedResource.java
+++ b/db/derby/code/branches/10.1/java/tools/org/apache/derby/iapi/tools/i18n/LocalizedResource.java
@@ -44,6 +44,19 @@
 
 public final class LocalizedResource  implements java.security.PrivilegedAction {
 
+	private static boolean HAVE_BIG_DECIMAL;
+	
+	{
+		boolean haveBigDecimal;
+		try {
+			Class.forName("java.math.BigDecimal");
+			haveBigDecimal = true;
+		} catch (Throwable t) {
+			haveBigDecimal = false;
+		}
+		HAVE_BIG_DECIMAL = haveBigDecimal;
+	}
+	
 	private ResourceBundle res;
 	private Locale locale;
 	private String encode;
@@ -305,7 +318,7 @@ else if (type == Types.REAL || 	type == Types.FLOAT ||
 					type == Types.DOUBLE ) {
 				return getNumberAsString(rs.getDouble(columnNumber));
 			}
-			else if (type == Types.NUMERIC || type == Types.DECIMAL ) {
+			else if (HAVE_BIG_DECIMAL && (type == Types.NUMERIC || type == Types.DECIMAL)) {
 				return	getNumberAsString(rs.getBigDecimal(columnNumber,
 											rsm.getScale(columnNumber)));
 			}
