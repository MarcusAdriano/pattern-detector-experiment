diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java
index 0a445190..8279fea7 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java
@@ -1470,8 +1470,8 @@ protected void  checkAllConsistency(
      * directory, even if one of the delete operations fails.
      * <p>
      * After having tried to delete all files once, any remaining files will be
-     * attempted deleted again after a pause. This is repeated twice, resulting
-     * in three failed delete attempts for any single file before the method
+     * attempted deleted again after a pause. This is repeated, resulting
+     * in multiple failed delete attempts for any single file before the method
      * gives up and raises a failure.
      * <p>
      * The approach above will mask any slowness involved in releasing file
@@ -1485,7 +1485,12 @@ protected void  checkAllConsistency(
     public static void assertDirectoryDeleted(File dir) {
         File[] fl = null;
         int attempts = 0;
-        while (attempts < 3) {
+        while (attempts < 4) {
+            try {
+                Thread.sleep(attempts * 2000);
+            } catch (InterruptedException ie) {
+                // Ignore
+            }
             try {
                 fl = PrivilegedFileOpsForTests.persistentRecursiveDelete(dir);
                 attempts++;
@@ -1505,11 +1510,6 @@ public static void assertDirectoryDeleted(File dir) {
                     sb.append(' ').append(i).append('=').append(fl[i]);
                 }
                 System.out.println(sb);
-                try {
-                    Thread.sleep(attempts * 1000);
-                } catch (InterruptedException ie) {
-                    // Ignore
-                }
             }
         }
 
