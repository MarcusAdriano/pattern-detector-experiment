diff --git a/aries/trunk/samples/blueprint/helloworld/helloworld-itests/src/test/java/org/apache/aries/samples/blueprint/helloworld/itests/HelloworldSampleTest.java b/aries/trunk/samples/blueprint/helloworld/helloworld-itests/src/test/java/org/apache/aries/samples/blueprint/helloworld/itests/HelloworldSampleTest.java
index 250551e3..5700f492 100644
--- a/aries/trunk/samples/blueprint/helloworld/helloworld-itests/src/test/java/org/apache/aries/samples/blueprint/helloworld/itests/HelloworldSampleTest.java
+++ b/aries/trunk/samples/blueprint/helloworld/helloworld-itests/src/test/java/org/apache/aries/samples/blueprint/helloworld/itests/HelloworldSampleTest.java
@@ -20,16 +20,12 @@
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertTrue;
 import static org.ops4j.pax.exam.CoreOptions.bootDelegationPackages;
 import static org.ops4j.pax.exam.CoreOptions.equinox;
 import static org.ops4j.pax.exam.CoreOptions.options;
 import static org.ops4j.pax.exam.CoreOptions.systemProperty;
 import static org.ops4j.pax.exam.container.def.PaxRunnerOptions.vmOption;
 
-import java.net.HttpURLConnection;
-import java.net.URL;
-
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.ops4j.pax.exam.Option;
@@ -44,17 +40,31 @@ public void test() throws Exception {
 		/* Check that the HelloWorld Sample bundles are present an started */
         Bundle bapi = getInstalledBundle("org.apache.aries.samples.blueprint.helloworld.api");
         assertNotNull(bapi);
+        
+        failInBundleNotActiveInFiveSeconds(bapi);
 		assertEquals(Bundle.ACTIVE, bapi.getState());
 
         Bundle bcli = getInstalledBundle("org.apache.aries.samples.blueprint.helloworld.client");
         assertNotNull(bcli);
-		assertEquals(Bundle.ACTIVE, bcli.getState());
+        failInBundleNotActiveInFiveSeconds(bapi);
 
         Bundle bser = getInstalledBundle("org.apache.aries.samples.blueprint.helloworld.server");
         assertNotNull(bser);
-		assertEquals(Bundle.ACTIVE, bser.getState());
+        failInBundleNotActiveInFiveSeconds(bapi);
+    }
 
+    private void failInBundleNotActiveInFiveSeconds(Bundle bapi)
+    {
+        for (int i = 0; i < 5 && Bundle.ACTIVE != bapi.getState(); i++) {
+            try {
+              Thread.sleep(1000);
+            } catch (InterruptedException e) {
+              // TODO Auto-generated catch block
+              e.printStackTrace();
+            }
+        }
 
+        assertEquals("The bundle " + bapi.getSymbolicName() + " " + bapi.getVersion() + " is not active", Bundle.ACTIVE, bapi.getState());
     }
 
     @org.ops4j.pax.exam.junit.Configuration
