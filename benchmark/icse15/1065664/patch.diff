diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/gms/Gossiper.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/gms/Gossiper.java
index 7aab7535..16ed53db 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/gms/Gossiper.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/gms/Gossiper.java
@@ -26,6 +26,7 @@
 import java.util.Map.Entry;
 import java.util.concurrent.*;
 
+import org.cliffc.high_scale_lib.NonBlockingHashMap;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -142,6 +143,10 @@ public int compare(InetAddress addr1,  InetAddress addr2)
      * gossip gets propagated to all nodes */
     Map<InetAddress, Long> justRemovedEndpoints_ = new ConcurrentHashMap<InetAddress, Long>();
 
+    // protocol versions of the other nodes in the cluster
+    private final ConcurrentMap<InetAddress, Integer> versions = new NonBlockingHashMap<InetAddress, Integer>();
+    
+
     private Gossiper()
     {
         // 3 days
@@ -170,6 +175,20 @@ public void unregister(IEndpointStateChangeSubscriber subscriber)
         subscribers_.remove(subscriber);
     }
 
+    public void setVersion(InetAddress address, int version)
+    {
+        Integer old = versions.put(address, version);
+        EndpointState state = endpointStateMap_.get(address);
+        if (state == null)
+            addSavedEndpoint(address);
+    }
+    
+    public Integer getVersion(InetAddress address)
+    {
+        return versions.get(address);
+    }
+    
+
     public Set<InetAddress> getLiveMembers()
     {
         Set<InetAddress> liveMbrs = new HashSet<InetAddress>(liveEndpoints_);
diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/net/IncomingTcpConnection.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/net/IncomingTcpConnection.java
index d148fda4..89c51381 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/net/IncomingTcpConnection.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/net/IncomingTcpConnection.java
@@ -24,6 +24,7 @@
 import java.io.*;
 import java.net.Socket;
 
+import org.apache.cassandra.gms.Gossiper;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -52,6 +53,7 @@ public void run()
     {
         DataInputStream input;
         boolean isStream;
+        int version;
         try
         {
             // determine the connection type to decide whether to buffer
@@ -62,6 +64,8 @@ public void run()
             if (!isStream)
                 // we should buffer
                 input = new DataInputStream(new BufferedInputStream(socket.getInputStream(), 4096));
+            version = MessagingService.getBits(header, 15, 8);
+            Gossiper.instance.setVersion(socket.getInetAddress(), version);
         }
         catch (IOException e)
         {
@@ -74,6 +78,12 @@ public void run()
             {
                 if (isStream)
                 {
+                    if (version > MessagingService.version_)
+                    {
+                        logger.error("Received untranslated stream from newer protcol version. Terminating connection!");
+                        close();
+                        return;
+                    }
                     int size = input.readInt();
                     byte[] headerBytes = new byte[size];
                     input.readFully(headerBytes);
@@ -87,12 +97,18 @@ public void run()
                     byte[] contentBytes = new byte[size];
                     input.readFully(contentBytes);
                     
+                    if (version > MessagingService.version_)
+                        logger.info("Received connection from newer protocol version. Ignorning message.");
+                    else
+                    {
                     Message message = Message.serializer().deserialize(new DataInputStream(new ByteArrayInputStream(contentBytes)));
                     MessagingService.instance().receive(message);
                 }
+                }
                 // prepare to read the next message
                 MessagingService.validateMagic(input.readInt());
                 int header = input.readInt();
+                version = MessagingService.getBits(header, 15, 8);
                 assert isStream == (MessagingService.getBits(header, 3, 1) == 1) : "Connections cannot change type: " + isStream;
             }
             catch (EOFException e)
diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/net/MessagingService.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/net/MessagingService.java
index dc5d0f84..ae725741 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/net/MessagingService.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/net/MessagingService.java
@@ -61,7 +61,7 @@
 
 public final class MessagingService implements MessagingServiceMBean
 {
-    private static final int version_ = 1;
+    public static final int version_ = 1;
     //TODO: make this parameter dynamic somehow.  Not sure if config is appropriate.
     private SerializerType serializerType_ = SerializerType.BINARY;
 
