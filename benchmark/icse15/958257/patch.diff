diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/locks/ConcurrentLockSet.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/locks/ConcurrentLockSet.java
index 62bef27b..721c2f68 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/locks/ConcurrentLockSet.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/locks/ConcurrentLockSet.java
@@ -468,6 +468,10 @@ public Lock lockObject(CompatibilitySpace compatibilitySpace, Lockable ref,
                     try {
                         wakeupReason = waitingLock.waitForGrant(actualTimeout);
                     } catch(StandardException e) {
+                        // DERBY-4711: If waitForGrant() fails, we need to
+                        // remove ourselves from the queue so that those
+                        // behind us in the queue don't get stuck waiting for
+                        // us.
                         nextWaitingLock = control.getNextWaiter(waitingLock, true, this);
                         throw e;
                     }
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/locks/LockSet.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/locks/LockSet.java
index 526ac825..cc50c73e 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/locks/LockSet.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/locks/LockSet.java
@@ -281,6 +281,10 @@ public Lock lockObject(CompatibilitySpace compatibilitySpace, Lockable ref,
                     try {
                         wakeupReason = waitingLock.waitForGrant(actualTimeout);
                     } catch(StandardException e) {
+                        // DERBY-4711: If waitForGrant() fails, we need to
+                        // remove ourselves from the queue so that those
+                        // behind us in the queue don't get stuck waiting for
+                        // us.
                         nextWaitingLock = control.getNextWaiter(waitingLock, true, this);
                         throw e;
                     }
