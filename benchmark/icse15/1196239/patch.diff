diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/util/CharsRef.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/util/CharsRef.java
index 811ec7d4..02a03a04 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/util/CharsRef.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/util/CharsRef.java
@@ -189,18 +189,22 @@ public void grow(int newLength) {
    * Copies the given array into this CharsRef starting at offset 0
    */
   public void copy(char[] otherChars, int otherOffset, int otherLength) {
+    grow(otherLength);
+    System.arraycopy(otherChars, otherOffset, this.chars, 0,
+        otherLength);
     this.offset = 0;
-    append(otherChars, otherOffset, otherLength);
+    this.length = otherLength;
   }
 
   /**
-   * Appends the given array to this CharsRef starting at the current offset
+   * Appends the given array to this CharsRef
    */
   public void append(char[] otherChars, int otherOffset, int otherLength) {
-    grow(this.offset + otherLength);
-    System.arraycopy(otherChars, otherOffset, this.chars, this.offset,
+    final int newLength = length + otherLength;
+    grow(this.offset + newLength);
+    System.arraycopy(otherChars, otherOffset, this.chars, this.offset+length,
         otherLength);
-    this.length = otherLength;
+    this.length += otherLength;
   }
 
   @Override
diff --git a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/util/TestCharsRef.java b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/util/TestCharsRef.java
index 18520283..84b968d2 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/util/TestCharsRef.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/util/TestCharsRef.java
@@ -38,4 +38,33 @@ public void testUTF16InUTF8Order() {
       assertEquals(utf8[i].utf8ToString(), utf16[i].toString());
     }
   }
+  
+  public void testAppend() {
+    CharsRef ref = new CharsRef();
+    StringBuilder builder = new StringBuilder();
+    int numStrings = atLeast(10);
+    for (int i = 0; i < numStrings; i++) {
+      char[] charArray = _TestUtil.randomRealisticUnicodeString(random, 1, 100).toCharArray();
+      int offset = random.nextInt(charArray.length);
+      int length = charArray.length - offset;
+      builder.append(charArray, offset, length);
+      ref.append(charArray, offset, length);  
+    }
+    
+    assertEquals(builder.toString(), ref.toString());
+  }
+  
+  public void testCopy() {
+    int numIters = atLeast(10);
+    for (int i = 0; i < numIters; i++) {
+      CharsRef ref = new CharsRef();
+      char[] charArray = _TestUtil.randomRealisticUnicodeString(random, 1, 100).toCharArray();
+      int offset = random.nextInt(charArray.length);
+      int length = charArray.length - offset;
+      String str = new String(charArray, offset, length);
+      ref.copy(charArray, offset, length);
+      assertEquals(str, ref.toString());  
+    }
+    
+  }
 }
