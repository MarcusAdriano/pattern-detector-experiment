diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java
index f0549d38..49b4b2d8 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java
@@ -54,17 +54,17 @@ public void setUp()
         con.commit();
     }
     
-    public void tearDown() 
+    public void tearDown() throws Exception 
     {
         try {
             con.rollback();
             Statement dropStatement = con.createStatement();
             dropStatement.execute("drop table t1");
-            con.commit();
-            con.close();
+            dropStatement.close();
         } catch (SQLException e) {
             printStackTrace(e); // Want to propagate the real exception.
         }
+        super.tearDown();
     }
     
     /**
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/HoldabilityTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/HoldabilityTest.java
index e08abbd2..d74ec5f7 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/HoldabilityTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/HoldabilityTest.java
@@ -69,18 +69,19 @@ public void setUp()
     
     /**
      * Drop the data model, and close the connection
+     * @throws Exception 
      */
-    public void tearDown() 
+    public void tearDown() throws Exception 
     {
         try {            
             con.rollback();
             Statement dropStatement = con.createStatement();
             dropStatement.execute("drop table t1");
-            con.commit();
-            con.close();
+            dropStatement.close();
         } catch (SQLException e) {
             printStackTrace(e); // Want to propagate the real exception.
         }
+        super.tearDown();
     }
     
     /**
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURBaseTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURBaseTest.java
index e91a270c..17868541 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURBaseTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURBaseTest.java
@@ -19,6 +19,8 @@
  */
 package org.apache.derbyTesting.functionTests.tests.jdbcapi;
 import org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase;
+import org.apache.derbyTesting.functionTests.util.JDBC;
+
 import junit.framework.*;
 import java.sql.*;
 
@@ -72,12 +74,8 @@ public void setUp() throws  Exception {
      */
     public void tearDown() throws Exception {
         println("TearDown");
-        try { 
-            con.rollback();
-            con.close();
-        } catch (SQLException e) {
-            printStackTrace(e);
-        }      
+       JDBC.cleanup(con);
+        con = null;
     }
     
     /**
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURDataModelSetup.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURDataModelSetup.java
index c5864f5a..499b7b78 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURDataModelSetup.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURDataModelSetup.java
@@ -102,6 +102,8 @@ public static void createDataModel(SURDataModel model, Connection con,
             ps.addBatch();
         }
         ps.executeBatch();
+        ps.close();
+        statement.close();
         con.commit();
     }
     
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ScrollResultSetTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ScrollResultSetTest.java
index d32a43d5..4ee96141 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ScrollResultSetTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ScrollResultSetTest.java
@@ -76,6 +76,7 @@ public void setUp() throws  Exception {
         stmt.execute(createTableWithPK);
         
         stmt.execute(insertData);
+        stmt.close();
     }
     
     /**
@@ -83,13 +84,16 @@ public void setUp() throws  Exception {
      */
     public void tearDown() throws Exception {
         println("TearDown");
+        Statement s = con.createStatement();
         try { 
-            con.createStatement().executeUpdate("DROP TABLE tableWithPK");
-            con.commit();
-            con.close();
+            
+            s.executeUpdate("DROP TABLE tableWithPK");
         } catch (SQLException e) {
             printStackTrace(e);
         }      
+        s.close();
+        JDBC.cleanup(con);
+        con = null;
     }
     
     /**
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/URCoveringIndexTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/URCoveringIndexTest.java
index ed4cb098..3560865d 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/URCoveringIndexTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/URCoveringIndexTest.java
@@ -18,6 +18,7 @@
  * language governing permissions and limitations under the License.
  */
 package org.apache.derbyTesting.functionTests.tests.jdbcapi;
+import org.apache.derbyTesting.functionTests.util.JDBC;
 import org.apache.derbyTesting.functionTests.util.TestUtil;
 import org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase;
 import junit.framework.*;
@@ -53,6 +54,8 @@ public void setUp() throws  Exception {
         stmt.execute(createTableWithPK);
         
         stmt.execute(insertData);
+        
+        stmt.close();
     }
     
     /**
@@ -60,12 +63,8 @@ public void setUp() throws  Exception {
      */
     public void tearDown() throws Exception {
         println("TearDown");
-        try { 
-            con.rollback();
-            con.close();
-        } catch (SQLException e) {
-            printStackTrace(e);
-        }      
+        JDBC.cleanup(con);
+        con = null;
     }
     
     private void testUpdateUpdatedTupleWithCoveringIndex(
