diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/SecurityManagerSetup.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/SecurityManagerSetup.java
index 4b4f5cc9..f4685890 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/SecurityManagerSetup.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/SecurityManagerSetup.java
@@ -38,6 +38,17 @@
  */
 public final class SecurityManagerSetup extends TestSetup {
 	
+    /**
+     * Does the JVM support Subjects for
+     * authorization through Java security manager.
+     * J2ME/CDC/Foundation 1.1 does not support Subjects.
+     */
+    public static final boolean JVM_HAS_SUBJECT_AUTHORIZATION;
+    static {
+        JVM_HAS_SUBJECT_AUTHORIZATION = JDBC.haveClass("javax.security.auth.Subject");
+    }
+    
+	
 	private static final Properties classPathSet = new Properties();
     
     /**
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/unitTests/junit/SystemPrivilegesPermissionTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/unitTests/junit/SystemPrivilegesPermissionTest.java
index b96b3f61..3c3ff4c7 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/unitTests/junit/SystemPrivilegesPermissionTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/unitTests/junit/SystemPrivilegesPermissionTest.java
@@ -154,16 +154,15 @@ public static Test suite() {
         TestSuite suite = new TestSuite(
                 SystemPrivilegesPermissionTest.class,
                 "SystemPrivilegesPermissionTest");
-         return new SecurityManagerSetup(suite, POLICY_FILE_NAME);
-    }
 
-    /**
-     * Test case that does a check of the XXX
-     */
-    public void testIsSecurityManager() {
-        assertSecurityManager();
+        if (SecurityManagerSetup.JVM_HAS_SUBJECT_AUTHORIZATION)
+        {
+            suite.addTest(new SecurityManagerSetup(
+                new SystemPrivilegesPermissionTest("policyTestSystemGrants"),
+                POLICY_FILE_NAME));
+        }
+        return suite;
      }
-
     
     /**
      * Tests SystemPrincipal.
@@ -301,11 +300,11 @@ public void testSystemPermission() {
                                 p.getActions());
                     }
                 }
-                
-                
-                
             }
         }
+    }
+    
+    public void policyTestSystemGrants() {
 
         // test SystemPermission for authorized user against policy file
         
