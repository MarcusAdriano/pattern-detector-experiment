diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java b/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java
index 4ac73e5f..aa4bdff7 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java
@@ -283,9 +283,16 @@ int doCompaction(ColumnFamilyStore cfs, Collection<SSTableReader> sstables, int
             while (nni.hasNext())
             {
                 AbstractCompactedRow row = nni.next();
-                long prevpos = writer.getFilePointer();
-
+                try
+                {
                 writer.append(row);
+                }
+                catch (IOException ex)
+                {
+                    writer.abort();
+                    // rethrow the exception so that caller knows compaction failed.
+                    throw ex;
+                }
                 totalkeysWritten++;
             }
         }
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/io/sstable/SSTableWriter.java b/cassandra/trunk/src/java/org/apache/cassandra/io/sstable/SSTableWriter.java
index ccef6901..abea88dc 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/io/sstable/SSTableWriter.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/io/sstable/SSTableWriter.java
@@ -22,6 +22,7 @@
 import java.io.*;
 import java.util.Set;
 
+import org.apache.cassandra.io.util.FileUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -66,6 +67,30 @@ public SSTableWriter(String filename, long keyCount, CFMetaData metadata, IParti
         components.add(Component.STATS);
     }
 
+    /** something bad happened and the files associated with this writer need to be deleted. */
+    public void abort()
+    {
+        try
+        {
+            dataFile.close();
+            FileUtils.deleteWithConfirm(dataFile.getPath());
+        }
+        catch (IOException ex) 
+        {
+            logger.error(String.format("Caught exception while deleting aborted sstable (%s). %s", dataFile.getPath(), ex.getMessage()));
+        }
+        
+        try
+        {
+            iwriter.close();
+            FileUtils.deleteWithConfirm(descriptor.filenameFor(SSTable.COMPONENT_INDEX));
+        }
+        catch (IOException ex)
+        {
+            logger.error(String.format("Caught exception while deleting aborted sstable (%s). %s", descriptor.filenameFor(SSTable.COMPONENT_INDEX), ex.getMessage()));
+        }
+    }
+
     private long beforeAppend(DecoratedKey decoratedKey) throws IOException
     {
         if (decoratedKey == null)
