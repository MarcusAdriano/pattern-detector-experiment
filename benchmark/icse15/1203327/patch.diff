diff --git a/cassandra/trunk/test/unit/org/apache/cassandra/service/ConsistencyLevelTest.java b/cassandra/trunk/test/unit/org/apache/cassandra/service/ConsistencyLevelTest.java
index af65779a..3d821fdd 100644
--- a/cassandra/trunk/test/unit/org/apache/cassandra/service/ConsistencyLevelTest.java
+++ b/cassandra/trunk/test/unit/org/apache/cassandra/service/ConsistencyLevelTest.java
@@ -79,8 +79,7 @@ public void testReadWriteConsistencyChecks() throws Exception
 
             for (ConsistencyLevel c : ConsistencyLevel.values())
             {
-
-                if (c == ConsistencyLevel.EACH_QUORUM || c == ConsistencyLevel.LOCAL_QUORUM)
+                if (c == ConsistencyLevel.EACH_QUORUM || c == ConsistencyLevel.LOCAL_QUORUM) // not supported by simplestrategy
                     continue;
 
                 for (int i = 0; i < replicationFactor; i++)
@@ -107,10 +106,10 @@ public String getKeyspace()
                         }
                     };
                     RowRepairResolver resolver = new RowRepairResolver(table, ByteBufferUtil.bytes("foo"));
-                    ReadCallback<Row> readHandler = StorageProxy.getReadCallback(resolver, command, c, hostsInUse);
+                    ReadCallback<Row> readHandler;
 
                     boolean isWriteUnavailable = false;
-                    boolean isReadUnavailable = false;
+                    boolean isReadUnavailable = c == ConsistencyLevel.ANY;
                     try
                     {
                         writeHandler.assureSufficientLiveNodes();
@@ -120,6 +119,9 @@ public String getKeyspace()
                         isWriteUnavailable = true;
                     }
 
+                    if (!isReadUnavailable)
+                    {
+                        readHandler = StorageProxy.getReadCallback(resolver, command, c, hostsInUse);
                     try
                     {
                         readHandler.assureSufficientLiveNodes();
@@ -128,6 +130,7 @@ public String getKeyspace()
                     {
                         isReadUnavailable = true;
                     }
+                    }
 
                     //these should always match (in this kind of test)
                     assertTrue(String.format("Node Alive: %d - CL: %s - isWriteUnavailable: %b - isReadUnavailable: %b", hostsInUse.size(), c, isWriteUnavailable, isReadUnavailable),
@@ -189,5 +192,4 @@ private AbstractReplicationStrategy getStrategy(String table, TokenMetadata tmd)
                 new SimpleSnitch(),
                 ksmd.strategyOptions);
     }
-
 }
