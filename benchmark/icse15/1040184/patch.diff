diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/ColumnFamilyStore.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
index c53ce065..6f5c866a 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
@@ -594,7 +594,7 @@ public String getColumnFamilyName()
      */
     public String getFlushPath()
     {
-        long guessedSize = 2 * memsize.value() * 1024*1024; // 2* adds room for keys, column indexes
+        long guessedSize = 2L * memsize.value() * 1024*1024; // 2* adds room for keys, column indexes
         String location = DatabaseDescriptor.getDataFileLocationForTable(table.name, guessedSize);
         if (location == null)
             throw new RuntimeException("Insufficient disk space to flush");
diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/Memtable.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/Memtable.java
index a524ff3d..6b7a3d0b 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/Memtable.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/Memtable.java
@@ -296,6 +296,6 @@ void clearUnsafe()
 
     public boolean isExpired()
     {
-        return System.currentTimeMillis() > creationTime + cfs.getMemtableFlushAfterMins() * 60 * 1000;
+        return System.currentTimeMillis() > creationTime + cfs.getMemtableFlushAfterMins() * 60 * 1000L;
     }
 }
