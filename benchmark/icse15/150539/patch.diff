diff --git a/lucene/java/trunk/src/java/org/apache/lucene/store/MMapDirectory.java b/lucene/java/trunk/src/java/org/apache/lucene/store/MMapDirectory.java
index 3675576f..7eeda36c 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/store/MMapDirectory.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/store/MMapDirectory.java
@@ -37,14 +37,16 @@
   private class MMapIndexInput extends IndexInput {
 
     private ByteBuffer buffer;
-    private RandomAccessFile file;
-    private long length;
-    private boolean isClone;
-
-    public MMapIndexInput(String path) throws IOException {
-      this.file = new RandomAccessFile(path, "r");
-      this.length = file.length();
-      this.buffer = file.getChannel().map(MapMode.READ_ONLY, 0, length);
+    private final long length;
+
+    public MMapIndexInput(File file) throws IOException {
+      RandomAccessFile raf = new RandomAccessFile(file, "r");
+      try {
+        this.length = raf.length();
+        this.buffer = raf.getChannel().map(MapMode.READ_ONLY, 0, length);
+      } finally {
+        raf.close();
+      }
     }
 
     public byte readByte() throws IOException {
@@ -70,21 +72,16 @@ public long length() {
 
     public Object clone() {
       MMapIndexInput clone = (MMapIndexInput)super.clone();
-      clone.isClone = true;
       clone.buffer = buffer.duplicate();
       return clone;
     }
 
-    public void close() throws IOException {
-      if (!isClone)
-        file.close();
-    }
-  }
+    public void close() throws IOException {}
 
-  private MMapDirectory() {}                      // no public ctor
+  }
 
   public IndexInput openInput(String name) throws IOException {
-    return new MMapIndexInput(new File(getFile(), name).getPath());
+    return new MMapIndexInput(new File(getFile(), name));
   }
 }
 
