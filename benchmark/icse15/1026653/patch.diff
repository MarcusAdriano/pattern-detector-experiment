diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/CFMetaData.java b/cassandra/trunk/src/java/org/apache/cassandra/config/CFMetaData.java
index 3042649c..80a0e153 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/CFMetaData.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/CFMetaData.java
@@ -60,8 +60,8 @@
     public final static int DEFAULT_MIN_COMPACTION_THRESHOLD = 4;
     public final static int DEFAULT_MAX_COMPACTION_THRESHOLD = 32;
     public final static int DEFAULT_MEMTABLE_LIFETIME_IN_MINS = 60;
-    public final static int DEFAULT_MEMTABLE_THROUGHPUT_IN_MB = DatabaseDescriptor.sizeMemtableThroughput();
-    public final static double DEFAULT_MEMTABLE_OPERATIONS_IN_MILLIONS = DatabaseDescriptor.sizeMemtableOperations(DEFAULT_MEMTABLE_THROUGHPUT_IN_MB);
+    public final static int DEFAULT_MEMTABLE_THROUGHPUT_IN_MB = sizeMemtableThroughput();
+    public final static double DEFAULT_MEMTABLE_OPERATIONS_IN_MILLIONS = sizeMemtableOperations(DEFAULT_MEMTABLE_THROUGHPUT_IN_MB);
 
     private static final int MIN_CF_ID = 1000;
 
@@ -99,6 +99,22 @@ private static CFMetaData newSystemTable(String cfName, int cfId, String comment
                               Collections.<ByteBuffer, ColumnDefinition>emptyMap());
     }
 
+    /**
+     * @return A calculated memtable throughput size for this machine.
+     */
+    public static int sizeMemtableThroughput()
+    {
+        return (int) (Runtime.getRuntime().maxMemory() / (1048576 * 16));
+    }
+
+    /**
+     * @return A calculated memtable operation count for this machine.
+     */
+    public static double sizeMemtableOperations(int mem_throughput)
+    {
+        return 0.3 * mem_throughput / 64.0;
+    }
+
     /**
      * @return The (ksname,cfname) pair for the given id, or null if it has been dropped.
      */
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java b/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
index 55457eb2..5e06047f 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
@@ -561,12 +561,12 @@ else if (cf.compare_subcolumns_with != null)
 
                 if (cf.memtable_throughput_in_mb == null)
                 {
-                    cf.memtable_throughput_in_mb = sizeMemtableThroughput();
+                    cf.memtable_throughput_in_mb = CFMetaData.sizeMemtableThroughput();
                     logger.info("memtable_throughput_in_mb not configured for " + cf.name + ", using " + cf.memtable_throughput_in_mb);
                 }
                 if (cf.memtable_operations_in_millions == null)
                 {
-                    cf.memtable_operations_in_millions = sizeMemtableOperations(cf.memtable_throughput_in_mb);
+                    cf.memtable_operations_in_millions = CFMetaData.sizeMemtableOperations(cf.memtable_throughput_in_mb);
                     logger.info("memtable_operations_in_millions not configured for " + cf.name + ", using " + cf.memtable_operations_in_millions);
                 }
 
@@ -1099,13 +1099,4 @@ public static double getDynamicBadnessThreshold()
     {
         return conf.dynamic_snitch_badness_threshold;
     }
-
-    public static int sizeMemtableThroughput() {
-        return (int) (Runtime.getRuntime().maxMemory() / (1048576 * 16));
-    }
-
-    public static double sizeMemtableOperations(int mem_throughput) {
-        return 0.3 * mem_throughput / 64.0;
-    }
-
 }
