diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderJob.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderJob.java
index d3e9c502..760f0061 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderJob.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderJob.java
@@ -136,7 +136,6 @@ public int run(String[] args) throws IOException {
     jobConf.set(RecommenderReducer.RECOMMENDER_CLASS_NAME, recommendClassName);
     jobConf.setInt(RecommenderReducer.RECOMMENDATIONS_PER_USER, recommendationsPerUser);
     jobConf.set(RecommenderReducer.DATA_MODEL_FILE, inputFile);
-    jobConf.set(RecommenderReducer.USERS_FILE, usersFile);
     jobConf.setClass("mapred.output.compression.codec", GzipCodec.class, CompressionCodec.class);
     
     JobClient.runJob(jobConf);
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderReducer.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderReducer.java
index 101c9485..241fbb4e 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderReducer.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/pseudo/RecommenderReducer.java
@@ -24,7 +24,6 @@
 import java.util.Iterator;
 import java.util.List;
 
-import org.apache.hadoop.fs.FSDataInputStream;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.io.LongWritable;
@@ -36,12 +35,10 @@
 import org.apache.hadoop.mapred.Reporter;
 import org.apache.mahout.cf.taste.common.TasteException;
 import org.apache.mahout.cf.taste.hadoop.RecommendedItemsWritable;
-import org.apache.mahout.cf.taste.impl.common.FastIDSet;
 import org.apache.mahout.cf.taste.impl.model.file.FileDataModel;
 import org.apache.mahout.cf.taste.model.DataModel;
 import org.apache.mahout.cf.taste.recommender.RecommendedItem;
 import org.apache.mahout.cf.taste.recommender.Recommender;
-import org.apache.mahout.common.FileLineIterable;
 
 /**
  * <p>
@@ -58,11 +55,9 @@
   static final String RECOMMENDER_CLASS_NAME = "recommenderClassName";
   static final String RECOMMENDATIONS_PER_USER = "recommendationsPerUser";
   static final String DATA_MODEL_FILE = "dataModelFile";
-  static final String USERS_FILE = "usersFile";
   
   private Recommender recommender;
   private int recommendationsPerUser;
-  private FastIDSet usersToRecommendFor;
   
   @Override
   public void configure(JobConf jobConf) {
@@ -76,17 +71,6 @@ public void configure(JobConf jobConf) {
       tempDataFile.deleteOnExit();
       fs.copyToLocalFile(dataModelPath, new Path(tempDataFile.getAbsolutePath()));
       fileDataModel = new FileDataModel(tempDataFile);
-      String usersFilePathString = jobConf.get(USERS_FILE);
-      if (usersFilePathString == null) {
-        usersToRecommendFor = null;
-      } else {
-        usersToRecommendFor = new FastIDSet();
-        Path usersFilePath = new Path(usersFilePathString).makeQualified(fs);
-        FSDataInputStream in = fs.open(usersFilePath);
-        for (String line : new FileLineIterable(in)) {
-          usersToRecommendFor.add(Long.parseLong(line));
-        }
-      }
     } catch (IOException ioe) {
       throw new IllegalStateException(ioe);
     }
@@ -115,10 +99,6 @@ public void reduce(LongWritable key,
                      OutputCollector<LongWritable,RecommendedItemsWritable> output,
                      Reporter reporter) throws IOException {
     long userID = key.get();
-    if ((usersToRecommendFor != null) && !usersToRecommendFor.contains(userID)) {
-      return;
-    }
-    
     List<RecommendedItem> recommendedItems;
     try {
       recommendedItems = recommender.recommend(userID, recommendationsPerUser);
