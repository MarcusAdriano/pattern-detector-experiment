diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CharStreamHeaderGenerator.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CharStreamHeaderGenerator.java
index ec26178f..7ecf7512 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CharStreamHeaderGenerator.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CharStreamHeaderGenerator.java
@@ -44,6 +44,9 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 public final class CharStreamHeaderGenerator
     implements StreamHeaderGenerator {
 
+    /** The Derby-specific end-of-stream marker. */
+    private static  final   byte[] DERBY_EOF_MARKER = new byte[] {(byte)0xE0, 0x00, 0x00};
+
     /** The maximum length that can be encoded by the header. */
     private static final int MAX_ENCODABLE_LENGTH = 65535;
 
@@ -56,6 +59,20 @@ public boolean expectsCharCount() {
         return false;
     }
 
+    /** Write the EOF marker to a byte array and return the EOF marker's length */
+    public  static  int  writeEOFMarker( byte[] buffer, int offset )
+    {
+        System.arraycopy( DERBY_EOF_MARKER, 0, buffer, offset, DERBY_EOF_MARKER.length );
+        return DERBY_EOF_MARKER.length;
+    }
+
+    /** Write the EOF marker to an Object stream  and return the EOF marker's length */
+    public  static  int  writeEOFMarker( ObjectOutput out ) throws IOException
+    {
+        out.write( DERBY_EOF_MARKER );
+        return DERBY_EOF_MARKER.length;
+    }
+
     /**
      * Generates the header for the specified length and writes it into the
      * provided buffer, starting at the specified offset.
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/ClobStreamHeaderGenerator.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/ClobStreamHeaderGenerator.java
index 2f06aa23..e897698d 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/ClobStreamHeaderGenerator.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/ClobStreamHeaderGenerator.java
@@ -202,9 +202,7 @@ public int writeEOF(byte[] buffer, int offset, long valueLength) {
         }
         if (!isPreDerbyTenFive.booleanValue()) {
             if (valueLength < 0) {
-                System.arraycopy(DERBY_EOF_MARKER, 0,
-                                 buffer, offset, DERBY_EOF_MARKER.length);
-                return DERBY_EOF_MARKER.length;
+                return CharStreamHeaderGenerator.writeEOFMarker( buffer, offset );
             } else {
                 return 0;
             }
@@ -228,8 +226,7 @@ public int writeEOF(ObjectOutput out, long valueLength)
         }
         if (!isPreDerbyTenFive.booleanValue()) {
             if (valueLength < 0) {
-                out.write(DERBY_EOF_MARKER);
-                return DERBY_EOF_MARKER.length;
+                return CharStreamHeaderGenerator.writeEOFMarker( out );
             } else {
                 return 0;
             }
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/StreamHeaderGenerator.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/StreamHeaderGenerator.java
index 47ff4404..5510564b 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/StreamHeaderGenerator.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/StreamHeaderGenerator.java
@@ -28,9 +28,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
  */
 public interface StreamHeaderGenerator {
 
-    /** The Derby-specific end-of-stream marker. */
-    byte[] DERBY_EOF_MARKER = new byte[] {(byte)0xE0, 0x00, 0x00};
-
     /**
      * Tells if the header encodes a character or byte count.
      *
