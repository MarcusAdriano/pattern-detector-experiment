diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/dht/RandomPartitioner.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/dht/RandomPartitioner.java
index cffce073..7bbeb6e1 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/dht/RandomPartitioner.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/dht/RandomPartitioner.java
@@ -98,11 +98,7 @@ public ByteBuffer toByteArray(Token<BigInteger> bigIntegerToken)
 
         public Token<BigInteger> fromByteArray(ByteBuffer bytes)
         {
-            byte[] b = new byte[bytes.remaining()];
-            bytes.get(b);
-            bytes.rewind();
-            
-            return new BigIntegerToken(new BigInteger(b));
+            return new BigIntegerToken(new BigInteger(ByteBufferUtil.getArray(bytes)));
         }
 
         public String toString(Token<BigInteger> bigIntegerToken)
diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/hadoop/ColumnFamilyRecordWriter.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/hadoop/ColumnFamilyRecordWriter.java
index 79456e4c..7b7fd8dc 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/hadoop/ColumnFamilyRecordWriter.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/hadoop/ColumnFamilyRecordWriter.java
@@ -40,7 +40,7 @@
 import org.apache.thrift.TException;
 import org.apache.thrift.transport.TSocket;
 
-import static org.apache.cassandra.io.SerDeUtils.copy;
+import org.apache.cassandra.utils.ByteBufferUtil;
 
 /**
  * The <code>ColumnFamilyRecordWriter</code> maps the output &lt;key, value&gt;
@@ -169,7 +169,7 @@ private Mutation avroToThrift(org.apache.cassandra.avro.Mutation amut)
             org.apache.cassandra.avro.SlicePredicate apred = amut.deletion.predicate;
             if (amut.deletion.super_column != null)
                 // super column
-                deletion.setSuper_column(copy(amut.deletion.super_column));
+                deletion.setSuper_column(ByteBufferUtil.getArray(amut.deletion.super_column));
             else if (apred.column_names != null)
             {
                 // column names
diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/io/SerDeUtils.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/io/SerDeUtils.java
index 937ed90e..32ab2370 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/io/SerDeUtils.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/io/SerDeUtils.java
@@ -45,14 +45,6 @@
     // unbuffered decoders
     private final static DecoderFactory DIRECT_DECODERS = new DecoderFactory().configureDirectDecoder(true);
 
-    public static byte[] copy(ByteBuffer buff)
-    {
-        byte[] bytes = new byte[buff.remaining()];
-        buff.get(bytes);
-        buff.rewind();
-        return bytes;
-    }
-
 	/**
      * Deserializes a single object based on the given Schema.
      * @param writer writer's schema
diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/utils/ByteBufferUtil.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/utils/ByteBufferUtil.java
index 169eb7b9..c83329b4 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/utils/ByteBufferUtil.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/utils/ByteBufferUtil.java
@@ -135,7 +135,12 @@ public static String string(ByteBuffer buffer, int offset, int length, Charset c
     public static byte[] getArray(ByteBuffer b, int start, int length)
     {
         if (b.hasArray())
+        {
+            if (b.arrayOffset() == 0 && start == 0 && length == b.array().length)
+                return b.array();
+            else
             return Arrays.copyOfRange(b.array(), start + b.arrayOffset(), start + length + b.arrayOffset());
+        }
 
         byte[] bytes = new byte[length];
 
