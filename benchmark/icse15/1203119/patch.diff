diff --git a/lucene/dev/branches/branch_3x/solr/solrj/src/java/org/apache/solr/client/solrj/response/SpellCheckResponse.java b/lucene/dev/branches/branch_3x/solr/solrj/src/java/org/apache/solr/client/solrj/response/SpellCheckResponse.java
index 0bea8de5..92c19d8d 100644
--- a/lucene/dev/branches/branch_3x/solr/solrj/src/java/org/apache/solr/client/solrj/response/SpellCheckResponse.java
+++ b/lucene/dev/branches/branch_3x/solr/solrj/src/java/org/apache/solr/client/solrj/response/SpellCheckResponse.java
@@ -53,7 +53,7 @@ public SpellCheckResponse(NamedList<Object> spellInfo) {
 				for (Object o : collationInfo) {
 					if (o instanceof String) {
 						collations.add(new Collation()
-								.setCollationQueryString((String) sugg.getVal(i)));
+								.setCollationQueryString((String) o));
 					} else if (o instanceof NamedList) {
 						NamedList expandedCollation = (NamedList) o;
 						String collationQuery = (String) expandedCollation
diff --git a/lucene/dev/branches/branch_3x/solr/solrj/src/test/org/apache/solr/client/solrj/response/TestSpellCheckResponse.java b/lucene/dev/branches/branch_3x/solr/solrj/src/test/org/apache/solr/client/solrj/response/TestSpellCheckResponse.java
index 9a2f003b..2599cdee 100644
--- a/lucene/dev/branches/branch_3x/solr/solrj/src/test/org/apache/solr/client/solrj/response/TestSpellCheckResponse.java
+++ b/lucene/dev/branches/branch_3x/solr/solrj/src/test/org/apache/solr/client/solrj/response/TestSpellCheckResponse.java
@@ -151,7 +151,7 @@ public void testSpellCheckCollationResponse() throws Exception {
     assertTrue("name:(+faith +hope +love)".equals(response.getCollatedResult()) || "name:(+faith +hope +loaves)".equals(response.getCollatedResult()));
     
     List<Collation> collations = response.getCollatedResults();
-    assertTrue(collations.size()==2);
+    assertEquals(2, collations.size());
     for(Collation collation : collations)
     {
     	assertTrue("name:(+faith +hope +love)".equals(collation.getCollationQueryString()) || "name:(+faith +hope +loaves)".equals(collation.getCollationQueryString()));
@@ -175,7 +175,20 @@ public void testSpellCheckCollationResponse() throws Exception {
     			fail("Original Word Should have been either fauth, home or loane.");
     		}	    	
     	}
+    }
     	
+    query.set(SpellingParams.SPELLCHECK_COLLATE_EXTENDED_RESULTS, false);
+    response = request.process(server).getSpellCheckResponse();
+    {
+      collations = response.getCollatedResults();
+      assertEquals(2, collations.size());
+      String collation1 = collations.get(0).getCollationQueryString();
+      String collation2 = collations.get(1).getCollationQueryString();
+      assertFalse(collation1 + " equals " + collation2, 
+          collation1.equals(collation2));
+      for(Collation collation : collations) {
+        assertTrue("name:(+faith +hope +love)".equals(collation.getCollationQueryString()) || "name:(+faith +hope +loaves)".equals(collation.getCollationQueryString()));  
+      }      
     }
     
   }
