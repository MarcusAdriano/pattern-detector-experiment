diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/CheckIndex.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/CheckIndex.java
index 3bfe5dca..e54309d3 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/CheckIndex.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/CheckIndex.java
@@ -835,8 +835,8 @@ public Status checkIndex(List<String> onlySegments, CodecProvider codecs) throws
                     if (pos < 0) {
                       throw new RuntimeException("position " + pos + " is out of bounds");
                     }
-                    if (pos <= lastPosition) {
-                      throw new RuntimeException("position " + pos + " is <= lastPosition " + lastPosition);
+                    if (pos < lastPosition) {
+                      throw new RuntimeException("position " + pos + " is < lastPosition " + lastPosition);
                     }
                     lastPosition = pos;
                   } 
diff --git a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/index/TestSameTokenSamePosition.java b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/index/TestSameTokenSamePosition.java
index b46c37d9..a3c89d3c 100644
--- a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/index/TestSameTokenSamePosition.java
+++ b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/index/TestSameTokenSamePosition.java
@@ -47,6 +47,22 @@ public void test() throws Exception {
     riw.close();
     dir.close();
   }
+  
+  /**
+   * Same as the above, but with more docs
+   */
+  public void testMoreDocs() throws Exception {
+    Directory dir = newDirectory();
+    RandomIndexWriter riw = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new BugReproAnalyzer()));
+    Document doc = new Document();
+    doc.add(new Field("eng", "Six drunken" /*This shouldn't matter. */, 
+                      Field.Store.YES, Field.Index.ANALYZED));
+    for (int i = 0; i < 100; i++) {
+      riw.addDocument(doc);
+    }
+    riw.close();
+    dir.close();
+  }
 }
 
 final class BugReproAnalyzer extends Analyzer{
