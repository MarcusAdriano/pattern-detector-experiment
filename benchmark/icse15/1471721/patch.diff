diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TriggerTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TriggerTest.java
index abf5a1a7..14a75c74 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TriggerTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TriggerTest.java
@@ -66,6 +66,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more
      * allow recording information about the firing.
      */
     private static ThreadLocal TRIGGER_INFO = new ThreadLocal();
+    StringBuffer listOfCreatedTriggers = new StringBuffer();
+
 
     public TriggerTest(String name) {
         super(name);
@@ -390,6 +392,7 @@ public void testFiringOrder() throws SQLException
         // so pick enough triggers to get some
         // distribution across all 12.
         int triggerCount = r.nextInt(45) + 45;
+        listOfCreatedTriggers = new StringBuffer();
         for (int i = 0; i < triggerCount; i++)
         {
             StringBuffer sb = new StringBuffer();
@@ -439,6 +442,7 @@ else if (type == 1)
             sb.append("')");
 
             s.execute(sb.toString());
+            listOfCreatedTriggers.append(sb.toString());
         }
         commit();
         s.close();
@@ -558,7 +562,7 @@ private int assertFiringOrder(String iud, int modifiedRowCount,
                     modifiedRowCount > 1 ? (order >= lastOrder) :
                         (order > lastOrder);
                 assertTrue("matching triggers need to be fired in order creation:"
-                        +info+". Triggers got fired in this order:"+TRIGGER_INFO.get().toString(), orderOk);
+                        +info+". Triggers got fired in this order:"+TRIGGER_INFO.get().toString()+". Tiggers got created in this order:"+listOfCreatedTriggers.toString(), false);
                 lastOrder = order;
                 continue;
             }
