diff --git a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/AbstractIntegrationTest.java b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/AbstractIntegrationTest.java
index b69cfacc..a08fece7 100644
--- a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/AbstractIntegrationTest.java
+++ b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/AbstractIntegrationTest.java
@@ -28,6 +28,7 @@
 import org.ops4j.pax.exam.options.MavenArtifactProvisionOption;
 import static org.junit.Assert.*;
 
+import javax.management.InstanceNotFoundException;
 import javax.management.MBeanServer;
 import javax.management.MBeanServerFactory;
 import javax.management.MBeanServerInvocationHandler;
@@ -49,6 +50,7 @@
 import org.osgi.framework.ServiceReference;
 import org.osgi.framework.ServiceRegistration;
 import org.osgi.framework.Version;
+import org.osgi.jmx.framework.BundleStateMBean;
 import org.osgi.util.tracker.ServiceTracker;
 
 /**
@@ -83,6 +85,16 @@ public void setUp() throws Exception {
         assertNotNull(reference);
         MBeanServer mbeanService = (MBeanServer) bundleContext.getService(reference);
         assertNotNull(mbeanService);
+        
+        doSetUp();
+    }
+    
+    /**
+     * A hook for subclasses.
+     * 
+     * @throws Exception
+     */
+    protected void doSetUp() throws Exception {           
     }
     
     @After
@@ -91,6 +103,26 @@ public void tearDown() throws Exception {
         //plainRegistration.unregister();
     }
     
+    protected void waitForMBean(ObjectName name) throws Exception {
+        waitForMBean(name, 10);        
+    }
+    
+    protected void waitForMBean(ObjectName name, int timeoutInSeconds) throws Exception {
+        int i=0;
+        while (true) {
+            try {
+                mbeanServer.getObjectInstance(name);
+                break;
+            } catch (InstanceNotFoundException e) {
+                if (i == timeoutInSeconds) {
+                    throw new Exception(name + " mbean is not available after waiting " + timeoutInSeconds + " seconds");
+                }
+            }
+            i++;
+            Thread.sleep(1000);
+        }
+    }
+    
     @SuppressWarnings("unchecked")
     protected <T> T getMBean(String name, Class<T> type) {
         ObjectName objectName = null;
diff --git a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/cm/ConfigurationAdminMBeanTest.java b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/cm/ConfigurationAdminMBeanTest.java
index bbfebc43..a7a22622 100644
--- a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/cm/ConfigurationAdminMBeanTest.java
+++ b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/cm/ConfigurationAdminMBeanTest.java
@@ -28,7 +28,6 @@
 import java.io.InputStream;
 import java.util.Dictionary;
 
-import javax.management.InstanceNotFoundException;
 import javax.management.ObjectName;
 import javax.management.openmbean.TabularData;
 
@@ -37,7 +36,6 @@
 import org.apache.aries.jmx.test.bundlea.api.InterfaceA;
 import org.apache.aries.jmx.test.bundleb.api.InterfaceB;
 import org.apache.aries.jmx.test.bundleb.api.MSF;
-import org.junit.Before;
 import org.junit.Ignore;
 import org.junit.Test;
 import org.ops4j.pax.exam.CoreOptions;
@@ -107,22 +105,9 @@ public InputStream customizeTestProbe(InputStream testProbe) throws Exception {
         return options;
     }
     
-    @Before
+    @Override
     public void doSetUp() throws Exception {
-        super.setUp();
-        int i=0;
-        while (true) {
-            try {
-                mbeanServer.getObjectInstance(new ObjectName(ConfigurationAdminMBean.OBJECTNAME));
-                break;
-            } catch (InstanceNotFoundException e) {
-                if (i == 5) {
-                    throw new Exception("ConfigurationAdminMBean not available after waiting 5 seconds");
-                }
-            }
-            i++;
-            Thread.sleep(1000);
-        }
+        waitForMBean(new ObjectName(ConfigurationAdminMBean.OBJECTNAME));
     }
     
     @Ignore("ManagedServiceFactory tests failing.. " +
diff --git a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/framework/BundleStateMBeanTest.java b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/framework/BundleStateMBeanTest.java
index d1efffbc..daf1b390 100644
--- a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/framework/BundleStateMBeanTest.java
+++ b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/framework/BundleStateMBeanTest.java
@@ -29,7 +29,6 @@
 import java.util.Arrays;
 import java.util.List;
 
-import javax.management.InstanceNotFoundException;
 import javax.management.Notification;
 import javax.management.NotificationListener;
 import javax.management.ObjectName;
@@ -37,7 +36,6 @@
 
 import org.apache.aries.jmx.AbstractIntegrationTest;
 import org.apache.aries.jmx.codec.BundleData.Header;
-import org.junit.Before;
 import org.junit.Test;
 import org.ops4j.pax.exam.CoreOptions;
 import org.ops4j.pax.exam.Option;
@@ -106,22 +104,9 @@
         return options;
     }
     
-    @Before
+    @Override
     public void doSetUp() throws Exception {
-        super.setUp();
-        int i=0;
-        while (true) {
-            try {
-                mbeanServer.getObjectInstance(new ObjectName(BundleStateMBean.OBJECTNAME));
-                break;
-            } catch (InstanceNotFoundException e) {
-                if (i == 5) {
-                    throw new Exception("BundleStateMBean not available after waiting 5 seconds");
-                }
-            }
-            i++;
-            Thread.sleep(1000);
-        }
+        waitForMBean(new ObjectName(BundleStateMBean.OBJECTNAME));
     }
 
     @Test
@@ -204,7 +189,7 @@ public void testMBeanInterface() throws Exception {
         
         long[] requiring = mbean.getRequiringBundles(a.getBundleId());
         assertEquals(3, requiring.length);
-        assertTrue(b.getSymbolicName(), arrayContains(frag.getBundleId(), requiring));
+        assertTrue(b.getSymbolicName(), arrayContains(b.getBundleId(), requiring));
         assertTrue(frag.getSymbolicName(), arrayContains(frag.getBundleId(), requiring));
         assertTrue(d.getSymbolicName(), arrayContains(d.getBundleId(), requiring));
         
diff --git a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/framework/FrameworkMBeanTest.java b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/framework/FrameworkMBeanTest.java
index 191ca52b..c463ac74 100644
--- a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/framework/FrameworkMBeanTest.java
+++ b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/framework/FrameworkMBeanTest.java
@@ -27,6 +27,7 @@
 import java.util.jar.JarOutputStream;
 import java.util.jar.Manifest;
 
+import javax.management.ObjectName;
 import javax.management.openmbean.CompositeData;
 
 import org.apache.aries.jmx.AbstractIntegrationTest;
@@ -58,6 +59,11 @@
         return options;
     }
 
+    @Override
+    public void doSetUp() throws Exception {
+        waitForMBean(new ObjectName(FrameworkMBean.OBJECTNAME));
+    }
+    
     @Test
     public void testMBeanInterface() throws IOException {
         FrameworkMBean framework = getMBean(FrameworkMBean.OBJECTNAME, FrameworkMBean.class);
diff --git a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/framework/PackageStateMBeanTest.java b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/framework/PackageStateMBeanTest.java
index 46d5c2f6..9e978b90 100644
--- a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/framework/PackageStateMBeanTest.java
+++ b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/framework/PackageStateMBeanTest.java
@@ -25,12 +25,10 @@
 import java.io.IOException;
 import java.util.Collection;
 
-import javax.management.InstanceNotFoundException;
 import javax.management.ObjectName;
 import javax.management.openmbean.TabularData;
 
 import org.apache.aries.jmx.AbstractIntegrationTest;
-import org.junit.Before;
 import org.junit.Test;
 import org.ops4j.pax.exam.CoreOptions;
 import org.ops4j.pax.exam.Option;
@@ -53,22 +51,9 @@
         return options;
     }
 
-    @Before
+    @Override
     public void doSetUp() throws Exception {
-        super.setUp();
-        int i = 0;
-        while (true) {
-            try {
-                mbeanServer.getObjectInstance(new ObjectName(PackageStateMBean.OBJECTNAME));
-                break;
-            } catch (InstanceNotFoundException e) {
-                if (i == 5) {
-                    throw new Exception("PackageStateMBean not available after waiting 5 seconds");
-                }
-            }
-            i++;
-            Thread.sleep(1000);
-        }
+        waitForMBean(new ObjectName(PackageStateMBean.OBJECTNAME));
     }
 
     @Test
diff --git a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/framework/ServiceStateMBeanTest.java b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/framework/ServiceStateMBeanTest.java
index 897e159a..95191f13 100644
--- a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/framework/ServiceStateMBeanTest.java
+++ b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/framework/ServiceStateMBeanTest.java
@@ -30,7 +30,6 @@
 import java.util.Arrays;
 import java.util.List;
 
-import javax.management.InstanceNotFoundException;
 import javax.management.Notification;
 import javax.management.NotificationListener;
 import javax.management.ObjectName;
@@ -40,7 +39,6 @@
 import org.apache.aries.jmx.codec.PropertyData;
 import org.apache.aries.jmx.test.bundlea.api.InterfaceA;
 import org.apache.aries.jmx.test.bundleb.api.InterfaceB;
-import org.junit.Before;
 import org.junit.Test;
 import org.ops4j.pax.exam.CoreOptions;
 import org.ops4j.pax.exam.Customizer;
@@ -110,24 +108,10 @@ public InputStream customizeTestProbe(InputStream testProbe) throws Exception {
         return options;
     }
     
-    @Before
+    @Override
     public void doSetUp() throws Exception {
-        super.setUp();
-        int i=0;
-        while (true) {
-            try {
-                mbeanServer.getObjectInstance(new ObjectName(ServiceStateMBean.OBJECTNAME));
-                break;
-            } catch (InstanceNotFoundException e) {
-                if (i == 5) {
-                    throw new Exception("ServiceStateMBean not available after waiting 5 seconds");
+        waitForMBean(new ObjectName(ServiceStateMBean.OBJECTNAME));
                 }
-            }
-            i++;
-            Thread.sleep(1000);
-        }
-    }
-    
     
     @Test
     public void testMBeanInterface() throws Exception {
diff --git a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/permissionadmin/PermissionAdminMBeanTest.java b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/permissionadmin/PermissionAdminMBeanTest.java
index 708b23b6..220085fd 100644
--- a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/permissionadmin/PermissionAdminMBeanTest.java
+++ b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/permissionadmin/PermissionAdminMBeanTest.java
@@ -24,11 +24,9 @@
 
 import java.io.IOException;
 
-import javax.management.InstanceNotFoundException;
 import javax.management.ObjectName;
 
 import org.apache.aries.jmx.AbstractIntegrationTest;
-import org.junit.Before;
 import org.junit.Test;
 import org.ops4j.pax.exam.CoreOptions;
 import org.ops4j.pax.exam.Option;
@@ -70,22 +68,9 @@
         return options;
     }
     
-    @Before
+    @Override
     public void doSetUp() throws Exception {
-        super.setUp();
-        int i = 0;
-        while (true) {
-            try {
-                mbeanServer.getObjectInstance(new ObjectName(PermissionAdminMBean.OBJECTNAME));
-                break;
-            } catch (InstanceNotFoundException e) {
-                if (i == 5) {
-                    throw new Exception("PermissionAdminMBean not available after waiting 5 seconds");
-                }
-            }
-            i++;
-            Thread.sleep(1000);
-        }
+        waitForMBean(new ObjectName(PermissionAdminMBean.OBJECTNAME));
     }
 
     @Test
diff --git a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/provisioning/ProvisioningServiceMBeanTest.java b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/provisioning/ProvisioningServiceMBeanTest.java
index 0477abc6..98a9b774 100644
--- a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/provisioning/ProvisioningServiceMBeanTest.java
+++ b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/provisioning/ProvisioningServiceMBeanTest.java
@@ -31,13 +31,11 @@
 import java.util.jar.Manifest;
 import java.util.zip.ZipEntry;
 
-import javax.management.InstanceNotFoundException;
 import javax.management.ObjectName;
 import javax.management.openmbean.TabularData;
 
 import org.apache.aries.jmx.AbstractIntegrationTest;
 import org.apache.aries.jmx.codec.PropertyData;
-import org.junit.Before;
 import org.junit.Ignore;
 import org.junit.Test;
 import org.ops4j.pax.exam.CoreOptions;
@@ -70,27 +68,10 @@
         return options;
     }
 
-    @Before
+    @Override
     public void doSetUp() throws Exception {
-        super.setUp();
-        int i=0;
-        while (true) {
-            try {
-                mbeanServer.getObjectInstance(new ObjectName(ProvisioningServiceMBean.OBJECTNAME));
-                break;
-            } catch (InstanceNotFoundException e) {
-                if (i == 5) {
-                    throw new Exception("ProvisioningServiceMBean not available after waiting 5 seconds");
+        waitForMBean(new ObjectName(ProvisioningServiceMBean.OBJECTNAME));
                 }
-            }
-            i++;
-            Thread.sleep(1000);
-        }
-       
-      
-    }
-    
-  
 
     @Ignore("For now.. Cannot find public repo for org.eclipse.equinox.ip")
     @Test
diff --git a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/test/blueprint/BlueprintMBeanTest.java b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/test/blueprint/BlueprintMBeanTest.java
index 55ee3b5a..bc6692a5 100644
--- a/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/test/blueprint/BlueprintMBeanTest.java
+++ b/incubator/aries/trunk/jmx/jmx-itests/src/test/java/org/apache/aries/jmx/test/blueprint/BlueprintMBeanTest.java
@@ -21,9 +21,6 @@
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.fail;
 
-import javax.management.InstanceNotFoundException;
-import javax.management.MBeanServer;
-import javax.management.MBeanServerFactory;
 import javax.management.MBeanServerInvocationHandler;
 import javax.management.ObjectName;
 import javax.management.openmbean.TabularData;
@@ -43,21 +40,14 @@
 import org.apache.aries.jmx.test.blueprint.framework.RegistrationListenerValidator;
 import org.apache.aries.jmx.test.blueprint.framework.ServiceValidator;
 import org.apache.aries.jmx.test.blueprint.framework.ValueValidator;
-import org.junit.After;
-import org.junit.Before;
 import org.junit.Test;
-import org.junit.runner.RunWith;
 import org.ops4j.pax.exam.CoreOptions;
-import org.ops4j.pax.exam.Inject;
 import org.ops4j.pax.exam.Option;
 import org.ops4j.pax.exam.junit.Configuration;
-import org.ops4j.pax.exam.junit.JUnit4TestRunner;
 import org.osgi.framework.Bundle;
-import org.osgi.framework.BundleContext;
 import org.osgi.framework.Constants;
 import org.osgi.framework.InvalidSyntaxException;
 import org.osgi.framework.ServiceReference;
-import org.osgi.framework.ServiceRegistration;
 import org.osgi.service.blueprint.container.BlueprintContainer;
 
 public class BlueprintMBeanTest extends AbstractIntegrationTest {
@@ -79,27 +69,10 @@
         return options;
     }  
 
-    @Before
-    public void setUp() throws Exception {
-        super.setUp();
-        System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Before Test");
-       
-       // Wait MBeans register in server
-       int i=0;
-       while (true) {
-           try {
-               mbeanServer.getObjectInstance(new ObjectName(BlueprintStateMBean.OBJECTNAME));
-               mbeanServer.getObjectInstance(new ObjectName(BlueprintMetadataMBean.OBJECTNAME));
-               System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Found MBeans");
-               break;
-           } catch (InstanceNotFoundException e) {
-               if (i == 5) {
-                   throw new Exception(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> BlueprintStateMBean & BlueprintMetadataMBean are not found in server");
-               }
-           }
-           i++;
-           Thread.sleep(100);
-       }
+    @Override
+    public void doSetUp() throws Exception {
+        waitForMBean(new ObjectName(BlueprintStateMBean.OBJECTNAME));
+        waitForMBean(new ObjectName(BlueprintMetadataMBean.OBJECTNAME));
        
        // Wait enough time for osgi framework and blueprint bundles to be set up
        System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Waiting for bundles to be set up");
