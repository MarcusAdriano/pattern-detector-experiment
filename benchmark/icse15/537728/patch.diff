diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/UpgradeRun.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/UpgradeRun.java
index 75000e1e..95c95fb9 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/UpgradeRun.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/UpgradeRun.java
@@ -21,6 +21,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 package org.apache.derbyTesting.functionTests.tests.upgradeTests;
 
 import java.io.File;
+import java.lang.reflect.Method;
 import java.net.MalformedURLException;
 import java.net.URL;
 import java.net.URLClassLoader;
@@ -221,7 +222,7 @@ private static Test baseSuite(String name, int phase, int[] version) {
             // of DatabaseMetaData should be available.
             case UpgradeChange.PH_SOFT_UPGRADE:
             case UpgradeChange.PH_HARD_UPGRADE:
-                suite.addTestSuite(DatabaseMetaDataTest.class);
+                RunDataBaseMetaDataTest(suite, oldMinor);
                 break;
             }
         }
@@ -322,4 +323,26 @@ private static Test handleJavaSE6(int phase, int[] version, Test test)
         }
         return test;
     }
+    
+    // We want to run DatabaseMetaDataTest, but it includes some
+    // features not supported in older versions, so we cannot just
+    // add the DatabaseMetaDataTest.class as is.
+    // Note also, that this does not execute fixture initialCompilationTest.
+    private static void RunDataBaseMetaDataTest (TestSuite suite, int oldMinor)
+    {
+        Method[] methods = DatabaseMetaDataTest.class.getMethods();
+        for (int i = 0; i < methods.length; i++) {
+            Method m = methods[i];
+            if (m.getParameterTypes().length > 0 ||
+                    !m.getReturnType().equals(Void.TYPE)) {
+                continue;
+            }
+            String name = m.getName();
+            if (name.startsWith("test"))
+            {
+                if (!(name.equals("testGetTablesModify") && oldMinor < 1))
+                    suite.addTest(new DatabaseMetaDataTest(name));
+            }
+        }
+    }
 }
