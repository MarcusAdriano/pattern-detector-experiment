diff --git a/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResource.java b/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResource.java
index 7adcf0b2..1d1eb30b 100644
--- a/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResource.java
+++ b/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResource.java
@@ -723,15 +723,7 @@ private void setImportIsolationPolicy() throws BundleException, IOException, Inv
 	}
 	
 	private void setImportIsolationPolicy(RegionFilterBuilder builder, ImportPackageHeader header) throws InvalidSyntaxException {
-		if (header == null)
-			return;
 		String policy = RegionFilter.VISIBLE_PACKAGE_NAMESPACE;
-		for (ImportPackageHeader.Clause clause : header.getClauses()) {
-			ImportPackageRequirement requirement = new ImportPackageRequirement(clause, this);
-			String filter = requirement.getDirectives().get(ImportPackageRequirement.DIRECTIVE_FILTER);
-			builder.allow(policy, filter);
-		}
-		
 		// work around https://www.osgi.org/bugzilla/show_bug.cgi?id=144 
 		// In the first instance, what if the various weaving services were to have a property, 
 		// osgi.woven.packages, that was a comma separated list of packages that might be woven 
@@ -740,6 +732,13 @@ private void setImportIsolationPolicy(RegionFilterBuilder builder, ImportPackage
 		for (String pkg : wovenPackages) { 
 			builder.allow(policy, "(osgi.wiring.package=" + pkg + ")");
 		}
+		if (header == null)
+			return;
+		for (ImportPackageHeader.Clause clause : header.getClauses()) {
+			ImportPackageRequirement requirement = new ImportPackageRequirement(clause, this);
+			String filter = requirement.getDirectives().get(ImportPackageRequirement.DIRECTIVE_FILTER);
+			builder.allow(policy, filter);
+		}
 	}
 	
 	// First pass at this: really just a sketch. 
