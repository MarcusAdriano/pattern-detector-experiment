diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/FromVTI.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/FromVTI.java
index d1d64862..d14ea21f 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/FromVTI.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/FromVTI.java
@@ -881,10 +881,9 @@ public void bindExpressions(FromList fromListParam)
 
             //
             // Table Function parameters may not reference columns from other tables in the
-            // FROM list of the current query block. See DERBY-5579.
+            // FROM list of the current query block. See DERBY-5579. We also do not allow
+            // VTI parameters to refer to other VTIs.
             //
-            if ( isDerbyStyleTableFunction )
-            {
                 int referencedTableNumber = ref.getTableNumber();
                 
                 for ( int i = 0; i < fromListParam.size(); i++ )
@@ -892,6 +891,8 @@ public void bindExpressions(FromList fromListParam)
                     FromTable   fromTable = (FromTable) fromListParam.elementAt( i );
 
                     if ( referencedTableNumber == fromTable.getTableNumber() )
+                    {
+                    if ( isDerbyStyleTableFunction || (fromTable instanceof FromVTI) )
                     {
                         throw StandardException.newException
                             ( SQLState.LANG_BAD_TABLE_FUNCTION_PARAM_REF, ref.getSQLColumnName() );
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SysDiagVTIMappingTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SysDiagVTIMappingTest.java
index e8af964a..754a58a0 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SysDiagVTIMappingTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SysDiagVTIMappingTest.java
@@ -29,6 +29,7 @@
 import org.apache.derbyTesting.junit.SystemPropertyTestSetup;
 import org.apache.derbyTesting.junit.TestConfiguration;
 
+import java.sql.Connection;
 import java.sql.ResultSet;
 import java.sql.Statement;
 import java.sql.CallableStatement;
@@ -50,6 +51,8 @@
         "NUMUNFILLEDPAGES", "PAGESIZE", "ESTIMSPACESAVING", "TABLEID"
     };
 
+    private static  final   String  BAD_FROM_LIST_JOIN = "42ZB7";
+
     /**
      * Public constructor required for running test as standalone JUnit.
      */
@@ -476,6 +479,58 @@ public void testSpaceTable_0argConstructor() throws Exception
         JDBC.assertFullResultSet(rs, expRS, true);
     }
     
+    /**
+     * Verify that you can't join diagnostic VTIs to one another in the FROM list. See DERBY-5554.
+     */
+    public void test_vti2vtiJoinInFromList() throws Exception
+    {
+        Connection  conn = getConnection();
+        Statement st = createStatement();
+
+        // joins to real tables are ok
+        conn.prepareStatement
+            (
+             "select t1.*\n" +
+             "from \n" +
+             "    sys.systables systabs,\n" +
+             "    table ( syscs_diag.space_table( systabs.tablename ) ) as t1\n" +
+             "where systabs.tabletype = 'T'\n"
+             );
+        conn.prepareStatement
+            (
+             "select t1.*\n" +
+             "from \n" +
+             "    table ( syscs_diag.space_table( systabs.tablename ) ) as t1,\n" +
+             "    sys.systables systabs\n" +
+             "where systabs.tabletype = 'T'\n"
+             );
+
+        // can't join VTIs to one another in the FROM list
+        assertStatementError
+            (
+             BAD_FROM_LIST_JOIN,
+             st,
+             "select t1.*, t2.*\n" +
+             "from \n" +
+             "    sys.systables systabs,\n" +
+             "    table ( syscs_diag.space_table( systabs.tablename ) ) as t1,\n" +
+             "    table ( syscs_diag.space_table( t1.conglomeratename ) ) as t2\n" +
+             "where systabs.tabletype = 'T'\n"
+             );
+        assertStatementError
+            (
+             "42X04",
+             st,
+             "select t1.*, t2.*\n" +
+             "from \n" +
+             "    sys.systables systabs,\n" +
+             "    table ( syscs_diag.space_table( t1.conglomeratename ) ) as t2,\n" +
+             "    table ( syscs_diag.space_table( systabs.tablename ) ) as t1\n" +
+             "where systabs.tabletype = 'T'\n"
+             );
+
+    }
+    
     /**
      * Just run a couple of sanity checks to makes sure the table
      * mapping for org.apache.derby.diag.StatementDuration() works
