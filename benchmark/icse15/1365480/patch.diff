diff --git a/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintContainerImpl.java b/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintContainerImpl.java
index b1f536ec..45d72e2f 100644
--- a/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintContainerImpl.java
+++ b/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintContainerImpl.java
@@ -23,12 +23,9 @@
 import java.net.URL;
 import java.security.AccessControlContext;
 import java.security.AccessController;
-import java.security.DomainCombiner;
-import java.security.Permission;
 import java.security.PrivilegedAction;
 import java.security.PrivilegedActionException;
 import java.security.PrivilegedExceptionAction;
-import java.security.ProtectionDomain;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
@@ -110,6 +107,11 @@
 
     private static final Logger LOGGER = LoggerFactory.getLogger(BlueprintContainerImpl.class);
 
+    private static final Class[] SECURITY_BUGFIX = {
+            BlueprintDomainCombiner.class,
+            BlueprintProtectionDomain.class,
+    };
+    
     private enum State {
         Unknown,
         WaitForNamespaceHandlers,
@@ -164,7 +166,7 @@ public BlueprintContainerImpl(BundleContext bundleContext, Bundle extenderBundle
         this.executors = executors;
         this.processors = new ArrayList<Processor>();
         if (System.getSecurityManager() != null) {
-            this.accessControlContext = createAccessControlContext();
+            this.accessControlContext = BlueprintDomainCombiner.createAccessControlContext(bundleContext);
         }
         this.proxyManager = proxyManager;
     }
@@ -432,21 +434,6 @@ public Object run() {
         }
     }
     
-    private AccessControlContext createAccessControlContext() {
-        return new AccessControlContext(AccessController.getContext(),
-                new DomainCombiner() {               
-                    public ProtectionDomain[] combine(ProtectionDomain[] arg0,
-                                                      ProtectionDomain[] arg1) {                    
-                        return new ProtectionDomain[] { new ProtectionDomain(null, null) {                        
-                            public boolean implies(Permission permission) {                                                           
-                                return bundleContext.getBundle().hasPermission(permission);
-                            }
-                        } 
-                    };
-                }
-        });
-    }
-    
     public AccessControlContext getAccessControlContext() {
         return accessControlContext;
     }
diff --git a/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintDomainCombiner.java b/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintDomainCombiner.java
index e69de29b..7ba6e682 100644
--- a/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintDomainCombiner.java
+++ b/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintDomainCombiner.java
@@ -0,0 +1,44 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package org.apache.aries.blueprint.container;
+
+import java.security.AccessControlContext;
+import java.security.AccessController;
+import java.security.DomainCombiner;
+import java.security.ProtectionDomain;
+
+import org.osgi.framework.BundleContext;
+
+public class BlueprintDomainCombiner implements DomainCombiner {
+    private final BundleContext bundleContext;
+
+    public static AccessControlContext createAccessControlContext(BundleContext bundleContext) {
+        return new AccessControlContext(AccessController.getContext(), new BlueprintDomainCombiner(bundleContext));
+    }
+
+    BlueprintDomainCombiner(BundleContext bundleContext) {
+        this.bundleContext = bundleContext;
+    }
+
+    public ProtectionDomain[] combine(ProtectionDomain[] arg0,
+                                      ProtectionDomain[] arg1) {
+        return new ProtectionDomain[] { new BlueprintProtectionDomain(bundleContext) };
+    }
+
+}
diff --git a/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintProtectionDomain.java b/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintProtectionDomain.java
index e69de29b..c830626a 100644
--- a/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintProtectionDomain.java
+++ b/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintProtectionDomain.java
@@ -0,0 +1,42 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package org.apache.aries.blueprint.container;
+
+import java.security.Permission;
+import java.security.ProtectionDomain;
+
+import org.osgi.framework.BundleContext;
+
+public class BlueprintProtectionDomain extends ProtectionDomain {
+
+    private final BundleContext bundleContext;
+
+    public BlueprintProtectionDomain(BundleContext bundleContext) {
+        super(null, null);
+        this.bundleContext = bundleContext;
+    }
+
+    public boolean implies(Permission permission) {
+        try {
+            return bundleContext.getBundle().hasPermission(permission);
+        } catch (IllegalStateException e) {
+            return false;
+        }
+    }
+}
