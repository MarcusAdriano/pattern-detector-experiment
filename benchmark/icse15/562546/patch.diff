diff --git a/lucene/java/trunk/src/java/org/apache/lucene/index/IndexFileDeleter.java b/lucene/java/trunk/src/java/org/apache/lucene/index/IndexFileDeleter.java
index 2675517d..461b4593 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/index/IndexFileDeleter.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/index/IndexFileDeleter.java
@@ -23,6 +23,7 @@
 import org.apache.lucene.store.Directory;
 
 import java.io.IOException;
+import java.io.FileNotFoundException;
 import java.io.PrintStream;
 import java.util.Map;
 import java.util.HashMap;
@@ -123,6 +124,9 @@ public IndexFileDeleter(Directory directory, IndexDeletionPolicy policy, Segment
     this.docWriter = docWriter;
     this.infoStream = infoStream;
 
+    if (infoStream != null)
+      message("init: current segments file is \"" + segmentInfos.getCurrentSegmentFileName() + "\"");
+
     this.policy = policy;
     this.directory = directory;
 
@@ -156,7 +160,22 @@ public IndexFileDeleter(Directory directory, IndexDeletionPolicy policy, Segment
               message("init: load commit \"" + fileName + "\"");
             }
             SegmentInfos sis = new SegmentInfos();
+            try {
             sis.read(directory, fileName);
+            } catch (FileNotFoundException e) {
+              // LUCENE-948: on NFS (and maybe others), if
+              // you have writers switching back and forth
+              // between machines, it's very likely that the
+              // dir listing will be stale and will claim a
+              // file segments_X exists when in fact it
+              // doesn't.  So, we catch this and handle it
+              // as if the file does not exist
+              if (infoStream != null) {
+                message("init: hit FileNotFoundException when loading commit \"" + fileName + "\"; skipping this commit point");
+              }
+              sis = null;
+            }
+            if (sis != null) {
             CommitPoint commitPoint = new CommitPoint(sis);
             if (sis.getGeneration() == segmentInfos.getGeneration()) {
               currentCommitPoint = commitPoint;
@@ -167,6 +186,7 @@ public IndexFileDeleter(Directory directory, IndexDeletionPolicy policy, Segment
         }
       }
     }
+    }
 
     if (currentCommitPoint == null) {
       throw new CorruptIndexException("failed to locate current segments_N file");
diff --git a/lucene/java/trunk/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/java/trunk/src/java/org/apache/lucene/index/IndexWriter.java
index 02826ada..7cb68faf 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/index/IndexWriter.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/index/IndexWriter.java
@@ -928,6 +928,8 @@ public synchronized void close() throws CorruptIndexException, IOException {
 
       if (commitPending) {
         segmentInfos.write(directory);         // now commit changes
+        if (infoStream != null)
+          infoStream.println("close: wrote segments file \"" + segmentInfos.getCurrentSegmentFileName() + "\"");
         deleter.checkpoint(segmentInfos, true);
         commitPending = false;
         rollbackSegmentInfos = null;
@@ -1478,6 +1480,8 @@ public synchronized void abort() throws IOException {
   private void checkpoint() throws IOException {
     if (autoCommit) {
       segmentInfos.write(directory);
+      if (infoStream != null)
+        infoStream.println("checkpoint: wrote segments file \"" + segmentInfos.getCurrentSegmentFileName() + "\"");
     } else {
       commitPending = true;
     }
