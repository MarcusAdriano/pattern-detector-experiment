diff --git a/lucene/solr/trunk/src/java/org/apache/solr/core/SolrCore.java b/lucene/solr/trunk/src/java/org/apache/solr/core/SolrCore.java
index eee9091c..b360b9db 100644
--- a/lucene/solr/trunk/src/java/org/apache/solr/core/SolrCore.java
+++ b/lucene/solr/trunk/src/java/org/apache/solr/core/SolrCore.java
@@ -29,6 +29,7 @@
 import org.apache.solr.common.util.DOMUtil;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.common.util.SimpleOrderedMap;
+import org.apache.solr.handler.admin.ShowFileRequestHandler;
 import org.apache.solr.handler.component.*;
 import org.apache.solr.highlight.DefaultSolrHighlighter;
 import org.apache.solr.highlight.SolrHighlighter;
@@ -431,6 +432,9 @@ public SolrCore(String name, String dataDir, SolrConfig config, IndexSchema sche
       );
       highlighter.initalize( solrConfig );
 
+      // Handle things that should eventually go away
+      initDeprecatedSupport();
+
       final CountDownLatch latch = new CountDownLatch(1);
 
       try {
@@ -1320,6 +1324,46 @@ public ValueSourceParser getValueSourceParser(String parserName) {
     return valueSourceParsers.get(parserName);
   }
 
+  /**
+   * Manage anything that should be taken care of in case configs change
+   */
+  private void initDeprecatedSupport()
+  {
+    // TODO -- this should be removed in deprecation release...
+    String gettable = solrConfig.get("admin/gettableFiles", null );
+    if( gettable != null ) {
+      log.warning( 
+          "solrconfig.xml uses deprecated <admin/gettableFiles>, Please "+
+          "update your config to use the ShowFileRequestHandler." );
+      if( getRequestHandler( "admin/file" ) == null ) {
+        NamedList<String> invariants = new NamedList<String>();
+        
+        // Hide everything...
+        Set<String> hide = new HashSet<String>();
+        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); 
+        for( String file : configdir.list() ) {
+          hide.add( file.toUpperCase() );
+        }
+        
+        // except the "gettable" list
+        StringTokenizer st = new StringTokenizer( gettable );
+        while( st.hasMoreTokens() ) {
+          hide.remove( st.nextToken().toUpperCase() );
+        }
+        for( String s : hide ) {
+          invariants.add( ShowFileRequestHandler.HIDDEN, s );
+        }
+        
+        NamedList<Object> args = new NamedList<Object>();
+        args.add( "invariants", invariants );
+        ShowFileRequestHandler handler = new ShowFileRequestHandler();
+        handler.init( args );
+        reqHandlers.register("admin/file", handler);
+
+        log.warning( "adding ShowFileRequestHandler with hidden files: "+hide );
+      }
+    }
+  } 
 
   public CoreDescriptor getCoreDescriptor() {
     return coreDescriptor;
diff --git a/lucene/solr/trunk/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java b/lucene/solr/trunk/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java
index 3fd2fb8e..dd17929e 100644
--- a/lucene/solr/trunk/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java
+++ b/lucene/solr/trunk/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java
@@ -111,6 +111,11 @@ public void init(NamedList args) {
     }
   }
   
+  public Set<String> getHiddenFiles()
+  {
+    return hiddenFiles;
+  }
+  
   @Override
   public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException 
   {
diff --git a/lucene/solr/trunk/src/test/org/apache/solr/core/TestConfig.java b/lucene/solr/trunk/src/test/org/apache/solr/core/TestConfig.java
index 7d39f216..2975c9eb 100644
--- a/lucene/solr/trunk/src/test/org/apache/solr/core/TestConfig.java
+++ b/lucene/solr/trunk/src/test/org/apache/solr/core/TestConfig.java
@@ -17,6 +17,7 @@
 
 package org.apache.solr.core;
 
+import org.apache.solr.handler.admin.ShowFileRequestHandler;
 import org.apache.solr.util.AbstractSolrTestCase;
 import org.apache.solr.update.SolrIndexConfig;
 import org.w3c.dom.Node;
@@ -62,4 +63,17 @@ public void testLucene23Upgrades() throws Exception {
     boolean luceneAutoCommit = solrConfig.getBool("indexDefaults/luceneAutoCommit");
     assertTrue(luceneAutoCommit + " does not equal: " + false, luceneAutoCommit == false);
   }
+
+  // sometime if the config referes to old things, it must be replaced with new stuff
+  public void testAutomaticDeprecationSupport()
+  {
+    // make sure the "admin/file" handler is registered
+    ShowFileRequestHandler handler = (ShowFileRequestHandler) h.getCore().getRequestHandler( "admin/file" );
+    assertTrue( "file handler should have been automatically registered", handler!=null );
+
+    //System.out.println( handler.getHiddenFiles() );
+    // should not contain: <gettableFiles>solrconfig.xml scheam.xml admin-extra.html</gettableFiles>
+    assertFalse( handler.getHiddenFiles().contains( "scheam.xml".toUpperCase() ) );
+    assertTrue( handler.getHiddenFiles().contains( "PROTWORDS.TXT" ) );
+  }
 }
