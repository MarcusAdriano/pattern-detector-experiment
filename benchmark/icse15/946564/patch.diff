diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/hadoop/ColumnFamilyRecordReader.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/hadoop/ColumnFamilyRecordReader.java
index 721ae8be..2dd53f53 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/hadoop/ColumnFamilyRecordReader.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/hadoop/ColumnFamilyRecordReader.java
@@ -56,7 +56,11 @@
     private String cfName;
     private String keyspace;
 
-    public void close() {}
+    public void close() 
+    {
+        if (iter != null)
+            iter.close();
+    }
     
     public String getCurrentKey()
     {
@@ -102,6 +106,7 @@ public boolean nextKeyValue() throws IOException
         private int totalRead = 0;
         private int i = 0;
         private AbstractType comparator = DatabaseDescriptor.getComparator(keyspace, cfName);
+        private TSocket socket;
 
         private void maybeInit()
         {
@@ -111,7 +116,11 @@ private void maybeInit()
             
             if (rows != null)
                 return;
-            TSocket socket = new TSocket(getLocation(),
+            
+            // close previous connection if one is open
+            close();
+            
+            socket = new TSocket(getLocation(),
                                          DatabaseDescriptor.getThriftPort());
             TBinaryProtocol binaryProtocol = new TBinaryProtocol(socket, false, false);
             Cassandra.Client client = new Cassandra.Client(binaryProtocol);
@@ -226,6 +235,14 @@ public int rowsRead()
             }
             return new Pair<String, SortedMap<byte[], IColumn>>(ks.key, map);
         }
+        
+        public void close() 
+        {
+            if (socket != null && socket.isOpen())
+            {
+                socket.close();
+            }
+        }
     }
 
     private IColumn unthriftify(ColumnOrSuperColumn cosc)
