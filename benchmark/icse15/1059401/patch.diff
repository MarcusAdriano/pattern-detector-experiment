diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/RepairCallback.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/RepairCallback.java
index 553206b1..7c485bab 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/RepairCallback.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/RepairCallback.java
@@ -13,9 +13,9 @@
 
 public class RepairCallback<T> implements IAsyncCallback
 {
-    public final IResponseResolver<T> resolver;
+    private final IResponseResolver<T> resolver;
     private final List<InetAddress> endpoints;
-    protected final SimpleCondition condition = new SimpleCondition();
+    private final SimpleCondition condition = new SimpleCondition();
     private final long startTime;
 
     public RepairCallback(IResponseResolver<T> resolver, List<InetAddress> endpoints)
@@ -41,10 +41,9 @@ public T get() throws TimeoutException, DigestMismatchException, IOException
             throw new AssertionError(ex);
         }
 
-        return resolver.resolve();
+        return resolver.isDataPresent() ? resolver.resolve() : null;
     }
 
-
     public void response(Message message)
     {
         resolver.preprocess(message);
diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/StorageProxy.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/StorageProxy.java
index 7f9e6869..f6cfca71 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/StorageProxy.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/StorageProxy.java
@@ -867,7 +867,15 @@ protected void runMayThrow() throws IOException
             {
                 if (logger.isDebugEnabled())
                     logger.debug("Digest mismatch:", e);
-                repair(command, endpoints);
+                final RepairCallback<Row> callback = repair(command, endpoints);
+                Runnable runnable = new WrappedRunnable()
+                {
+                    public void runMayThrow() throws DigestMismatchException, IOException, TimeoutException
+                    {
+                        callback.get();
+                    }
+                };
+                repairExecutor.schedule(runnable, DatabaseDescriptor.getRpcTimeout(), TimeUnit.MILLISECONDS);
             }
         }
     }
