diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/util/FieldCacheSanityChecker.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/util/FieldCacheSanityChecker.java
index 5a9efd89..b61ea950 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/util/FieldCacheSanityChecker.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/util/FieldCacheSanityChecker.java
@@ -211,7 +211,7 @@ public void setRamUsageEstimator(RamUsageEstimator r) {
       
       if (seen.contains(rf)) continue;
 
-      List<Object> kids = getAllDescendentReaderKeys(rf.readerKey);
+      List<Object> kids = getAllDescendantReaderKeys(rf.readerKey);
       for (Object kidKey : kids) {
         ReaderField kid = new ReaderField(kidKey, rf.fieldName);
         
@@ -269,7 +269,7 @@ public void setRamUsageEstimator(RamUsageEstimator r) {
    * the hierarchy of subReaders building up a list of the objects 
    * returned by obj.getFieldCacheKey()
    */
-  private List<Object> getAllDescendentReaderKeys(Object seed) {
+  private List<Object> getAllDescendantReaderKeys(Object seed) {
     List<Object> all = new ArrayList<Object>(17); // will grow as we iter
     all.add(seed);
     for (int i = 0; i < all.size(); i++) {
