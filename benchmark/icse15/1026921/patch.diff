diff --git a/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/highlight/HighlighterTest.java b/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/highlight/HighlighterTest.java
index 101199da..5410ceed 100644
--- a/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/highlight/HighlighterTest.java
+++ b/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/highlight/HighlighterTest.java
@@ -707,6 +707,7 @@ public void testGetHighlightFields() {
 
     TestHarness.LocalRequestFactory lrf = h.getRequestFactory("standard", 0,
         10, args);
+
     SolrQueryRequest request = lrf.makeRequest("test");
     SolrHighlighter highlighter = request.getCore().getHighlighter();
     List<String> highlightFieldNames = Arrays.asList(highlighter
@@ -717,6 +718,7 @@ public void testGetHighlightFields() {
         highlightFieldNames.contains("text"));
     assertFalse("Expected to not highlight on field \"weight\"",
         highlightFieldNames.contains("weight"));
+    request.close();
 
     args.put("hl.fl", "foo_*");
     lrf = h.getRequestFactory("standard", 0, 10, args);
@@ -728,6 +730,7 @@ public void testGetHighlightFields() {
         .size());
     assertEquals("Expected to highlight on field \"foo_s\"", "foo_s",
         highlightFieldNames.get(0));
+    request.close();
   }
 
   @Test
diff --git a/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/spelling/SpellCheckCollatorTest.java b/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/spelling/SpellCheckCollatorTest.java
index 743305d2..77066a0d 100644
--- a/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/spelling/SpellCheckCollatorTest.java
+++ b/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/spelling/SpellCheckCollatorTest.java
@@ -33,6 +33,7 @@
 import org.apache.solr.handler.component.SearchComponent;
 import org.apache.solr.handler.component.SpellCheckComponent;
 import org.apache.solr.request.LocalSolrQueryRequest;
+import org.apache.solr.request.SolrQueryRequest;
 import org.apache.solr.request.SolrRequestHandler;
 import org.apache.solr.response.SolrQueryResponse;
 import org.junit.BeforeClass;
@@ -73,7 +74,9 @@ public void testCollateWithFilter() throws Exception
 		SolrRequestHandler handler = core.getRequestHandler("spellCheckCompRH");
 		SolrQueryResponse rsp = new SolrQueryResponse();
 		rsp.add("responseHeader", new SimpleOrderedMap());
-		handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);
+		SolrQueryRequest req = new LocalSolrQueryRequest(core, params);
+		handler.handleRequest(req, rsp);
+		req.close();
 		NamedList values = rsp.getValues();
 		NamedList spellCheck = (NamedList) values.get("spellcheck");
 		NamedList suggestions = (NamedList) spellCheck.get("suggestions");
@@ -104,7 +107,9 @@ public void testCollateWithMultipleRequestHandlers() throws Exception
 		SolrRequestHandler handler = core.getRequestHandler("spellCheckCompRH");
 		SolrQueryResponse rsp = new SolrQueryResponse();
 		rsp.add("responseHeader", new SimpleOrderedMap());
-		handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);
+		SolrQueryRequest req = new LocalSolrQueryRequest(core, params);
+		handler.handleRequest(req, rsp);
+		req.close();
 		NamedList values = rsp.getValues();
 		NamedList spellCheck = (NamedList) values.get("spellcheck");
 		NamedList suggestions = (NamedList) spellCheck.get("suggestions");
@@ -117,7 +122,9 @@ public void testCollateWithMultipleRequestHandlers() throws Exception
 		handler = core.getRequestHandler("spellCheckCompRH1");
 		rsp = new SolrQueryResponse();
 		rsp.add("responseHeader", new SimpleOrderedMap());
-		handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);
+		req = new LocalSolrQueryRequest(core, params);
+		handler.handleRequest(req, rsp);
+		req.close();
 		values = rsp.getValues();
 		spellCheck = (NamedList) values.get("spellcheck");
 		suggestions = (NamedList) spellCheck.get("suggestions");
@@ -147,7 +154,9 @@ public void testExtendedCollate() throws Exception {
 		SolrRequestHandler handler = core.getRequestHandler("spellCheckCompRH");
 		SolrQueryResponse rsp = new SolrQueryResponse();
 		rsp.add("responseHeader", new SimpleOrderedMap());
-		handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);
+		SolrQueryRequest req = new LocalSolrQueryRequest(core, params);
+		handler.handleRequest(req, rsp);
+		req.close();
 		NamedList values = rsp.getValues();
 		NamedList spellCheck = (NamedList) values.get("spellcheck");
 		NamedList suggestions = (NamedList) spellCheck.get("suggestions");
@@ -162,7 +171,9 @@ public void testExtendedCollate() throws Exception {
 		handler = core.getRequestHandler("spellCheckCompRH");
 		rsp = new SolrQueryResponse();
 		rsp.add("responseHeader", new SimpleOrderedMap());
-		handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);
+		req = new LocalSolrQueryRequest(core, params);
+		handler.handleRequest(req, rsp);
+    req.close();
 		values = rsp.getValues();
 		spellCheck = (NamedList) values.get("spellcheck");
 		suggestions = (NamedList) spellCheck.get("suggestions");
@@ -178,7 +189,9 @@ public void testExtendedCollate() throws Exception {
 		handler = core.getRequestHandler("spellCheckCompRH");
 		rsp = new SolrQueryResponse();
 		rsp.add("responseHeader", new SimpleOrderedMap());
-		handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);
+		req = new LocalSolrQueryRequest(core, params);
+		handler.handleRequest(req, rsp);
+		req.close();
 		values = rsp.getValues();
 		spellCheck = (NamedList) values.get("spellcheck");
 		suggestions = (NamedList) spellCheck.get("suggestions");
@@ -195,7 +208,9 @@ public void testExtendedCollate() throws Exception {
 		handler = core.getRequestHandler("spellCheckCompRH");
 		rsp = new SolrQueryResponse();
 		rsp.add("responseHeader", new SimpleOrderedMap());
-		handler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);
+		req = new LocalSolrQueryRequest(core, params);
+		handler.handleRequest(req, rsp);
+		req.close();
 		values = rsp.getValues();
 		spellCheck = (NamedList) values.get("spellcheck");
 		suggestions = (NamedList) spellCheck.get("suggestions");
diff --git a/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest.java b/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest.java
index 90d0b911..6133ead2 100644
--- a/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest.java
+++ b/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest.java
@@ -35,6 +35,7 @@
 import org.apache.solr.common.util.ContentStreamBase;
 import org.apache.solr.core.SolrCore;
 import org.apache.solr.handler.XmlUpdateRequestHandler;
+import org.apache.solr.request.SolrQueryRequest;
 import org.apache.solr.request.SolrQueryRequestBase;
 import org.apache.solr.response.SolrQueryResponse;
 import org.junit.Before;
@@ -61,6 +62,15 @@ public void setUp() throws Exception {
     assertU(commit());
   }
   
+  void checkNumDocs(int n) {
+    SolrQueryRequest req = req();
+    try {
+      assertEquals(n, req.getSearcher().getReader().numDocs());
+    } finally {
+      req.close();
+    }
+  }
+
   @Test
   public void testDupeDetection() throws Exception {
     SolrCore core = h.getCore();
@@ -80,14 +90,14 @@ public void testDupeDetection() throws Exception {
 
     addDoc(commit());
 
-    assertEquals(1l, core.getSearcher().get().getReader().numDocs());
+    checkNumDocs(1);
 
     addDoc(adoc("id", "3b", "v_t", "Hello Dude man!", "t_field",
         "fake value galore"));
 
     addDoc(commit());
 
-    assertEquals(2l, core.getSearcher().get().getReader().numDocs());
+    checkNumDocs(2);
 
     assertU(adoc("id", "5a", "name", "ali babi", "v_t", "MMMMM"));
 
@@ -97,14 +107,14 @@ public void testDupeDetection() throws Exception {
 
     addDoc(commit());
 
-    assertEquals(3l, core.getSearcher().get().getReader().numDocs());
+    checkNumDocs(3);
 
     addDoc(adoc("id", "same", "name", "baryy white", "v_t", "random1"));
     addDoc(adoc("id", "same", "name", "bishop black", "v_t", "random2"));
 
     addDoc(commit());
 
-    assertEquals(4l, core.getSearcher().get().getReader().numDocs());
+    checkNumDocs(4);
     factory.setEnabled(false);
   }
 
@@ -181,7 +191,7 @@ public void run() {
 
     assertU(commit());
 
-    assertEquals(1l, core.getSearcher().get().getReader().numDocs());
+    checkNumDocs(1);
     factory.setEnabled(false);
   }
 
