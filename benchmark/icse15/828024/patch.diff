diff --git a/lucene/java/trunk/src/java/org/apache/lucene/search/ParallelMultiSearcher.java b/lucene/java/trunk/src/java/org/apache/lucene/search/ParallelMultiSearcher.java
index 1d78087f..3225849f 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/search/ParallelMultiSearcher.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/search/ParallelMultiSearcher.java
@@ -199,7 +199,7 @@ public Query rewrite(Query original) throws IOException {
   private int nDocs;
   private TopDocs docs;
   private int i;
-  private PriorityQueue<?> hq;
+  private PriorityQueue<? extends ScoreDoc> hq;
   private int[] starts;
   private IOException ioe;
   private Sort sort;
@@ -230,6 +230,7 @@ public MultiSearcherThread(Searchable searchable, Weight weight,
     this.sort = sort;
   }
 
+  @SuppressWarnings ("unchecked")
   public void run() {
     try {
       docs = (sort == null) ? searchable.search (weight, filter, nDocs)
@@ -266,7 +267,7 @@ public void run() {
         scoreDoc.doc += starts[i]; // convert doc 
         //it would be so nice if we had a thread-safe insert 
         synchronized (hq) {
-          if (scoreDoc == ((HitQueue) hq).insertWithOverflow(scoreDoc))
+          if (scoreDoc == ((PriorityQueue<ScoreDoc>) hq).insertWithOverflow(scoreDoc))
             break;
         } // no more scores > minScore
       }
