diff --git a/lucene/solr/branches/branch-1.4/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java b/lucene/solr/branches/branch-1.4/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
index 30020021..1f1b2d9a 100644
--- a/lucene/solr/branches/branch-1.4/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
+++ b/lucene/solr/branches/branch-1.4/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
@@ -56,6 +56,7 @@
 import org.apache.solr.common.params.SolrParams;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.common.util.SimpleOrderedMap;
+import org.apache.solr.common.util.Base64;
 import org.apache.solr.handler.RequestHandlerBase;
 import org.apache.solr.request.SolrQueryRequest;
 import org.apache.solr.request.SolrQueryResponse;
@@ -244,11 +245,19 @@ private static String getFieldFlags( SchemaField f )
       f.add( "schema", getFieldFlags( sfield ) );
       f.add( "flags", getFieldFlags( fieldable ) );
       
-      Term t = new Term( fieldable.name(), fieldable.stringValue() );
+      Term t = new Term(fieldable.name(), ftype!=null ? ftype.storedToIndexed(fieldable) : fieldable.stringValue());
+
       f.add( "value", (ftype==null)?null:ftype.toExternal( fieldable ) );
+
+      // TODO: this really should be "stored"
       f.add( "internal", fieldable.stringValue() );  // may be a binary number
+
+      byte[] arr = fieldable.getBinaryValue();
+      if (arr != null) {
+        f.add( "binary", Base64.byteArrayToBase64(arr, 0, arr.length));
+      }
       f.add( "boost", fieldable.getBoost() );
-      f.add( "docFreq", reader.docFreq( t ) ); // this can be 0 for non-indexed fields
+      f.add( "docFreq", t.text()==null ? 0 : reader.docFreq( t ) ); // this can be 0 for non-indexed fields
             
       // If we have a term vector, return that
       if( fieldable.isTermVectorStored() ) {
diff --git a/lucene/solr/branches/branch-1.4/src/test/org/apache/solr/handler/admin/LukeRequestHandlerTest.java b/lucene/solr/branches/branch-1.4/src/test/org/apache/solr/handler/admin/LukeRequestHandlerTest.java
index a121932e..c9fd0d09 100644
--- a/lucene/solr/branches/branch-1.4/src/test/org/apache/solr/handler/admin/LukeRequestHandlerTest.java
+++ b/lucene/solr/branches/branch-1.4/src/test/org/apache/solr/handler/admin/LukeRequestHandlerTest.java
@@ -17,17 +17,25 @@
 
 package org.apache.solr.handler.admin;
 
-import junit.framework.TestCase;
-
-import org.apache.solr.common.util.SimpleOrderedMap;
+import org.apache.solr.util.AbstractSolrTestCase;
 
 /**
  * :TODO: currently only tests some of the utilities in the LukeRequestHandler
  */
-public class LukeRequestHandlerTest extends TestCase {
+public class LukeRequestHandlerTest extends AbstractSolrTestCase {
+
+  @Override
+  public String getSchemaFile() {
+    return "schema12.xml";
+  }
+
+  @Override
+  public String getSolrConfigFile() {
+    return "solrconfig.xml";
+  }
   
   /** tests some simple edge cases */
-  public void testHistogramPowerOfTwoBucket() {
+  public void doTestHistogramPowerOfTwoBucket() {
     assertHistoBucket(1,  1);
     assertHistoBucket(2,  2);
     assertHistoBucket(4,  3);
@@ -45,8 +53,47 @@ public void testHistogramPowerOfTwoBucket() {
     assertHistoBucket(MAX_VALID*2, MAX_VALID+1 );
     
   }
+
   private void assertHistoBucket(int expected, int in) {
     assertEquals("histobucket: " + in, expected,
                  LukeRequestHandler.TermHistogram.getPowerOfTwoBucket( in ));
   }
+
+  public void testLuke() {
+    doTestHistogramPowerOfTwoBucket();
+
+    assertU(adoc("id","SOLR1000", "name","Apache Solr",
+      "solr_si", "10",
+      "solr_sl", "10",
+      "solr_sf", "10",
+      "solr_sd", "10",
+      "solr_s", "10",
+      "solr_sI", "10",
+      "solr_sS", "10",
+      "solr_t", "10",
+      "solr_tt", "10",
+      "solr_b", "true",
+      "solr_i", "10",
+      "solr_l", "10",
+      "solr_f", "10",
+      "solr_d", "10",
+      "solr_ti", "10",
+      "solr_tl", "10",
+      "solr_tf", "10",
+      "solr_td", "10",
+      "solr_pi", "10",
+      "solr_pl", "10",
+      "solr_pf", "10",
+      "solr_pd", "10",
+      "solr_dt", "2000-01-01T01:01:01Z",
+      "solr_tdt", "2000-01-01T01:01:01Z",
+      "solr_pdt", "2000-01-01T01:01:01Z"
+    ));
+    assertU(commit());
+
+    // test that Luke can handle all of the field types
+    assertQ(req("qt","/admin/luke", "id","SOLR1000"));
+  }
+
+
 }
