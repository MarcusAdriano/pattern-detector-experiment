diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java b/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java
index 49994812..492c0298 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java
@@ -31,6 +31,7 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.TimeoutException;
 import java.util.concurrent.locks.ReentrantLock;
+import java.util.concurrent.locks.Lock;
 import javax.management.MBeanServer;
 import javax.management.ObjectName;
 
@@ -80,14 +81,9 @@
     private CompactionExecutor executor = new CompactionExecutor();
     private Map<ColumnFamilyStore, Integer> estimatedCompactions = new NonBlockingHashMap<ColumnFamilyStore, Integer>();
     
-    public void lockCompactions()
+    public Lock getCompactionLock()
     {
-        compactionLock.lock();
-    }
-    
-    public void unlockCompactions()
-    {
-        compactionLock.unlock();
+        return compactionLock;
     }
 
     /**
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropColumnFamily.java b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropColumnFamily.java
index b00bb044..6710f3cb 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropColumnFamily.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropColumnFamily.java
@@ -82,6 +82,9 @@ public void beforeApplyModels()
     @Override
     public void applyModels() throws IOException
     {
+        acquireLocks();
+        try
+        {
         // reinitialize the table.
         KSMetaData existing = DatabaseDescriptor.getTableDefinition(tableName);
         CFMetaData cfm = existing.cfMetaData().get(cfName);
@@ -94,6 +97,11 @@ public void applyModels() throws IOException
             Table.open(ksm.name).dropCf(cfm.cfId);
         }
     }
+        finally
+        {
+            releaseLocks();
+        }
+    }
     
     public void subdeflate(org.apache.cassandra.db.migration.avro.Migration mi)
     {
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropKeyspace.java b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropKeyspace.java
index 476c136d..a8adb63b 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropKeyspace.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropKeyspace.java
@@ -60,6 +60,9 @@ public void beforeApplyModels()
     @Override
     public void applyModels() throws IOException
     {
+        acquireLocks();
+        try
+        {
         KSMetaData ksm = DatabaseDescriptor.getTableDefinition(name);
         // remove the table from the static instances.
         Table table = Table.clear(ksm.name);
@@ -85,6 +88,11 @@ public void applyModels() throws IOException
             HintedHandOffManager.renameHints(name, null);
         }
     }
+        finally
+        {
+            releaseLocks();
+        }
+    }
     
     public void subdeflate(org.apache.cassandra.db.migration.avro.Migration mi)
     {
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/Migration.java b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/Migration.java
index 3f1fa51e..ce99ff24 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/Migration.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/Migration.java
@@ -92,6 +92,19 @@ protected Migration() { /* pass */ }
         clientMode = StorageService.instance.isClientMode();
     }
 
+    // block compactions and flushing.
+    protected final void acquireLocks()
+    {
+        CompactionManager.instance.getCompactionLock().lock();
+        Table.getFlushLock().lock();
+    }
+    
+    protected final void releaseLocks()
+    {
+        Table.getFlushLock().unlock();
+        CompactionManager.instance.getCompactionLock().unlock();
+    }
+
     /** override this to perform logic before writing the migration or applying it.  defaults to nothing. */
     public void beforeApplyModels() {}
     
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/UpdateColumnFamily.java b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/UpdateColumnFamily.java
index 3e671d9b..f40deae5 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/UpdateColumnFamily.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/UpdateColumnFamily.java
@@ -12,6 +12,7 @@
 import org.apache.cassandra.config.DatabaseDescriptor;
 import org.apache.cassandra.config.KSMetaData;
 import org.apache.cassandra.db.ColumnFamilyStore;
+import org.apache.cassandra.db.CompactionManager;
 import org.apache.cassandra.db.SystemTable;
 import org.apache.cassandra.db.Table;
 import org.apache.cassandra.utils.FBUtilities;
@@ -78,6 +79,9 @@ public void beforeApplyModels()
 
     void applyModels() throws IOException
     {
+        acquireLocks();
+        try
+        {
         logger.debug("Updating " + oldCfm + " to " + newCfm);
         KSMetaData newKsm = makeNewKeyspaceDefinition(DatabaseDescriptor.getTableDefinition(newCfm.tableName));
         DatabaseDescriptor.setTableDefinition(newKsm, newVersion);
@@ -103,6 +107,11 @@ void applyModels() throws IOException
             }
         }
     }
+        finally
+        {
+            releaseLocks();
+        }
+    }
 
     public void subdeflate(org.apache.cassandra.db.migration.avro.Migration mi)
     {
