diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/SystemTable.java b/cassandra/trunk/src/java/org/apache/cassandra/db/SystemTable.java
index 50647a5f..d8c2e63f 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/SystemTable.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/SystemTable.java
@@ -36,6 +36,7 @@
 import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.config.DatabaseDescriptor;
 import org.apache.cassandra.db.clock.TimestampReconciler;
+import org.apache.cassandra.db.commitlog.CommitLog;
 import org.apache.cassandra.db.filter.QueryFilter;
 import org.apache.cassandra.db.filter.QueryPath;
 import org.apache.cassandra.db.marshal.BytesType;
@@ -122,6 +123,19 @@ public static synchronized void updateToken(Token token)
         {
             throw new IOError(e);
         }
+
+        try
+        {
+            Table.open(Table.SYSTEM_TABLE).getColumnFamilyStore(SystemTable.STATUS_CF).forceBlockingFlush();
+        }
+        catch (ExecutionException e)
+        {
+            throw new RuntimeException(e);
+        }
+        catch (InterruptedException e)
+        {
+            throw new AssertionError(e);
+        }
     }
 
     /**
@@ -186,7 +200,7 @@ public boolean accept(File dir, String name)
         assert clusterCol != null;
         if (!DatabaseDescriptor.getPartitioner().getClass().getName().equals(new String(partitionerCol.value(), UTF_8)))
             throw new ConfigurationException("Detected partitioner mismatch! Did you change the partitioner?");
-        if (!DatabaseDescriptor.getClusterName().equals(new String(clusterCol.value())));
+        if (!DatabaseDescriptor.getClusterName().equals(new String(clusterCol.value())))
             throw new ConfigurationException("Saved cluster name " + new String(clusterCol.value()) + " != configured name " + DatabaseDescriptor.getClusterName());
     }
 
@@ -201,7 +215,7 @@ public static Token getSavedToken()
     public static int incrementAndGetGeneration() throws IOException
     {
         Table table = Table.open(Table.SYSTEM_TABLE);
-        QueryFilter filter = QueryFilter.getNamesFilter(decorate(LOCATION_KEY), new QueryPath(STATUS_CF), TOKEN);
+        QueryFilter filter = QueryFilter.getNamesFilter(decorate(LOCATION_KEY), new QueryPath(STATUS_CF), GENERATION);
         ColumnFamily cf = table.getColumnFamilyStore(STATUS_CF).getColumnFamily(filter);
 
         int generation;
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
index e159c61c..e8f016bf 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
@@ -420,10 +420,14 @@ public synchronized void initServer() throws IOException
                 else
                 {
                     token = partitioner_.getTokenFactory().fromString(initialToken);
-                    logger_.info("Saved Token not found. Using " + token + " from configuration");
+                    logger_.info("Saved token not found. Using " + token + " from configuration");
                 }
                 SystemTable.updateToken(token);
             }
+            else
+            {
+                logger_.info("Using saved token " + token);
+            }
             SystemTable.setBootstrapped(true);
             tokenMetadata_.updateNormalToken(token, FBUtilities.getLocalAddress());
             Gossiper.instance.addLocalApplicationState(ApplicationState.STATUS, valueFactory.normal(token));
