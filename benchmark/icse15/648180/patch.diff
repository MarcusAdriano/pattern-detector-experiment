diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/Blob.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/Blob.java
index d3f1ef44..a816363e 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/Blob.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/Blob.java
@@ -30,8 +30,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 public class Blob extends Lob implements java.sql.Blob {
     
-    
-    
     //-----------------------------state------------------------------------------
 
     byte[] binaryString_ = null;
@@ -610,7 +608,6 @@ public void free()
         
         //now that free has been called the Blob object is no longer
         //valid
-        
         isValid_ = false;
         try {            
             synchronized (agent_.connection_) {
@@ -735,9 +732,6 @@ protected boolean isSubString(byte[] pattern, int index) {
         return true;
     }
     
-    
-    
-
     /**
      * Materialize the stream used for input to the database.
      *
diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/Clob.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/Clob.java
index 480b9a9c..45a8f1a5 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/Clob.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/Clob.java
@@ -48,17 +48,12 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
     protected String encoding_ = "UNICODE";
 
- 
-
-    
-    
     //---------------------constructors/finalizer---------------------------------
     public Clob(Agent agent, String string) {
 
         this(agent,
              false);
 
-                
         string_ = string;
         setSqlLength(string_.length());
         dataType_ |= STRING;
@@ -241,7 +236,6 @@ public long length() throws SQLException {
         }
     }
 
-    
   /**
    * Returns a copy of the specified substring
    * in the <code>CLOB</code> value
diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/Lob.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/Lob.java
index d334ecb5..5e5d3f04 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/Lob.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/Lob.java
@@ -387,21 +387,20 @@ void checkForLocatorValidity() throws SqlException {
     }
     
     /**
-     * Checks is isValid is true and whether the transaction that
+     * Checks if isValid is true and whether the transaction that
      * created the Lob is still active. If any of which is not true throws 
      * a SQLException stating that a method has been called on
-     * an invalid LOB object
+     * an invalid LOB object.
      *
-     * @throws SQLException if isValid is not true
+     * @throws SQLException if isValid is not true or the transaction that
+     * created the Lob is not active
      */
     protected void checkValidity() throws SQLException{
     	
-    	/**
-    	 * If there isn't an open connection, the Lob is invalid.
-    	 */
-    	try{
+        // If there isn't an open connection, the Lob is invalid.
+        try {
     		agent_.connection_.checkForClosedConnection();
-    	}catch(SqlException se){
+        } catch (SqlException se) {
     		throw se.getSQLException();
     	}
     	
