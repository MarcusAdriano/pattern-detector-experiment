diff --git a/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/StartAction.java b/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/StartAction.java
index 4f30ae7a..3b050289 100644
--- a/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/StartAction.java
+++ b/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/StartAction.java
@@ -236,6 +236,8 @@ private static void setExportIsolationPolicy(RegionFilterBuilder builder, Subsys
 	}
 	
 	private void startBundleResource(Resource resource, Coordination coordination) throws BundleException {
+		if (target.isRoot())
+			return;
 		final Bundle bundle = ((BundleRevision)resource).getBundle();
 		if ((bundle.getState() & (Bundle.STARTING | Bundle.ACTIVE)) != 0)
 			return;
diff --git a/aries/trunk/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/RootSubsystemTest.java b/aries/trunk/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/RootSubsystemTest.java
index a6b144ed..561c515c 100644
--- a/aries/trunk/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/RootSubsystemTest.java
+++ b/aries/trunk/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/RootSubsystemTest.java
@@ -15,6 +15,10 @@
 
 import static org.junit.Assert.assertEquals;
 
+import java.io.File;
+import java.io.IOException;
+
+import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.ops4j.pax.exam.junit.JUnit4TestRunner;
@@ -26,8 +30,32 @@
 
 @RunWith(JUnit4TestRunner.class)
 public class RootSubsystemTest extends SubsystemTest {
+	private static final String BUNDLE_A = "bundle.a";
+	
+	private static boolean createdTestFiles;
+	@Before
+	public static void createTestFiles() throws Exception {
+		if (createdTestFiles)
+			return;
+		createBundleA();
+		createdTestFiles = true;
+	}
+	
+	private static void createBundleA() throws IOException {
+		createBundle(BUNDLE_A);
+	}
+	
 	// TODO Test root subsystem headers.
 	
+	@Test
+	public void testDoNotStartExtraneousRootRegionBundles() throws Exception {
+		bundleContext.installBundle(new File(BUNDLE_A).toURI().toURL().toString());
+		getSubsystemCoreBundle().stop();
+		getSubsystemCoreBundle().start();
+		Bundle bundleA = findBundleBySymbolicName(BUNDLE_A);
+		assertEquals("Extraneous root region bundle should not be started", Bundle.INSTALLED, bundleA.getState());
+	}
+	
 	@Test
 	public void testId() {
 		assertEquals("Wrong root ID", getRootSubsystem().getSubsystemId(), 0);
