diff --git a/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Location.java b/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Location.java
index 9ba81a67..8ed5b68c 100644
--- a/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Location.java
+++ b/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Location.java
@@ -55,9 +55,21 @@ public Location(String location) throws MalformedURLException, URISyntaxExceptio
       String scheme = locationUri.getScheme();
       if (LocationType.SUBSYSTEM.scheme.equals(scheme)) {
         type = LocationType.SUBSYSTEM;
-        subsystemUri = new SubsystemUri(location);
+        SubsystemUri ssUri;
+        try {
+          ssUri = new SubsystemUri(location);
+        } catch (Exception ex) {
+          // In some cases the SubsystemUri can't be parsed by the SubsystemUri parser.
+          ssUri = null;
+        }
+        subsystemUri = ssUri;
+        if (subsystemUri != null) {
         url = subsystemUri.getURL(); // subsystem uris may contain a nested url.
         uri = (url==null) ? null : url.toURI(); 
+        } else {
+          url = null;
+          uri = locationUri;
+        }
       } else if (LocationType.IDIRFINDER.scheme.equals(scheme)) {
         type = LocationType.IDIRFINDER;
         subsystemUri = null;
@@ -82,11 +94,11 @@ public String getValue() {
   }
     
   public String getSymbolicName() {
-    return (type==LocationType.SUBSYSTEM) ? subsystemUri.getSymbolicName() : null;
+    return (subsystemUri!=null) ? subsystemUri.getSymbolicName() : null;
   }
     
   public Version getVersion() {
-    return (type==LocationType.SUBSYSTEM) ? subsystemUri.getVersion() : null;
+    return (subsystemUri!=null) ? subsystemUri.getVersion() : null;
   }
 
   public IDirectory open() throws IOException, URISyntaxException {
diff --git a/aries/trunk/subsystem/subsystem-core/src/test/java/org/apache/aries/subsystem/core/internal/LocationTest.java b/aries/trunk/subsystem/subsystem-core/src/test/java/org/apache/aries/subsystem/core/internal/LocationTest.java
index c9794f43..0b792a56 100644
--- a/aries/trunk/subsystem/subsystem-core/src/test/java/org/apache/aries/subsystem/core/internal/LocationTest.java
+++ b/aries/trunk/subsystem/subsystem-core/src/test/java/org/apache/aries/subsystem/core/internal/LocationTest.java
@@ -20,6 +20,7 @@
 import java.net.MalformedURLException;
 
 import org.junit.Test;
+import org.osgi.framework.Version;
 
 public class LocationTest {
 	@Test
@@ -48,4 +49,26 @@ public void testAnyLocationString() {
 			fail("Wrong exception");
 		}
 	}
+
+    @Test
+    public void testSubsystemLocation() throws Exception {
+        // In some cases the following location string is generated
+        String locationString = "subsystem://?Subsystem-SymbolicName=org.osgi.service.subsystem.root&Subsystem-Version=1.2.3";
+
+        Location location = new Location(locationString);
+        assertEquals(locationString, location.getValue());
+        assertEquals("org.osgi.service.subsystem.root", location.getSymbolicName());
+        assertEquals(Version.parseVersion("1.2.3"), location.getVersion());
+    }
+
+    @Test
+	public void testSubsystemLocationInvalid() throws Exception {
+	    // In some cases the following location string is generated
+	    String locationString = "subsystem://?Subsystem-SymbolicName=org.osgi.service.subsystem.root&Subsystem-Version=1.0.0!/my-subsystem@0.5.0";
+
+	    Location location = new Location(locationString);
+	    assertEquals(locationString, location.getValue());
+	    assertNull(location.getSymbolicName());
+	    assertNull(location.getVersion());
+	}
 }
