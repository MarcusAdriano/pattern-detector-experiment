diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/StorageFactoryService.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/StorageFactoryService.java
index 4595907f..b5b99fde 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/StorageFactoryService.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/StorageFactoryService.java
@@ -804,10 +804,15 @@ private void    vetService( StorageFactory storageFactory, String serviceName )
 
         if ( !service_properties.exists() )
         {
+            // DERBY-5526 Try to roughly determine if this was a partially created database by 
+            // seeing if the seg0 directory exists.
+            StorageFile seg0 = storageFactory.newStorageFile("seg0");
+            if (seg0.exists()) {
             throw StandardException.newException
                 ( SQLState.SERVICE_PROPERTIES_MISSING, serviceName, PersistentService.PROPERTIES_NAME );
         }
     }
+    }
 
     private String getDirectoryPath( String name)
     {
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/HalfCreatedDatabaseTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/HalfCreatedDatabaseTest.java
index 63f1eb1c..0478dd43 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/HalfCreatedDatabaseTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/HalfCreatedDatabaseTest.java
@@ -23,11 +23,14 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import java.io.File;
 import java.sql.SQLException;
 
+import javax.sql.DataSource;
+
 import junit.framework.Test;
 import junit.framework.TestSuite;
 
 import org.apache.derbyTesting.junit.BaseTestCase;
 import org.apache.derbyTesting.junit.BaseJDBCTestCase;
+import org.apache.derbyTesting.junit.JDBCDataSource;
 import org.apache.derbyTesting.junit.SecurityManagerSetup;
 import org.apache.derbyTesting.junit.TestConfiguration;
 import org.apache.derbyTesting.junit.JDBC;
@@ -149,6 +152,31 @@ public  void    test_4589() throws Exception
         renamedProperties.renameTo( serviceProperties );
     }
     
+    /**
+     * Verify that a user data dir (in this case empty) throws the old message
+     * 
+     */
+    public void test_5526()  throws SQLException {
+        String mydatadirStr = BaseTestCase.getSystemProperty("derby.system.home") +
+                File.separator + "mydatadir";
+        File mydatadir = new File(mydatadirStr);
+        assertTrue(mydatadir.mkdir());
+        DataSource ds = JDBCDataSource.getDataSource(mydatadirStr);
+        JDBCDataSource.setBeanProperty(ds, "createDatabase", "create");
+        try {
+            ds.getConnection();
+            fail("Should not be able to create database on existing directory " + mydatadirStr);
+        } catch (SQLException se) {
+            // should be nested exception XJ041 -> XBM0J (Directory exists)
+            assertSQLState("XJ041",se);
+            se = se.getNextException();
+            assertSQLState("XBM0J",se);
+        } finally {
+            BaseTestCase.removeDirectory(mydatadir);
+        }
+        
+    }
+    
 }
 
 
