diff --git a/cassandra/trunk/src/java/org/apache/cassandra/streaming/IncomingStreamReader.java b/cassandra/trunk/src/java/org/apache/cassandra/streaming/IncomingStreamReader.java
index 90d51a87..19e3f0a1 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/streaming/IncomingStreamReader.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/streaming/IncomingStreamReader.java
@@ -40,7 +40,8 @@ public IncomingStreamReader(SocketChannel socketChannel)
     {
         this.socketChannel = socketChannel;
         InetSocketAddress remoteAddress = (InetSocketAddress)socketChannel.socket().getRemoteSocketAddress();
-        pendingFile = StreamInManager.getStreamContext(remoteAddress.getAddress());
+        // this is the part where we are assuming files come in order from a particular host.
+        pendingFile = StreamInManager.getNextIncomingFile(remoteAddress.getAddress());
         StreamInManager.activeStreams.put(remoteAddress.getAddress(), pendingFile);
         assert pendingFile != null;
         streamStatus = StreamInManager.getStreamStatus(remoteAddress.getAddress());
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/streaming/StreamInManager.java b/cassandra/trunk/src/java/org/apache/cassandra/streaming/StreamInManager.java
index 0ee84149..b5ca085f 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/streaming/StreamInManager.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/streaming/StreamInManager.java
@@ -42,11 +42,18 @@
 
     public static final Multimap<InetAddress, PendingFile> activeStreams = Multimaps.synchronizedMultimap(HashMultimap.<InetAddress, PendingFile>create());
 
-    public synchronized static PendingFile getStreamContext(InetAddress key)
+    /**
+     * gets the next file to be received given a host key.
+     * @param key
+     * @return next file to receive.
+     * @throws IndexOutOfBoundsException if you are unfortunate enough to call this on an empty context. 
+     */
+    public synchronized static PendingFile getNextIncomingFile(InetAddress key)
     {        
         List<PendingFile> context = ctxBag_.get(key);
         if ( context == null )
             throw new IllegalStateException("Streaming context has not been set for " + key);
+        // will thrown an IndexOutOfBoundsException if nothing is there.
         PendingFile pendingFile = context.remove(0);
         if ( context.isEmpty() )
             ctxBag_.remove(key);
