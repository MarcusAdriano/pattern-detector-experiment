diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/store/raw/data/DataFactory.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/store/raw/data/DataFactory.java
index 4c975d56..e6660594 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/store/raw/data/DataFactory.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/store/raw/data/DataFactory.java
@@ -23,6 +23,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 import org.apache.derby.iapi.store.raw.ContainerKey;
 
+import org.apache.derby.iapi.services.daemon.DaemonService;
 import org.apache.derby.iapi.services.daemon.Serviceable;
 import org.apache.derby.iapi.services.context.ContextManager;
 
@@ -253,6 +254,14 @@ public int reclaimSpace(Serviceable work, ContextManager contextMgr)
 	*/
 	public void postRecovery() throws StandardException;
 
+	/**
+     * Set up the data factory's caches to use the specified daemon service for
+     * background cleaning.
+     *
+     * @param daemon daemon service to use for background cleaning
+     */
+    public void setupCacheCleaner(DaemonService daemon);
+
 	/**
 		Encrypt cleartext into ciphertext.
 
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java
index a2043e48..61bdc3ce 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java
@@ -2222,15 +2222,11 @@ void fileToRemove( StorageFile file, boolean remove)
 	public void postRecovery() throws StandardException 
     {
 
-		// hook up the cache cleaner daemon after recovery is finished
 		DaemonService daemon = rawStoreFactory.getDaemon();
 
 		if (daemon == null)
 			return;
 
-		containerCache.useDaemonService(daemon);
-
-		pageCache.useDaemonService(daemon);
 		if (postRecoveryRemovedFiles != null) 
         {
             synchronized( this)
@@ -2249,6 +2245,14 @@ public void postRecovery() throws StandardException
 		}
 	}
 
+    /**
+     * Set up the cache cleaner for the container cache and the page cache.
+     */
+    public void setupCacheCleaner(DaemonService daemon) {
+        containerCache.useDaemonService(daemon);
+        pageCache.useDaemonService(daemon);
+    }
+
 	public void freezePersistentStore() throws StandardException
 	{
 		synchronized(freezeSemaphore)
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java
index fecebc92..d64f6f2c 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java
@@ -1340,13 +1340,16 @@ public void recover(
         // done with recovery        
         
 		/////////////////////////////////////////////////////////////
-		// setup checktpoint daemon
+		// setup checkpoint daemon and cache cleaner
 		/////////////////////////////////////////////////////////////
 		checkpointDaemon = rawStoreFactory.getDaemon();
 		if (checkpointDaemon != null)
         {
 			myClientNumber =
                 checkpointDaemon.subscribe(this, true /*onDemandOnly */);
+
+            // use the same daemon for the cache cleaner
+            dataFactory.setupCacheCleaner(checkpointDaemon);
         }
 	}
 
