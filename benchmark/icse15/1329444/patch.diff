diff --git a/lucene/dev/branches/lucene_solr_3_6/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EntityProcessorBase.java b/lucene/dev/branches/lucene_solr_3_6/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EntityProcessorBase.java
index a4f2e4ef..94b237f7 100644
--- a/lucene/dev/branches/lucene_solr_3_6/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EntityProcessorBase.java
+++ b/lucene/dev/branches/lucene_solr_3_6/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/EntityProcessorBase.java
@@ -57,10 +57,12 @@ public void init(Context context) {
     if (isFirstInit) {
       firstInit(context);
     }
+    
     if(cacheSupport!=null) {
+      cacheSupport.initNewParent(context);
+    } else {
       rowIterator = null;
       query = null;
-      cacheSupport.initNewParent(context);
     }   
     
   }
@@ -119,12 +121,10 @@ protected void initCache(Context context) {
         if (rowIterator.hasNext())
           return rowIterator.next();
         query = null;
-        rowIterator = null;
         return null;
       } catch (Exception e) {
         SolrException.log(log, "getNext() failed for query '" + query + "'", e);
         query = null;
-        rowIterator = null;
         wrapAndThrow(DataImportHandlerException.WARN, e);
         return null;
       }
diff --git a/lucene/dev/branches/lucene_solr_3_6/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor.java b/lucene/dev/branches/lucene_solr_3_6/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor.java
index 86be8d7f..196992fc 100644
--- a/lucene/dev/branches/lucene_solr_3_6/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor.java
+++ b/lucene/dev/branches/lucene_solr_3_6/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/XPathEntityProcessor.java
@@ -203,8 +203,10 @@ private void initXpathReader() {
     while (true) {
       result = fetchNextRow();
 
-      if (result == null)
+      if (result == null){
+        rowIterator = null;
         return null;
+      }
 
       if (pk == null || result.get(pk) != null)
         return result;
