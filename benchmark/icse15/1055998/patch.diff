diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/i18n/LocalizedAttributeScriptTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/i18n/LocalizedAttributeScriptTest.java
index 12dad443..8bcd28ad 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/i18n/LocalizedAttributeScriptTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/i18n/LocalizedAttributeScriptTest.java
@@ -179,6 +179,7 @@ private void removeDir(File dir) {
      * Set up the test environment.
      */
     protected void setUp() {
+        super.setUp();
         LocalizedResource.resetLocalizedResourceCache();
     }
 }
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/i18n/LocalizedDisplayScriptTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/i18n/LocalizedDisplayScriptTest.java
index cd3eac0b..c519d82a 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/i18n/LocalizedDisplayScriptTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/i18n/LocalizedDisplayScriptTest.java
@@ -120,6 +120,7 @@ private static Test getSuite() {
      * Set up the test environment.
      */
     protected void setUp() {
+        super.setUp();
         // the canon contains time columns, which would display localized -
         // and so cause errors. Thus, run this with timezone PST.
         defaultTimeZone = TimeZone.getDefault(); 
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/util/IjTestCase.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/util/IjTestCase.java
index b953c9ff..57c725bb 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/util/IjTestCase.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/util/IjTestCase.java
@@ -54,7 +54,7 @@ public IjTestCase(String name) {
 		outfile = new File(outfileName);
 	}
 	
-	public void setUp() throws Exception{
+	public void setUp() {
 	    super.setUp();
 		setSystemProperty("ij.outfile", outfileName);
 		setSystemProperty("ij.defaultResourcePackage",
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/util/ScriptTestCase.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/util/ScriptTestCase.java
index 5adc617f..56beb55c 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/util/ScriptTestCase.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/util/ScriptTestCase.java
@@ -21,7 +21,9 @@
 
 import java.io.InputStream;
 import java.net.URL;
+import java.security.AccessController;
 import java.sql.Connection;
+import java.util.Locale;
 
 import org.apache.derbyTesting.junit.Derby;
 
@@ -38,6 +40,7 @@
 	private final String inputEncoding;
 	private final String user;
     private boolean useSystemProperties = false;
+    private Locale oldLocale;
 
     /**
 	 * Create a ScriptTestCase to run a single test
@@ -197,4 +200,32 @@ public void runTest() throws Throwable
         
         this.compareCanon(canon);
 	}
+    
+    /**
+     * Set up the new locale for the test
+     */
+    protected void setUp() {
+        oldLocale = Locale.getDefault();
+
+        AccessController.doPrivileged(new java.security.PrivilegedAction() {
+            public Object run() {
+                Locale.setDefault(Locale.US);
+                return null;
+            }
+        });
+    }
+
+    /**
+     * Revert the locale back to the old one
+     */
+    protected void tearDown() throws Exception {
+        super.tearDown();
+
+        AccessController.doPrivileged(new java.security.PrivilegedAction() {
+            public Object run() {
+                Locale.setDefault(oldLocale);
+                return null;
+            }
+        });
+    }
 }
