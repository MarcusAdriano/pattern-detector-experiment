diff --git a/lucene/java/trunk/src/java/org/apache/lucene/index/IndexReader.java b/lucene/java/trunk/src/java/org/apache/lucene/index/IndexReader.java
index 37cc14b4..7ab94e0f 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/index/IndexReader.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/index/IndexReader.java
@@ -561,7 +561,8 @@ public boolean isOptimized() {
    *  The array contains a vector for each vectorized field in the document.
    *  Each vector contains terms and frequencies for all terms in a given vectorized field.
    *  If no such fields existed, the method returns null. The term vectors that are
-   * returned my either be of type TermFreqVector or of type TermPositionsVector if
+   * returned may either be of type {@link TermFreqVector}
+   * or of type {@link TermPositionVector} if
    * positions or offsets have been stored.
    * 
    * @param docNumber document for which term frequency vectors are returned
@@ -579,7 +580,7 @@ public boolean isOptimized() {
    *  returned vector contains terms and frequencies for the terms in
    *  the specified field of this document, if the field had the storeTermVector
    *  flag set. If termvectors had been stored with positions or offsets, a 
-   *  TermPositionsVector is returned.
+   * {@link TermPositionVector} is returned.
    * 
    * @param docNumber document for which the term frequency vector is returned
    * @param field field for which the term frequency vector is returned.
diff --git a/lucene/java/trunk/src/java/org/apache/lucene/search/SpanFilterResult.java b/lucene/java/trunk/src/java/org/apache/lucene/search/SpanFilterResult.java
index 5052e93a..39a0b7bd 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/search/SpanFilterResult.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/search/SpanFilterResult.java
@@ -21,7 +21,7 @@
 
 
 /**
- *  The results of a SpanQueryFilter.  Wraps the BitSet and the position infomration from the SpanQuery
+ *  The results of a SpanQueryFilter.  Wraps the BitSet and the position information from the SpanQuery
  *
  *<p/>
  * NOTE: This API is still experimental and subject to change. 
