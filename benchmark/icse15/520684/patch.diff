diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/load/ExportWriteData.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/load/ExportWriteData.java
index 0cd4ad03..32b45d21 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/load/ExportWriteData.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/load/ExportWriteData.java
@@ -103,8 +103,15 @@ private void openFiles() throws Exception {
 		  lobsFileName = url.getFile();
 	  }
     } catch (MalformedURLException ex) {}
-    FileOutputStream anOutputStream = new FileOutputStream(outputFileName);
-    BufferedOutputStream buffered = new BufferedOutputStream(anOutputStream);
+
+    
+    FileOutputStream anOutputStream = null;
+    BufferedOutputStream buffered = null;
+    FileOutputStream lobOutputStream = null;
+
+    try {
+        anOutputStream = new FileOutputStream(outputFileName);
+        buffered = new BufferedOutputStream(anOutputStream);
     
     aStream = dataCodeset == null ?
     		new OutputStreamWriter(buffered) :
@@ -115,7 +122,7 @@ private void openFiles() throws Exception {
     if (lobsInExtFile) 
     {
         // setup streams to write large objects into the external file. 
-        FileOutputStream lobOutputStream = new FileOutputStream(lobsFileName);
+            lobOutputStream = new FileOutputStream(lobsFileName);
         lobOutBinaryStream = new BufferedOutputStream(lobOutputStream);
 
         // helper stream to convert char data to binary, after conversion
@@ -125,6 +132,33 @@ private void openFiles() throws Exception {
             new OutputStreamWriter(lobByteArrayStream) :
             new OutputStreamWriter(lobByteArrayStream, dataCodeset);    	        
 	}
+    } catch (Exception e) {
+        // might have failed to setup export file stream. for example 
+        // user has specified invalid codeset or incorrect file path. 
+        // close the opened file streams.
+
+        if (aStream == null) {
+            if (buffered != null) {
+                buffered.close();
+            } else {
+                if(anOutputStream != null)
+                    anOutputStream .close();
+            }
+        } else {
+            // close the main export file stream.
+            aStream.close();
+            // close the external lob file stream.
+            if (lobOutBinaryStream != null) {
+                lobOutBinaryStream.close() ;
+            } else {
+                if (lobOutputStream != null) 
+                    lobOutputStream.close();
+            }
+        }
+
+        // throw back the original exception.
+        throw e;
+    }
   }
 
   /**if control file says true for column definition, write it as first line of the
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportTest.java
index f315c7e3..d42cdcc8 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportTest.java
@@ -151,10 +151,7 @@ public void testSpecialDelimitersAndUTF16() throws Exception {
 		doImportAndExport(c, "T1", "%", "&", "UTF-16");
 	}
 	
-    /* This test is disabled temporarily due to bug : DERBY-2456 .
-     * Remove the prefix "derby2456"  when the bug is fixed.
-     */
-	public void derby2456testInvalidEncoding() throws Exception {
+	public void testInvalidEncoding() throws Exception {
 		Connection c = getConnection();
 		resetTables();
 		try {
