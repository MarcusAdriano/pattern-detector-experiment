diff --git a/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/Main.java b/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/Main.java
index ea55353a..b99c656c 100644
--- a/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/Main.java
+++ b/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/Main.java
@@ -82,7 +82,6 @@ public static void mainCore(String[] args, Main main)
 		String file;
 		String inputResourceName;
 		boolean gotProp;
-		Properties connAttributeDefaults = null;
 
 		LocalizedResource langUtil = LocalizedResource.getInstance();
 		LocalizedOutput out = langUtil.getNewOutput(System.out);
@@ -96,9 +95,6 @@ public static void mainCore(String[] args, Main main)
 		// load the property file if specified
 		gotProp = util.getPropertyArg(args);
 
-		// get the default connection attributes
-		connAttributeDefaults = util.getConnAttributeArg(args);
-
 		// readjust output to derby.ui.locale and derby.ui.codeset if 
                 // they were loaded from a property file.
 		langUtil.init();
@@ -178,7 +174,7 @@ public Object run() {
 		me = main.getMain(out);
 
 		/* Let the processing begin! */
-		me.go(in, out, connAttributeDefaults);
+		me.go(in, out);
 		in.close(); out.close();
 	}
 
@@ -208,11 +204,10 @@ public utilMain getutilMain(int numConnections, LocalizedOutput out)
 		Give a shortcut to go on the utilInstance so
 		we don't expose utilMain.
 	 */
-	private void go(LocalizedInput in, LocalizedOutput out , 
-				   Properties connAttributeDefaults)
+	private void go(LocalizedInput in, LocalizedOutput out )
 	{
 		LocalizedInput[] inA = { in } ;
-		utilInstance.go(inA, out,connAttributeDefaults);
+		utilInstance.go(inA, out);
 	}
 
 	/**
diff --git a/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/mtTestCase.java b/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/mtTestCase.java
index e0fae342..0de5875e 100644
--- a/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/mtTestCase.java
+++ b/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/mtTestCase.java
@@ -243,7 +243,7 @@ public void runMe(LocalizedOutput log, LocalizedOutput out, BufferedInputStream
 		utilInstance = new utilMain(1, out, ignoreErrors);
 		utilInstance.initFromEnvironment();
 		utilInstance.setMtUse(true);
-		utilInstance.go(in, out, (java.util.Properties) null);
+		utilInstance.go(in, out);
 		log.flush();
 		out.flush();
 	}
diff --git a/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/util.java b/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/util.java
index 58e45e73..fbf3979f 100644
--- a/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/util.java
+++ b/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/util.java
@@ -142,46 +142,6 @@ else if ((n = getArg("-pr", args)) != null) {
 		return true;
 	}
 
-	/**
-		ij is started with "-ca[r] file OtherArgs";
-		the file contains connection attibute properties 
-		to pass to getConnection
-		<p>
-		getConnAttributeArg will look at the args and take out a 
-		"-ca[r] <file>" pair and returning the Properties
-		<p>
-
-		@exception IOException thrown if file not found
-
-		@param args	the argument list to consider.
-		@return  properties in the file
-	 */
-	static public Properties getConnAttributeArg(String[] args) 
-		throws IOException 
-	{
-		String n;
-		InputStream in1;
-		Properties p = new Properties();
-
-		if ((n = getArg("-ca", args))!= null){
-			in1 = new FileInputStream(n);
-			in1 = new BufferedInputStream(in1);
-		}
-		else if ((n = getArg("-car", args)) != null) {
-			in1 = getResourceAsStream(n);
-			if (in1 == null) throw ijException.resourceNotFound();
-		}
-		else
-			return null;
-
-		// Trim off excess whitespace in property file, if any, and
-		// then load those properties into 'p'.
-		util.loadWithTrimmedValues(in1, p);
-
-		return p;
-	}
-
-
 
 	/**
 	  Convenience routine to qualify a resource name with "ij.defaultPackageName"
@@ -270,8 +230,6 @@ static public String getFileArg(String[] args) throws IOException {
 		for (int ix=0; ix < args.length; ix++)
 			if(args[ix].equals("-f")  ||
 			   args[ix].equals("-fr") ||
-			   args[ix].equals("-ca")  ||
-			   args[ix].equals("-car")  ||
 			   args[ix].equals("-p")  ||
 			   args[ix].equals("-pr"))
 				ix++; //skip the parameter to these args
@@ -310,8 +268,7 @@ static public boolean invalidArgs(String[] args) {
 				if (ix >= args.length) return true;
 			}
 
-			else if ((args[ix].equals("-p") || args[ix].equals("-pr") ||
-					  args[ix].equals("-ca") || args[ix].equals("-car") ))
+			else if ((args[ix].equals("-p") || args[ix].equals("-pr") ))
 			{
 				// next arg is the file/resource name
 				ix++;
diff --git a/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/utilMain.java b/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/utilMain.java
index 62c276cc..9d1fc000 100644
--- a/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/utilMain.java
+++ b/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/utilMain.java
@@ -65,7 +65,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 	private boolean mtUse;
 	private boolean firstRun = true;
 	private LocalizedOutput out = null;
-	private Properties connAttributeDefaults;
 	private Hashtable ignoreErrors;
 	/**
 	 * True if to display the error code when
@@ -182,13 +181,11 @@ public void initFromEnvironment()
 	 *
 	 * @param in source for input to ij
 	 * @param out sink for output from ij
-	 * @param connAttributeDefaults  connection attributes from -ca ij arg
 	 */
-	public void go(LocalizedInput[] in, LocalizedOutput out,
-				   Properties connAttributeDefaults) throws ijFatalException
+	public void go(LocalizedInput[] in, LocalizedOutput out)
+				   throws ijFatalException
 	{
 		this.out = out;
-		this.connAttributeDefaults = connAttributeDefaults;
 		
 		ijParser.setConnection(connEnv[currCE], (numConnections > 1));
 		fileInput = initialFileInput = (!in[currCE].isStandardInput());
@@ -810,11 +807,6 @@ int getCurrentRowNumber(ResultSet rs)
 		return rs.getRow();
 	}
 
-	Properties getConnAttributeDefaults ()
-	{
-		return connAttributeDefaults;
-	}
-
 	public final Object run() {
 		return  getClass().getResourceAsStream(ProductGenusNames.TOOLS_INFO);
 	}
