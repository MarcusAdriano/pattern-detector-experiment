diff --git a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DDMWriter.java b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DDMWriter.java
index 79347383..20114689 100644
--- a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DDMWriter.java
+++ b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DDMWriter.java
@@ -25,6 +25,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import java.io.InputStream;
 import java.io.BufferedInputStream;
 import java.io.BufferedOutputStream;
+import java.io.UnsupportedEncodingException;
 import org.apache.derby.iapi.services.sanity.SanityManager;
 import java.sql.SQLException;
 import java.sql.DataTruncation;
@@ -1241,7 +1242,7 @@ protected void writeLDString(String s, int index) throws DRDAProtocolException
 			writeShort(writeLen);
 			writeBytes(byteval,writeLen);
 		}
-		catch (Exception e) {
+		catch (UnsupportedEncodingException e) {
 			//this should never happen
 			agent.agentError("Encoding " + NetworkServerControlImpl.DEFAULT_ENCODING + " not supported");
 		}
@@ -1261,7 +1262,7 @@ protected void writeString(String s) throws DRDAProtocolException
 	{
 		try {
 			writeBytes(s.getBytes(NetworkServerControlImpl.DEFAULT_ENCODING));
-		} catch (Exception e) {
+		} catch (UnsupportedEncodingException e) {
 			//this should never happen
 			agent.agentError("Encoding " + NetworkServerControlImpl.DEFAULT_ENCODING + " not supported");
 		}
@@ -1280,7 +1281,7 @@ protected void writeString(String s, int length) throws DRDAProtocolException
 		byte[] bs = null;
 		try {
 			bs = s.getBytes(NetworkServerControlImpl.DEFAULT_ENCODING);
-		} catch (Exception e) {
+		} catch (UnsupportedEncodingException e) {
 			//this should never happen
 			agent.agentError("Encoding " + NetworkServerControlImpl.DEFAULT_ENCODING + " not supported");
 		}
