diff --git a/db/derby/code/branches/10.2/java/engine/org/apache/derby/impl/io/DirFile4.java b/db/derby/code/branches/10.2/java/engine/org/apache/derby/impl/io/DirFile4.java
index 6d3e5333..d8f7a9ad 100644
--- a/db/derby/code/branches/10.2/java/engine/org/apache/derby/impl/io/DirFile4.java
+++ b/db/derby/code/branches/10.2/java/engine/org/apache/derby/impl/io/DirFile4.java
@@ -33,6 +33,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import java.io.RandomAccessFile;
 import java.nio.channels.FileChannel;
 import java.nio.channels.FileLock;
+import java.nio.channels.OverlappingFileLockException;
 
 /**
  * This class implements the StorageFile interface using features of Java 1.4 not available in earlier
@@ -186,6 +187,30 @@ public synchronized int getExclusiveFileLock()
 				SanityManager.THROWASSERT("Unable to Acquire Exclusive Lock on "
 										  + getPath());
 			}
+		} catch (OverlappingFileLockException ofle)
+        {
+            //
+            // Under Java 6 and later, this exception is raised if the database
+            // has been opened by another Derby instance in a different
+            // ClassLoader in this VM. See DERBY-700.
+            //
+            // The OverlappingFileLockException is raised by the
+            // lockFileChannel.tryLock() call above.
+            //
+            try {
+                lockFileChannel.close();
+                lockFileOpen.close();
+            } catch (IOException e)
+            {
+                if (SanityManager.DEBUG)
+                {
+                    SanityManager.THROWASSERT("Error closing file channel "
+                                              + getPath(), e);
+                }
+            }
+            lockFileChannel=null;
+            lockFileOpen = null;
+            status = EXCLUSIVE_FILE_LOCK_NOT_AVAILABLE;
 		}
     
 		return status;
