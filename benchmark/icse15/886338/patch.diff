diff --git a/incubator/aries/trunk/jmx/jmx-core/src/main/java/org/apache/aries/jmx/framework/Framework.java b/incubator/aries/trunk/jmx/jmx-core/src/main/java/org/apache/aries/jmx/framework/Framework.java
index 953d3c16..ac068ef0 100644
--- a/incubator/aries/trunk/jmx/jmx-core/src/main/java/org/apache/aries/jmx/framework/Framework.java
+++ b/incubator/aries/trunk/jmx/jmx-core/src/main/java/org/apache/aries/jmx/framework/Framework.java
@@ -146,7 +146,6 @@ public CompositeData installBundles(String[] locations, String[] urls) throws IO
         }
         long[] ids = new long[locations.length];
         for (int i = 0; i < locations.length; i++) {
-            // check index
             try {
                 long id = installBundle(locations[i], urls[i]);
                 ids[i] = id;
@@ -284,7 +283,7 @@ public void shutdownFramework() throws IOException {
      * @see org.osgi.jmx.framework.FrameworkMBean#startBundle(long)
      */
     public void startBundle(long bundleIdentifier) throws IOException {
-        Bundle bundle = context.getBundle(bundleIdentifier);
+        Bundle bundle = getBundle(bundleIdentifier);
         if (bundle != null) {
             try {
                 bundle.start();
@@ -315,7 +314,7 @@ public CompositeData startBundles(long[] bundleIdentifiers) throws IOException {
      * @see org.osgi.jmx.framework.FrameworkMBean#stopBundle(long)
      */
     public void stopBundle(long bundleIdentifier) throws IOException {
-        Bundle bundle = context.getBundle(bundleIdentifier);
+        Bundle bundle = getBundle(bundleIdentifier);
         if (bundle != null) {
             try {
                 bundle.stop();
@@ -414,7 +413,7 @@ public void updateBundle(long bundleIdentifier, String url) throws IOException {
      * @see org.osgi.jmx.framework.FrameworkMBean#updateBundles(long[])
      */
     public CompositeData updateBundles(long[] bundleIdentifiers) throws IOException {
-        if(bundleIdentifiers == null){
+        if (bundleIdentifiers == null) {
             return new BatchActionResult("Failed to update bundles, bundle id's can't be null").toCompositeData(); 
          }
         for (int i = 0; i < bundleIdentifiers.length; i++) {
diff --git a/incubator/aries/trunk/jmx/jmx-core/src/main/java/org/apache/aries/jmx/framework/PackageState.java b/incubator/aries/trunk/jmx/jmx-core/src/main/java/org/apache/aries/jmx/framework/PackageState.java
index 93b5bb0f..5edadfb1 100644
--- a/incubator/aries/trunk/jmx/jmx-core/src/main/java/org/apache/aries/jmx/framework/PackageState.java
+++ b/incubator/aries/trunk/jmx/jmx-core/src/main/java/org/apache/aries/jmx/framework/PackageState.java
@@ -120,9 +120,11 @@ public TabularData listPackages() throws IOException {
         Set<Package> packages = new HashSet<Package>();
         for (Bundle bundle : context.getBundles()) {
             ExportedPackage[] exportedPackages = packageAdmin.getExportedPackages(bundle);
+            if (exportedPackages != null) {
             for (ExportedPackage exportedPackage : exportedPackages) {
                 packages.add(new Package(exportedPackage));
             }
+            }
 
         }
         return Package.tableFrom(packages);
diff --git a/incubator/aries/trunk/jmx/jmx-core/src/test/java/org/apache/aries/jmx/framework/FrameworkTest.java b/incubator/aries/trunk/jmx/jmx-core/src/test/java/org/apache/aries/jmx/framework/FrameworkTest.java
index ad5ba7d3..57cc84ca 100644
--- a/incubator/aries/trunk/jmx/jmx-core/src/test/java/org/apache/aries/jmx/framework/FrameworkTest.java
+++ b/incubator/aries/trunk/jmx/jmx-core/src/test/java/org/apache/aries/jmx/framework/FrameworkTest.java
@@ -305,6 +305,14 @@ public void testStartBundle() throws Exception {
         } catch (IOException ioe) {
             // expected
         }
+        
+        Mockito.when(context.getBundle(6)).thenReturn(null);
+        try {
+            mbean.startBundle(6);
+            Assert.fail("IllegalArgumentException should be thrown");
+        } catch (IllegalArgumentException iae) {
+            //expected
+        }
     }
 
     @Test
@@ -335,6 +343,15 @@ public void testStopBundle() throws Exception {
         Mockito.when(context.getBundle(5)).thenReturn(bundle);
         mbean.stopBundle(5);
         Mockito.verify(bundle).stop();
+        
+        Mockito.when(context.getBundle(5)).thenReturn(null);
+        try {
+            mbean.stopBundle(5);
+            Assert.fail("IllegalArgumentException should be thrown");
+        } catch (IllegalArgumentException iae) {
+            //expected
+        }
+       
     }
 
     @Test
