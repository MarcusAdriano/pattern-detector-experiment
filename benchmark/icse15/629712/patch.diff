diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java
index 78717476..02c08a7b 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java
@@ -2240,7 +2240,6 @@ protected void checksBeforeUpdateXXX(String methodName, int columnIndex) throws
 	//1)Make sure JDBC ResultSet is not closed
 	//2)Make sure this is an updatable ResultSet
 	//3)Make sure JDBC ResultSet is positioned on a row
-	//4)Make sure underneath language resultset is not closed
 	protected void checksBeforeUpdateOrDelete(String methodName, int columnIndex) throws SQLException {
 
       //1)Make sure JDBC ResultSet is not closed
@@ -2251,13 +2250,6 @@ protected void checksBeforeUpdateOrDelete(String methodName, int columnIndex) th
 
       //3)Make sure JDBC ResultSet is positioned on a row
       if (!isOnInsertRow) checkOnRow(); // make sure there's a current row
-      //in case of autocommit on, if there was an exception which caused runtime rollback in this transaction prior to this call,
-      //the rollback code will mark the language resultset closed (it doesn't mark the JDBC ResultSet closed).
-      //That is why alongwith the earlier checkIfClosed call in this method, there is a check for language resultset close as well.
-
-      //4)Make sure underneath language resultset is not closed
-      if (theResults.isClosed())
-        throw Util.generateCsSQLException(SQLState.LANG_RESULT_SET_NOT_OPEN, methodName);
 	}
 
 	//mark the column as updated and return DataValueDescriptor for it. It will be used by updateXXX methods to put new values
@@ -2273,7 +2265,6 @@ protected DataValueDescriptor getDVDforColumnToBeUpdated(int columnIndex, String
      * 1) Make sure JDBC ResultSet is not closed
      * 2) Make sure this is an updatable ResultSet
      * 3) Make sure JDBC ResultSet is positioned on insertRow
-     * 4) Make sure underneath language resultset is not closed
      */
     protected void checksBeforeInsert() throws SQLException {
         // 1)Make sure JDBC ResultSet is not closed
@@ -2287,11 +2278,6 @@ protected void checksBeforeInsert() throws SQLException {
         if (!isOnInsertRow) {
             throw newSQLException(SQLState.CURSOR_NOT_POSITIONED_ON_INSERT_ROW);
         }
-
-        // 4)Make sure underneath language resultset is not closed
-        if (theResults.isClosed()) {
-            throw Util.generateCsSQLException(SQLState.LANG_RESULT_SET_NOT_OPEN, "insertRow");
-        }
     }
 
     /**
@@ -4248,7 +4234,21 @@ private final void closeCurrentStream() {
 	 * @exception SQLException		Thrown if this ResultSet is closed.
 	 */
 	final void checkIfClosed(String operation) throws SQLException {
-		if (isClosed) {
+		// If the JDBC ResultSet has been explicitly closed, isClosed is
+		// true. In some cases, the underlying language ResultSet can be closed
+		// without setting isClosed in the JDBC ResultSet. This happens if the
+		// ResultSet is non-holdable and the transaction has been committed, or
+		// if an error in auto-commit mode causes a rollback of the
+		// transaction.
+		if (isClosed || theResults.isClosed()) {
+
+			// The JDBC ResultSet hasn't been explicitly closed. Perform some
+			// basic cleanup and mark it as closed.
+			if (!isClosed) {
+				closeCurrentStream();
+				isClosed = true;
+			}
+
 			throw newSQLException(SQLState.LANG_RESULT_SET_NOT_OPEN, operation);
 		}
 	}
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java
index 65648412..b8b54f12 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java
@@ -1611,6 +1611,22 @@ public void testIsClosed() throws SQLException{
         stmt.close();
         stmt2.close();
     }
+
+    /**
+     * Test that a {@code ResultSet} is marked as closed after commit if its
+     * holdability is {@code CLOSE_CURSORS_AT_COMMIT} (DERBY-3404).
+     */
+    public void testIsClosedOnNonHoldableResultSet() throws SQLException {
+        getConnection().setAutoCommit(false);
+        getConnection().setHoldability(ResultSet.CLOSE_CURSORS_AT_COMMIT);
+        ResultSet rs = createStatement().executeQuery(
+            "SELECT TABLENAME FROM SYS.SYSTABLES");
+        assertEquals("ResultSet shouldn't be holdable",
+                     ResultSet.CLOSE_CURSORS_AT_COMMIT, rs.getHoldability());
+        commit();
+        assertTrue("Commit should have closed the ResultSet", rs.isClosed());
+    }
+
     /**
      * Test that an exception is thrown when methods are called
      * on a closed result set (DERBY-1060).
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java
index dc07c214..32b2ff77 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java
@@ -2511,9 +2511,6 @@ else if (usingDerbyNetClient())
             rsh.next();
             fail("rsh's connection not active id ");
         } catch (SQLException sqle) {
-            if (usingEmbedded())
-                assertSQLState("08003", sqle);
-            else if (usingDerbyNetClient())
                 assertSQLState("XCL16", sqle);
         }
 
