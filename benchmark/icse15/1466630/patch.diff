diff --git a/db/derby/code/branches/10.9/java/engine/org/apache/derby/iapi/sql/dictionary/DataDictionary.java b/db/derby/code/branches/10.9/java/engine/org/apache/derby/iapi/sql/dictionary/DataDictionary.java
index 1013e2e8..f384f369 100644
--- a/db/derby/code/branches/10.9/java/engine/org/apache/derby/iapi/sql/dictionary/DataDictionary.java
+++ b/db/derby/code/branches/10.9/java/engine/org/apache/derby/iapi/sql/dictionary/DataDictionary.java
@@ -211,6 +211,13 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 	public static final int COMPILE_ONLY_MODE = 0;
 	public static final int DDL_MODE = 1;
 
+	/**
+	 * Clear the DataDictionary caches, including the sequence caches if requested..
+	 *
+	 * @exception StandardException Standard Derby error policy
+	 */
+	public void clearCaches( boolean clearSequenceCaches ) throws StandardException;
+
 	/**
 	 * Clear all of the DataDictionary caches.
 	 *
diff --git a/db/derby/code/branches/10.9/java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java b/db/derby/code/branches/10.9/java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java
index 23d4da6f..448c43d4 100644
--- a/db/derby/code/branches/10.9/java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java
+++ b/db/derby/code/branches/10.9/java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java
@@ -1304,8 +1304,10 @@ public void startWriting(LanguageConnectionContext lcc)
 						/* Switch the caching mode to DDL */
 						setCacheMode(DataDictionary.DDL_MODE);
 	
-						/* Clear out all the caches */
-						clearCaches();
+						// Until we implement ALTER SEQUENCE, there should be no need
+                        // to clear the sequence cache. Always clearing the sequence cache
+                        // here gives rise to DERBY-6137.
+						clearCaches( false );
 					}
 		
 					/* Keep track of the number of DDL users */
@@ -9098,12 +9100,22 @@ protected void populateSYSDUMMY1(
 	 * @exception StandardException Standard Derby error policy
 	 */
 	public void clearCaches() throws StandardException
+	{
+        clearCaches( true );
+    }
+    
+	/**
+	 * Clear the DataDictionary caches, including the sequence caches if requested..
+	 *
+	 * @exception StandardException Standard Derby error policy
+	 */
+	public void clearCaches( boolean clearSequenceCaches ) throws StandardException
 	{
 		nameTdCache.cleanAll();
 		nameTdCache.ageOut();
 		OIDTdCache.cleanAll();
 		OIDTdCache.ageOut();
-        clearSequenceCaches();
+        if ( clearSequenceCaches ) { clearSequenceCaches(); }
 		if (spsNameCache != null)
 		{
 			//System.out.println("CLEARING SPS CACHE");
@@ -10470,7 +10482,19 @@ public Long peekAtSequence( String schemaName, String sequenceName )
                     ( schemaName + "." + sequenceName) );
         }
         
-        return ((SequenceUpdater) sequenceGeneratorCache.find( uuid )).peekAtCurrentValue();
+        SequenceUpdater sequenceUpdater = null;
+
+        try {
+            sequenceUpdater = (SequenceUpdater) sequenceGeneratorCache.find( uuid );
+            return sequenceUpdater.peekAtCurrentValue();
+        }
+        finally
+        {
+            if ( sequenceUpdater != null )
+            {
+                sequenceGeneratorCache.release( sequenceUpdater );
+            }
+        }
     }
     
     public RowLocation getRowLocationTemplate(LanguageConnectionContext lcc,
diff --git a/db/derby/code/branches/10.9/java/engine/org/apache/derby/impl/sql/execute/DropSequenceConstantAction.java b/db/derby/code/branches/10.9/java/engine/org/apache/derby/impl/sql/execute/DropSequenceConstantAction.java
index 26c7429c..94bc32b1 100644
--- a/db/derby/code/branches/10.9/java/engine/org/apache/derby/impl/sql/execute/DropSequenceConstantAction.java
+++ b/db/derby/code/branches/10.9/java/engine/org/apache/derby/impl/sql/execute/DropSequenceConstantAction.java
@@ -91,6 +91,7 @@ public void executeConstantAction(Activation activation)
         ** the transaction.
         */
         dd.startWriting(lcc);
+        dd.clearSequenceCaches();
 
         SequenceDescriptor sequenceDescriptor = dd.getSequenceDescriptor(schemaDescriptor, sequenceName);
 
@@ -101,6 +102,5 @@ public void executeConstantAction(Activation activation)
         }
 
         sequenceDescriptor.drop(lcc);
-
     }
 }
diff --git a/db/derby/code/branches/10.9/java/storeless/org/apache/derby/impl/storeless/EmptyDictionary.java b/db/derby/code/branches/10.9/java/storeless/org/apache/derby/impl/storeless/EmptyDictionary.java
index 79b872c1..17e4d6ce 100644
--- a/db/derby/code/branches/10.9/java/storeless/org/apache/derby/impl/storeless/EmptyDictionary.java
+++ b/db/derby/code/branches/10.9/java/storeless/org/apache/derby/impl/storeless/EmptyDictionary.java
@@ -78,6 +78,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more
  */
 public class EmptyDictionary implements DataDictionary, ModuleSupportable {
 
+	public void clearCaches( boolean clearSequenceCaches ) {}
+    
 	public void clearCaches() throws StandardException {
 		// Auto-generated method stub
 
