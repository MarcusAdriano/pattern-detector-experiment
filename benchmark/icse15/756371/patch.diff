diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/BayesClassifier.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/BayesClassifier.java
index 956d3fbe..484d9aef 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/BayesClassifier.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/BayesClassifier.java
@@ -48,7 +48,7 @@
   public Collection<ClassifierResult> classify(Model model, String[] document, String defaultCategory, int numResults) {
     Collection<String> categories = model.getLabels();
     
-    PriorityQueue pq = new ClassifierResultPriorityQueue(numResults);
+    PriorityQueue<ClassifierResult> pq = new ClassifierResultPriorityQueue(numResults);
     ClassifierResult tmp;
     for (String category : categories){
       double prob = documentWeight(model, category, document);
@@ -59,7 +59,7 @@
     }
 
     Deque<ClassifierResult> result = new LinkedList<ClassifierResult>();
-    while ((tmp = (ClassifierResult) pq.pop()) != null) {
+    while ((tmp = pq.pop()) != null) {
       result.addLast(tmp);
     }
     if (result.isEmpty()){
@@ -125,7 +125,7 @@ public double documentWeight(Model model, String label, String[] document) {
   }
 
   
-  private static class ClassifierResultPriorityQueue extends PriorityQueue {
+  private static class ClassifierResultPriorityQueue extends PriorityQueue<ClassifierResult> {
 
     private ClassifierResultPriorityQueue(int numResults) {
       initialize(numResults);
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesClassifier.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesClassifier.java
index d2adea45..72f9e048 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesClassifier.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesClassifier.java
@@ -46,7 +46,7 @@
   @Override
   public Collection<ClassifierResult> classify(Model model, String[] document, String defaultCategory, int numResults) {
     Collection<String> categories = model.getLabels();
-    PriorityQueue pq = new ClassifierResultPriorityQueue(numResults);
+    PriorityQueue<ClassifierResult> pq = new ClassifierResultPriorityQueue(numResults);
     ClassifierResult tmp;
     for (String category : categories){
       double prob = documentWeight(model, category, document);
@@ -57,7 +57,7 @@
     }
 
     Deque<ClassifierResult> result = new LinkedList<ClassifierResult>();
-    while ((tmp = (ClassifierResult) pq.pop()) != null) {
+    while ((tmp = pq.pop()) != null) {
       result.addLast(tmp);
     }
     if (result.isEmpty()){
@@ -123,7 +123,7 @@ public double documentWeight(Model model, String label, String[] document) {
   }
 
   
-  private static class ClassifierResultPriorityQueue extends PriorityQueue {
+  private static class ClassifierResultPriorityQueue extends PriorityQueue<ClassifierResult> {
 
     private ClassifierResultPriorityQueue(int numResults) {
       initialize(numResults);
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/ga/watchmaker/MahoutEvaluator.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/ga/watchmaker/MahoutEvaluator.java
index a1bed598..2aa25353 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/ga/watchmaker/MahoutEvaluator.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/ga/watchmaker/MahoutEvaluator.java
@@ -87,7 +87,7 @@ private static Path prepareInput(FileSystem fs, List<?> population)
 
     // Delete the input if it already exists
     if (fs.exists(inpath)) {
-      FileUtil.fullyDelete(fs, inpath);
+      fs.delete(inpath, true);
     }
 
     fs.mkdirs(inpath);
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/ga/watchmaker/OutputUtils.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/ga/watchmaker/OutputUtils.java
index d1e57966..103c5c9d 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/ga/watchmaker/OutputUtils.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/ga/watchmaker/OutputUtils.java
@@ -52,7 +52,7 @@ public static Path prepareOutput(FileSystem fs) throws IOException {
     Path outpath = new Path(fs.getWorkingDirectory(), "output");
 
     if (fs.exists(outpath)) {
-      FileUtil.fullyDelete(fs, outpath);
+      fs.delete(outpath, true);
     }
 
     return outpath;
