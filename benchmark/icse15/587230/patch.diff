diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/MethodCallNode.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/MethodCallNode.java
index 380f3c2a..b62f5d52 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/MethodCallNode.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/MethodCallNode.java
@@ -230,7 +230,7 @@ void getCorrelationTables(JBitSet correlationMap)
 		throws StandardException
 	{
 		CollectNodesVisitor getCRs = new CollectNodesVisitor(ColumnReference.class);
-		super.accept(getCRs);
+		accept(getCRs);
 		Vector colRefs = getCRs.getList();
 		for (Enumeration e = colRefs.elements(); e.hasMoreElements(); )
 		{
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SysDiagVTIMappingTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SysDiagVTIMappingTest.java
index e32e2c27..7731b2b1 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SysDiagVTIMappingTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SysDiagVTIMappingTest.java
@@ -649,6 +649,35 @@ public void testOrderBy() throws SQLException
         st.close();
     }
 
+    /**
+     * Test that diagnostic VTIs will work correctly when they
+     * are invoked in a subquery with correlated references to
+     * outer query blocks.  DERBY-3138.
+     */
+    public void testCorrelatedReferences() throws SQLException
+    {
+        Statement   st = createStatement();
+        String      [][] expRS = new String [][] {};
+
+        ResultSet rs = st.executeQuery
+            (
+             "select s.schemaname, t.tableName\n" +
+             "from sys.sysschemas s, sys.systables t\n" +
+             "where t.schemaid=s.schemaid\n" +
+             "and exists\n" +
+             "(\n" +
+             "  select vti.*\n" +
+             "  from table( syscs_diag.space_table( s.schemaname, t.tableName ) ) as vti\n" +
+             "  where vti.numfreepages < -1\n" +
+             ")\n"
+             );
+        
+        JDBC.assertFullResultSet(rs, expRS);
+
+        rs.close();
+        st.close();
+    }
+
     /* All statements in this method should fail because a VTI table-
      * mapping that takes arguments can only be used as part of the TABLE 
      * constructor.  Any other uses of, or attempts to modify, such a
