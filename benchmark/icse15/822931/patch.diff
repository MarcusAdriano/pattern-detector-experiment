diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
index e953ecfe..5baac6ba 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
@@ -611,8 +611,10 @@ void addSSTable(SSTableReader sstable)
      */
     int doCompaction(int minThreshold, int maxThreshold) throws IOException
     {
-        logger_.debug("Checking to see if compaction of " + columnFamily_ + " would be useful");
         int filesCompacted = 0;
+        if (minThreshold > 0 && maxThreshold > 0)
+        {
+            logger_.debug("Checking to see if compaction of " + columnFamily_ + " would be useful");
         for (List<SSTableReader> sstables : getCompactionBuckets(ssTables_, 50L * 1024L * 1024L))
         {
             if (sstables.size() < minThreshold)
@@ -625,6 +627,11 @@ int doCompaction(int minThreshold, int maxThreshold) throws IOException
             filesCompacted += doFileCompaction(sstables.subList(0, Math.min(sstables.size(), maxThreshold)));
         }
         logger_.debug(filesCompacted + " files compacted");
+        }
+        else
+        {
+            logger_.debug("Compaction is currently disabled.");
+        }
         return filesCompacted;
     }
 
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeProbe.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeProbe.java
index a4eab962..7f25e470 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeProbe.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeProbe.java
@@ -429,7 +429,7 @@ public void getCompactionThreshold(PrintStream outs)
     public void setCompactionThreshold(int minimumCompactionThreshold, int maximumCompactionThreshold)
     {
         mcmProxy.setMinimumCompactionThreshold(minimumCompactionThreshold);
-        if (maximumCompactionThreshold > 0)
+        if (maximumCompactionThreshold >= 0)
         {
              mcmProxy.setMaximumCompactionThreshold(maximumCompactionThreshold);
         }
@@ -563,11 +563,25 @@ else if (cmdName.equals("setcompactionthreshold"))
                 System.exit(1);
             }
             int minthreshold = Integer.parseInt(arguments[1]);
-            int maxthreshold = 0;
+            int maxthreshold = CompactionManager.instance().getMaximumCompactionThreshold();
             if (arguments.length > 2)
             {
                 maxthreshold = Integer.parseInt(arguments[2]);
             }
+
+            if (minthreshold > maxthreshold)
+            {
+                System.err.println("Min threshold can't be greater than Max threshold");
+                NodeProbe.printUsage();
+                System.exit(1);
+            }
+
+            if (minthreshold < 2 && maxthreshold != 0)
+            {
+                System.err.println("Min threshold must be at least 2");
+                NodeProbe.printUsage();
+                System.exit(1);
+            }
             probe.setCompactionThreshold(minthreshold, maxthreshold);
         }
         else
