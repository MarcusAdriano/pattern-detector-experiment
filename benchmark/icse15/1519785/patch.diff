diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/ClientDatabaseMetaData.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/ClientDatabaseMetaData.java
index 4f77b099..090d4163 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/ClientDatabaseMetaData.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/ClientDatabaseMetaData.java
@@ -29,6 +29,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import java.sql.Types;
 import java.util.StringTokenizer;
 
+import org.apache.derby.iapi.services.info.JVMInfo;
 import org.apache.derby.shared.common.reference.SQLState;
 
 // Note:
@@ -124,6 +125,8 @@ protected ClientDatabaseMetaData(Agent agent,
             serverJdbcMajorVersion = 3;
             serverJdbcMinorVersion = 0;
         } else {
+            // this value is only used to check that we have at least 4.0; 
+            // higher is irrelevant
             serverJdbcMajorVersion = 4;
             serverJdbcMinorVersion = 0;
         }
@@ -2301,7 +2304,7 @@ public int getJDBCMajorVersion() throws SQLException {
 
     public int getJDBCMinorVersion() throws SQLException {
         checkForClosedConnection();
-        return 1;
+        return JVMInfo.jdbcMinorVersion();
     }
 
     public int getSQLStateType() throws SQLException {
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/services/info/JVMInfo.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/services/info/JVMInfo.java
index 0d8115b4..ec3b4342 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/services/info/JVMInfo.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/services/info/JVMInfo.java
@@ -58,6 +58,22 @@ Licensed to the Apache Software Foundation (ASF) under one or more
     public static final int J2SE_17 = 8; // Java SE 7
     public static final int J2SE_18 = 9;
 
+    public static int jdbcMajorVersion()
+    { 
+        return 4; 
+    }
+
+    public static int jdbcMinorVersion()
+    {
+        switch (JDK_ID)
+        { 
+        case J2SE_16: return 0; 
+        case J2SE_17: return 1; 
+        case J2SE_18: 
+        default: return 2; 
+        }
+    } 
+
 	static 
 	{
 		int id;
@@ -118,11 +134,12 @@ else if (javaVersion.equals("1.8")) {
 	*/
 	public static String derbyVMLevel()
 	{
+		String jdbcVersion = jdbcMajorVersion() + "." + jdbcMinorVersion();
 		switch (JDK_ID)
 		{
-        case J2SE_16: return "Java SE 6 - JDBC 4.1";
-        case J2SE_17: return "Java SE 7 - JDBC 4.1";
-        case J2SE_18: return "Java SE 8 - JDBC 4.1";
+        case J2SE_16: return "Java SE 6 - JDBC " + jdbcVersion;
+        case J2SE_17: return "Java SE 7 - JDBC " + jdbcVersion;
+        case J2SE_18: return "Java SE 8 - JDBC " + jdbcVersion;
 		default: return "?-?";
 		}
 	}
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedDatabaseMetaData.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedDatabaseMetaData.java
index 98748eda..e12e081c 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedDatabaseMetaData.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedDatabaseMetaData.java
@@ -21,6 +21,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 package org.apache.derby.impl.jdbc;
 
+import org.apache.derby.iapi.services.info.JVMInfo;
 import org.apache.derby.iapi.services.info.ProductVersionHolder;
 
 import org.apache.derby.iapi.services.monitor.Monitor;
@@ -3306,7 +3307,7 @@ public int getJDBCMajorVersion()
 	*/
 	public int getJDBCMinorVersion()
 	{
-        return 1;
+        return JVMInfo.jdbcMinorVersion();
 	}
 
 	/**
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java
index f921e230..39ec90f2 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java
@@ -689,20 +689,23 @@ else if (usingDerbyNetClient())
         
         int expectedJDBCMajor = -1;
         int expectedJDBCMinor = -1;
-        if (JDBC.vmSupportsJDBC4())
+        // java 8 - jdbc 4.2
+        if (JDBC.vmSupportsJDBC42())
         {
             expectedJDBCMajor = 4;
-            expectedJDBCMinor = 1;
+            expectedJDBCMinor = 2;
         }
-        else if (JDBC.vmSupportsJDBC3())
+        // java 7 - jdbc 4.1
+        else if (JDBC.vmSupportsJDBC41())
         {
-            expectedJDBCMajor = 3;
-            expectedJDBCMinor = 0;
+            expectedJDBCMajor = 4;
+            expectedJDBCMinor = 1;
         }
-        else if (JDBC.vmSupportsJSR169())
+        // java 6 - jdbc 4.0
+        else if (JDBC.vmSupportsJDBC4())
         {
-            // Not sure what is the correct output for JSR 169
-            expectedJDBCMajor = -1;
+            expectedJDBCMajor = 4;
+            expectedJDBCMinor = 0;
         }
          
         if (expectedJDBCMajor != -1)
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/SysinfoCPCheckTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/SysinfoCPCheckTest.java
index 00d305a5..eb2ebf6d 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/SysinfoCPCheckTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/SysinfoCPCheckTest.java
@@ -233,16 +233,18 @@ public void testjavaVersion(){
   		       JVMInfo.JDK_ID == JVMInfo.J2SE_18 );  
      }
      
+     // Still testing this here although we don't actually put
+     // out this line with sysinfo anymore.
      public void testderbyVMLevel(){
      	switch (JVMInfo.JDK_ID) {
          	case JVMInfo.J2SE_16: 
-         		assertEquals("Java SE 6 - JDBC 4.1",JVMInfo.derbyVMLevel());
+         		assertEquals("Java SE 6 - JDBC 4.0",JVMInfo.derbyVMLevel());
          		break;
          	case JVMInfo.J2SE_17: 
          		assertEquals("Java SE 7 - JDBC 4.1",JVMInfo.derbyVMLevel());
          		break;
          	case JVMInfo.J2SE_18: 
-         		assertEquals("Java SE 8 - JDBC 4.1",JVMInfo.derbyVMLevel());
+         		assertEquals("Java SE 8 - JDBC 4.2",JVMInfo.derbyVMLevel());
          		break;
          	default: 
  			 assertEquals("?-?",JVMInfo.derbyVMLevel());
