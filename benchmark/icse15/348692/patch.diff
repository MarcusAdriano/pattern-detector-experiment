diff --git a/lucene/java/trunk/src/java/org/apache/lucene/search/regex/RegexTermEnum.java b/lucene/java/trunk/src/java/org/apache/lucene/search/regex/RegexTermEnum.java
index bfef444d..528e6212 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/search/regex/RegexTermEnum.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/search/regex/RegexTermEnum.java
@@ -26,9 +26,7 @@ public RegexTermEnum(IndexReader reader, Term term) throws IOException {
     while (index < text.length()) {
       char c = text.charAt(index);
 
-      // TODO: improve the logic here.  There are other types of patterns
-      // that could break this, such as "\d*" and "\*abc"
-      if (c == '*' || c == '[' || c == '?' || c == '.') break;
+      if (!Character.isLetterOrDigit(c)) break;
 
       index++;
     }
diff --git a/lucene/java/trunk/src/test/org/apache/lucene/search/regex/TestRegexQuery.java b/lucene/java/trunk/src/test/org/apache/lucene/search/regex/TestRegexQuery.java
index 6ba55329..caa9e326 100644
--- a/lucene/java/trunk/src/test/org/apache/lucene/search/regex/TestRegexQuery.java
+++ b/lucene/java/trunk/src/test/org/apache/lucene/search/regex/TestRegexQuery.java
@@ -89,5 +89,12 @@ public void testSpanRegex1() throws Exception {
   public void testSpanRegex2() throws Exception {
     assertEquals(0, spanRegexQueryNrHits("q.[aeiou]c.*", "dog", 5, true));
   }
+
+//  public void testPrefix() throws Exception {
+      // This test currently fails because RegexTermEnum picks "r" as the prefix
+      // but the following "?" makes the "r" optional and should be a hit for the
+      // document matching "over".
+//    assertEquals(1, regexQueryNrHits("r?over"));
+//  }
 }
 
