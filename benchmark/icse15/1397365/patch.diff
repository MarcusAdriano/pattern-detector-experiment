diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/MatrixColumnMeansJob.java b/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/MatrixColumnMeansJob.java
index 9e57f8ac..4453c498 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/MatrixColumnMeansJob.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/MatrixColumnMeansJob.java
@@ -23,7 +23,7 @@
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.io.IntWritable;
 import org.apache.hadoop.io.NullWritable;
-import org.apache.hadoop.mapred.JobConf;
+import org.apache.hadoop.io.Writable;
 import org.apache.hadoop.mapreduce.Job;
 import org.apache.hadoop.mapreduce.Mapper;
 import org.apache.hadoop.mapreduce.Reducer;
@@ -56,7 +56,7 @@ private MatrixColumnMeansJob() {
   public static Vector run(Configuration conf,
                            Path inputPath,
                            Path outputVectorTmpPath) throws IOException {
-    return run(conf, inputPath, outputVectorTmpPath, VECTOR_CLASS);
+    return run(conf, inputPath, outputVectorTmpPath, null);
   }
 
   /**
@@ -82,12 +82,11 @@ public static Vector run(Configuration initialConf,
                       vectorClass == null ? DenseVector.class.getName()
                           : vectorClass);
 
-      @SuppressWarnings("deprecation")
-      JobConf oldApiConf = new JobConf(initialConf);
+      Job job = new Job(initialConf, "MatrixColumnMeansJob");
+      job.setJarByClass(MatrixColumnMeansJob.class);
+
+      FileOutputFormat.setOutputPath(job, outputVectorTmpPath);
 
-      org.apache.hadoop.mapred.FileOutputFormat.setOutputPath(oldApiConf,
-                                                              outputVectorTmpPath);
-      Job job = new Job(initialConf);
       outputVectorTmpPath.getFileSystem(job.getConfiguration())
                          .delete(outputVectorTmpPath, true);
       job.setNumReduceTasks(1);
@@ -108,7 +107,7 @@ public static Vector run(Configuration initialConf,
 
       Path tmpFile = new Path(outputVectorTmpPath, "part-r-00000");
       SequenceFileValueIterator<VectorWritable> iterator =
-        new SequenceFileValueIterator<VectorWritable>(tmpFile, true, oldApiConf);
+        new SequenceFileValueIterator<VectorWritable>(tmpFile, true, initialConf);
       try {
         if (iterator.hasNext()) {
           return iterator.next().get();
@@ -132,7 +131,7 @@ public static Vector run(Configuration initialConf,
    * Mapper for calculation of column-wise mean.
    */
   public static class MatrixColumnMeansMapper extends
-      Mapper<IntWritable, VectorWritable, NullWritable, VectorWritable> {
+      Mapper<Writable, VectorWritable, NullWritable, VectorWritable> {
 
     private Vector runningSum;
     private String vectorClass;
@@ -149,7 +148,7 @@ public void setup(Context context) {
      * column-wise running sum. Nothing is written at this stage
      */
     @Override
-    public void map(IntWritable r, VectorWritable v, Context context)
+    public void map(Writable r, VectorWritable v, Context context)
       throws IOException {
       if (runningSum == null) {
           /*
diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/stochasticsvd/BtJob.java b/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/stochasticsvd/BtJob.java
index 135c6ddd..f18d3a07 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/stochasticsvd/BtJob.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/stochasticsvd/BtJob.java
@@ -384,6 +384,10 @@ protected void setup(Context context) throws IOException,
       String xiPathStr = conf.get(PROP_XI_PATH);
       if (xiPathStr != null) {
         xi = SSVDHelper.loadAndSumUpVectors(new Path(xiPathStr), conf);
+        if (xi == null) {
+          throw new IOException(String.format("unable to load mean path xi from %s.",
+                                              xiPathStr));
+        }
       }
 
       if (outputBBt || xi != null) {
diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli.java b/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli.java
index 99342207..8560053e 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/stochasticsvd/SSVDCli.java
@@ -117,15 +117,26 @@ public int run(String[] args) throws Exception {
     }
 
     Path[] inputPaths = { getInputPath() };
+    Path tempPath = getTempPath();
+    FileSystem fs = FileSystem.get(getOutputPath().toUri(), conf);
 
     // MAHOUT-817
     if (pca && xiPath == null) {
-      xiPath = new Path(getTempPath(), "xi");
-      MatrixColumnMeansJob.run(conf, inputPaths[0], getTempPath());
+      xiPath = new Path(tempPath, "xi");
+      if (overwrite) {
+        fs.delete(xiPath, true);
+      }
+      MatrixColumnMeansJob.run(conf, inputPaths[0], xiPath);
     }
 
     SSVDSolver solver =
-      new SSVDSolver(conf, inputPaths, getTempPath(), r, k, p, reduceTasks);
+      new SSVDSolver(conf,
+                     inputPaths,
+                     new Path(tempPath, "ssvd"),
+                     r,
+                     k,
+                     p,
+                     reduceTasks);
 
     solver.setMinSplitSize(minSplitSize);
     solver.setComputeU(computeU);
@@ -138,13 +149,14 @@ public int run(String[] args) throws Exception {
     solver.setQ(q);
     solver.setBroadcast(broadcast);
     solver.setOverwrite(overwrite);
-    solver.setPcaMeanPath(xiPath);
+
+    if (xiPath != null) {
+      solver.setPcaMeanPath(new Path(xiPath, "part-*"));
+    }
 
     solver.run();
 
     // housekeeping
-    FileSystem fs = FileSystem.get(getOutputPath().toUri(), conf);
-
     if (overwrite) {
       fs.delete(getOutputPath(), true);
     }
diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver.java b/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver.java
index 6491d33f..a5179860 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/stochasticsvd/SSVDSolver.java
@@ -406,6 +406,11 @@ public void run() throws IOException {
          */
 
         Vector xi = SSVDHelper.loadAndSumUpVectors(pcaMeanPath, conf);
+        if (xi == null) {
+          throw new IOException(String.format("unable to load mean path xi from %s.",
+                                              pcaMeanPath.toString()));
+        }
+
         xisquaredlen = xi.dot(xi);
         Omega omega = new Omega(seed, k + p);
         Vector s_b0 = omega.mutlithreadedTRightMultiply(xi);
