diff --git a/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/core/CoreContainer.java b/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/core/CoreContainer.java
index 4591fee2..c1ab5194 100644
--- a/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/core/CoreContainer.java
+++ b/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/core/CoreContainer.java
@@ -136,6 +136,9 @@ public CoreContainer initialize() throws IOException,
       setAbortOnConfigurationError(0 < cores.numCoresAbortOnConfigError);
       
       solrConfigFilename = cores.getConfigFile().getName();
+      if (cores.cores.isEmpty()){
+        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "No cores were created, please check the logs for errors");
+      }
       
       return cores;
     }
diff --git a/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/core/SolrCore.java b/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/core/SolrCore.java
index e9f4824d..dc89cc11 100644
--- a/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/core/SolrCore.java
+++ b/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/core/SolrCore.java
@@ -594,11 +594,15 @@ public Object call() throws Exception {
       // Finally tell anyone who wants to know
       resourceLoader.inform( resourceLoader );
       resourceLoader.inform( this );  // last call before the latch is released.
-      instance = this;   // set singleton for backwards compatibility
-    } catch (IOException e) {
-      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);
+      instance = this;
+    } catch (Throwable e) {
+      log.error("Error in constructing the core", e);
+      latch.countDown();//release the latch, otherwise we block trying to do the close.  This should be fine, since counting down on a latch of 0 is still fine
+      //close down the searcher and any other resources, if it exists, as this is not recoverable
+      close();
+      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, null, e, false);
     } finally {
-      // allow firstSearcher events to fire
+      // allow firstSearcher events to fire and make sure it is released
       latch.countDown();
     }
 
diff --git a/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent.java b/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent.java
index 3d091c6b..f4b89f79 100644
--- a/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent.java
+++ b/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent.java
@@ -197,10 +197,10 @@ public void inform(SolrCore core)
     }
     catch( Exception ex ) {
       throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,
-          "Error initializing QueryElevationComponent.", ex );
+          "Error initializing QueryElevationComponent.", ex, false );
     }
   }
-
+  //get the elevation map from the data dir
   Map<String, ElevationObj> getElevationMap( IndexReader reader, SolrCore core ) throws Exception
   {
     synchronized( elevationCache ) {
@@ -224,7 +224,7 @@ public void inform(SolrCore core)
       return map;
     }
   }
-  
+  //load up the elevation map
   private Map<String, ElevationObj> loadElevationMap( Config cfg ) throws IOException
   {
     XPath xpath = XPathFactory.newInstance().newXPath();
diff --git a/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java b/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java
index f5c93433..7b4b3558 100644
--- a/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java
+++ b/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java
@@ -97,7 +97,7 @@ public void init(FilterConfig config) throws ServletException
     }
     catch( Throwable t ) {
       // catch this so our filter still works
-      log.error( "Could not start Solr. Check solr/home property", t);
+      log.error( "Could not start Solr. Check solr/home property and the logs", t);
       SolrConfig.severeErrors.add( t );
       SolrCore.log( t );
     }
diff --git a/lucene/dev/branches/branch_3x/solr/core/src/test/org/apache/solr/handler/component/BadComponentTest.java b/lucene/dev/branches/branch_3x/solr/core/src/test/org/apache/solr/handler/component/BadComponentTest.java
index 7c60df87..ad205297 100644
--- a/lucene/dev/branches/branch_3x/solr/core/src/test/org/apache/solr/handler/component/BadComponentTest.java
+++ b/lucene/dev/branches/branch_3x/solr/core/src/test/org/apache/solr/handler/component/BadComponentTest.java
@@ -1 +1,44 @@
   Merged /lucene/dev/trunk/lucene:r1211827
+package org.apache.solr.handler.component;
+
+
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import org.apache.solr.SolrTestCaseJ4;
+import org.apache.solr.common.SolrException;
+import org.junit.Test;
+
+/**
+ * SOLR-1730, tests what happens when a component fails to initialize properly
+ *
+ **/
+public class BadComponentTest extends SolrTestCaseJ4{
+  @Test
+  public void testBadElevate() throws Exception {
+    try {
+      System.setProperty("elevate.file", "foo.xml");
+      initCore("solrconfig-elevate.xml", "schema12.xml");
+      assertTrue(false);
+    } catch (Throwable e) {
+      log.error("Exception", e);
+      assertTrue(true);
+    } finally {
+      System.clearProperty("elevate.file");
+    }
+  }
+}
diff --git a/lucene/dev/branches/branch_3x/solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest.java b/lucene/dev/branches/branch_3x/solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest.java
index b561b958..474f7bc3 100644
--- a/lucene/dev/branches/branch_3x/solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest.java
+++ b/lucene/dev/branches/branch_3x/solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest.java
@@ -29,6 +29,7 @@
 import org.apache.solr.common.params.CommonParams;
 import org.apache.solr.common.params.MapSolrParams;
 import org.apache.solr.common.params.QueryElevationParams;
+import org.apache.solr.common.util.FileUtils;
 import org.apache.solr.common.util.NamedList;
 import org.apache.solr.core.SolrCore;
 import org.apache.solr.handler.component.QueryElevationComponent.ElevationObj;
@@ -44,7 +45,13 @@
 
   @BeforeClass
   public static void beforeClass() throws Exception {
-    initCore("solrconfig-elevate.xml","schema12.xml");
+    //write out elevate-data.xml to the Data dir first by copying it from conf, which we know exists, this way we can test both conf and data configurations
+    createTempDir();
+    File parent = new File(TEST_HOME(), "conf");
+    File elevateFile = new File(parent, "elevate.xml");
+    File elevateDataFile = new File(dataDir, "elevate-data.xml");
+    FileUtils.copyFile(elevateFile, elevateDataFile);
+    initCore("solrconfig-elevate.xml", "schema12.xml");
   }
 
   @Before
