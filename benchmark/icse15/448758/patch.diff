diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java
index 2c9578bb..0c51bafb 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java
@@ -5639,8 +5639,11 @@ public void updateSchemaAuth(String schemaName,
 
 	/**
 	 * Update the conglomerateNumber for an array of ConglomerateDescriptors.
-	 * In case of more than one ConglomerateDescriptor, they are for duplicate
-	 * indexes sharing one conglomerate.
+	 * In case of more than one ConglomerateDescriptor, each descriptor 
+	 * should be updated separately, conglomerate id is not same for all 
+	 * the descriptors. Even when indexes are sharing the same 
+	 * conglomerate(conglomerate number), conglomerate ids are unique.
+	 *
 	 * This is useful, in 1.3, when doing a bulkInsert into an 
 	 * empty table where we insert into a new conglomerate.
 	 * (This will go away in 1.4.)
@@ -5657,40 +5660,37 @@ public void updateConglomerateDescriptor(ConglomerateDescriptor[] cds,
 		throws StandardException
 	{
 		ExecIndexRow				keyRow1 = null;
-		ExecRow[]    				rows = new ExecRow[cds.length];
+		ExecRow     				row;
 		DataValueDescriptor			conglomIDOrderable;
 		TabInfoImpl						ti = coreInfo[SYSCONGLOMERATES_CORE_NUM];
 		SYSCONGLOMERATESRowFactory  rf = (SYSCONGLOMERATESRowFactory) ti.getCatalogRowFactory();
+		boolean[] bArray = {false, false, false};
 
+		for (int i = 0; i < cds.length; i++)
+		{
 		/* Use conglomIDOrderable in both start 
 		 * and stop position for index 1 scan. 
 		 */
-		conglomIDOrderable = getValueAsDVD(cds[0].getUUID());
+			conglomIDOrderable = getValueAsDVD(cds[i].getUUID());
 
 		/* Set up the start/stop position for the scan */
 		keyRow1 = (ExecIndexRow) exFactory.getIndexableRow(1);
 		keyRow1.setColumn(1, conglomIDOrderable);
 
-		for (int i = 0; i < cds.length; i++)
-		{
 			cds[i].setConglomerateNumber(conglomerateNumber);
 			// build the row to be stuffed into SYSCONGLOMERATES. 
-			rows[i] = rf.makeRow(cds[i], null);
-		}
+			row = rf.makeRow(cds[i], null);
 
 		// update row in catalog (no indexes)
-		boolean[] bArray = new boolean[3];
-		for (int index = 0; index < 3; index++)
-		{
-			bArray[index] = false;
-		}
-		ti.updateRow(keyRow1, rows,
+			ti.updateRow(keyRow1, row,
 					 SYSCONGLOMERATESRowFactory.SYSCONGLOMERATES_INDEX1_ID,
 					 bArray,
 					 (int[])null,
 					 tc);
 	}
 
+	}
+
 	
 	/**
 	 * Gets a list of the dependency descriptors for the given dependent's id.
