diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/junitTests/compatibility/CompatibilityCombinations.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/junitTests/compatibility/CompatibilityCombinations.java
index 2844f02a..e7ae4d3a 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/junitTests/compatibility/CompatibilityCombinations.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/junitTests/compatibility/CompatibilityCombinations.java
@@ -238,6 +238,9 @@ Licensed to the Apache Software Foundation (ASF) under one or more
     
     private static long SLEEP_TIME_MILLIS = 5000L;
     
+    /** The process in which the network server is running. */
+    private Process serverProc;
+    
     /**
      * Creates a new instance of CompatibilityCombinations
      * @param testcaseName Identifying the test.
@@ -1025,12 +1028,11 @@ private void startServer(int serverVM, int serverVersion)
             {
                 public void run()
                 {
-                    Process proc = null;
                     try
                     {
                         DEBUG("************** In run().");
-                        proc = Runtime.getRuntime().exec(fullCmd,envElements,workingDir);
-                        // proc = Runtime.getRuntime().exec(commandElements,envElements,workingDir);
+                        serverProc = Runtime.getRuntime().
+                                exec(fullCmd, envElements, workingDir);
                         DEBUG("************** Done exec().");
                     }
                     catch (Exception ex)
@@ -1146,9 +1148,8 @@ private void recreateDB(int serverVersion
         try
         {
             Process proc = Runtime.getRuntime().exec(fullCmd,envElements,workingDir);
-            proc.waitFor();
             processDEBUGOutput(proc);
-                        
+            proc.waitFor();
         }
         catch (Exception ex)
         {
@@ -1269,9 +1270,14 @@ private void stopServer(int serverVM, int serverVersion)
                 );
             try
             {
+                // Tell the server to stop.
                 Process proc = Runtime.getRuntime().exec(fullCmd,envElements,workingDir);
                 processDEBUGOutput(proc);
+                proc.waitFor();
                 
+                // Now wait for it to actually stop.
+                serverProc.waitFor();
+                serverProc = null;
             }
             catch (Exception ex)
             {
@@ -1342,7 +1348,7 @@ private void sysinfoServerFromClient(int clientVM
         {
             Process proc = Runtime.getRuntime().exec(fullCmd,envElements,workingDir);
             processOutput(proc, out);
-            
+            proc.waitFor();
         }
         catch (Exception ex)
         {
@@ -1402,7 +1408,7 @@ private void sysinfoEmbedded(int clientVM
         {
             Process proc = Runtime.getRuntime().exec(fullCmd,envElements,workingDir);
             processOutput(proc, out);
-            
+            proc.waitFor();
         }
         catch (Exception ex)
         {
