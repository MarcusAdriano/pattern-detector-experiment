diff --git a/db/derby/code/branches/10.2/java/engine/org/apache/derby/iapi/services/monitor/Monitor.java b/db/derby/code/branches/10.2/java/engine/org/apache/derby/iapi/services/monitor/Monitor.java
index 9c2a19c6..354b7572 100644
--- a/db/derby/code/branches/10.2/java/engine/org/apache/derby/iapi/services/monitor/Monitor.java
+++ b/db/derby/code/branches/10.2/java/engine/org/apache/derby/iapi/services/monitor/Monitor.java
@@ -689,6 +689,13 @@ public static void logTextMessage(String messageID, Object a1, Object a2, Object
 		getStream().println(MessageService.getTextMessage(messageID, a1, a2, a3, a4));
 	}
 
+	/**
+	  * Logs the stack trace of the specified throwable object.
+	  */
+	public static void logThrowable(Throwable t) {
+		t.printStackTrace(getStream().getPrintWriter());
+	}
+    
 	/**
 	 *  Translate a localeDescription of the form ll[_CC[_variant]] to
 	 *  a Locale object.
diff --git a/db/derby/code/branches/10.2/java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java b/db/derby/code/branches/10.2/java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java
index 5382509f..00297b3e 100644
--- a/db/derby/code/branches/10.2/java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java
+++ b/db/derby/code/branches/10.2/java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java
@@ -860,7 +860,7 @@ public void recover(
 							logFile = getLogFileName(++logFileNumber);
 						}
 					}
-
+					IOException accessException = null;
 					try
 					{
                         theLog =   privRandomAccessFile(logFile, "rw");
@@ -868,6 +868,7 @@ public void recover(
 					catch (IOException ioe)
 					{
 						theLog = null;
+						accessException = ioe;
 					}
 
                     if (theLog == null || !privCanWrite(logFile))
@@ -876,7 +877,9 @@ public void recover(
 							theLog.close();
 
 						theLog = null;
-
+						Monitor.logTextMessage(MessageId.LOG_CHANGED_DB_TO_READ_ONLY);
+						if (accessException != null)
+							Monitor.logThrowable(accessException);
 						ReadOnlyDB = true;
 					}
 					else
@@ -946,6 +949,7 @@ public void recover(
 					{
 						// if datafactory doesn't think it is readonly, we can
 						// do some futher test of our own
+						IOException accessException = null;
 						try
 						{
 							if(isWriteSynced)
@@ -956,14 +960,18 @@ public void recover(
 						catch (IOException ioe)
 						{
 							theLog = null;
+                            accessException = ioe;
 						}
                         if (theLog == null || !privCanWrite(logFile))
 						{
 							if (theLog != null)
 								theLog.close();
 							theLog = null;
-
+							Monitor.logTextMessage(MessageId.LOG_CHANGED_DB_TO_READ_ONLY);
+							if (accessException != null)
+								Monitor.logThrowable(accessException);	
 							ReadOnlyDB = true;
+											
 						}
 					}
 
@@ -3126,6 +3134,8 @@ else if (!verifyLogFormat(logFile, logFileNumber))
 				}
 				else
 				{
+					Monitor.logTextMessage(MessageId.LOG_CHANGED_DB_TO_READ_ONLY);
+					Monitor.logThrowable(new Exception("Error writing control file"));
 					// read only database
 					ReadOnlyDB = true;
 					logOut = null;
diff --git a/db/derby/code/branches/10.2/java/shared/org/apache/derby/shared/common/reference/MessageId.java b/db/derby/code/branches/10.2/java/shared/org/apache/derby/shared/common/reference/MessageId.java
index 2e2931a6..cbfdc824 100644
--- a/db/derby/code/branches/10.2/java/shared/org/apache/derby/shared/common/reference/MessageId.java
+++ b/db/derby/code/branches/10.2/java/shared/org/apache/derby/shared/common/reference/MessageId.java
@@ -63,6 +63,9 @@ Licensed to the Apache Software Foundation (ASF) under one or more
     String LOG_DURABILITY_TESTMODE_NO_SYNC_ERR = "L021"; // hint that error could be because 
                                                          // derby.system.durability was set to test
 
+    String LOG_CHANGED_DB_TO_READ_ONLY        = "L022"; // a permissions error on log caused us
+    													// to change db to read only.
+    
     /*
      * Raw Store data
      */
