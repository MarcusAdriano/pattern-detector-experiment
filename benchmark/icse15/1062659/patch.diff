diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/sgd/ModelDissector.java b/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/sgd/ModelDissector.java
index 0b66ae39..8cf4bdc6 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/sgd/ModelDissector.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/sgd/ModelDissector.java
@@ -127,15 +127,10 @@ private Category(int index, double weight) {
     @Override
     public int compareTo(Category o) {
       int r = Double.compare(Math.abs(weight), Math.abs(o.weight));
-      if (r == 0) {
-        if (index < o.index) {
-          return -1;
-        } else if (index > o.index) {
-          return 1;
-        }
-        return 0;
-      } else {
+      if (r != 0) {
         return r;
+      } else {
+        return o.index - index;
       }
     }
   }
@@ -153,7 +148,7 @@ public Weight(String feature, Vector weights) {
     public Weight(String feature, Vector weights, int n) {
       this.feature = feature;
       // pick out the weight with the largest abs value, but don't forget the sign
-      Queue<Category> biggest = new PriorityQueue<Category>(n + 1, Ordering.natural().reverse());
+      Queue<Category> biggest = new PriorityQueue<Category>(n + 1, Ordering.natural());
       for (Vector.Element element : weights) {
         biggest.add(new Category(element.index(), element.get()));
         while (biggest.size() > n) {
diff --git a/mahout/trunk/examples/src/test/java/org/apache/mahout/classifier/sgd/ModelDissectorTest.java b/mahout/trunk/examples/src/test/java/org/apache/mahout/classifier/sgd/ModelDissectorTest.java
index e69de29b..c8e48790 100644
--- a/mahout/trunk/examples/src/test/java/org/apache/mahout/classifier/sgd/ModelDissectorTest.java
+++ b/mahout/trunk/examples/src/test/java/org/apache/mahout/classifier/sgd/ModelDissectorTest.java
@@ -0,0 +1,40 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.mahout.classifier.sgd;
+
+import org.apache.mahout.examples.MahoutTestCase;
+import org.apache.mahout.math.DenseVector;
+import org.junit.Test;
+
+public class ModelDissectorTest extends MahoutTestCase {
+  @Test
+  public void testCategoryOrdering() {
+    ModelDissector.Weight w = new ModelDissector.Weight("a", new DenseVector(new double[]{-2, -5, 5, 2, 4, 1, 0}), 4);
+    assertEquals(1, w.getCategory(0), 0);
+    assertEquals(-5, w.getWeight(0), 0);
+
+    assertEquals(2, w.getCategory(1), 0);
+    assertEquals(5, w.getWeight(1), 0);
+
+    assertEquals(4, w.getCategory(2), 0);
+    assertEquals(4, w.getWeight(2), 0);
+
+    assertEquals(0, w.getCategory(3), 0);
+    assertEquals(-2, w.getWeight(3), 0);
+  }
+}
