diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java
index 95e1c565..6000d8c9 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java
@@ -127,7 +127,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 	/**
 	 This activation is set by EmbedStatement
 	 for a single execution Activation. Ie.
-	 a ResultSet from a Statement.executeQuery().
+	 a ResultSet from a Statement.executeQuery() or
+     a ResultSet that is now a dynamic result set.
 	 In this case the closing of this ResultSet will close
 	 the activation or the finalization of the parent EmbedStatement
 	 without it being closed will mark the Activation as unused.
@@ -4397,6 +4398,16 @@ void setDynamicResultSet(EmbedStatement owningStmt) {
 
 		this.owningStmt = owningStmt;
 		this.localConn = owningStmt.getEmbedConnection();
+        
+        // The activation that created these results now becomes
+        // a single use activation so it will be closed when this
+        // object is closed. Otherwise the activation would
+        // only be closed on garbage collection for any
+        // dynamic result set created by a PreparedStatement
+        // or CallableStatement. Dynamic result sets created
+        // by Statement objects will already be marked as
+        // single use.
+        this.singleUseActivation = theResults.getActivation();
 	}
 
 	/*
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedStatement.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedStatement.java
index 9dddd6eb..c92cf6b2 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedStatement.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedStatement.java
@@ -326,6 +326,12 @@ public final void close() throws SQLException {
      * well, even though prepared statements reuse activations, since
      * <code>getGeneratedKeys()</code> uses a single-use activation regardless
      * of statement type.
+     * <BR>
+     * Dynamic result sets (those in dynamicResults array) need not
+     * be handled here as they will be handled by the statement object
+     * that created them. In some cases results will point to a
+     * ResultSet in dynamicResults but all that will happen is that
+     * the activation will get marked as unused twice.
      */
     protected void finalize() throws Throwable {
         super.finalize();
