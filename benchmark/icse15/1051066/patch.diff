diff --git a/lucene/dev/branches/branch_3x/lucene/contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy.java b/lucene/dev/branches/branch_3x/lucene/contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy.java
index dca8f2fa..ba535746 100644
--- a/lucene/dev/branches/branch_3x/lucene/contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy.java
+++ b/lucene/dev/branches/branch_3x/lucene/contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy.java
@@ -56,7 +56,7 @@ public void setMergePolicyParams(MergePolicyParams params) {
   
   @Override
   protected long size(SegmentInfo info) throws IOException {
-    long byteSize = info.sizeInBytes();
+    long byteSize = info.sizeInBytes(true);
     float delRatio = (info.docCount <= 0 ? 0.0f : ((float)info.getDelCount() / (float)info.docCount));
     return (info.docCount <= 0 ?  byteSize : (long)((1.0f - delRatio) * byteSize));
   }
diff --git a/lucene/dev/branches/branch_3x/lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter.java b/lucene/dev/branches/branch_3x/lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter.java
index 5e9265c5..351c3087 100644
--- a/lucene/dev/branches/branch_3x/lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter.java
+++ b/lucene/dev/branches/branch_3x/lucene/contrib/misc/src/java/org/apache/lucene/index/IndexSplitter.java
@@ -99,7 +99,7 @@ public void listSegments() throws IOException {
     DecimalFormat formatter = new DecimalFormat("###,###.###");
     for (int x = 0; x < infos.size(); x++) {
       SegmentInfo info = infos.info(x);
-      String sizeStr = formatter.format(info.sizeInBytes());
+      String sizeStr = formatter.format(info.sizeInBytes(true));
       System.out.println(info.name + " " + sizeStr);
     }
   }
diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/CheckIndex.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/CheckIndex.java
index 97f34af7..d13b57a7 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/CheckIndex.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/CheckIndex.java
@@ -437,8 +437,8 @@ else if (format < SegmentInfos.CURRENT_FORMAT) {
         segInfoStat.hasProx = info.getHasProx();
         msg("    numFiles=" + info.files().size());
         segInfoStat.numFiles = info.files().size();
-        msg("    size (MB)=" + nf.format(info.sizeInBytes()/(1024.*1024.)));
-        segInfoStat.sizeMB = info.sizeInBytes()/(1024.*1024.);
+        segInfoStat.sizeMB = info.sizeInBytes(true)/(1024.*1024.);
+        msg("    size (MB)=" + nf.format(segInfoStat.sizeMB));
         Map<String,String> diagnostics = info.getDiagnostics();
         segInfoStat.diagnostics = diagnostics;
         if (diagnostics.size() > 0) {
diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/DocumentsWriter.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/DocumentsWriter.java
index 1e2a6e93..d02c4e7a 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/DocumentsWriter.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/DocumentsWriter.java
@@ -727,7 +727,7 @@ synchronized SegmentInfo flush(IndexWriter writer, boolean closeDocStore, IndexF
           threads.add(threadStates[i].consumer);
         }
 
-        final long startNumBytesUsed = bytesUsed();
+        final double startMBUsed = bytesUsed()/1024./1024.;
         consumer.flush(threads, flushState);
 
         hasVectors |= flushState.hasVectors;
@@ -767,11 +767,13 @@ synchronized SegmentInfo flush(IndexWriter writer, boolean closeDocStore, IndexF
 
         if (infoStream != null) {
           message("flush: segment=" + newSegment);
-          final long newSegmentSize = newSegment.sizeInBytes();
-          String message = "  ramUsed=" + nf.format(startNumBytesUsed/1024./1024.) + " MB" +
-            " newFlushedSize=" + nf.format(newSegmentSize/1024/1024) + " MB" +
-            " docs/MB=" + nf.format(numDocsInRAM/(newSegmentSize/1024./1024.)) +
-            " new/old=" + nf.format(100.0*newSegmentSize/startNumBytesUsed) + "%";
+          final double newSegmentSizeNoStore = newSegment.sizeInBytes(false)/1024./1024.;
+          final double newSegmentSize = newSegment.sizeInBytes(true)/1024./1024.;
+          String message = "  ramUsed=" + nf.format(startMBUsed) + " MB" +
+            " newFlushedSize=" + nf.format(newSegmentSize) + " MB" +
+            " (" + nf.format(newSegmentSizeNoStore) + " MB w/o doc stores)" +
+            " docs/MB=" + nf.format(numDocsInRAM/newSegmentSize) +
+            " new/old=" + nf.format(100.0*newSegmentSize/startMBUsed) + "%";
           message(message);
         }
 
diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/LogMergePolicy.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/LogMergePolicy.java
index 8d273a2a..e0406225 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/LogMergePolicy.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/LogMergePolicy.java
@@ -206,7 +206,7 @@ protected long sizeDocs(SegmentInfo info) throws IOException {
   }
   
   protected long sizeBytes(SegmentInfo info) throws IOException {
-    long byteSize = info.sizeInBytes();
+    long byteSize = info.sizeInBytes(true);
     if (calibrateSizeByDeletes) {
       int delCount = writer.get().numDeletedDocs(info);
       double delRatio = (info.docCount <= 0 ? 0.0f : ((float)delCount / (float)info.docCount));
diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/MergePolicy.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/MergePolicy.java
index 62d46dd4..b52f8023 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/MergePolicy.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/MergePolicy.java
@@ -169,7 +169,7 @@ public String segString(Directory dir) {
     public long totalBytesSize() throws IOException {
       long total = 0;
       for (SegmentInfo info : segments) {
-        total += info.sizeInBytes();
+        total += info.sizeInBytes(true);
       }
       return total;
     }
diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/SegmentInfo.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/SegmentInfo.java
index cd652d4e..8c6932b0 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/SegmentInfo.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/SegmentInfo.java
@@ -271,13 +271,16 @@ void setNumFields(int numFields) {
 
   /** Returns total size in bytes of all of files used by
    *  this segment. */
-  public long sizeInBytes() throws IOException {
+  public long sizeInBytes(boolean includeDocStores) throws IOException {
     if (sizeInBytes == -1) {
       List<String> files = files();
       final int size = files.size();
       sizeInBytes = 0;
       for(int i=0;i<size;i++) {
         final String fileName = files.get(i);
+        if (!includeDocStores && IndexFileNames.isDocStoreFile(fileName)) {
+          continue;
+        }
         // We don't count bytes used by a shared doc store
         // against this segment:
         if (docStoreOffset == -1 || !IndexFileNames.isDocStoreFile(fileName))
diff --git a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestSizeBoundedOptimize.java b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestSizeBoundedOptimize.java
index 3ce1d6af..5ac38d4f 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestSizeBoundedOptimize.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestSizeBoundedOptimize.java
@@ -59,7 +59,7 @@ public void testByteSizeLimit() throws Exception {
     
     SegmentInfos sis = new SegmentInfos();
     sis.read(dir);
-    double min = sis.info(0).sizeInBytes();
+    double min = sis.info(0).sizeInBytes(true);
     
     conf = newWriterConfig();
     LogByteSizeMergePolicy lmp = new LogByteSizeMergePolicy();
