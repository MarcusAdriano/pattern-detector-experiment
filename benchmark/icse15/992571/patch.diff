diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/FieldComparator.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/FieldComparator.java
index 9b140fff..6b2b6a39 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/FieldComparator.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/FieldComparator.java
@@ -731,10 +731,7 @@ public TermOrdValComparator(int numHits, String field, int sortPos, boolean reve
     @Override
     public int compare(int slot1, int slot2) {
       if (readerGen[slot1] == readerGen[slot2]) {
-        int cmp = ords[slot1] - ords[slot2];
-        if (cmp != 0) {
-          return cmp;
-        }
+        return ords[slot1] - ords[slot2];
       }
 
       final BytesRef val1 = values[slot1];
@@ -786,6 +783,7 @@ public int compareBottom(int doc) {
     public void copy(int slot, int doc) {
       final int ord = (int) currentDocToOrd.get(doc);
       if (ord == 0) {
+        ords[slot] = 0;
         values[slot] = null;
       } else {
         ords[slot] = ord;
@@ -813,11 +811,16 @@ public void setBottom(final int bottom) {
       bottomSlot = bottom;
 
       bottomValue = values[bottomSlot];
+      if (currentReaderGen == readerGen[bottomSlot]) {
+        bottomOrd = ords[bottomSlot];
+        bottomSameReader = true;
+      } else {
       if (bottomValue == null) {
         // 0 ord is null for all segments
         assert ords[bottomSlot] == 0;
         bottomOrd = 0;
         bottomSameReader = true;
+          readerGen[bottomSlot] = currentReaderGen;
       } else {
         final int index = binarySearch(tempBR, termsIndex, bottomValue);
         if (index < 0) {
@@ -830,6 +833,10 @@ public void setBottom(final int bottom) {
         }
       }
     }
+      if (bottomSameReader) {
+        readerGen[bottomSlot] = currentReaderGen;
+      }
+    }
 
     @Override
     public Comparable<?> value(int slot) {
