diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/HintedHandOffManager.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/HintedHandOffManager.java
index 42e4232f..dee5bed1 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/HintedHandOffManager.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/HintedHandOffManager.java
@@ -32,10 +32,15 @@
 
 import org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor;
 import org.apache.cassandra.config.DatabaseDescriptor;
+import org.apache.cassandra.db.filter.QueryFilter;
+import org.apache.cassandra.db.filter.SliceQueryFilter;
 import org.apache.cassandra.gms.FailureDetector;
 import org.apache.cassandra.gms.Gossiper;
 
 import java.net.InetAddress;
+
+import org.apache.commons.lang.ArrayUtils;
+
 import org.apache.cassandra.net.Message;
 import org.apache.cassandra.net.MessagingService;
 import org.apache.cassandra.service.*;
@@ -84,6 +89,7 @@
     private final ExecutorService executor_ = new JMXEnabledThreadPoolExecutor("HINTED-HANDOFF-POOL");
     final Timer timer = new Timer("HINTED-HANDOFF-TIMER");
     public static final String HINTS_CF = "HintsColumnFamily";
+    private static final int PAGE_SIZE = 10000;
 
 
     public static HintedHandOffManager instance()
@@ -168,10 +174,14 @@ private static void deliverAllHints(ColumnFamilyStore hintStore) throws DigestMi
         // 7. I guess we are done
         for (String tableName : DatabaseDescriptor.getTables())
         {
-            ColumnFamily hintColumnFamily = ColumnFamilyStore.removeDeleted(hintStore.getColumnFamily(new IdentityQueryFilter(tableName, new QueryPath(HINTS_CF))), Integer.MAX_VALUE);
+            byte[] startColumn = ArrayUtils.EMPTY_BYTE_ARRAY;
+            while (true)
+            {
+                QueryFilter filter = new SliceQueryFilter(tableName, new QueryPath(HINTS_CF), startColumn, ArrayUtils.EMPTY_BYTE_ARRAY, false, PAGE_SIZE);
+                ColumnFamily hintColumnFamily = ColumnFamilyStore.removeDeleted(hintStore.getColumnFamily(filter), Integer.MAX_VALUE);
             if (hintColumnFamily == null)
             {
-                continue;
+                    break;
             }
             Collection<IColumn> keys = hintColumnFamily.getSortedColumns();
 
@@ -192,6 +202,9 @@ private static void deliverAllHints(ColumnFamilyStore hintStore) throws DigestMi
                 {
                     deleteHintKey(tableName, keyColumn.name());
                 }
+
+                    startColumn = keyColumn.name(); // repeating the last as the first is fine since we just deleted it
+                }
             }
         }
         hintStore.forceFlush();
@@ -218,12 +231,17 @@ private static void deliverHintsToEndpoint(InetAddress endPoint) throws IOExcept
         // 2. For each key read the list of recipients if the endpoint matches send
         // 3. Delete that recipient from the key if write was successful
         Table systemTable = Table.open(Table.SYSTEM_TABLE);
+        ColumnFamilyStore hintStore = systemTable.getColumnFamilyStore(HINTS_CF);
         for (String tableName : DatabaseDescriptor.getTables())
         {
-            ColumnFamily hintedColumnFamily = ColumnFamilyStore.removeDeleted(systemTable.get(tableName, HINTS_CF), Integer.MAX_VALUE);
+            byte[] startColumn = ArrayUtils.EMPTY_BYTE_ARRAY;
+            while (true)
+            {
+                QueryFilter filter = new SliceQueryFilter(tableName, new QueryPath(HINTS_CF), startColumn, ArrayUtils.EMPTY_BYTE_ARRAY, false, PAGE_SIZE);
+                ColumnFamily hintedColumnFamily = ColumnFamilyStore.removeDeleted(hintStore.getColumnFamily(filter), Integer.MAX_VALUE);
             if (hintedColumnFamily == null)
             {
-                continue;
+                    break;
             }
             Collection<IColumn> keys = hintedColumnFamily.getSortedColumns();
 
@@ -246,6 +264,9 @@ private static void deliverHintsToEndpoint(InetAddress endPoint) throws IOExcept
                         break;
                     }
                 }
+
+                    startColumn = keyColumn.name(); // repeating the last as the first is fine since we just deleted it
+                }
             }
         }
 
