diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest.java
index b37853fa..e384fde1 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest.java
@@ -28,6 +28,7 @@
 import org.apache.solr.client.solrj.SolrQuery;
 import org.apache.solr.client.solrj.SolrServerException;
 import org.apache.solr.client.solrj.embedded.JettySolrRunner;
+import org.apache.solr.client.solrj.impl.CloudSolrServer;
 import org.apache.solr.client.solrj.impl.HttpSolrServer;
 import org.apache.solr.client.solrj.request.QueryRequest;
 import org.apache.solr.client.solrj.request.UpdateRequest;
@@ -153,6 +154,14 @@ public void doTest() throws Exception {
     // create alias, collection2 first because it's not on every node
     createAlias("testalias", "collection2,collection1");
     
+    // search with new cloud client
+    CloudSolrServer cloudSolrServer = new CloudSolrServer(zkServer.getZkAddress());
+    query = new SolrQuery("*:*");
+    query.set("collection", "testalias");
+    res = cloudSolrServer.query(query);
+    cloudSolrServer.shutdown();
+    assertEquals(5, res.getResults().getNumFound());
+    
     // search for alias with random non cloud client
     query = new SolrQuery("*:*");
     query.set("collection", "testalias");
diff --git a/lucene/dev/branches/branch_4x/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java b/lucene/dev/branches/branch_4x/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java
index f572b21d..217ea1c8 100644
--- a/lucene/dev/branches/branch_4x/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java
+++ b/lucene/dev/branches/branch_4x/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java
@@ -341,6 +341,7 @@ public void process(WatchedEvent event) {
             
           }, true);
     }
+    updateAliases();
   }
   
   
