diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/AllocPage.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/AllocPage.java
index e0927918..55dd0709 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/AllocPage.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/AllocPage.java
@@ -274,10 +274,12 @@ protected void createPage(PageKey newIdentity, PageCreationArgs args)
 		 throws StandardException
 	{
 
-		super.createPage(newIdentity, args);
-
+        // We need to set borrowedSpace before we call super.createPage() so
+        // that totalSpace is initialized correctly (DERBY-3116).
 		borrowedSpace = args.containerInfoSize;
 
+		super.createPage(newIdentity, args);
+
 		if (SanityManager.DEBUG)
 		{
 			// MAX_BORROWED_SPACE can't be bigger than what can be represented in 1 byte space
@@ -307,12 +309,19 @@ protected void createPage(PageKey newIdentity, PageCreationArgs args)
 		reserved1 = reserved2 = reserved3 = reserved4 = 0;
 
 		// calculate how much space we have left for the extent map
-		int maxSpace = getMaxFreeSpace();
+        if (SanityManager.DEBUG) {
+            // totalSpace used to be incorrect (DERBY-3116), so check it here
+            int maxFreeSpace = getMaxFreeSpace();
+            SanityManager.ASSERT(totalSpace == maxFreeSpace,
+                                 "totalSpace = " + totalSpace +
+                                 ", getMaxFreeSpace() = " + maxFreeSpace);
+        }
 
 		// the pages this extent is going to manage starts from pageNum+1
 		// starting physical offset is pageSize*(pageNum+1) since we have
 		// no logical to physical mapping yet...
-		extent = createExtent(newIdentity.getPageNumber()+1, getPageSize(), 0 /* pagesAlloced */, maxSpace);
+        extent = createExtent(newIdentity.getPageNumber()+1, getPageSize(),
+                              0 /* pagesAlloced */, totalSpace);
 	}
 
 	private AllocExtent createExtent(long pageNum, int pageSize, int pagesAlloced, int availspace)
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/CachedPage.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/CachedPage.java
index 9d37b053..c54727b5 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/CachedPage.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/CachedPage.java
@@ -857,10 +857,12 @@ protected void setPageArray(int pageSize)
             // Just in case memory is low.
             pageData = null; 
 			pageData = new byte[pageSize];
+		}
 				
+        // Always call usePageBuffer(), even when we reuse the buffer, so that
+        // totalSpace and friends are recalculated (DERBY-3116).
 			usePageBuffer(pageData);
 		}
-	}
 
 
     /**
