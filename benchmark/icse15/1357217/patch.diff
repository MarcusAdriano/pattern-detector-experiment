diff --git a/lucene/dev/branches/pforcodec_3892/lucene/core/src/java/org/apache/lucene/codecs/intblock/FixedIntBlockIndexInput.java b/lucene/dev/branches/pforcodec_3892/lucene/core/src/java/org/apache/lucene/codecs/intblock/FixedIntBlockIndexInput.java
index ef54792c..5ea5241e 100644
--- a/lucene/dev/branches/pforcodec_3892/lucene/core/src/java/org/apache/lucene/codecs/intblock/FixedIntBlockIndexInput.java
+++ b/lucene/dev/branches/pforcodec_3892/lucene/core/src/java/org/apache/lucene/codecs/intblock/FixedIntBlockIndexInput.java
@@ -77,16 +77,14 @@ public Index index() {
 
   private static class Reader extends IntIndexInput.Reader {
     private final IndexInput in;
+    private final BlockReader blockReader;
+    private final int blockSize;
+    private final int[] pending;
 
-    protected final int[] pending;
-    int upto;
-
+    private int upto;
     private boolean seekPending;
     private long pendingFP;
-    private int pendingUpto;
-    private long lastBlockFP;
-    private final BlockReader blockReader;
-    private final int blockSize;
+    private long lastBlockFP = -1;
 
     public Reader(final IndexInput in, final int[] pending, final BlockReader blockReader)
     throws IOException {
@@ -98,33 +96,28 @@ public Reader(final IndexInput in, final int[] pending, final BlockReader blockR
     }
 
     void seek(final long fp, final int upto) {
+      assert upto < blockSize;
+      if (seekPending || fp != lastBlockFP) {
       pendingFP = fp;
-      pendingUpto = upto;
       seekPending = true;
     }
+      this.upto = upto;
+    }
 
-    private void maybeSeek() throws IOException {
+    @Override
+    public int next() throws IOException {
       if (seekPending) {
-        if (pendingFP != lastBlockFP) {
-          // need new block
+        // Seek & load new block
           in.seek(pendingFP);
           lastBlockFP = pendingFP;
           blockReader.readBlock();
-        }
-        upto = pendingUpto;
         seekPending = false;
-      }
-    }
-
-    @Override
-    public int next() throws IOException {
-      this.maybeSeek();
-      if (upto == blockSize) {
+      } else if (upto == blockSize) {
+        // Load new block
         lastBlockFP = in.getFilePointer();
         blockReader.readBlock();
         upto = 0;
       }
-
       return pending[upto++];
     }
   }
