diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/gms/FailureDetector.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/gms/FailureDetector.java
index a5d5fd26..31aa4270 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/gms/FailureDetector.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/gms/FailureDetector.java
@@ -45,7 +45,6 @@
 {
     private static Logger logger_ = Logger.getLogger(FailureDetector.class);
     private static final int sampleSize_ = 1000;
-    private static final int phiSuspectThreshold_ = 5;
     private static final int phiConvictThreshold_ = 8;
     /* The Failure Detector has to have been up for at least 1 min. */
     private static final long uptimeThreshold_ = 60000;
@@ -169,29 +168,17 @@ public void interpret(InetAddress ep)
             return;
         }
         long now = System.currentTimeMillis();
-        /* We need this so that we do not suspect a convict. */
-        boolean isConvicted = false;
         double phi = hbWnd.phi(now);
         if (logger_.isTraceEnabled())
             logger_.trace("PHI for " + ep + " : " + phi);
         
-        /*
         if ( phi > phiConvictThreshold_ )
         {            
-            isConvicted = true;     
             for ( IFailureDetectionEventListener listener : fdEvntListeners_ )
             {
                 listener.convict(ep);                
             }
         }
-        */
-        if ( !isConvicted && phi > phiSuspectThreshold_ )
-        {     
-            for ( IFailureDetectionEventListener listener : fdEvntListeners_ )
-            {
-                listener.suspect(ep);
-            }
-        }        
     }
     
     public void registerFailureDetectionEventListener(IFailureDetectionEventListener listener)
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/gms/Gossiper.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/gms/Gossiper.java
index 1d266e59..cbdc0a50 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/gms/Gossiper.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/gms/Gossiper.java
@@ -186,32 +186,7 @@ public synchronized void unregister(IEndPointStateChangeSubscriber subscriber)
      *
      * param @ endpoint end point that is convicted.
     */
-
     public void convict(InetAddress endpoint)
-    {
-        EndPointState epState = endPointStateMap_.get(endpoint);
-        if (epState != null)
-        {
-            if (!epState.isAlive() && epState.isAGossiper())
-            {
-                // just to be sure - should already have been done by suspect()
-                if (liveEndpoints_.contains(endpoint))
-                {
-                    logger_.info("InetAddress " + endpoint + " is now dead.");
-                    isAlive(endpoint, epState, false);
-                }
-                epState.isAGossiper(false);
-            }
-        }
-    }
-
-    /**
-     * This method is part of IFailureDetectionEventListener interface. This is invoked
-     * by the Failure Detector when it suspects an end point.
-     *
-     * param @ endpoint end point that is suspected.
-    */
-    public void suspect(InetAddress endpoint)
     {
         EndPointState epState = endPointStateMap_.get(endpoint);
         if (epState.isAlive())
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/gms/IFailureDetectionEventListener.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/gms/IFailureDetectionEventListener.java
index 78ceb0b1..6f296902 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/gms/IFailureDetectionEventListener.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/gms/IFailureDetectionEventListener.java
@@ -21,7 +21,7 @@
 import java.net.InetAddress;
 
 /**
- * Implemented by the Gossiper to either convict/suspect an endpoint
+ * Implemented by the Gossiper to convict an endpoint
  * based on the PHI calculated by the Failure Detector on the inter-arrival
  * times of the heart beats.
  */
@@ -34,9 +34,4 @@
      */
     public void convict(InetAddress ep);
     
-    /**
-     * Suspect the specified endpoint.
-     * @param ep endpoint to be suspected.
-     */
-    public void suspect(InetAddress ep);
 }
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/gms/IFailureNotification.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/gms/IFailureNotification.java
index f5f15585..1d09bf00 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/gms/IFailureNotification.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/gms/IFailureNotification.java
@@ -22,6 +22,6 @@
 
 public interface IFailureNotification
 {   
-    public void suspect(InetAddress ep);
+    public void convict(InetAddress ep);
     public void revive(InetAddress ep);
 }
