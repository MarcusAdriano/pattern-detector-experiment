diff --git a/lucene/dev/branches/branch_3x/lucene/contrib/misc/src/test/org/apache/lucene/index/TestFieldNormModifier.java b/lucene/dev/branches/branch_3x/lucene/contrib/misc/src/test/org/apache/lucene/index/TestFieldNormModifier.java
index ebdf4d38..dd95fd3b 100644
--- a/lucene/dev/branches/branch_3x/lucene/contrib/misc/src/test/org/apache/lucene/index/TestFieldNormModifier.java
+++ b/lucene/dev/branches/branch_3x/lucene/contrib/misc/src/test/org/apache/lucene/index/TestFieldNormModifier.java
@@ -22,7 +22,6 @@
 import java.util.Arrays;
 
 import org.apache.lucene.analysis.MockAnalyzer;
-import org.apache.lucene.analysis.SimpleAnalyzer;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
 import org.apache.lucene.search.Collector;
@@ -82,8 +81,8 @@ public void testMissingField() throws Exception {
     FieldNormModifier fnm = new FieldNormModifier(store, s);
     try {
       fnm.reSetNorms("nobodyherebutuschickens");
-    } catch (Exception e) {
-      assertNull("caught something", e);
+    } catch (IllegalStateException e) {
+      // expected
     }
   }
   
@@ -101,8 +100,8 @@ public void testFieldWithNoNorm() throws Exception {
     FieldNormModifier fnm = new FieldNormModifier(store, s);
     try {
       fnm.reSetNorms("nonorm");
-    } catch (Exception e) {
-      assertNull("caught something", e);
+    } catch (IllegalStateException e) {
+      // expected
     }
     
     // nothing should have changed
diff --git a/lucene/dev/branches/branch_3x/lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier.java b/lucene/dev/branches/branch_3x/lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier.java
index d6814248..cf2240ea 100644
--- a/lucene/dev/branches/branch_3x/lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier.java
+++ b/lucene/dev/branches/branch_3x/lucene/contrib/misc/src/test/org/apache/lucene/misc/TestLengthNormModifier.java
@@ -83,12 +83,12 @@ public void tearDown() throws Exception {
       super.tearDown();
     }
     
-    public void testMissingField() {
+    public void testMissingField() throws Exception {
 	FieldNormModifier fnm = new FieldNormModifier(store, s);
 	try {
 	    fnm.reSetNorms("nobodyherebutuschickens");
-	} catch (Exception e) {
-	    assertNull("caught something", e);
+	} catch (IllegalStateException e) {
+	    // expected
 	}
     }
 	
@@ -106,8 +106,8 @@ public void testFieldWithNoNorm() throws Exception {
 	FieldNormModifier fnm = new FieldNormModifier(store, s);
 	try {
 	    fnm.reSetNorms("nonorm");
-	} catch (Exception e) {
-	    assertNull("caught something", e);
+	} catch (IllegalStateException e) {
+	  // expected
 	}
 
 	// nothing should have changed
diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/document/Field.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/document/Field.java
index 32ccd46e..b3ebbda5 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/document/Field.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/document/Field.java
@@ -97,7 +97,7 @@
     },
 
     /** Expert: Index the field's value without an Analyzer,
-     * and also disable the storing of norms.  Note that you
+     * and also disable the indexing of norms.  Note that you
      * can also separately enable/disable norms by calling
      * {@link Field#setOmitNorms}.  No norms means that
      * index-time field and document boosting and field
diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexReader.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexReader.java
index ab7bda53..b5e6ae4f 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexReader.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexReader.java
@@ -913,8 +913,8 @@ public abstract void norms(String field, byte[] bytes, int offset)
    * int) length normalization}.  Thus, to preserve the length normalization
    * values when resetting this, one should base the new value upon the old.
    *
-   * <b>NOTE:</b> If this field does not store norms, then
-   * this method call will silently do nothing.
+   * <b>NOTE:</b> If this field does not index norms, then
+   * this method throws {@link IllegalStateException}.
    *
    * @see #norms(String)
    * @see Similarity#decodeNormValue(byte)
@@ -925,6 +925,7 @@ public abstract void norms(String field, byte[] bytes, int offset)
    *  has this index open (<code>write.lock</code> could not
    *  be obtained)
    * @throws IOException if there is a low-level IO error
+   * @throws IllegalStateException if the field does not index norms
    */
   public synchronized  void setNorm(int doc, String field, byte value)
           throws StaleReaderException, CorruptIndexException, LockObtainFailedException, IOException {
diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/SegmentReader.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/SegmentReader.java
index 8aaacf27..bee182c6 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/SegmentReader.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/SegmentReader.java
@@ -594,8 +594,10 @@ public boolean hasNorms(String field) {
   protected void doSetNorm(int doc, String field, byte value)
           throws IOException {
     SegmentNorms norm = norms.get(field);
-    if (norm == null)                             // not an indexed field
-      return;
+    if (norm == null) {
+      // field does not store norms
+      throw new IllegalStateException("Cannot setNorm for field " + field + ": norms were omitted");
+    }
 
     normsDirty = true;
     norm.copyOnWrite()[doc] = value;                    // set the value
diff --git a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestIndexReader.java b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestIndexReader.java
index e5c78e44..94e47e72 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestIndexReader.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestIndexReader.java
@@ -957,7 +957,7 @@ public void testDiskFull() throws IOException {
               int docId = 12;
               for(int i=0;i<13;i++) {
                 reader.deleteDocument(docId);
-                reader.setNorm(docId, "contents", (float) 2.0);
+                reader.setNorm(docId, "content", (float) 2.0);
                 docId += 12;
               }
             }
