diff --git a/lucene/dev/branches/realtime_search/lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl.java b/lucene/dev/branches/realtime_search/lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl.java
index 292cb819..2e70c6d1 100644
--- a/lucene/dev/branches/realtime_search/lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl.java
+++ b/lucene/dev/branches/realtime_search/lucene/src/java/org/apache/lucene/index/DocumentsWriterFlushControl.java
@@ -167,12 +167,14 @@ public synchronized void waitForFlush() {
    */
   public synchronized void setFlushPending(ThreadState perThread) {
     assert !perThread.flushPending;
-    assert perThread.perThread.getNumDocsInRAM() > 0;
+    if (perThread.perThread.getNumDocsInRAM() > 0) {
     perThread.flushPending = true; // write access synced
     final long bytes = perThread.perThreadBytes;
     flushBytes += bytes;
     activeBytes -= bytes;
     numPending++; // write access synced
+    } // don't assert on numDocs since we could hit an abort excp. while selecting that dwpt for flushing
+    
   }
 
   synchronized void doOnAbort(ThreadState state) {
diff --git a/lucene/dev/branches/realtime_search/lucene/src/java/org/apache/lucene/index/FlushPolicy.java b/lucene/dev/branches/realtime_search/lucene/src/java/org/apache/lucene/index/FlushPolicy.java
index b4b375e3..0997eca4 100644
--- a/lucene/dev/branches/realtime_search/lucene/src/java/org/apache/lucene/index/FlushPolicy.java
+++ b/lucene/dev/branches/realtime_search/lucene/src/java/org/apache/lucene/index/FlushPolicy.java
@@ -132,7 +132,6 @@ protected ThreadState findLargestNonPendingWriter(
         }
       }
     }
-    assert maxRamUsingThreadState.perThread.getNumDocsInRAM() > 0;
     assert writer.get().message(
         "set largest ram consuming thread pending on lower watermark");
     return maxRamUsingThreadState;
