diff --git a/lucene/dev/branches/branch_4x/lucene/analysis/stempel/src/java/org/egothor/stemmer/Row.java b/lucene/dev/branches/branch_4x/lucene/analysis/stempel/src/java/org/egothor/stemmer/Row.java
index f5d2e9aa..02811ac8 100644
--- a/lucene/dev/branches/branch_4x/lucene/analysis/stempel/src/java/org/egothor/stemmer/Row.java
+++ b/lucene/dev/branches/branch_4x/lucene/analysis/stempel/src/java/org/egothor/stemmer/Row.java
@@ -221,7 +221,7 @@ public int getCnt(Character way) {
    * Character.
    * 
    * @param way the Character associated with the desired Cell
-   * @return the reference, or -1 if the Cell is <tt>null,/tt>
+   * @return the reference, or -1 if the Cell is <tt>null</tt>
    */
   public int getRef(Character way) {
     Cell c = at(way);
diff --git a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity.java b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity.java
index 79514a52..c2d25a84 100644
--- a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity.java
+++ b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/search/similarities/DefaultSimilarity.java
@@ -1,9 +1,5 @@
 package org.apache.lucene.search.similarities;
 
-import org.apache.lucene.index.FieldInvertState;
-import org.apache.lucene.index.Norm;
-import org.apache.lucene.util.BytesRef;
-
 /*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
@@ -21,6 +17,10 @@
  * limitations under the License.
  */
 
+import org.apache.lucene.index.FieldInvertState;
+import org.apache.lucene.index.Norm;
+import org.apache.lucene.util.BytesRef;
+
 /** Expert: Default scoring implementation. */
 public class DefaultSimilarity extends TFIDFSimilarity {
   
diff --git a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/util/PriorityQueue.java b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/util/PriorityQueue.java
index 6cf6c27b..477ea1bb 100644
--- a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/util/PriorityQueue.java
+++ b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/util/PriorityQueue.java
@@ -103,7 +103,7 @@ public PriorityQueue(int maxSize, boolean prepopulate) {
    * 
    * <pre>
    * // extends getSentinelObject() to return a non-null value.
-   * PriorityQueue<MyObject> pq = new MyQueue<MyObject>(numHits);
+   * PriorityQueue&lt;MyObject&gt; pq = new MyQueue&lt;MyObject&gt;(numHits);
    * // save the 'top' element, which is guaranteed to not be null.
    * MyObject pqTop = pq.top();
    * &lt;...&gt;
diff --git a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/util/fst/Util.java b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/util/fst/Util.java
index 6ef837a6..26c431ea 100644
--- a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/util/fst/Util.java
+++ b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/util/fst/Util.java
@@ -90,7 +90,7 @@ private Util() {
    *  pair where the output is equal to the target, and will
    *  return null if that output does not exist.
    *
-   *  <p>NOTE: this only works with FST<Long>, only
+   *  <p>NOTE: this only works with {@code FST<Long>}, only
    *  works when the outputs are ascending in order with
    *  the inputs and only works when you shared
    *  the outputs (pass doShare=true to {@link
diff --git a/lucene/dev/branches/branch_4x/lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath.java b/lucene/dev/branches/branch_4x/lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath.java
index 963357a0..ad92c2fa 100644
--- a/lucene/dev/branches/branch_4x/lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath.java
+++ b/lucene/dev/branches/branch_4x/lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath.java
@@ -571,7 +571,7 @@ public CategoryPath(CharSequence... components) {
    * changed later by the user. Copying the contents into a new object is a
    * solution.
    * <P>
-   * This constructor </I>does not</I> copy the capacity (spare buffer size)
+   * This constructor <I>does not</I> copy the capacity (spare buffer size)
    * of the existing CategoryPath. Rather, the new object occupies exactly the
    * space it needs, without any spare. This is the expected behavior in the
    * typical use case outlined in the previous paragraph.
diff --git a/lucene/dev/branches/branch_4x/lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/config/AbstractQueryConfig.java b/lucene/dev/branches/branch_4x/lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/config/AbstractQueryConfig.java
index fc6d79d2..4c8869c9 100644
--- a/lucene/dev/branches/branch_4x/lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/config/AbstractQueryConfig.java
+++ b/lucene/dev/branches/branch_4x/lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/core/config/AbstractQueryConfig.java
@@ -62,7 +62,7 @@
   /**
    * Returns true if there is a value set with the given key, otherwise false.
    * 
-   * @param <T> @param <T> the value's type
+   * @param <T> the value's type
    * @param key the key, cannot be <code>null</code>
    * @return true if there is a value set with the given key, otherwise false
    */
