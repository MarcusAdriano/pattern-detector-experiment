diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/similarity/GenericItemSimilarity.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/similarity/GenericItemSimilarity.java
index 5e3e8d4d..febf3ca6 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/similarity/GenericItemSimilarity.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/similarity/GenericItemSimilarity.java
@@ -244,30 +244,24 @@ public int hashCode() {
 
     private final ItemSimilarity otherSimilarity;
     private final long[] itemIDs;
-    private final int size;
     private int i;
     private long itemID1;
     private int j;
+    private ItemItemSimilarity next;
 
     private DataModelSimilaritiesIterator(ItemSimilarity otherSimilarity, long[] itemIDs) {
       this.otherSimilarity = otherSimilarity;
       this.itemIDs = itemIDs;
-      this.size = itemIDs.length;
       i = 0;
       itemID1 = itemIDs[0];
       j = 1;
+      goToNext();
     }
 
-    @Override
-    public boolean hasNext() {
-      return i < size - 1;
-    }
-
-    @Override
-    public ItemItemSimilarity next() {
-      if (!hasNext()) {
-        throw new NoSuchElementException();
-      }
+    private void goToNext() {
+      next = null;
+      int size = itemIDs.length;
+      while (next == null && i < size - 1) {
       long itemID2 = itemIDs[j];
       double similarity;
       try {
@@ -276,13 +270,28 @@ public ItemItemSimilarity next() {
         // ugly:
         throw new RuntimeException(te);
       }
-      ItemItemSimilarity result = new ItemItemSimilarity(itemID1, itemID2, similarity);
-      j++;
-      if (j == size) {
-        i++;
-        itemID1 = itemIDs[i];
+        if (!Double.isNaN(similarity)) {
+          next = new ItemItemSimilarity(itemID1, itemID2, similarity);
+        }
+        if (++j == size) {
+          itemID1 = itemIDs[++i];
         j = i + 1;
       }
+      }
+    }
+
+    @Override
+    public boolean hasNext() {
+      return next != null;
+    }
+
+    @Override
+    public ItemItemSimilarity next() {
+      if (next == null) {
+        throw new NoSuchElementException();
+      }
+      ItemItemSimilarity result = next;
+      goToNext();
       return result;
     }
 
