diff --git a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/error/StandardException.java b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/error/StandardException.java
index 3e306bdf..6a42b6ec 100644
--- a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/error/StandardException.java
+++ b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/error/StandardException.java
@@ -57,11 +57,11 @@ only throw a StandardException (if it needs to throw an exception).
 	 * Exception State
 	 */
 	private Throwable nestedException;
-	private Object[] arguments;
+	private transient Object[] arguments;
 	private int severity;
 	private String textMessage;
 	private String sqlState;
-	private int report;
+	private transient int report;
 
 	/*
 	** End of constructors
diff --git a/incubator/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedSQLException.java b/incubator/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedSQLException.java
index ac2a18c4..b8827d87 100644
--- a/incubator/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedSQLException.java
+++ b/incubator/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedSQLException.java
@@ -38,7 +38,7 @@
 */
 public class EmbedSQLException extends SQLException {
 
-	private Object[] arguments;
+	private transient Object[] arguments;
 	private String messageId;
 
 	/**
@@ -47,7 +47,7 @@
     //Because it's transient, it doesn't get sent over to the client
     //side and hence the classes which needs to be included in the
     //client.jar file decreases 5 folds.
-	transient protected Throwable javaException;
+	private transient Throwable javaException;
 
 	/**
 	 * Because SQLException does not have settable fields,
diff --git a/incubator/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/closed.java b/incubator/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/closed.java
index e3227c60..cabb17ff 100644
--- a/incubator/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/closed.java
+++ b/incubator/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/closed.java
@@ -61,6 +61,8 @@ public static void main(String[] args) {
 
 			String url = conn.getMetaData().getURL();
 
+			passed = testDerby62(conn) && passed;
+
 			// want all tests to run regardless of intermediate errors
 			passed = testStatement(conn) && passed;
 
@@ -419,4 +421,28 @@ static boolean testConnection(Connection conn) throws SQLException {
 		return passed;
 	}
 
+	static boolean testDerby62(Connection conn) throws SQLException {
+
+		System.out.println("Test case for Derby-62 - serialization error with SQLException");
+		try {
+			conn.createStatement().execute("DROP TABLE APP.DERBY62_DAIN_SUNDSTROM");
+			return false;
+		} catch (SQLException sqle) {
+			boolean passed = true;
+			try {
+				// ensure we can serialize this exception.
+				java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream(new java.io.ByteArrayOutputStream(1024));
+				oos.writeObject(sqle);
+				oos.close();
+			} catch (java.io.IOException ioe)
+			{
+				System.out.println("IOException " + ioe.getMessage());
+				passed = false;
+
+			}
+			System.out.println(sqle.getMessage());
+			return passed;
+		}
+	}
+
 }
