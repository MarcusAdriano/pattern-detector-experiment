diff --git a/lucene/dev/branches/lucene_solr_4_5/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/dev/branches/lucene_solr_4_5/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java
index 5b22ba01..1b005ddb 100644
--- a/lucene/dev/branches/lucene_solr_4_5/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java
+++ b/lucene/dev/branches/lucene_solr_4_5/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java
@@ -1039,18 +1039,15 @@ private void closeInternal(boolean waitForMerges, boolean doFlush) throws IOExce
         infoStream.message("IW", "now call final commit()");
       }
 
-      // Must do this before commitInternal, in case any of
-      // the dropped readers in the pool wrote a new live
-      // docs: 
-      synchronized(this) {
-        readerPool.dropAll(true);
-      }
-
       if (doFlush) {
         commitInternal();
       }
 
       synchronized(this) {
+        // commitInternal calls ReaderPool.commit, which
+        // writes any pending liveDocs from ReaderPool, so
+        // it's safe to drop all readers now:
+        readerPool.dropAll(true);
         deleter.close();
       }
 
diff --git a/lucene/dev/branches/lucene_solr_4_5/lucene/core/src/test/org/apache/lucene/index/TestCheckIndex.java b/lucene/dev/branches/lucene_solr_4_5/lucene/core/src/test/org/apache/lucene/index/TestCheckIndex.java
index 66542ab0..b562a66b 100644
--- a/lucene/dev/branches/lucene_solr_4_5/lucene/core/src/test/org/apache/lucene/index/TestCheckIndex.java
+++ b/lucene/dev/branches/lucene_solr_4_5/lucene/core/src/test/org/apache/lucene/index/TestCheckIndex.java
@@ -131,7 +131,7 @@ public void testLuceneConstantVersion() throws IOException {
       // normal version
       constantVersion = Constants.LUCENE_MAIN_VERSION;
     }
-    assertTrue("Invalid version: "+version,
+    assertTrue("Invalid version: "+version + " vs " + constantVersion,
                version.equals(constantVersion));
     assertTrue(Constants.LUCENE_VERSION + " should start with: "+version,
                Constants.LUCENE_VERSION.startsWith(version));
diff --git a/lucene/dev/branches/lucene_solr_4_5/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete.java b/lucene/dev/branches/lucene_solr_4_5/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete.java
index bb4ef7ff..3b309e63 100644
--- a/lucene/dev/branches/lucene_solr_4_5/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete.java
+++ b/lucene/dev/branches/lucene_solr_4_5/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete.java
@@ -1323,6 +1323,7 @@ protected void handleMergeException(Throwable exc) {
       // to fail in "more evil" places inside BDS
 
       shouldFail.set(true);
+      boolean doClose = false;
 
       try {
 
@@ -1344,8 +1345,15 @@ protected void handleMergeException(Throwable exc) {
         assertEquals(docCount-deleteCount, r.numDocs());
         r.close();
 
-        // TODO: also call w.close() in here, sometimes,
-        // so we sometimes get a fail via dropAll
+        // Sometimes close, so the disk full happens on close:
+        if (random().nextBoolean()) {
+          if (VERBOSE) {
+            System.out.println("  now close writer");
+          }
+          doClose = true;
+          w.close();
+          w = null;
+        }
 
       } catch (FakeIOException ioe) {
         // expected
@@ -1358,13 +1366,23 @@ protected void handleMergeException(Throwable exc) {
 
       IndexReader r;
 
-      if (random().nextBoolean()) {
+      if (doClose && w != null) {
+        if (VERBOSE) {
+          System.out.println("  now 2nd close writer");
+        }
+        w.close();
+        w = null;
+      }
+
+      if (w == null || random().nextBoolean()) {
         // Open non-NRT reader, to make sure the "on
         // disk" bits are good:
         if (VERBOSE) {
           System.out.println("TEST: verify against non-NRT reader");
         }
+        if (w != null) {
         w.commit();
+        }
         r = DirectoryReader.open(dir);
       } else {
         if (VERBOSE) {
@@ -1376,7 +1394,7 @@ protected void handleMergeException(Throwable exc) {
       r.close();
 
       // Sometimes re-use RIW, other times open new one:
-      if (random().nextBoolean()) {
+      if (w != null && random().nextBoolean()) {
         if (VERBOSE) {
           System.out.println("TEST: close writer");
         }
diff --git a/lucene/dev/branches/lucene_solr_4_5/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.java b/lucene/dev/branches/lucene_solr_4_5/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.java
index 78fb85af..00e8c3bc 100644
--- a/lucene/dev/branches/lucene_solr_4_5/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.java
+++ b/lucene/dev/branches/lucene_solr_4_5/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterWithThreads.java
@@ -179,6 +179,9 @@ public void testCloseWithThreads() throws Exception {
     int NUM_THREADS = 3;
     int numIterations = TEST_NIGHTLY ? 7 : 3;
     for(int iter=0;iter<numIterations;iter++) {
+      if (VERBOSE) {
+        System.out.println("\nTEST: iter=" + iter);
+      }
       Directory dir = newDirectory();
 
       IndexWriter writer = new IndexWriter(
@@ -211,6 +214,9 @@ public void testCloseWithThreads() throws Exception {
           }
       }
 
+      if (VERBOSE) {
+        System.out.println("\nTEST: now close");
+      }
       writer.close(false);
 
       // Make sure threads that are adding docs are not hung:
