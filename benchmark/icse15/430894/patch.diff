diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangScripts.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangScripts.java
index 9680f501..a0174c5a 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangScripts.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangScripts.java
@@ -22,6 +22,7 @@
 import junit.framework.Test;
 import junit.framework.TestSuite;
 
+import org.apache.derbyTesting.functionTests.util.CleanDatabaseTestSetup;
 import org.apache.derbyTesting.functionTests.util.ScriptTestCase;
 
 public final class LangScripts extends ScriptTestCase {
@@ -33,6 +34,9 @@
 		"arithmetic",
 		"bit2",
 		"case",
+		"constantExpression",
+		"depend",
+		"derived",
 		"union",
 		};
 	
@@ -65,13 +69,16 @@ private LangScripts(String langTest){
 	
     /**
      * Return a suite of language SQL tests from the list of
-     * script names.
+     * script names. Each test is surrounded in a decorator
+     * that cleans the database.
       */
 	private static Test getSuite(String[] list)
 	{
         TestSuite suite = new TestSuite();
         for (int i = 0; i < list.length; i++)
-            suite.addTest(new LangScripts(list[i]));
+            suite.addTest(
+            		new CleanDatabaseTestSetup(
+            		new LangScripts(list[i])));
 
         return getIJConfig(suite);
     }
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/util/ScriptTestCase.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/util/ScriptTestCase.java
index b8002687..a1a104b1 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/util/ScriptTestCase.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/util/ScriptTestCase.java
@@ -42,7 +42,13 @@
 	private final String outputEncoding = "US-ASCII";
 
 	/**
-	 * Create a ScriptTestCase to run a single test. 
+     * Default connection.
+     */
+	private Connection conn;
+
+	/**
+	 * Create a ScriptTestCase to run a single test
+     * using a connection obtained from getConnection()
 	 * @param script Base name of the .sql script
 	 * excluding the .sql suffix.
 	 */
@@ -105,14 +111,14 @@ public void runTest() throws Throwable
 		URL sql = getTestResource(resource);
 		assertNotNull("SQL script missing: " + resource, sql);
 		
-		InputStream sqlIn = sql.openStream();
+		InputStream sqlIn = openTestResource(sql);
 		
 		ByteArrayOutputStream rawBytes =
 			new ByteArrayOutputStream(20 * 1024);
 		
 		PrintStream printOut = new PrintStream(rawBytes);
 	
-		Connection conn = getConnection();
+		conn = getConnection();
 		org.apache.derby.tools.ij.runScript(
 				conn,
 				sqlIn,
@@ -120,7 +126,8 @@ public void runTest() throws Throwable
 				printOut,
 				outputEncoding);
 		
-		conn.close();
+		if (!conn.isClosed() && !conn.getAutoCommit())
+		    conn.commit();
 		
 		printOut.flush();
 		printOut.close();
@@ -177,4 +184,13 @@ public void runTest() throws Throwable
 			throw t;
 		}
 	}
+	
+    /**
+     * Clean up the connection on teardown.
+     */
+	protected void tearDown() throws Exception
+	{
+		JDBC.cleanup(conn);
+        super.tearDown();
+	}
 }
