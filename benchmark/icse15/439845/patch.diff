diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/JDBC.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/JDBC.java
index 30313908..221358fd 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/JDBC.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/JDBC.java
@@ -154,7 +154,6 @@ public static void cleanup(Connection conn) throws SQLException
 	 * way until everything can be dropped.
 	 * 
 	 * TODO: Drop Functions
-	 * TODO: Drop Synonyms
 	 * 
 	 * @param dmd DatabaseMetaData object for database
 	 * @param schema Name of the schema
@@ -183,6 +182,13 @@ public static void dropSchema(DatabaseMetaData dmd, String schema) throws SQLExc
 		
 		dropUsingDMD(s, rs, schema, "TABLE_NAME", "TABLE");
 		
+        // Synonyms - need work around for DERBY-1790 where
+        // passing a table type of SYNONYM fails.
+        rs = dmd.getTables((String) null, schema, (String) null,
+                new String[] {"AA_DERBY-1790-SYNONYM"});
+        
+        dropUsingDMD(s, rs, schema, "TABLE_NAME", "SYNONYM");
+        
 		// Finally drop the schema if it is not APP
 		if (!schema.equals("APP")) {
 			s.execute("DROP SCHEMA " + JDBC.escape(schema) + " RESTRICT");
@@ -217,8 +223,8 @@ private static void dropUsingDMD(
 		int batchCount = 0;
 		while (rs.next())
 		{
-			String view = rs.getString(mdColumn);
-			s.addBatch(dropLeadIn + JDBC.escape(schema, view));
+            String objectName = rs.getString(mdColumn);
+			s.addBatch(dropLeadIn + JDBC.escape(schema, objectName));
 			batchCount++;
 		}
 		rs.close();
