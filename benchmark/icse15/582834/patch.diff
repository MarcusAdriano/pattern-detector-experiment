diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLBlob.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLBlob.java
index d9286a00..eacbba1b 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLBlob.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLBlob.java
@@ -21,31 +21,11 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 package org.apache.derby.iapi.types;
 
-import org.apache.derby.iapi.types.DataTypeDescriptor;
-import org.apache.derby.iapi.types.DataValueDescriptor;
-import org.apache.derby.iapi.types.TypeId;
-import org.apache.derby.iapi.types.BitDataValue;
-import org.apache.derby.iapi.types.DataValueDescriptor;
 import org.apache.derby.iapi.reference.SQLState;
 import org.apache.derby.iapi.reference.Limits;
 import org.apache.derby.iapi.error.StandardException;
-
-import org.apache.derby.iapi.types.Orderable;
-
-import org.apache.derby.iapi.services.io.FormatIdUtil;
 import org.apache.derby.iapi.services.io.StoredFormatIds;
 
-import org.apache.derby.iapi.services.sanity.SanityManager;
-
-import org.apache.derby.iapi.types.BooleanDataValue;
-import org.apache.derby.iapi.types.StringDataValue;
-import org.apache.derby.iapi.types.NumberDataValue;
-
-import org.apache.derby.iapi.services.io.FormatableBitSet;
-
-import java.io.ObjectOutput;
-import java.io.ObjectInput;
-import java.io.IOException;
 import java.sql.Blob;
 import java.sql.ResultSet;
 import java.sql.SQLException;
@@ -210,7 +190,7 @@ public void setInto(PreparedStatement ps, int position)
 		throws SQLException, StandardException
 	{
 		if (isNull()) {
-			ps.setBlob(position, null);    
+			ps.setBlob(position, (Blob)null);    
 			return;
 		}
 
