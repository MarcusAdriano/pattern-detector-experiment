diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/MultiTermQuery.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/MultiTermQuery.java
index 363922a0..3c8c2676 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/MultiTermQuery.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/MultiTermQuery.java
@@ -301,8 +301,13 @@ protected void incTotalNumberOfTerms(int inc) {
     numberOfTerms += inc;
   }
 
+  /**
+   * To rewrite to a simpler form, instead return a simpler
+   * enum from {@link #getTermsEnum(Terms, AttributeSource)}.  For example,
+   * to rewrite to a single term, return a {@link SingleTermsEnum}
+   */
   @Override
-  public Query rewrite(IndexReader reader) throws IOException {
+  public final Query rewrite(IndexReader reader) throws IOException {
     return rewriteMethod.rewrite(reader, this);
   }
 
diff --git a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/spans/TestSpanMultiTermQueryWrapper.java b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/spans/TestSpanMultiTermQueryWrapper.java
index 51ae8337..7c72eb2e 100644
--- a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/spans/TestSpanMultiTermQueryWrapper.java
+++ b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/spans/TestSpanMultiTermQueryWrapper.java
@@ -72,6 +72,14 @@ public void testWildcard() throws Exception {
     assertEquals(1, searcher.search(sfq, 10).totalHits);
   }
   
+  public void testPrefix() throws Exception {
+    WildcardQuery wq = new WildcardQuery(new Term("field", "extrem*"));
+    SpanQuery swq = new SpanMultiTermQueryWrapper<WildcardQuery>(wq);
+    // will only match "jumps over extremely very lazy broxn dog"
+    SpanFirstQuery sfq = new SpanFirstQuery(swq, 3);
+    assertEquals(1, searcher.search(sfq, 10).totalHits);
+  }
+  
   public void testFuzzy() throws Exception {
     FuzzyQuery fq = new FuzzyQuery(new Term("field", "broan"));
     SpanQuery sfq = new SpanMultiTermQueryWrapper<FuzzyQuery>(fq);
