diff --git a/lucene/java/trunk/src/java/org/apache/lucene/store/RAMOutputStream.java b/lucene/java/trunk/src/java/org/apache/lucene/store/RAMOutputStream.java
index cd982491..84869359 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/store/RAMOutputStream.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/store/RAMOutputStream.java
@@ -108,6 +108,7 @@ public void writeByte(byte b) throws IOException {
   }
 
   public void writeBytes(byte[] b, int offset, int len) throws IOException {
+    assert b != null;
     while (len > 0) {
       if (bufferPosition ==  bufferLength) {
         currentBufferIndex++;
diff --git a/lucene/java/trunk/src/test/org/apache/lucene/index/TestIndexWriter.java b/lucene/java/trunk/src/test/org/apache/lucene/index/TestIndexWriter.java
index 432d5413..7cc4c5ac 100644
--- a/lucene/java/trunk/src/test/org/apache/lucene/index/TestIndexWriter.java
+++ b/lucene/java/trunk/src/test/org/apache/lucene/index/TestIndexWriter.java
@@ -4087,6 +4087,7 @@ public void testMergeCompressedFields() throws IOException {
         // different fields, so bulk merge of stored fields
         // cannot run:
         IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), i==0, IndexWriter.MaxFieldLength.UNLIMITED);
+        try {
         w.setMergeFactor(5);
         w.setMergeScheduler(new SerialMergeScheduler());
         Document doc = new Document();
@@ -4094,18 +4095,24 @@ public void testMergeCompressedFields() throws IOException {
         doc.add(new Field("test2", new byte[20], Field.Store.COMPRESS));
         doc.add(new Field("field" + i, "random field", Field.Store.NO, Field.Index.TOKENIZED));
         w.addDocument(doc);
+        } finally {
         w.close();
       }
+      }
 
       byte[] cmp = new byte[20];
 
       IndexReader r = IndexReader.open(dir);
+      try {
       for(int i=0;i<5;i++) {
         Document doc = r.document(i);
         assertEquals("this is some data that will be compressed this this this", doc.getField("test1").stringValue());
         byte[] b = doc.getField("test2").binaryValue();
         assertTrue(Arrays.equals(b, cmp));
       }
+    } finally {
+        r.close();
+      }
     } finally {
       dir.close();
       _TestUtil.rmDir(indexDir);
