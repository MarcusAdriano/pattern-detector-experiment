diff --git a/lucene/java/trunk/src/java/org/apache/lucene/analysis/CharArraySet.java b/lucene/java/trunk/src/java/org/apache/lucene/analysis/CharArraySet.java
index 2bef4b82..014ac86b 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/analysis/CharArraySet.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/analysis/CharArraySet.java
@@ -191,24 +191,17 @@ private int getHashCode(char[] text, int offset, int len) {
   }
 
   private int getHashCode(CharSequence text) {
-    int code;
-    if (ignoreCase) {
-      code = 0;
+    int code = 0;
       int len = text.length();
+    if (ignoreCase) {
       for (int i=0; i<len; i++) {
         code = code*31 + Character.toLowerCase(text.charAt(i));
       }
     } else {
-      if (false && text instanceof String) {
-        code = text.hashCode();
-      } else {
-        code = 0;
-        int len = text.length();
         for (int i=0; i<len; i++) {
           code = code*31 + text.charAt(i);
         }
       }
-    }
     return code;
   }
 
@@ -225,22 +218,15 @@ public boolean contains(Object o) {
     if (o instanceof char[]) {
       char[] text = (char[])o;
       return contains(text, 0, text.length);
-    } else if (o instanceof CharSequence) {
-      return contains((CharSequence)o);
     }
-    return false;
+    return contains(o.toString());
   }
 
   public boolean add(Object o) {
     if (o instanceof char[]) {
       return add((char[])o);
-    } else if (o instanceof String) {
-      return add((String)o);
-    } else if (o instanceof CharSequence) {
-      return add((CharSequence)o);
-    } else {
-      return add(o.toString());
     }
+    return add(o.toString());
   }
 
   /** The Iterator<String> for this set.  Strings are constructed on the fly, so
diff --git a/lucene/java/trunk/src/test/org/apache/lucene/analysis/TestCharArraySet.java b/lucene/java/trunk/src/test/org/apache/lucene/analysis/TestCharArraySet.java
index 7a17bf5c..84f37fcf 100644
--- a/lucene/java/trunk/src/test/org/apache/lucene/analysis/TestCharArraySet.java
+++ b/lucene/java/trunk/src/test/org/apache/lucene/analysis/TestCharArraySet.java
@@ -21,8 +21,8 @@
 
 import org.apache.lucene.util.LuceneTestCase;
 
-public class TestCharArraySet extends LuceneTestCase
-{
+public class TestCharArraySet extends LuceneTestCase {
+  
   public void testRehash() throws Exception {
     CharArraySet cas = new CharArraySet(0, true);
     for(int i=0;i<StopAnalyzer.ENGLISH_STOP_WORDS.length;i++)
@@ -40,4 +40,12 @@ public void testNonZeroOffset() {
     assertTrue(set.contains(findme, 1, 4));
     assertTrue(set.contains(new String(findme,1,4)));
   }
+  
+  public void testObjectContains() {
+    CharArraySet set = new CharArraySet(10, true);
+    Integer val = new Integer(1);
+    set.add(val);
+    assertTrue(set.contains(val));
+    assertTrue(set.contains(new Integer(1)));
+  }
 }
