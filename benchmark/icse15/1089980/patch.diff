diff --git a/cassandra/trunk/src/java/org/apache/cassandra/io/CompactionIterator.java b/cassandra/trunk/src/java/org/apache/cassandra/io/CompactionIterator.java
index 128162dc..6bfadb34 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/io/CompactionIterator.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/io/CompactionIterator.java
@@ -36,6 +36,7 @@
 import org.apache.cassandra.io.sstable.SSTableIdentityIterator;
 import org.apache.cassandra.io.sstable.SSTableReader;
 import org.apache.cassandra.io.sstable.SSTableScanner;
+import org.apache.cassandra.io.util.FileUtils;
 import org.apache.cassandra.utils.ByteBufferUtil;
 import org.apache.cassandra.utils.FBUtilities;
 import org.apache.cassandra.utils.ReducingIterator;
@@ -149,10 +150,7 @@ protected AbstractCompactedRow getCompactedRow()
 
     public void close() throws IOException
     {
-        for (SSTableScanner scanner : getScanners())
-        {
-            scanner.close();
-        }
+        FileUtils.close(getScanners());
     }
 
     protected Iterable<SSTableScanner> getScanners()
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/io/util/FileUtils.java b/cassandra/trunk/src/java/org/apache/cassandra/io/util/FileUtils.java
index 265768c5..4ffd3c79 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/io/util/FileUtils.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/io/util/FileUtils.java
@@ -20,6 +20,7 @@
 
 import java.io.*;
 import java.text.DecimalFormat;
+import java.util.Collection;
 import java.util.Comparator;
 import java.util.List;
 
@@ -95,6 +96,26 @@ public static void closeQuietly(Closeable c)
         }
     }
 
+    public static void close(Iterable<? extends Closeable> cs) throws IOException
+    {
+        IOException e = null;
+        for (Closeable c : cs)
+        {
+            try
+            {
+                if (c != null)
+                    c.close();
+            }
+            catch (IOException ex)
+            {
+                e = ex;
+                logger_.warn("Failed closing stream " + c, ex);
+            }
+        }
+        if (e != null)
+            throw e;
+    }
+
     public static class FileComparator implements Comparator<File>
     {
         public int compare(File f, File f2)
