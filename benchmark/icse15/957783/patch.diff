diff --git a/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java b/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java
index 114d7297..c80d9554 100644
--- a/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java
+++ b/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java
@@ -2463,7 +2463,8 @@ else if (ne != null)
 				nse = Util.generateCsSQLException(mse);
 
             throw Util.seeNextException(SQLState.BOOT_DATABASE_FAILED,
-                                        new Object[] { dbname }, nse);
+                                        new Object[] { dbname, 
+                                        (Object) this.getClass().getClassLoader() }, nse);
 		}
 
 		// If database exists, getDatabase() will return the database object.
diff --git a/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java b/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java
index 1ce965ac..b4aa2ff7 100644
--- a/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java
+++ b/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java
@@ -367,8 +367,10 @@ public void	boot(boolean create, Properties startParams)
 			   MessageService.getTextMessage(MessageId.STORE_BOOT_MSG,
                                              jbmsVersion,
                                              identifier,
-                                             dataDirectory,
-                                             readOnlyMsg));
+                                             dataDirectory + " " + readOnlyMsg,
+                                             // cast to Object so we get object hash code
+                                             (Object) this.getClass().getClassLoader()
+                                             ));
 
         if (logBootTrace)
            Monitor.logThrowable(new Throwable("boot trace"));
@@ -473,7 +475,11 @@ public void	stop()
 		logMsg("\n" + CheapDateFormatter.formatDate(shutdownTime) +
                 MessageService.getTextMessage(
                     MessageId.STORE_SHUTDOWN_MSG,
-                    getIdentifier()));
+                    getIdentifier(), 
+                    // print object and ide of classloader.
+                    // Cast to object so we don't get just the toString() 
+                    // method
+                    (Object) this.getClass().getClassLoader()));
 	
 		if (logBootTrace)
 			Monitor.logThrowable(new Throwable("shutdown trace"));
diff --git a/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/harness/Sed.java b/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/harness/Sed.java
index b84ce8b1..b0ad36d0 100644
--- a/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/harness/Sed.java
+++ b/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/harness/Sed.java
@@ -116,6 +116,9 @@ public static void main(String[] args) throws Exception {
         searchStrings.addElement("^Transaction:\\(.*\\) *\\|"); 
         searchStrings.addElement("^Read [0-9]* of [0-9]* bytes$");
         searchStrings.addElement("Directory .*connect.wombat.seg0");
+        //DERBY-4588 - filter out specific class and object id
+        searchStrings.addElement("with class loader .*,");
+        
         // Filter for constraint names - bug 5622 - our internal constraint names are too long. To be db2 compatible, we have reworked them.
         StringBuffer constraintNameFilter = new StringBuffer(); 
         constraintNameFilter.append("SQL[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]");
@@ -208,6 +211,7 @@ public static void main(String[] args) throws Exception {
         subStrings.addElement("Transaction:(XXX)|");
         subStrings.addElement("Read ... bytes");
         subStrings.addElement("Directory DBLOCATION/seg0");
+        subStrings.addElement("with class loader XXXX, ");
         subStrings.addElement("xxxxGENERATED-IDxxxx");
         subStrings.addElement("xxxxFILTERED-UUIDxxxx");
         subStrings.addElement("xxxxxxFILTERED-TIMESTAMPxxxxx");
diff --git a/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ErrorCodeTest.java b/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ErrorCodeTest.java
index 955f76cc..d9d2fdb6 100644
--- a/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ErrorCodeTest.java
+++ b/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ErrorCodeTest.java
@@ -185,7 +185,7 @@ public void test_errorcode() throws Exception
         		{"XJ004","Database '{0}' not found.","40000"},
         		{"XJ015","Derby system shutdown.","50000"},
         		{"XJ028","The URL '{0}' is not properly formed.","40000"},
-        		{"XJ040","Failed to start database '{0}', see the next exception for details.","40000"},
+        		{"XJ040","Failed to start database '{0}' with class loader {1}, see the next exception for details.","40000"},
         		{"XJ041","Failed to create database '{0}', see the next exception for details.","40000"},
         		{"XJ049","Conflicting create attributes specified.","40000"},
         		{"XJ05B","JDBC attribute '{0}' has an invalid value '{1}', valid values are '{2}'.","40000"},
