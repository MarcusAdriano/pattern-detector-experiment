diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/Derby.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/Derby.java
index eb2a7c3f..de32b1ac 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/Derby.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/Derby.java
@@ -89,9 +89,16 @@ public static boolean hasClient()
         if (!SecurityManagerSetup.isJars)
             return true;
         
+        // if we attempt to check on availability of the ClientDataSource with 
+        // JSR169, attempts will be made to load classes not supported in
+        // that environment, such as javax.naming.Referenceable. See DERBY-2269.
+        if (!JDBC.vmSupportsJSR169()) {
         return hasCorrectJar("/derbyclient.jar",
                 "org.apache.derby.jdbc.ClientDataSource");
     }
+        else
+            return false;
+    }
     
     private static boolean hasCorrectJar(String jarName, String className)
     {
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/SecurityManagerSetup.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/SecurityManagerSetup.java
index 659c5fdd..8d063a02 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/SecurityManagerSetup.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/SecurityManagerSetup.java
@@ -277,9 +277,14 @@ private static boolean determineClasspath()
         if (derby != null)
 		    classPathSet.setProperty("derbyTesting.codejar", stripJar(derby));
 
+		// if we attempt to check on availability of the ClientDataSource with 
+		// JSR169, attempts will be made to load classes not supported in
+		// that environment, such as javax.naming.Referenceable. See DERBY-2269.
+		if (!JDBC.vmSupportsJSR169()) {
 		URL client = getURL("org.apache.derby.jdbc.ClientDataSource");
-		if (client != null)
+		    if(client != null)
 		    classPathSet.setProperty("derbyTesting.clientjar", stripJar(client));
+		}
 	
 		return false;
 	}
