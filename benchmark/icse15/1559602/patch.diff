diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest.java
index 3579f4bf..5a5d7e22 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/CollectionsAPIDistributedZkTest.java
@@ -375,6 +375,11 @@ private void deleteCollectionWithDownNodes() throws Exception {
     ChaosMonkey.stop(jettys.get(0));
     ChaosMonkey.stop(jettys.get(1));
     
+    // wait for leaders to settle out
+    for (int i = 1; i < 4; i++) {
+      cloudClient.getZkStateReader().getLeaderRetry("halfdeletedcollection2", "shard" + i);
+    }
+    
     baseUrl = getBaseUrl((HttpSolrServer) clients.get(2));
     
     // remove a collection
@@ -387,7 +392,7 @@ private void deleteCollectionWithDownNodes() throws Exception {
     createNewSolrServer("", baseUrl).request(request);
     
     cloudClient.getZkStateReader().updateClusterState(true);
-    assertFalse(cloudClient.getZkStateReader().getClusterState().hasCollection("halfdeletedcollection2"));
+    assertFalse("Still found collection that should be gone", cloudClient.getZkStateReader().getClusterState().hasCollection("halfdeletedcollection2"));
     
   }
 
