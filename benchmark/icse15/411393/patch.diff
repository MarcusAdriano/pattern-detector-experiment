diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CurrentOfNode.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CurrentOfNode.java
index 419288e3..2c7ce3d5 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CurrentOfNode.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CurrentOfNode.java
@@ -347,6 +347,16 @@ public ResultColumn getMatchingColumn(ColumnReference columnReference)
 
 			if (resultColumn != null) 
 			{
+				// If we found the ResultColumn, set the ColumnReference's
+				// table number accordingly.  Note: we used to only set
+				// the tableNumber for correlated references (as part of
+				// changes for DERBY-171) but inspection of code (esp.
+				// the comments in FromList.bindColumnReferences() and
+				// the getMatchingColumn() methods on other FromTables)
+				// suggests that we should always set the table number
+				// if we've found the ResultColumn.  So we do that here.
+				columnReference.setTableNumber( tableNumber );
+
 				// If there is a result column, are we really updating it?
 				// If so, verify that the column is updatable as well
 				notfound = 
@@ -368,15 +378,6 @@ public ResultColumn getMatchingColumn(ColumnReference columnReference)
 			}
 		}
 
-		/*
-		 * Patch up the table number for correlated references.
-		 * Part of the fix for bug 171.
-		 */
-		if ( (correlationName != null) && (columnReference.getTableNumber() < 0) )
-		{
-			columnReference.setTableNumber( tableNumber );
-		}
-		
 		return resultColumn;
 	}
 
