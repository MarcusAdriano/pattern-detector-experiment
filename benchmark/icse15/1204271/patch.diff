diff --git a/lucene/dev/trunk/lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec.java b/lucene/dev/trunk/lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec.java
index 408dbbf9..eb9839a3 100644
--- a/lucene/dev/trunk/lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec.java
+++ b/lucene/dev/trunk/lucene/contrib/misc/src/java/org/apache/lucene/index/codecs/appending/AppendingCodec.java
@@ -34,11 +34,6 @@
  * This codec extends {@link Lucene40Codec} to work on append-only outputs, such
  * as plain output streams and append-only filesystems.
  *
- * <p>Note: compound file format feature is not compatible with
- * this codec.  You must call both
- * LogMergePolicy.setUseCompoundFile(false) and
- * LogMergePolicy.setUseCompoundDocStore(false) to disable
- * compound file format.</p>
  * @lucene.experimental
  */
 public class AppendingCodec extends Codec {
diff --git a/lucene/dev/trunk/lucene/contrib/misc/src/test/org/apache/lucene/index/codecs/appending/TestAppendingCodec.java b/lucene/dev/trunk/lucene/contrib/misc/src/test/org/apache/lucene/index/codecs/appending/TestAppendingCodec.java
index 3ee5b04c..c999eeef 100644
--- a/lucene/dev/trunk/lucene/contrib/misc/src/test/org/apache/lucene/index/codecs/appending/TestAppendingCodec.java
+++ b/lucene/dev/trunk/lucene/contrib/misc/src/test/org/apache/lucene/index/codecs/appending/TestAppendingCodec.java
@@ -146,4 +146,20 @@ public void testCodec() throws Exception {
     assertTrue(de.advance(2) == DocsEnum.NO_MORE_DOCS);
     reader.close();
   }
+  
+  public void testCompoundFile() throws Exception {
+    Directory dir = new AppendingRAMDirectory(random, new RAMDirectory());
+    IndexWriterConfig cfg = new IndexWriterConfig(Version.LUCENE_40, new MockAnalyzer(random));
+    TieredMergePolicy mp = new TieredMergePolicy();
+    mp.setUseCompoundFile(true);
+    mp.setNoCFSRatio(1.0);
+    cfg.setMergePolicy(mp);
+    cfg.setCodec(new AppendingCodec());
+    IndexWriter writer = new IndexWriter(dir, cfg);
+    Document doc = new Document();
+    writer.addDocument(doc);
+    writer.close();
+    assertTrue(dir.fileExists("_0.cfs"));
+    dir.close();
+  }
 }
