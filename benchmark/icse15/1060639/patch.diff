diff --git a/mahout/trunk/math/src/main/java/org/apache/mahout/math/NamedVector.java b/mahout/trunk/math/src/main/java/org/apache/mahout/math/NamedVector.java
index 5410bacb..a85c1fb4 100644
--- a/mahout/trunk/math/src/main/java/org/apache/mahout/math/NamedVector.java
+++ b/mahout/trunk/math/src/main/java/org/apache/mahout/math/NamedVector.java
@@ -19,6 +19,9 @@
 
 import java.util.Iterator;
 
+import com.google.gson.Gson;
+import com.google.gson.GsonBuilder;
+
 import org.apache.mahout.math.function.DoubleDoubleFunction;
 import org.apache.mahout.math.function.DoubleFunction;
 
@@ -68,7 +71,10 @@ public NamedVector clone() {
   }
 
   public String asFormatString() {
-    return delegate.asFormatString();
+    GsonBuilder builder = new GsonBuilder();
+    builder.registerTypeAdapter(Vector.class, new JsonVectorAdapter());
+    Gson gson = builder.create();
+    return gson.toJson(this, Vector.class);
   }
 
   public Vector assign(double value) {
diff --git a/mahout/trunk/utils/src/main/java/org/apache/mahout/utils/vectors/VectorHelper.java b/mahout/trunk/utils/src/main/java/org/apache/mahout/utils/vectors/VectorHelper.java
index 508fda97..6793dce5 100644
--- a/mahout/trunk/utils/src/main/java/org/apache/mahout/utils/vectors/VectorHelper.java
+++ b/mahout/trunk/utils/src/main/java/org/apache/mahout/utils/vectors/VectorHelper.java
@@ -33,6 +33,7 @@
 import org.apache.hadoop.io.Text;
 import org.apache.hadoop.io.Writable;
 import org.apache.mahout.common.FileLineIterator;
+import org.apache.mahout.math.NamedVector;
 import org.apache.mahout.math.Vector;
 import org.apache.mahout.math.map.OpenObjectIntHashMap;
 
@@ -43,16 +44,16 @@
   private VectorHelper() { }
   
   /**
-   * Create a String from a vector that fills in the values with the appropriate value from a dictionary where
-   * each the ith entry is the term for the ith vector cell..
-   * 
-   * @param vector
-   * @param dictionary
-   *          The dictionary. See
-   * @return The String
+   * @return a String from a vector that fills in the values with the appropriate value from a dictionary where
+   * each the ith entry is the term for the ith vector cell.
    */
   public static String vectorToString(Vector vector, String[] dictionary) {
     StringBuilder bldr = new StringBuilder(2048);
+    
+    if (vector instanceof NamedVector) {
+      bldr.append("name: ").append(((NamedVector) vector).getName()).append('\t');
+    }
+    
     bldr.append("elts: {");
     Iterator<Vector.Element> iter = vector.iterateNonZero();
     boolean first = true;
@@ -65,8 +66,7 @@ public static String vectorToString(Vector vector, String[] dictionary) {
       Vector.Element elt = iter.next();
       if (dictionary != null) {
         bldr.append(dictionary[elt.index()]);
-      }
-      else {
+      } else {
         bldr.append(elt.index());
       }
       bldr.append(':').append(elt.get());
@@ -80,9 +80,6 @@ public static String vectorToString(Vector vector, String[] dictionary) {
    * <pre>
    * term DocFreq Index
    * </pre>
-   * 
-   * @param dictFile
-   * @throws IOException
    */
   public static String[] loadTermDictionary(File dictFile) throws IOException {
     return loadTermDictionary(new FileInputStream(dictFile));
@@ -92,11 +89,8 @@ public static String vectorToString(Vector vector, String[] dictionary) {
    * Read a dictionary in {@link SequenceFile} generated by
    * {@link org.apache.mahout.vectorizer.DictionaryVectorizer}
    * 
-   * @param conf
-   * @param fs
    * @param filePattern
    *          <PATH TO DICTIONARY>/dictionary.file-*
-   * @throws IOException
    */
   public static String[] loadTermDictionary(Configuration conf, FileSystem fs, String filePattern) throws IOException {
     FileStatus[] dictionaryFiles = fs.globStatus(new Path(filePattern));
@@ -129,7 +123,6 @@ public static String vectorToString(Vector vector, String[] dictionary) {
     FileLineIterator it = new FileLineIterator(is);
     
     int numEntries = Integer.parseInt(it.next());
-    // System.out.println(numEntries);
     String[] result = new String[numEntries];
     
     while (it.hasNext()) {
