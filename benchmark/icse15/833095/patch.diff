diff --git a/lucene/java/trunk/src/java/org/apache/lucene/search/NumericRangeQuery.java b/lucene/java/trunk/src/java/org/apache/lucene/search/NumericRangeQuery.java
index b30892e4..789538c3 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/search/NumericRangeQuery.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/search/NumericRangeQuery.java
@@ -363,8 +363,14 @@ public final int hashCode() {
       (Boolean.valueOf(maxInclusive).hashCode()^0x733fa5fe);
   }
   
+  // field must be interned after reading from stream
+  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
+    in.defaultReadObject();
+    field = StringHelper.intern(field);
+  }
+
   // members (package private, to be also fast accessible by NumericRangeTermEnum)
-  final String field;
+  String field;
   final int precisionStep, valSize;
   final T min, max;
   final boolean minInclusive,maxInclusive;
diff --git a/lucene/java/trunk/src/java/org/apache/lucene/search/SortField.java b/lucene/java/trunk/src/java/org/apache/lucene/search/SortField.java
index a78d4a1f..eac4dfa0 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/search/SortField.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/search/SortField.java
@@ -354,6 +354,11 @@ public int hashCode() {
     return hash;
   }
 
+  // field must be interned after reading from stream
+  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
+    in.defaultReadObject();
+    field = StringHelper.intern(field);
+  }
 
   /** Returns the {@link FieldComparator} to use for
    * sorting.
