diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/CheckIndex.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/CheckIndex.java
index f4352363..db7546b5 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/CheckIndex.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/CheckIndex.java
@@ -608,6 +608,7 @@ else if (format < SegmentInfos.CURRENT_FORMAT) {
 
       final TermEnum termEnum = reader.terms();
       final TermPositions termPositions = reader.termPositions();
+      final int postingsSkipInterval = reader.getPostingsSkipInterval();
 
       // Used only to count up # deleted docs for this term
       final MySegmentTermDocs myTermDocs = new MySegmentTermDocs(reader);
@@ -649,6 +650,30 @@ else if (format < SegmentInfos.CURRENT_FORMAT) {
           }
         }
 
+        // Test skipping
+        if (docFreq >= postingsSkipInterval) {
+          
+          for(int idx=0;idx<7;idx++) {
+            final int skipDocID = (int) (((idx+1)*(long) maxDoc)/8);
+            termPositions.seek(term);
+            if (!termPositions.skipTo(skipDocID)) {
+              break;
+            } else {
+              final int docID = termPositions.doc();
+              if (docID < skipDocID) {
+                throw new RuntimeException("term " + term + ": skipTo(docID=" + skipDocID + ") returned docID=" + docID);
+              }
+              if (!termPositions.next()) {
+                break;
+              }
+              final int nextDocID = termPositions.doc();
+              if (nextDocID <= docID) {
+                throw new RuntimeException("term " + term + ": skipTo(docID=" + skipDocID + "), then .next() returned docID=" + nextDocID + " vs prev docID=" + docID);
+              }
+            }
+          }
+        }
+
         // Now count how many deleted docs occurred in
         // this term:
         final int delCount;
diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/SegmentReader.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/SegmentReader.java
index 920819eb..bea568dd 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/SegmentReader.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/SegmentReader.java
@@ -1084,6 +1084,11 @@ public synchronized void norms(String field, byte[] bytes, int offset)
     norm.bytes(bytes, offset, maxDoc());
   }
 
+  // For testing
+  /** @lucene.internal */
+  int getPostingsSkipInterval() {
+    return core.getTermsReader().getSkipInterval();
+  }
 
   private void openNorms(Directory cfsDir, int readBufferSize) throws IOException {
     long nextNormSeek = SegmentMerger.NORMS_HEADER.length; //skip header (header unused for now)
