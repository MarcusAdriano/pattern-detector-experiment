diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/services/context/ContextService.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/services/context/ContextService.java
index 1018c8e7..a5ed921a 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/services/context/ContextService.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/services/context/ContextService.java
@@ -94,9 +94,9 @@ the context manager keeps track of the number of times it has been pushed (set).
 			STACK for last 3
 	*/
 
-	final ThreadLocal	threadContextList = new ThreadLocal();
+	private ThreadLocal threadContextList = new ThreadLocal();
 
-	private final HashSet allContexts;
+	private HashSet allContexts;
 
 	// don't want any instances
 	public ContextService() {
@@ -114,6 +114,12 @@ public ContextService() {
 		So it can be given to us and taken away...
 	 */
 	public static void stop() {
+		// For some unknown reason, the ContextManager and
+		// ContextService objects will not be garbage collected
+		// without the next two lines.
+		factory.allContexts = null;
+		factory.threadContextList = null;
+
 		ContextService.factory = null;
 	}
 
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/BaseMonitor.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/BaseMonitor.java
index 4da4299c..0ce27bcd 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/BaseMonitor.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/BaseMonitor.java
@@ -2184,9 +2184,6 @@ public boolean hasMoreElements()
 	}
 
 	public void run() {
-
-		goAway = false;
-
 		while (true) {
 			synchronized (this) {
 				if (goAway)
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/FileMonitor.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/FileMonitor.java
index 5e6d2b0f..0a1f1921 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/FileMonitor.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/FileMonitor.java
@@ -89,7 +89,12 @@ private boolean PBinitialize(boolean lite)
 	{
 		if (!lite) {
 			try {
+				// Create a ThreadGroup and set the daemon property to
+				// make sure the group is destroyed and garbage
+				// collected when all its members have finished (i.e.,
+				// when the driver is unloaded).
 				daemonGroup = new ThreadGroup("derby.daemons");
+				daemonGroup.setDaemon(true);
 			} catch (SecurityException se) {
 			}
 		}
