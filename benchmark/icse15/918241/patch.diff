diff --git a/db/derby/code/branches/10.5/java/testing/org/apache/derbyTesting/functionTests/tests/lang/OffsetFetchNextTest.java b/db/derby/code/branches/10.5/java/testing/org/apache/derbyTesting/functionTests/tests/lang/OffsetFetchNextTest.java
index 6865e6a9..b8c4efd6 100644
--- a/db/derby/code/branches/10.5/java/testing/org/apache/derbyTesting/functionTests/tests/lang/OffsetFetchNextTest.java
+++ b/db/derby/code/branches/10.5/java/testing/org/apache/derbyTesting/functionTests/tests/lang/OffsetFetchNextTest.java
@@ -130,15 +130,33 @@ public void testErrors()
     public void testNewKeywordNonReserved()
             throws Exception
     {
-        getConnection().prepareStatement(
-            "select a,b as OFFSET from t1 OFFSET 0 rows");
+        setAutoCommit(false);
+        prepareStatement("select a,b as offset from t1 offset 0 rows");
 
         // Column and table correlation name usage
-        getConnection().prepareStatement(
-            "select a,b from t1 AS OFFSET");
+        prepareStatement("select a,b from t1 as offset");
 
-        getConnection().prepareStatement(
-            "select a,b OFFSET from t1 OFFSET");
+        prepareStatement("select a,b offset from t1 offset");
+        prepareStatement("select a,b offset from t1 offset +2 rows");
+
+        // DERBY-4562
+        Statement s = createStatement();
+        s.executeUpdate("create table t4562(i int, offset int)");
+        ResultSet rs = s.executeQuery(
+            "select * from t4562 where i > 0 and offset + i < 0 offset 2 rows");
+        rs.next();
+
+        rs = s.executeQuery(
+            "select * from t4562 where i > 0 and offset - i < 0 offset 2 rows");
+        rs.next();
+
+        rs = s.executeQuery(
+            "select * from t4562 where i > 0 and offset * i < 0 offset 2 rows");
+        rs.next();
+
+        rs.close();
+
+        rollback();
     }
 
 
