diff --git a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DRDAConnThread.java b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DRDAConnThread.java
index 21555790..bbf9355a 100644
--- a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DRDAConnThread.java
+++ b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DRDAConnThread.java
@@ -827,6 +827,13 @@ private void processCommands() throws DRDAProtocolException
                     break;
                 case CodePoint.OPNQRY:
                     try {
+                        // activate the following to run the isValid(timeout) test in jdbc4.ConnectionTest
+                        /*try { 
+                            Thread.sleep(2000);
+                        } catch (InterruptedException ie) {
+                            System.out.println("interrupted exception: " + ie.getMessage());
+                            ie.printStackTrace();
+                        }*/
                         if (PRPSQLSTTfailed) {
                             // read the command objects
                             // for ps with parameter
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ConnectionMethodsTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ConnectionMethodsTest.java
index a48922ab..1bdb3319 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ConnectionMethodsTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ConnectionMethodsTest.java
@@ -322,10 +322,12 @@ public void testConnectionIsValid() throws SQLException, Exception {
         }
 
        /*
-        * Test with a valid timeout
+        * Test with a valid timeout.
+        * The value is set very large; we expect
+        * to complete and succeed much sooner. See DERBY-5912
         */
-        if (!conn.isValid(1)) {
-            fail("FAIL: isValid(1): returned false");
+        if (!conn.isValid(200)) {
+            fail("FAIL: isValid(200): returned false");
         }
 
        /*
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ConnectionTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ConnectionTest.java
index b2817bf2..3d958cef 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ConnectionTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ConnectionTest.java
@@ -157,7 +157,7 @@ public void testGetClientInfoString()
      * Tests that <code>isValid</code> is implemented and returns true
      * for the connection. This test is very limited but is tested
      * for all connection types. A more complete test of isValid is
-     * found in the TestConnectionMethods.java test that is run for
+     * found in the ConnectionMethodsTest.java test that is run for
      * embedded and network client connections.
      */
     public void testIsValidImplemented() throws SQLException {
@@ -178,6 +178,44 @@ public void testIsValidImplemented() throws SQLException {
         }
     }
 
+    /**
+     * Tests that <code>isValid</code> times out when expected.
+     * This test will need a modification to the source code;
+     * activate the commented out Thread.sleep(2000) (2 seconds) in 
+     * DRDAConnThread.ProcessCommands, case CodePoint.OPNQRY
+     * To activate the test, remove the extra 'x' before building
+     */
+    public void xtestIsValidWithTimeout() throws SQLException {
+        // isValid(timeoutvalue) is a no-op in Embedded
+        if (usingEmbedded()) {
+            return;
+        }
+        // Test with a large timeout, see DERBY-5912.
+        boolean convalid=true;
+        Connection conn=getConnection();
+
+        // with a longer time out, the isValid call should not
+        // time out when the sleep is shorter.
+        convalid=conn.isValid(200);
+        assertTrue(convalid);
+
+        // setting the timeout to 1 should timeout if the sleep
+        // is 2 seconds.
+        convalid=conn.isValid(1);
+        assertFalse(convalid);
+
+        // rollback should work even though isvalid timed out...
+        // But there's a bug in that the connection becomes invalid and
+        // it is not getting re-established, see DERBY-5919. 
+        // Catch the exception saying No current Connection and swallow.
+        try {
+            conn.rollback();
+            //conn.close();
+        } catch (Exception e) {
+            //println("exception: " + e.getStackTrace());
+        }
+    }
+
     /**
      * Tests that <code>getTypeMap()</code> returns an empty map when
      * no type map has been installed.
