diff --git a/incubator/aries/trunk/jndi/jndi-core/src/main/java/org/apache/aries/jndi/ContextHelper.java b/incubator/aries/trunk/jndi/jndi-core/src/main/java/org/apache/aries/jndi/ContextHelper.java
index 3ebc48ab..940011bf 100644
--- a/incubator/aries/trunk/jndi/jndi-core/src/main/java/org/apache/aries/jndi/ContextHelper.java
+++ b/incubator/aries/trunk/jndi/jndi-core/src/main/java/org/apache/aries/jndi/ContextHelper.java
@@ -134,7 +134,7 @@ public static Context getInitialContext(BundleContext context, Hashtable<?, ?> e
           if (contextFactoryClass == null) {
             return new DelegateContext(context, environment);
           } else {
-            throw new NoInitialContextException("We could not find an InitialContextFactory to use");
+            throw new NoInitialContextException("We could not find a provider for the InitialContextFactory " + contextFactoryClass);
           }
         }
     }
@@ -213,17 +213,21 @@ private static ContextProvider getInitialContextUsingBuilder(BundleContext conte
                 InitialContextFactoryBuilder builder = (InitialContextFactoryBuilder) context.getService(ref);
                 try {
                     factory = builder.createInitialContextFactory(environment);
+                } catch (NamingException ne) {
+                  // TODO: log
+                  // ignore this, if the builder fails we want to move onto the next one
+                }
+                
                     if (factory != null) {
+                  try {
                       provider = new ContextProvider(context, ref, factory.getInitialContext(environment));
+                  } finally {
+                    context.ungetService(ref); // we didn't get something back, so this was no good.
+                  }
                       break;
                     } else {
                       context.ungetService(ref); // we didn't get something back, so this was no good.
                     }
-                } catch (NamingException e) {
-                    // TODO: log
-                    // ignore
-                    context.ungetService(ref);
-                }
             }
         }
         return provider;
