diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ReadVerbHandler.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ReadVerbHandler.java
index d02422fa..d7e52403 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ReadVerbHandler.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ReadVerbHandler.java
@@ -29,6 +29,7 @@
 import org.apache.cassandra.net.Message;
 import org.apache.cassandra.net.MessagingService;
 import org.apache.cassandra.service.StorageService;
+import org.apache.cassandra.utils.FBUtilities;
 
 import org.apache.log4j.Logger;
 
@@ -79,6 +80,8 @@ public void doVerb(Message message)
             ReadResponse readResponse;
             if (readCommand.isDigestQuery())
             {
+                if (logger_.isDebugEnabled())
+                    logger_.debug("digest is " + FBUtilities.bytesToHex(row.digest()));
                 readResponse = new ReadResponse(row.digest());
             }
             else
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/ReadResponseResolver.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/ReadResponseResolver.java
index 2d06f48a..39651cde 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/ReadResponseResolver.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/ReadResponseResolver.java
@@ -34,6 +34,8 @@
 import org.apache.cassandra.net.EndPoint;
 import org.apache.cassandra.net.Message;
 import org.apache.cassandra.utils.LogUtil;
+import org.apache.cassandra.utils.FBUtilities;
+
 import org.apache.log4j.Logger;
 
 
@@ -76,10 +78,7 @@ public Row resolve(List<Message> responses) throws DigestMismatchException, IOEx
 		{					            
             byte[] body = response.getMessageBody();
             bufIn.reset(body, body.length);
-            long start = System.currentTimeMillis();
             ReadResponse result = ReadResponse.serializer().deserialize(bufIn);
-            if (logger_.isDebugEnabled())
-              logger_.debug( "Response deserialization time : " + (System.currentTimeMillis() - start) + " ms.");
             if (result.isDigestQuery())
             {
                 digest = result.digest();
@@ -102,7 +101,8 @@ public Row resolve(List<Message> responses) throws DigestMismatchException, IOEx
                 if (!Arrays.equals(row.digest(), digest))
                 {
                     /* Wrap the key as the context in this exception */
-					throw new DigestMismatchException(row.key());
+                    String s = String.format("Mismatch for key %s (%s vs %s)", row.key(), FBUtilities.bytesToHex(row.digest()), FBUtilities.bytesToHex(digest));
+                    throw new DigestMismatchException(s);
 				}
 			}
 		}
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageProxy.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageProxy.java
index d183f3eb..f73d4469 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageProxy.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageProxy.java
@@ -404,7 +404,7 @@ public static void insertBlocking(RowMutation rm) throws UnavailableException
                     QuorumResponseHandler<Row> quorumResponseHandlerRepair = new QuorumResponseHandler<Row>(
                             DatabaseDescriptor.getQuorum(),
                             readResponseResolverRepair);
-                    logger.info("DigestMismatchException: " + command.key);
+                    logger.info("DigestMismatchException: " + ex.getMessage());
                     Message messageRepair = command.makeReadMessage();
                     MessagingService.getMessagingInstance().sendRR(messageRepair, commandEndPoints.get(commandIndex), quorumResponseHandlerRepair);
                     try
