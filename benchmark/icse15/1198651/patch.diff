diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/CanopyClusterer.java b/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/CanopyClusterer.java
index 83854c5e..ed79b48a 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/CanopyClusterer.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/CanopyClusterer.java
@@ -152,13 +152,17 @@ public void addPointToCanopies(Vector point, Collection<Canopy> canopies) {
     for (Canopy canopy : canopies) {
       double dist = measure.distance(canopy.getCenter().getLengthSquared(), canopy.getCenter(), point);
       if (dist < t1) {
+        if (log.isDebugEnabled()) {
         log.debug("Added point: {} to canopy: {}", AbstractCluster.formatVector(point, null), canopy.getIdentifier());
+        }
         canopy.observe(point);
       }
       pointStronglyBound = pointStronglyBound || dist < t2;
     }
     if (!pointStronglyBound) {
+      if (log.isDebugEnabled()) {
       log.debug("Created new Canopy:{} at center:{}", nextCanopyId, AbstractCluster.formatVector(point, null));
+      }
       canopies.add(new Canopy(point, nextCanopyId++, measure));
     }
   }
diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/CanopyDriver.java b/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/CanopyDriver.java
index 9e539c6b..57920673 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/CanopyDriver.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/CanopyDriver.java
@@ -276,11 +276,13 @@ private static Path buildClustersSeq(Path input, Path output,
     try {
       for (Canopy canopy : canopies) {
         canopy.computeParameters();
+        if (log.isDebugEnabled()) {
         log.debug("Writing Canopy:{} center:{} numPoints:{} radius:{}",
             new Object[] { canopy.getIdentifier(),
                 AbstractCluster.formatVector(canopy.getCenter(), null),
                 canopy.getNumPoints(),
                 AbstractCluster.formatVector(canopy.getRadius(), null) });
+        }
         if (canopy.getNumPoints() > clusterFilter) {
           writer.append(new Text(canopy.getIdentifier()), canopy);
         }
diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver.java b/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver.java
index e8d5432f..a9fc186d 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansDriver.java
@@ -382,6 +382,7 @@ private static Path buildClustersSeq(Path input,
                                                            SoftCluster.class);
       try {
         for (SoftCluster cluster : clusters) {
+          if (log.isDebugEnabled()) {
           log.debug("Writing Cluster:{} center:{} numPoints:{} radius:{} to: {}",
                     new Object[] {
                         cluster.getId(),
@@ -390,6 +391,7 @@ private static Path buildClustersSeq(Path input,
                         AbstractCluster.formatVector(cluster.getRadius(), null),
                         clustersOut.getName()
                     });
+          }
           writer.append(new Text(cluster.getIdentifier()), cluster);
         }
       } finally {
diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/KMeansDriver.java b/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/KMeansDriver.java
index f1c760da..e3fd2226 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/KMeansDriver.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/KMeansDriver.java
@@ -277,6 +277,7 @@ private static Path buildClustersSeq(Configuration conf,
                                                            Cluster.class);
       try {
         for (Cluster cluster : clusters) {
+          if (log.isDebugEnabled()) {
           log.debug("Writing Cluster:{} center:{} numPoints:{} radius:{} to: {}",
                     new Object[] {
                         cluster.getId(),
@@ -284,6 +285,7 @@ private static Path buildClustersSeq(Configuration conf,
                         cluster.getNumPoints(),
                         AbstractCluster.formatVector(cluster.getRadius(), null), clustersOut.getName()
                     });
+          }
           writer.append(new Text(cluster.getIdentifier()), cluster);
         }
       } finally {
diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyDriver.java b/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyDriver.java
index 732729e1..83ab7588 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyDriver.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyDriver.java
@@ -316,6 +316,7 @@ private static Path buildClustersSeq(Path clustersIn, Path output,
           clustersOut, "part-r-00000"), Text.class, MeanShiftCanopy.class);
       try {
         for (MeanShiftCanopy cluster : clusters) {
+          if (log.isDebugEnabled()) {
           log.debug(
               "Writing Cluster:{} center:{} numPoints:{} radius:{} to: {}",
               new Object[] { cluster.getId(),
@@ -325,6 +326,7 @@ private static Path buildClustersSeq(Path clustersIn, Path output,
                   clustersOut.getName() });
           writer.append(new Text(cluster.getIdentifier()), cluster);
         }
+        }
       } finally {
         Closeables.closeQuietly(writer);
       }
diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/fpm/pfpgrowth/TransactionTree.java b/mahout/trunk/core/src/main/java/org/apache/mahout/fpm/pfpgrowth/TransactionTree.java
index b54804a1..39ace1cf 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/fpm/pfpgrowth/TransactionTree.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/fpm/pfpgrowth/TransactionTree.java
@@ -207,11 +207,13 @@ public int compare(Integer o1, Integer o2) {
       size += p.getFirst().size() + 2;
     }
     
+    if (log.isDebugEnabled()) {
     log.debug("Nodes in UnCompressed Tree: {} ", nodes);
     log.debug("UnCompressed Tree Size: {}", (this.nodes * 4 * 4 + this.childCount() * 4) / 1000000.0);
     log.debug("Nodes in Compressed Tree: {} ", node);
     log.debug("Compressed Tree Size: {}", (node * 4 * 4 + ctree.childCount() * 4) / 1000000.0);
     log.debug("TransactionSet Size: {}", size * 4 / 1000000.0);
+    }
     if (node * 4 * 4 + ctree.childCount() * 4 <= size * 4) {
       return ctree;
     } else {
diff --git a/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/df/mapreduce/BuildForest.java b/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/df/mapreduce/BuildForest.java
index d18733a6..3ca97cea 100644
--- a/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/df/mapreduce/BuildForest.java
+++ b/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/df/mapreduce/BuildForest.java
@@ -127,6 +127,7 @@ public int run(String[] args) throws IOException, ClassNotFoundException, Interr
         seed = Long.valueOf(cmdLine.getValue(seedOpt).toString());
       }
       
+      if (log.isDebugEnabled()) {
       log.debug("data : {}", dataName);
       log.debug("dataset : {}", datasetName);
       log.debug("output : {}", outputName);
@@ -134,6 +135,7 @@ public int run(String[] args) throws IOException, ClassNotFoundException, Interr
       log.debug("seed : {}", seed);
       log.debug("nbtrees : {}", nbTrees);
       log.debug("isPartial : {}", isPartial);
+      }
      
       dataPath = new Path(dataName);
       datasetPath = new Path(datasetName);
diff --git a/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/df/mapreduce/TestForest.java b/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/df/mapreduce/TestForest.java
index 94ccc7be..035c2693 100644
--- a/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/df/mapreduce/TestForest.java
+++ b/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/df/mapreduce/TestForest.java
@@ -118,12 +118,14 @@ public int run(String[] args) throws IOException, ClassNotFoundException, Interr
       analyze = cmdLine.hasOption(analyzeOpt);
       useMapreduce = cmdLine.hasOption(mrOpt);
 
+      if (log.isDebugEnabled()) {
       log.debug("inout     : {}", dataName);
       log.debug("dataset   : {}", datasetName);
       log.debug("model     : {}", modelName);
       log.debug("output    : {}", outputName);
       log.debug("analyze   : {}", analyze);
       log.debug("mapreduce : {}", useMapreduce);
+      }
 
       dataPath = new Path(dataName);
       datasetPath = new Path(datasetName);
diff --git a/mahout/trunk/integration/src/main/java/org/apache/mahout/clustering/cdbw/CDbwEvaluator.java b/mahout/trunk/integration/src/main/java/org/apache/mahout/clustering/cdbw/CDbwEvaluator.java
index e57995dd..497cae57 100644
--- a/mahout/trunk/integration/src/main/java/org/apache/mahout/clustering/cdbw/CDbwEvaluator.java
+++ b/mahout/trunk/integration/src/main/java/org/apache/mahout/clustering/cdbw/CDbwEvaluator.java
@@ -321,11 +321,13 @@ public double interClusterDensity() {
           density = minDistance * interDensity / stdSum;
         }
 
+        if (log.isDebugEnabled()) {
         log.debug("minDistance[{},{}]={}", new Object[] {cI, cJ, minDistance});
         log.debug("stDev[{}]={}", cI, stDevI);
         log.debug("stDev[{}]={}", cJ, stDevJ);
         log.debug("interDensity[{},{}]={}", new Object[] {cI, cJ, interDensity});
         log.debug("density[{},{}]={}", new Object[] {cI, cJ, density});
+        }
 
         sum += density;
       }
diff --git a/mahout/trunk/integration/src/main/java/org/apache/mahout/clustering/evaluation/RepresentativePointsDriver.java b/mahout/trunk/integration/src/main/java/org/apache/mahout/clustering/evaluation/RepresentativePointsDriver.java
index 2b055023..c005933a 100644
--- a/mahout/trunk/integration/src/main/java/org/apache/mahout/clustering/evaluation/RepresentativePointsDriver.java
+++ b/mahout/trunk/integration/src/main/java/org/apache/mahout/clustering/evaluation/RepresentativePointsDriver.java
@@ -124,7 +124,9 @@ private static void writeInitialState(Path output, Path clustersIn) throws IOExc
       SequenceFile.Writer writer = new SequenceFile.Writer(fs, conf, path, IntWritable.class, VectorWritable.class);
       try {
         for (Cluster value : new SequenceFileValueIterable<Cluster>(inPart, true, conf)) {
+          if (log.isDebugEnabled()) {
           log.debug("C-{}: {}", value.getId(), AbstractCluster.formatVector(value.getCenter(), null));
+          }
           writer.append(new IntWritable(value.getId()), new VectorWritable(value.getCenter()));
         }
       } finally {
