diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/FieldsReader.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/FieldsReader.java
index 1d3b30ba..51428e2b 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/FieldsReader.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/FieldsReader.java
@@ -129,7 +129,8 @@ private FieldsReader(FieldInfos fieldInfos, int numTotalDocs, int size, int form
       fieldInfos = fn;
 
       cloneableFieldsStream = d.openInput(IndexFileNames.segmentFileName(segment, IndexFileNames.FIELDS_EXTENSION), readBufferSize);
-      cloneableIndexStream = d.openInput(IndexFileNames.segmentFileName(segment, IndexFileNames.FIELDS_INDEX_EXTENSION), readBufferSize);
+      final String indexStreamFN = IndexFileNames.segmentFileName(segment, IndexFileNames.FIELDS_INDEX_EXTENSION);
+      cloneableIndexStream = d.openInput(indexStreamFN, readBufferSize);
       
       // First version of fdx did not include a format
       // header, but, the first int will always be 0 in that
@@ -141,8 +142,7 @@ private FieldsReader(FieldInfos fieldInfos, int numTotalDocs, int size, int form
         format = firstInt;
 
       if (format > FieldsWriter.FORMAT_CURRENT)
-        throw new CorruptIndexException("Incompatible format version: " + format + " expected " 
-                                        + FieldsWriter.FORMAT_CURRENT + " or lower");
+        throw new IndexFormatTooNewException(indexStreamFN, format, 0, FieldsWriter.FORMAT_CURRENT);
 
       if (format > FieldsWriter.FORMAT)
         formatSize = 4;
diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexFormatTooOldException.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexFormatTooOldException.java
index b8f9356c..a7904507 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexFormatTooOldException.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexFormatTooOldException.java
@@ -25,13 +25,13 @@
 
   public IndexFormatTooOldException(String filename, String version) {
     super("Format version is not supported" + (filename!=null ? (" in file '" + filename + "'") : "") +
-        ": " + version + ". This version of Lucene only supports indexes created with release 3.0 and later.");
+        ": " + version + ". This version of Lucene only supports indexes created with release 1.9 and later.");
   }
   
   public IndexFormatTooOldException(String filename, int version, int minVersion, int maxVersion) {
     super("Format version is not supported" + (filename!=null ? (" in file '" + filename + "'") : "") +
         ": " + version + " (needs to be between " + minVersion + " and " + maxVersion +
-    "). This version of Lucene only supports indexes created with release 3.0 and later.");
+    "). This version of Lucene only supports indexes created with release 1.9 and later.");
   }
 
 }
diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/SegmentTermEnum.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/SegmentTermEnum.java
index ce64d363..d6a1bfb9 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/SegmentTermEnum.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/SegmentTermEnum.java
@@ -63,7 +63,7 @@
 
       // check that it is a format we can understand
       if (format < TermInfosWriter.FORMAT_CURRENT)
-        throw new CorruptIndexException("Unknown format version:" + format + " expected " + TermInfosWriter.FORMAT_CURRENT + " or higher");
+        throw new IndexFormatTooNewException(null, format, -1, TermInfosWriter.FORMAT_CURRENT);
 
       size = input.readLong();                    // read the size
       
diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/TermVectorsReader.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/TermVectorsReader.java
index 8c130b4f..55e39e86 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/TermVectorsReader.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/TermVectorsReader.java
@@ -79,11 +79,13 @@
     try {
       String idxName = IndexFileNames.segmentFileName(segment, IndexFileNames.VECTORS_INDEX_EXTENSION);
       tvx = d.openInput(idxName, readBufferSize);
-      format = checkValidFormat(tvx);
-      tvd = d.openInput(IndexFileNames.segmentFileName(segment, IndexFileNames.VECTORS_DOCUMENTS_EXTENSION), readBufferSize);
-      final int tvdFormat = checkValidFormat(tvd);
-      tvf = d.openInput(IndexFileNames.segmentFileName(segment, IndexFileNames.VECTORS_FIELDS_EXTENSION), readBufferSize);
-      final int tvfFormat = checkValidFormat(tvf);
+      format = checkValidFormat(idxName, tvx);
+      String fn = IndexFileNames.segmentFileName(segment, IndexFileNames.VECTORS_DOCUMENTS_EXTENSION);
+      tvd = d.openInput(fn, readBufferSize);
+      final int tvdFormat = checkValidFormat(fn, tvd);
+      fn = IndexFileNames.segmentFileName(segment, IndexFileNames.VECTORS_FIELDS_EXTENSION);
+      tvf = d.openInput(fn, readBufferSize);
+      final int tvfFormat = checkValidFormat(fn, tvf);
 
       assert format == tvdFormat;
       assert format == tvfFormat;
@@ -192,12 +194,11 @@ final void rawDocs(int[] tvdLengths, int[] tvfLengths, int startDocID, int numDo
     }
   }
 
-  private int checkValidFormat(IndexInput in) throws CorruptIndexException, IOException
+  private int checkValidFormat(String fn, IndexInput in) throws CorruptIndexException, IOException
   {
     int format = in.readInt();
     if (format > FORMAT_CURRENT) {
-      throw new CorruptIndexException("Incompatible format version: " + format + " expected " 
-                                      + FORMAT_CURRENT + " or less");
+      throw new IndexFormatTooNewException(fn, format, 1, FORMAT_CURRENT);
     }
     return format;
   }
