diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/reflect/DatabaseClasses.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/reflect/DatabaseClasses.java
index 9fead5c3..bb6949e1 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/reflect/DatabaseClasses.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/reflect/DatabaseClasses.java
@@ -208,6 +208,23 @@ public ClassInspector getClassInspector() {
 	public final Class loadApplicationClass(String className)
 		throws ClassNotFoundException {
 
+        if (className.startsWith("org.apache.derby.")) {
+            // Assume this is an engine class, if so
+            // try to load from this class loader,
+            // this ensures in strange class loader
+            // environments we do not get ClassCastExceptions
+            // when an engine class is loaded through a different
+            // class loader to the rest of the engine.
+            try {
+                return Class.forName(className);
+            } catch (ClassNotFoundException cnfe)
+            {
+                // fall through to the code below,
+                // could be client or tools class
+                // in a different loader.
+            }
+        }
+ 
 		Throwable loadError;
 		try {
 			try {
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/AggregateClassLoading.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/AggregateClassLoading.java
index b5aaf1ab..0beb3bb6 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/AggregateClassLoading.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/AggregateClassLoading.java
@@ -56,7 +56,6 @@ public static void main(String[] args) throws Exception {
 		// Find the location of the code for the Derby connection.
 		// The rest of the engine will be at the same location!
 		URL derbyURL = conn.getClass().getProtectionDomain().getCodeSource().getLocation();
-		System.out.println("derbyURL" + derbyURL.toExternalForm());
 		
 		// Create a new loader that loads from the same location as the engine.
 		// Create it without a parent, otherwise the parent
@@ -82,6 +81,7 @@ public static void main(String[] args) throws Exception {
 		testAggregate(s, "select COUNT(i) from t");
 		testAggregate(s, "select COUNT(*) from t");
 		
+        s.execute("drop table t");
 	    s.close();
 		conn.close();
 		
