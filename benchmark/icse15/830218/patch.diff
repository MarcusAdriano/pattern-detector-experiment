diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
index a7042de0..93d1a15a 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
@@ -285,12 +285,6 @@ public TokenMetadata getTokenMetadata()
         return tokenMetadata_;
     }
 
-    /* TODO: used for testing */
-    public void updateTokenMetadataUnsafe(Token token, InetAddress endpoint)
-    {
-        tokenMetadata_.update(token, endpoint);
-    }
-
     public IEndPointSnitch getEndPointSnitch()
     {
         return endPointSnitch_;
diff --git a/incubator/cassandra/trunk/test/unit/org/apache/cassandra/dht/BootStrapperTest.java b/incubator/cassandra/trunk/test/unit/org/apache/cassandra/dht/BootStrapperTest.java
index d41eed37..2531e0e6 100644
--- a/incubator/cassandra/trunk/test/unit/org/apache/cassandra/dht/BootStrapperTest.java
+++ b/incubator/cassandra/trunk/test/unit/org/apache/cassandra/dht/BootStrapperTest.java
@@ -44,16 +44,15 @@ public void testSourceTargetComputation() throws UnknownHostException
 
     private void testSourceTargetComputation(int numOldNodes) throws UnknownHostException
     {
+        StorageService ss = StorageService.instance();
+
         generateFakeEndpoints(numOldNodes);
         
         Token myToken = StorageService.getPartitioner().getDefaultToken();
         InetAddress myEndpoint = InetAddress.getByName("127.0.0.1");
  
-        StorageService ss = StorageService.instance();
-        ss.updateTokenMetadataUnsafe(myToken, myEndpoint);
-
         TokenMetadata tmd = ss.getTokenMetadata();
-        assertEquals(numOldNodes + 1, tmd.cloneTokenEndPointMap().size());
+        assertEquals(numOldNodes, tmd.cloneTokenEndPointMap().size());
         BootStrapper b = new BootStrapper(ss.getReplicationStrategy(), myEndpoint, myToken, tmd);
         Map<Range, Set<InetAddress>> res = b.getRangesWithSources();
         
