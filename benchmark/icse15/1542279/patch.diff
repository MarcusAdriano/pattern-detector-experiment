diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/vectorizer/encoders/InteractionValueEncoder.java b/mahout/trunk/core/src/main/java/org/apache/mahout/vectorizer/encoders/InteractionValueEncoder.java
index 3af0959d..0be88236 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/vectorizer/encoders/InteractionValueEncoder.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/vectorizer/encoders/InteractionValueEncoder.java
@@ -17,10 +17,11 @@
 
 package org.apache.mahout.vectorizer.encoders;
 
+import java.util.Locale;
+
 import org.apache.mahout.math.Vector;
 
-import java.util.Arrays;
-import java.util.Locale;
+import com.google.common.base.Charsets;
 
 public class InteractionValueEncoder extends FeatureVectorEncoder {
   private final FeatureVectorEncoder firstEncoder;
@@ -86,7 +87,8 @@ public void addInteractionToVector(byte[] originalForm1, byte[] originalForm2, d
         for (Integer j : jValues) {
           int n = (k + j) % data.size();
           if (isTraceEnabled()) {
-            trace(String.format("%s:%s", Arrays.toString(originalForm1), Arrays.toString(originalForm2)), n);
+            trace(String.format("%s:%s", new String(originalForm1, Charsets.UTF_8), new String(originalForm2,
+		Charsets.UTF_8)), n);
           }
           data.set(n, data.get(n) + w);
         }
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/encoders/InteractionValueEncoderTest.java b/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/encoders/InteractionValueEncoderTest.java
index 38780a52..94095cc0 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/encoders/InteractionValueEncoderTest.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/encoders/InteractionValueEncoderTest.java
@@ -17,6 +17,12 @@
 
 package org.apache.mahout.vectorizer.encoders;
 
+import java.util.Map;
+import java.util.Set;
+
+import static com.google.common.collect.Iterables.getFirst;
+
+import com.google.common.collect.Maps;
 import org.apache.mahout.common.MahoutTestCase;
 import org.apache.mahout.math.DenseVector;
 import org.apache.mahout.math.Vector;
@@ -74,4 +80,24 @@ public void testAddToVectorWithTextValueEncoder() {
     assertEquals((float) k*3, v1.norm(1), 0);
   }
 
+  @Test
+  public void testTraceDictionary() {
+    StaticWordValueEncoder encoder1 = new StaticWordValueEncoder("first");
+    StaticWordValueEncoder encoder2 = new StaticWordValueEncoder("second");
+    
+    Map<String, Set<Integer>> traceDictionary = Maps.newHashMap();
+
+    InteractionValueEncoder interactions = new InteractionValueEncoder("interactions", encoder1, encoder2);
+    interactions.setProbes(1);
+    interactions.setTraceDictionary(traceDictionary);
+    
+    Vector v = new DenseVector(10);
+    interactions.addInteractionToVector("a", "b", 1, v);
+    
+    assertEquals(1, v.getNumNonZeroElements());
+    assertEquals(1, traceDictionary.size());
+    assertEquals("interactions=a:b", getFirst(traceDictionary.keySet(), null));
+
+  }
+
 }
