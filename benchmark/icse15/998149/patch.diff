diff --git a/incubator/aries/trunk/application/application-obr-resolver/src/main/java/org/apache/aries/application/resolver/obr/impl/ModelledBundleResource.java b/incubator/aries/trunk/application/application-obr-resolver/src/main/java/org/apache/aries/application/resolver/obr/impl/ModelledBundleResource.java
index fe596def..f2016fcb 100644
--- a/incubator/aries/trunk/application/application-obr-resolver/src/main/java/org/apache/aries/application/resolver/obr/impl/ModelledBundleResource.java
+++ b/incubator/aries/trunk/application/application-obr-resolver/src/main/java/org/apache/aries/application/resolver/obr/impl/ModelledBundleResource.java
@@ -38,6 +38,7 @@
 import org.apache.aries.application.modelling.ImportedPackage;
 import org.apache.aries.application.modelling.ImportedService;
 import org.apache.aries.application.modelling.ModelledResource;
+import org.apache.aries.application.modelling.ModellingConstants;
 import org.apache.aries.application.modelling.ModellingManager;
 import org.apache.aries.application.modelling.ResourceType;
 import org.apache.aries.application.modelling.utils.ModellingHelper;
@@ -181,11 +182,16 @@ public ModelledBundleResource (Resource r, ModellingManager mm, ModellingHelper
         if (rankingText != null) ranking = Integer.parseInt(rankingText);
         // objectClass may come out as a String or String[]
         Object rawObjectClass = props.remove (Constants.OBJECTCLASS);
+        if (rawObjectClass == null) {
+        	// get it from service
+        	ifaces = Arrays.asList((String)props.get(ModellingConstants.OBR_SERVICE));
+        } else {
         if (rawObjectClass.getClass().isArray()) { 
           ifaces = Arrays.asList((String[])rawObjectClass);
         } else { 
           ifaces = Arrays.asList((String)rawObjectClass);
         }
+        }
 
         ExportedService svc = modellingManager.getExportedService(name, ranking, ifaces, props);
         serviceCapabilties.add(svc);
diff --git a/incubator/aries/trunk/samples/blog/blog-itests/src/test/java/org/apache/aries/samples/blog/itests/JdbcBlogSampleWithEbaTest.java b/incubator/aries/trunk/samples/blog/blog-itests/src/test/java/org/apache/aries/samples/blog/itests/JdbcBlogSampleWithEbaTest.java
index c2e6073d..7ffb2544 100644
--- a/incubator/aries/trunk/samples/blog/blog-itests/src/test/java/org/apache/aries/samples/blog/itests/JdbcBlogSampleWithEbaTest.java
+++ b/incubator/aries/trunk/samples/blog/blog-itests/src/test/java/org/apache/aries/samples/blog/itests/JdbcBlogSampleWithEbaTest.java
@@ -37,7 +37,6 @@
 import org.ops4j.pax.exam.Option;
 import org.ops4j.pax.exam.junit.JUnit4TestRunner;
 import org.osgi.framework.Bundle;
-
 @RunWith(JUnit4TestRunner.class)
 public class JdbcBlogSampleWithEbaTest extends AbstractIntegrationTest {
 
@@ -72,8 +71,8 @@ public void test() throws Exception {
         waitForServices(bper, "org.apache.aries.samples.blog.api.persistence.BlogPersistenceService");
 
        /*Check that they haven't timed out trying to register*/
-    	assertTrue("No services reistered for " + bbiz.getSymbolicName(), isServiceRegistered(bbiz));
-    	assertTrue("No services reistered for " + bper.getSymbolicName(), isServiceRegistered(bper));
+    	assertTrue("No services registered for " + bbiz.getSymbolicName(), isServiceRegistered(bbiz));
+    	assertTrue("No services registered for " + bper.getSymbolicName(), isServiceRegistered(bper));
 
 		/*Check what services are registered - uncomment for additional debug */
 		/*
@@ -143,6 +142,8 @@ public void test() throws Exception {
                 mavenBundle("org.apache.aries.application", "org.apache.aries.application.management" ),
                 mavenBundle("org.apache.aries.application", "org.apache.aries.application.runtime" ),
                 mavenBundle("org.apache.aries.application", "org.apache.aries.application.utils" ),
+                mavenBundle("org.apache.felix", "org.apache.felix.bundlerepository"),
+                mavenBundle("org.apache.aries.application", "org.apache.aries.application.resolver.obr"),
                 mavenBundle("org.apache.aries.application", "org.apache.aries.application.modeller"),
                 mavenBundle("org.apache.aries.application", "org.apache.aries.application.deployment.management"),
                 mavenBundle("org.apache.felix", "org.apache.felix.fileinstall" ),
@@ -154,6 +155,14 @@ public void test() throws Exception {
                 mavenBundle("org.apache.aries.transaction", "org.apache.aries.transaction.blueprint" ),
                 mavenBundle("org.apache.aries.transaction", "org.apache.aries.transaction.wrappers" ),
                 mavenBundle("asm", "asm-all" ),
+                /* For debugging, uncomment the next two lines  */
+                /*vmOption ("-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=7777"),
+                waitForFrameworkStartup(),  
+*/
+                /* For debugging, add these imports:
+                import static org.ops4j.pax.exam.CoreOptions.waitForFrameworkStartup;
+                import static org.ops4j.pax.exam.container.def.PaxRunnerOptions.vmOption;
+                */
                 equinox().version("3.5.0")
         );
         options = updateOptions(options);
diff --git a/incubator/aries/trunk/samples/blog/blog-itests/src/test/java/org/apache/aries/samples/blog/itests/JpaBlogSampleWithEbaTest.java b/incubator/aries/trunk/samples/blog/blog-itests/src/test/java/org/apache/aries/samples/blog/itests/JpaBlogSampleWithEbaTest.java
index e3b49c00..44ababba 100644
--- a/incubator/aries/trunk/samples/blog/blog-itests/src/test/java/org/apache/aries/samples/blog/itests/JpaBlogSampleWithEbaTest.java
+++ b/incubator/aries/trunk/samples/blog/blog-itests/src/test/java/org/apache/aries/samples/blog/itests/JpaBlogSampleWithEbaTest.java
@@ -83,10 +83,10 @@ public void test() throws Exception {
 
 
     /*Check that they haven't timed out trying to register*/
-	assertTrue("No services reistered for " + bbiz.getSymbolicName(), isServiceRegistered(bbiz));
-	assertTrue("No services reistered for " + bper.getSymbolicName(), isServiceRegistered(bper));
-	assertTrue("No services reistered for " + bds.getSymbolicName(), isServiceRegistered(bds));
-	assertTrue("No services reistered for " + txs.getSymbolicName(), isServiceRegistered(txs));
+	assertTrue("No services registered for " + bbiz.getSymbolicName(), isServiceRegistered(bbiz));
+	assertTrue("No services registered for " + bper.getSymbolicName(), isServiceRegistered(bper));
+	assertTrue("No services registered for " + bds.getSymbolicName(), isServiceRegistered(bds));
+	assertTrue("No services registered for " + txs.getSymbolicName(), isServiceRegistered(txs));
 
 	/*Check what services are registered - uncomment for additional debug */
 	/*
@@ -155,6 +155,8 @@ public void test() throws Exception {
             mavenBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint" ),
             mavenBundle("org.apache.aries", "org.apache.aries.util" ),
             mavenBundle("org.apache.aries.jndi", "org.apache.aries.jndi" ),
+            mavenBundle("org.apache.felix", "org.apache.felix.bundlerepository"),
+            mavenBundle("org.apache.aries.application", "org.apache.aries.application.resolver.obr"),
             mavenBundle("org.apache.aries.application", "org.apache.aries.application.install" ),
             mavenBundle("org.apache.aries.application", "org.apache.aries.application.api" ),
             mavenBundle("org.apache.aries.application", "org.apache.aries.application.management" ),
