diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/CoreContainer.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/CoreContainer.java
index f7ce76d0..a4a0f09f 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/CoreContainer.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/CoreContainer.java
@@ -1505,20 +1505,31 @@ protected void putDynamicDescriptor(String rawName, CoreDescriptor p) {
     }
   }
 
-  // We are shutting down. We don't want to risk deadlock, so do this manipulation the expensive way. Note, I've
-  // already deadlocked with closing/opening cores while keeping locks here....
+  // We are shutting down. You can't hold the lock on the various lists of cores while they shut down, so we need to
+  // make a temporary copy of the names and shut them down outside the lock.
   protected void clearMaps(ConfigSolr cfg) {
     List<String> coreNames;
     List<String> transientNames;
     List<SolrCore> pendingToClose;
+
+    // It might be possible for one of the cores to move from one list to another while we're closing them. So
+    // loop through the lists until they're all empty. In particular, the core could have moved from the transient
+    // list to the pendingCloses list.
+
+    while (true) {
     synchronized (locker) {
       coreNames = new ArrayList(cores.keySet());
       transientNames = new ArrayList(transientCores.keySet());
       pendingToClose = new ArrayList(pendingCloses);
     }
+
+      if (coreNames.size() == 0 && transientNames.size() == 0 && pendingToClose.size() == 0) break;
+
     for (String coreName : coreNames) {
       SolrCore core = cores.get(coreName);
-      if (core != null) {
+        if (core == null) {
+          CoreContainer.log.info("Core " + coreName + " moved from core container list before closing.");
+        } else {
         try {
           addPersistOneCore(cfg, core, container.loader);
 
@@ -1535,7 +1546,9 @@ protected void clearMaps(ConfigSolr cfg) {
 
     for (String coreName : transientNames) {
       SolrCore core = transientCores.get(coreName);
-      if (core != null) {
+        if (core == null) {
+          CoreContainer.log.info("Core " + coreName + " moved from transient core container list before closing.");
+        } else {
         try {
           core.close();
         } catch (Throwable t) {
@@ -1561,6 +1574,7 @@ protected void clearMaps(ConfigSolr cfg) {
       }
     }
   }
+  }
 
   protected void addCoresToList(ArrayList<SolrCoreState> coreStates) {
     List<SolrCore> addCores;
