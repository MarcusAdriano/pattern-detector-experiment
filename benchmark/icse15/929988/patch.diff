diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/item/RecommenderMapper.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/item/RecommenderMapper.java
index 4aba16b5..6ac878a2 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/item/RecommenderMapper.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/hadoop/item/RecommenderMapper.java
@@ -116,8 +116,10 @@ public void map(LongWritable userID,
           throw new IOException(te.getCause());
         }
       }
+      if (columnVector != null) {
       columnVector.times(value).addTo(recommendationVector);
     }
+    }
     
     Queue<RecommendedItem> topItems = new PriorityQueue<RecommendedItem>(recommendationsPerUser + 1,
         Collections.reverseOrder());
@@ -171,11 +173,11 @@ public Vector get(IntWritable key) throws TasteException {
         throw new TasteException(ioe);
       }
       if (writable == null) {
-        throw new TasteException("Could not load column vector from map files");
+        return null;
       }
       Vector value = writable.get();
       if (value == null) {
-        throw new TasteException("Vector in map file was empty?");
+        throw new IllegalStateException("Vector in map file was empty?");
       }
       columnVector = new VectorWritable();
       columnVector.set(new RandomAccessSparseVector(Integer.MAX_VALUE, 1000));
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/common/Cache.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/common/Cache.java
index b12a261c..c31ef8ea 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/common/Cache.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/common/Cache.java
@@ -27,7 +27,7 @@
  * </p>
  * 
  * <p>
- * The cache does not support <code>null</code> values or keys.
+ * The cache does not support <code>null</code> keys.
  * </p>
  * 
  * <p>
@@ -37,6 +37,8 @@
  */
 public final class Cache<K,V> implements Retriever<K,V> {
   
+  private static final Object NULL = new Object();
+  
   private final FastMap<K,V> cache;
   private final Retriever<? super K,? extends V> retriever;
   
@@ -93,7 +95,7 @@ public V get(K key) throws TasteException {
     if (value == null) {
       return getAndCacheValue(key);
     }
-    return value;
+    return value == NULL ? null : value;
   }
   
   /**
@@ -124,7 +126,7 @@ public void clear() {
   private V getAndCacheValue(K key) throws TasteException {
     V value = retriever.get(key);
     synchronized (cache) {
-      cache.put(key, value);
+      cache.put(key, value == null ? (V) NULL : value);
     }
     return value;
   }
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/common/Retriever.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/common/Retriever.java
index 30da570f..40da9de6 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/common/Retriever.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/common/Retriever.java
@@ -27,11 +27,9 @@
 public interface Retriever<K,V> {
   
   /**
-   * @param key
-   *          key for which a value should be retrieved
-   * @return value for key. Implementations should not return null.
-   * @throws TasteException
-   *           if an error occurs while retrieving the value
+   * @param key key for which a value should be retrieved
+   * @return value for key
+   * @throws TasteException if an error occurs while retrieving the value
    */
   V get(K key) throws TasteException;
   
diff --git a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/common/CacheTest.java b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/common/CacheTest.java
index 572ace12..b30ab541 100644
--- a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/common/CacheTest.java
+++ b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/common/CacheTest.java
@@ -52,9 +52,6 @@ public void testMixedUsage() throws TasteException {
   private static class IdentityRetriever implements Retriever<Object,Object> {
     @Override
     public Object get(Object key) throws TasteException {
-      if (key == null) {
-        throw new TasteException("key is null");
-      }
       return key;
     }
   }
