diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/analysis/LengthFilter.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/analysis/LengthFilter.java
index 5db416bf..1b46fc73 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/analysis/LengthFilter.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/analysis/LengthFilter.java
@@ -47,7 +47,7 @@ public LengthFilter(boolean enablePositionIncrements, TokenStream in, int min, i
   /**
    * Build a filter that removes words that are too long or too
    * short from the text.
-   * @deprecated Use {@link #LengthFilter(boolean, TokenStream, int, int) instead.
+   * @deprecated Use {@link #LengthFilter(boolean, TokenStream, int, int)} instead.
    */
   public LengthFilter(TokenStream in, int min, int max) {
     this(false, in, min, max);
diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexReader.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexReader.java
index 80eb7306..edaf682c 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexReader.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexReader.java
@@ -19,6 +19,7 @@
 
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.FieldSelector;
+import org.apache.lucene.search.FieldCache; // javadocs
 import org.apache.lucene.search.Similarity;
 import org.apache.lucene.store.*;
 import org.apache.lucene.util.ArrayUtil;
@@ -532,7 +533,7 @@ public synchronized IndexReader reopen(final IndexCommit commit) throws CorruptI
    * file descriptors, CPU time) will be consumed.</p>
    *
    * <p>For lower latency on reopening a reader, you should
-   * call {@link #setMergedSegmentWarmer} to
+   * call {@link IndexWriterConfig#setMergedSegmentWarmer} to
    * pre-warm a newly merged segment before it's committed
    * to the index.  This is important for minimizing
    * index-to-search delay after a large merge.  </p>
diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexWriter.java
index 360bde74..0a4f9482 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexWriter.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexWriter.java
@@ -393,7 +393,7 @@ defensive measure in case any internal state (buffered
    * changes made so far by this IndexWriter instance
    *
    * @deprecated Please use {@link
-   * IndexReader#open(IndexWriter)} instead.
+   * IndexReader#open(IndexWriter,boolean)} instead.
    *
    * @throws IOException
    */
@@ -1055,9 +1055,6 @@ public IndexWriter(Directory d, Analyzer a, IndexDeletionPolicy deletionPolicy,
    * IndexWriter. Additionally, calling {@link #getConfig()} and changing the
    * parameters does not affect that IndexWriter instance.
    * <p>
-   * <b>NOTE:</b> by default, {@link IndexWriterConfig#getMaxFieldLength()}
-   * returns {@link IndexWriterConfig#UNLIMITED_FIELD_LENGTH}. Pay attention to
-   * whether this setting fits your application.
    * 
    * @param d
    *          the index directory. The index is either created or appended
@@ -4314,9 +4311,7 @@ public static void unlock(Directory directory) throws IOException {
    * {@link IndexWriter} constructors. {@link #setMaxFieldLength(int)} overrides
    * the value set by the constructor.
    * 
-   * @deprecated use {@link IndexWriterConfig} and pass
-   *             {@link IndexWriterConfig#UNLIMITED_FIELD_LENGTH} or your own
-   *             value.
+   * @deprecated use {@link LimitTokenCountAnalyzer} instead.
    */
   @Deprecated
   public static final class MaxFieldLength {
