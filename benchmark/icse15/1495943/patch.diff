diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/execute/ProjectRestrictResultSet.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/execute/ProjectRestrictResultSet.java
index 1e91c155..3c8239d5 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/execute/ProjectRestrictResultSet.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/execute/ProjectRestrictResultSet.java
@@ -356,9 +356,9 @@ public void	close() throws StandardException
 		/* Nothing to do if open was short circuited by false constant expression */
 		if (shortCircuitOpen)
 		{
-			isOpen = false;
 			shortCircuitOpen = false;
 			source.close();
+            super.close();
 			return;
 		}
 
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java
index e1d6f17f..051b7275 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/XplainStatisticsTest.java
@@ -2497,6 +2497,27 @@ public void testScanDeletedRows()
         }
     }
 
+    /**
+     * Test that run-time statistics are recorded even if the query has a
+     * predicate that always evaluates to false. Before DERBY-6268, the logic
+     * that saved the statistics would be short-circuited in such queries.
+     */
+    public void testAlwaysEmptyResultSet() throws Exception {
+        // Execute a query with a predicate that is known at compile time to
+        // evaluate to false. The predicate FALSE should do.
+        String sql = "select * from sysibm.sysdummy1 where false -- DERBY-6268";
+        Statement s = createStatement();
+        enableXplainStyle(s);
+        JDBC.assertEmpty(s.executeQuery(sql));
+        disableXplainStyle(s);
+
+        // Now, see if we find the query among the recorded statements.
+        PreparedStatement ps = prepareStatement(
+            "select * from xpltest.sysxplain_statements where stmt_text = ?");
+        ps.setString(1, sql);
+        JDBC.assertDrainResults(ps.executeQuery(), 1);
+    }
+
     /**
       * A simple test of table with the wrong 'shape'.
       */
