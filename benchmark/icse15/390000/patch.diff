diff --git a/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/sysinfo/Main.java b/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/sysinfo/Main.java
index cb2e3efd..2f575e6e 100644
--- a/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/sysinfo/Main.java
+++ b/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/sysinfo/Main.java
@@ -20,6 +20,8 @@
 
 package org.apache.derby.impl.tools.sysinfo;
 
+import java.security.AccessController;
+import java.security.PrivilegedAction;
 import java.util.Locale;
 import java.io.IOException;
 import java.io.UnsupportedEncodingException;
@@ -365,9 +367,21 @@ private static void reportLocales (java.io.PrintWriter localAW) {          // th
       String localeResource =
          "/org/apache/derby/info/locale_" + stringLocales[i] + ".properties";
 
+      final Properties finalp = p;
+      final String finalLocaleResource = localeResource;
+     
       try {
+        	InputStream is = (InputStream) AccessController.doPrivileged
+            (new PrivilegedAction() {
+                  public Object run() {
+  		            InputStream locis =
+  		            	finalp.getClass().getResourceAsStream (finalLocaleResource);
+  					return locis;
+                  }
+              }
+           );      
+      	
 
-        InputStream is = p.getClass().getResourceAsStream (localeResource);
 
         if (is == null) {
 //           localAW.println("resource is null: " + localeResource);
@@ -751,9 +765,18 @@ private static String argumentMatches(String[] args, String ss) {
 
         for (int i = 0; i < infoNames.length; i++)
         {
-			String resource = "/".concat(infoNames[i]);
+            final String resource = "/".concat(infoNames[i]);
+
+            InputStream is = (InputStream) AccessController.doPrivileged
+            (new PrivilegedAction() {
+                public Object run() {
+			        InputStream locis =
+                        new Main().getClass().getResourceAsStream(resource);
+                            return locis;
+                    }
+                }
+            );         
 
-            InputStream is = new Main().getClass().getResourceAsStream(resource);
 			if (is == null)
 				continue;
 
