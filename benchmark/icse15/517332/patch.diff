diff --git a/db/derby/code/branches/10.2/java/engine/org/apache/derby/impl/sql/compile/CastNode.java b/db/derby/code/branches/10.2/java/engine/org/apache/derby/impl/sql/compile/CastNode.java
index 633e2ed2..2685e6e4 100644
--- a/db/derby/code/branches/10.2/java/engine/org/apache/derby/impl/sql/compile/CastNode.java
+++ b/db/derby/code/branches/10.2/java/engine/org/apache/derby/impl/sql/compile/CastNode.java
@@ -41,6 +41,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 import org.apache.derby.iapi.types.DataTypeUtilities;
 import org.apache.derby.iapi.types.TypeId;
+import org.apache.derby.iapi.reference.Limits;
 
 import org.apache.derby.iapi.reference.SQLState;
 
@@ -236,6 +237,23 @@ public ValueNode bindExpression(FromList fromList, SubqueryList subqueryList,
 						length += 1;               // 1 for the decimal .
 				 
 				}
+				/*
+				 * Derby-1132 : The length for the target type was calculated
+				 * incorrectly while Char & Varchar functions were used. Thus
+				 * adding the check for Char & Varchar and calculating the
+				 * length based on the operand type.
+				 */
+				else if(srcTypeId.isStringTypeId())
+				{
+					length = opndType.getMaximumWidth();
+			
+					// Truncate the target type width to the max width of the
+					// data type
+					if (this.targetCharType == Types.CHAR)
+						length = Math.min(length, Limits.DB2_CHAR_MAXWIDTH);
+					else if (this.targetCharType == Types.VARCHAR)
+						length = Math.min(length, Limits.DB2_VARCHAR_MAXWIDTH);
+				}
 				else 
 				{
 					TypeId typeid = opndType.getTypeId();
