diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/ResultColumnList.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/ResultColumnList.java
index 1c2cc0c8..64fb3902 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/ResultColumnList.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/ResultColumnList.java
@@ -2558,31 +2558,6 @@ public void exportNames(String[] columnNames)
 		}
 	}
 
-	/**
-	 * Count the number of RCs with simple ColumnReferences.  
-	 * (RC.expression instanceof ColumnReference)  This is useful
-	 * for ensuring that the number of columns in the group by list
-	 * equals the number of grouping columns.
-	 *
-	 * @return int	The number of simple ColumnReferences.
-	 */
-	public int countNumberOfSimpleColumnReferences()
-	{
-		int				numCRs = 0;
-
-		int size = size();
-
-		for (int index = 0; index < size; index++)
-		{
-			if (((ResultColumn) elementAt(index)).getExpression() instanceof ColumnReference)
-			{
-				numCRs++;
-			}
-		}
-
-		return numCRs;
-	}
-
 	/**
 	 * Given a ResultColumn at the next deepest level in the tree, 
 	 * search this RCL for its parent ResultColumn.
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/SelectNode.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/SelectNode.java
index 77eeedf9..e0a8a042 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/SelectNode.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/SelectNode.java
@@ -1356,9 +1356,7 @@ public ResultSetNode genProjectRestrict(int origFromListSize)
 			 *	   from the same conglomerate in order to get consistent data.
 			 */
 			boolean distinctScanPossible = false;
-			if (origFromListSize == 1 &&
-				(! orderByAndDistinctMerged) &&
-				resultColumns.countNumberOfSimpleColumnReferences() == resultColumns.size())
+			if (origFromListSize == 1 && !orderByAndDistinctMerged)
 			{
 				boolean simpleColumns = true;
 				HashSet distinctColumns = new HashSet();
