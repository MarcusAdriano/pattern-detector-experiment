diff --git a/lucene/solr/trunk/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java b/lucene/solr/trunk/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
index c500d4e7..8e371850 100644
--- a/lucene/solr/trunk/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
+++ b/lucene/solr/trunk/src/java/org/apache/solr/handler/admin/LukeRequestHandler.java
@@ -71,7 +71,6 @@
  * For more documentation see:
  *  http://wiki.apache.org/solr/LukeRequestHandler
  * 
- * @author ryan
  * @version $Id$
  * @since solr 1.2
  */
@@ -390,13 +389,19 @@ private static String getFieldFlags( SchemaField f )
     indexInfo.add("maxDoc", reader.maxDoc());
     
     if( countTerms ) {
-      TermEnum te = reader.terms();
+      TermEnum te = null;
+      try{
+        te = reader.terms();
       int numTerms = 0;
       while (te.next()) {
         numTerms++;
       }
       indexInfo.add("numTerms", numTerms );
     }
+      finally{
+        if( te != null ) te.close();
+      }
+    }
 
     indexInfo.add("version", reader.getVersion());  // TODO? Is this different then: IndexReader.getCurrentVersion( dir )?
     indexInfo.add("optimized", reader.isOptimized() );
@@ -538,8 +543,10 @@ protected final boolean lessThan(Object a, Object b) {
   private static Map<String,TopTermQueue> getTopTerms( IndexReader reader, Set<String> fields, int numTerms, Set<String> junkWords ) throws Exception 
   {
     Map<String,TopTermQueue> info = new HashMap<String, TopTermQueue>();
-    TermEnum terms = reader.terms();
     
+    TermEnum terms = null;
+    try{
+      terms = reader.terms();    
     while (terms.next()) {
       String field = terms.term().field();
       String t = terms.term().text();
@@ -547,7 +554,7 @@ protected final boolean lessThan(Object a, Object b) {
       // Compute distinct terms for every field
       TopTermQueue tiq = info.get( field );
       if( tiq == null ) {
-        tiq = new TopTermQueue( numTerms );
+          tiq = new TopTermQueue( numTerms+1 );
         info.put( field, tiq );
       }
       tiq.distinctTerms++;
@@ -565,12 +572,16 @@ protected final boolean lessThan(Object a, Object b) {
       
       if( terms.docFreq() > tiq.minFreq ) {
         tiq.put(new TopTermQueue.TermInfo(terms.term(), terms.docFreq()));
-        if (tiq.size() >= numTerms) { // if tiq full
+            if (tiq.size() > numTerms) { // if tiq full
           tiq.pop(); // remove lowest in tiq
           tiq.minFreq = ((TopTermQueue.TermInfo)tiq.top()).docFreq; // reset minFreq
         }
       }
     }
+    }
+    finally {
+      if( terms != null ) terms.close();
+    }
     return info;
   }
 }
