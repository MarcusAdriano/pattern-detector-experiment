diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/SelectNode.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/SelectNode.java
index 43fd4e1b..20806257 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/SelectNode.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/SelectNode.java
@@ -643,6 +643,13 @@ public void bindResultColumns(FromList fromListParam)
 		{
 			throw StandardException.newException(SQLState.LANG_TOO_MANY_ELEMENTS);
 		}
+
+        // DERBY-4407: A derived table must have at least one column.
+        if (resultColumns.size() == 0)
+        {
+            throw StandardException.newException(
+                    SQLState.LANG_EMPTY_COLUMN_LIST);
+        }
 	}
 
 	/**
diff --git a/db/derby/code/trunk/java/shared/org/apache/derby/shared/common/reference/SQLState.java b/db/derby/code/trunk/java/shared/org/apache/derby/shared/common/reference/SQLState.java
index 310105e9..7fdeb430 100644
--- a/db/derby/code/trunk/java/shared/org/apache/derby/shared/common/reference/SQLState.java
+++ b/db/derby/code/trunk/java/shared/org/apache/derby/shared/common/reference/SQLState.java
@@ -882,6 +882,7 @@ The message identifier (ie. the value that matches a field in this class)
 	String LANG_DISTINCT_ORDER_BY                                      = "42879";
 	String LANG_DISTINCT_ORDER_BY_EXPRESSION                           = "4287A";
 	String LANG_EMPTY_VALUES_CLAUSE                                    = "42X80";
+	String LANG_EMPTY_COLUMN_LIST                                      = "42X81";
 	String LANG_USING_CARDINALITY_VIOLATION                            = "42X82";
 	String LANG_ADDING_COLUMN_WITH_NULL_AND_NOT_NULL_CONSTRAINT        = "42X83";
 	String LANG_CANT_DROP_BACKING_INDEX                                = "42X84";
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/JoinTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/JoinTest.java
index 4220436b..520f4e9d 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/JoinTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/JoinTest.java
@@ -38,6 +38,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
     private static final String AMBIGUOUS_COLNAME = "42X03";
     private static final String COLUMN_NOT_IN_SCOPE = "42X04";
     private static final String NON_COMPARABLE = "42818";
+    private static final String NO_COLUMNS = "42X81";
 
     public JoinTest(String name) {
         super(name);
@@ -641,5 +642,15 @@ public void testUsingClause() throws SQLException {
         // of the columns to use.
         assertStatementError(AMBIGUOUS_COLNAME, s,
                 "select * from (t1 cross join t2) join t2 tt2 using(b)");
+
+        // DERBY-4407: If all the columns of table X are in the USING clause,
+        // X.* will expand to no columns. A result should always have at least
+        // one column.
+        assertStatementError(NO_COLUMNS, s,
+                "select x.* from t1 x inner join t1 y using (a,b,c)");
+        assertStatementError(NO_COLUMNS, s,
+                "select x.* from t1 x left join t1 y using (a,b,c)");
+        assertStatementError(NO_COLUMNS, s,
+                "select x.* from t1 x right join t1 y using (a,b,c)");
     }
 }
