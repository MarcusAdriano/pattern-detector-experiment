diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericDataModel.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericDataModel.java
index 454b2c5e..e248c35b 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericDataModel.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericDataModel.java
@@ -86,6 +86,7 @@ public GenericDataModel(FastByIDMap<PreferenceArray> userData) {
         log.info("Processed {} users", currentCount);
       }
     }
+    log.info("Processed {} users", currentCount);
 
     this.itemIDs = itemIDSet.toArray();
     itemIDSet = null; // Might help GC -- this is big
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/file/FileDataModel.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/file/FileDataModel.java
index 8b425b5b..466b8e81 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/file/FileDataModel.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/file/FileDataModel.java
@@ -136,7 +136,7 @@ protected void reload() {
     }
   }
 
-  private DataModel buildModel() throws IOException {
+  protected DataModel buildModel() throws IOException {
     FileLineIterator iterator = new FileLineIterator(dataFile, false);
     String firstLine = iterator.peek();
     while (firstLine.length() == 0 || firstLine.charAt(0) == COMMENT_CHAR) {
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/jester/JesterDataModel.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/jester/JesterDataModel.java
index 214cd858..4e628f05 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/jester/JesterDataModel.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/jester/JesterDataModel.java
@@ -19,9 +19,12 @@
 
 import org.apache.mahout.cf.taste.example.grouplens.GroupLensDataModel;
 import org.apache.mahout.cf.taste.impl.model.GenericPreference;
+import org.apache.mahout.cf.taste.impl.model.GenericDataModel;
 import org.apache.mahout.cf.taste.impl.model.file.FileDataModel;
 import org.apache.mahout.cf.taste.impl.common.FastByIDMap;
+import org.apache.mahout.cf.taste.impl.common.FileLineIterator;
 import org.apache.mahout.cf.taste.model.Preference;
+import org.apache.mahout.cf.taste.model.DataModel;
 
 import java.io.File;
 import java.io.IOException;
@@ -50,9 +53,17 @@ public void reload() {
     super.reload();
   }
 
+  @Override
+  protected DataModel buildModel() throws IOException {
+    FastByIDMap<Collection<Preference>> data = new FastByIDMap<Collection<Preference>>();
+    FileLineIterator iterator = new FileLineIterator(getDataFile(), false);
+    processFile(iterator, data, ',');
+    return new GenericDataModel(GenericDataModel.toDataMap(data, true));
+  }
+
   @Override
   protected void processLine(String line, FastByIDMap<Collection<Preference>> data, char delimiter) {
-    String[] jokePrefs = line.split(",");
+    String[] jokePrefs = line.split(String.valueOf(delimiter));
     int count = Integer.parseInt(jokePrefs[0]);
     Collection<Preference> prefs = new ArrayList<Preference>(count);
     for (int itemID = 1; itemID < jokePrefs.length; itemID++) { // yes skip first one, just a count
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/jester/JesterRecommenderEvaluatorRunner.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/jester/JesterRecommenderEvaluatorRunner.java
index e930e156..3f3a0e15 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/jester/JesterRecommenderEvaluatorRunner.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/example/jester/JesterRecommenderEvaluatorRunner.java
@@ -25,6 +25,7 @@
 import org.slf4j.LoggerFactory;
 
 import java.io.IOException;
+import java.io.File;
 
 public final class JesterRecommenderEvaluatorRunner {
 
@@ -36,12 +37,17 @@ private JesterRecommenderEvaluatorRunner() {
 
   public static void main(String... args) throws IOException, TasteException {
     RecommenderEvaluator evaluator = new AverageAbsoluteDifferenceRecommenderEvaluator();
-    DataModel model = new JesterDataModel();
+    DataModel model;
+    if (args.length >= 1) {
+      model = new JesterDataModel(new File(args[0]));
+    } else {
+      model = new JesterDataModel();
+    }
     double evaluation = evaluator.evaluate(new JesterRecommenderBuilder(),
                                            null,
                                            model,
                                            0.9,
-                                           1.0);
+                                           0.1);
     log.info(String.valueOf(evaluation));
   }
 
