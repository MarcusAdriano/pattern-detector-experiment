diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/store/Derby151Test.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/store/Derby151Test.java
index 59c68fd5..78260fb1 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/store/Derby151Test.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/store/Derby151Test.java
@@ -98,13 +98,6 @@ protected void setUp()
     protected void tearDown()
             throws java.lang.Exception {
 
-        // Clearing the interrupt flag; makes sense for embedded part of
-        // the test. When running c/s, it would be the server thread which
-        // receives the interrupt, and since db is shut down, that should
-        // be ok for later tests. We need to clear the flag here since, for
-        // embedded, the app thread is affected.
-        Thread.currentThread().interrupted();
-
         Statement stmt = createStatement();
         stmt.executeUpdate("DROP TABLE d151");
         stmt.close();
@@ -128,6 +121,9 @@ public static void d151() throws SQLException {
                 Thread.currentThread().interrupt();
             }
         } finally {
+            // always clear flag
+            Thread.currentThread().interrupted();
+
             if (insert != null) {
                 try {
                     insert.close(); // already closed by error
