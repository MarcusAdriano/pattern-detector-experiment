diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamIn.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamIn.java
index 5ff3e06e..f7b0b63d 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamIn.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamIn.java
@@ -44,6 +44,7 @@ public static void requestRanges(InetAddress source, String tableName, Collectio
     {
         if (logger.isDebugEnabled())
             logger.debug("Requesting from " + source + " ranges " + StringUtils.join(ranges, ", "));
+        StreamInManager.waitingForAnticompaction.put(source, tableName);
         StreamRequestMetadata streamRequestMetadata = new StreamRequestMetadata(FBUtilities.getLocalAddress(), ranges, tableName);
         Message message = StreamRequestMessage.makeStreamRequestMessage(new StreamRequestMessage(streamRequestMetadata));
         MessagingService.instance.sendOneWay(message, source);
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInManager.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInManager.java
index 9ac96d8b..1c5f11c8 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInManager.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInManager.java
@@ -41,6 +41,9 @@
 
     public static final Multimap<InetAddress, PendingFile> activeStreams = Multimaps.synchronizedMultimap(HashMultimap.<InetAddress, PendingFile>create());
 
+    /** keep track of which hosts this node has sent requests for ranges to. */
+    public static final Multimap<InetAddress, String> waitingForAnticompaction = Multimaps.synchronizedMultimap(HashMultimap.<InetAddress, String>create());
+
     public synchronized static PendingFile getStreamContext(InetAddress key)
     {        
         List<PendingFile> context = ctxBag_.get(key);
@@ -69,6 +72,7 @@ public synchronized static CompletedFileStatus getStreamStatus(InetAddress key)
         HashSet<InetAddress> set = new HashSet<InetAddress>();
         set.addAll(ctxBag_.keySet());
         set.addAll(activeStreams.keySet());
+        set.addAll(waitingForAnticompaction.keySet());
         return set;
     }
 
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInitiateVerbHandler.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInitiateVerbHandler.java
index c3bdc122..1a2f208c 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInitiateVerbHandler.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInitiateVerbHandler.java
@@ -70,6 +70,7 @@ public void doVerb(Message message)
                     logger.debug("no data needed from " + message.getFrom());
                 if (StorageService.instance.isBootstrapMode())
                     StorageService.instance.removeBootstrapSource(message.getFrom(), new String(message.getHeader(StreamOut.TABLE_NAME)));
+                StreamInManager.waitingForAnticompaction.removeAll(message.getFrom());
                 return;
             }
 
@@ -91,6 +92,7 @@ public void doVerb(Message message)
                   logger.debug("Received Data from  : " + message.getFrom() + " " + pendingFile.getTargetFile() + " " + file);
                 pendingFile.setTargetFile(file);
                 addStreamContext(message.getFrom(), pendingFile, streamStatus);
+                StreamInManager.waitingForAnticompaction.remove(message.getFrom(), pendingFile.getTable());
             }
 
             StreamInManager.registerStreamCompletionHandler(message.getFrom(), new StreamCompletionHandler());
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamOut.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamOut.java
index 3fb2c1a1..615bce5a 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamOut.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamOut.java
@@ -73,6 +73,11 @@ public static void transferRanges(InetAddress target, String tableName, Collecti
     {
         assert ranges.size() > 0;
 
+        // this is a sneaky way of indicating target as a destination node. it is a lame way of doing it and will 
+        // change as part of fixing CASSANDRA-1076.
+        StreamOutManager.get(target);
+        
+
         logger.debug("Beginning transfer process to " + target + " for ranges " + StringUtils.join(ranges, ", "));
 
         /*
