diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/ResultColumnList.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/ResultColumnList.java
index bdf96508..e54e2be4 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/ResultColumnList.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/ResultColumnList.java
@@ -3913,12 +3913,12 @@ void replaceOrForbidDefaults(TableDescriptor ttd,
 
 				//				DefaultNode defaultNode = (DefaultNode) rc.getExpression();
 				// Get ColumnDescriptor by name or by position?
-				ColumnDescriptor cd;
+				ColumnDescriptor cd = null;
 				if (tcl == null)
 				{
 					cd = ttd.getColumnDescriptor(index + 1);
 				}
-				else
+				else if (index < tcl.size())
 				{
 					ResultColumn trc = (ResultColumn) tcl.elementAt(index);
 					cd = ttd.getColumnDescriptor(trc.getName());
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/InsertTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/InsertTest.java
index fe250b53..51e4ce82 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/InsertTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/InsertTest.java
@@ -35,6 +35,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 public class InsertTest extends BaseJDBCTestCase {
 
     private static final String PARAMETER_IN_SELECT_LIST = "42X34";
+    private static final String TOO_MANY_RESULT_COLUMNS = "42X06";
 
     public InsertTest(String name) {
         super(name);
@@ -187,4 +188,23 @@ public void testInsertFromSelectWithParameters() throws SQLException {
                 "insert into derby4671 select ? from derby4671 "
                 + "intersect select ? from derby4671");
     }
+
+    /**
+     * Regression test case for DERBY-4449. INSERT statements with an explicit
+     * target column list used to fail with ArrayIndexOutOfBoundsException if
+     * the table constructor had more columns than the target column list and
+     * one of the extra columns was specified as DEFAULT.
+     */
+    public void testInsertTooManyDefaultColumns() throws SQLException {
+        createStatement().execute("create table derby4449(x int)");
+        // This statement has always failed gracefully (no explicit target
+        // column list)
+        assertCompileError(
+                TOO_MANY_RESULT_COLUMNS,
+                "insert into derby4449 values (default, default)");
+        // This statement used to fail with ArrayIndexOutOfBoundsException
+        assertCompileError(
+                TOO_MANY_RESULT_COLUMNS,
+                "insert into derby4449 (x) values (default, default)");
+    }
 }
