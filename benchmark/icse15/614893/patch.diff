diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/load/Import.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/load/Import.java
index 6161dc47..8e6c3eb0 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/load/Import.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/load/Import.java
@@ -84,7 +84,7 @@ public Import(String inputFileName, String columnDelimiter,
 
 		}catch(Exception e)
 		{
-			throw LoadError.unexpectedError(e);
+			throw importError(e);
 		}
 	}
 
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/load/ImportAbstract.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/load/ImportAbstract.java
index ebc51a36..76d858ee 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/load/ImportAbstract.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/load/ImportAbstract.java
@@ -21,6 +21,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 package org.apache.derby.impl.load;
 
+import java.io.IOException;
 import java.sql.SQLException;
 import java.sql.SQLWarning;
 import java.sql.ResultSetMetaData;
@@ -123,7 +124,7 @@ public boolean next() throws SQLException {
       lineNumber++;
       return (importReadData.readNextRow(nextRow));
     } catch (Exception ex) {
-		throw LoadError.unexpectedError(ex);
+		throw importError(ex);
 	}
   }
 
@@ -312,4 +313,24 @@ private boolean isColumnInExtFile(int colIndex)
 			return false;
 
 	}
+        
+        /**
+         * Close the stream and wrap exception in a SQLException
+         * 
+         * @param ex  Exception causing the import error
+         * @throws SQLException
+         */
+        public  SQLException importError(Exception ex) {
+            Exception closeException = null;
+            if (importReadData != null)
+                try {
+                    importReadData.closeStream(); 
+                } catch (Exception e) {
+                    closeException = e;
+                }
+                SQLException le = LoadError.unexpectedError(ex);
+                if (closeException != null)
+                    le.setNextException(LoadError.unexpectedError(closeException));
+                return le;
+        }
 }
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java
index 0d120690..c7890496 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportProcedureTest.java
@@ -1922,8 +1922,6 @@ public void testImportExportProcedureNegative() throws Exception
             + "'extout/nodir/t1.dat' , null, null, null) ");
         assertStatementError("XIE0I", cSt);
 	
-	//DERBY-2925: need to delete existing files first.
-        SupportFilesSetup.deleteFile("extinout/t1.dat");
 
         //export table not found
         
@@ -1943,7 +1941,7 @@ public void testImportExportProcedureNegative() throws Exception
         assertStatementError("38000", cSt);
        
 	//DERBY-2925: need to delete existing files first.
-        SupportFilesSetup.deleteFile("extout/t1.dat");
+        SupportFilesSetup.deleteFile("extinout/t1.dat");
  
         //export query is invalid (syntax error)
         
@@ -2070,6 +2068,8 @@ public void testImportExportProcedureNegative() throws Exception
             + "'extinout/t1.dat' , null, null, 'utf-8', 0) ");
         assertUpdateCount(cSt, 0);
         
+        //  DERBY-2925: need to delete existing files 
+        SupportFilesSetup.deleteFile("extinout/t1.dat");
         rs = st.executeQuery(
             " select * from t1");
         
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/SupportFilesSetup.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/SupportFilesSetup.java
index 9733bf64..05a54ca6 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/SupportFilesSetup.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/SupportFilesSetup.java
@@ -30,6 +30,7 @@
 import java.security.PrivilegedActionException;
 
 import junit.extensions.TestSetup;
+import junit.framework.Assert;
 import junit.framework.Test;
 
 /**
@@ -268,17 +269,20 @@ public Object run() throws MalformedURLException{
     }
 
 
-    public static boolean deleteFile(final String fileName) 
+    public static void deleteFile(final String fileName) 
     {
-        Boolean ret = (Boolean) AccessController.doPrivileged
+        AccessController.doPrivileged
             (new java.security.PrivilegedAction() {
                         
                     public Object run() {
-                        return Boolean.valueOf((new File(fileName)).delete());
+                        File delFile = new File(fileName);
+                        if (!delFile.exists())
+                                return null;
+                         Assert.assertTrue(delFile.delete());
+                         return null;
                     }
                 }
              );
             
-        return ret.booleanValue();
     }
 }
