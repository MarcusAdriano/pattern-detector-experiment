diff --git a/lucene/java/trunk/src/java/org/apache/lucene/index/MultiReader.java b/lucene/java/trunk/src/java/org/apache/lucene/index/MultiReader.java
index 77cb3baf..b800a2c8 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/index/MultiReader.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/index/MultiReader.java
@@ -122,6 +122,7 @@ protected void doUndeleteAll() throws IOException {
     for (int i = 0; i < subReaders.length; i++)
       subReaders[i].undeleteAll();
     hasDeletions = false;
+    numDocs = -1;                                 // invalidate cache
   }
 
   private int readerIndex(int n) {    // find reader for doc n:
diff --git a/lucene/java/trunk/src/test/org/apache/lucene/index/TestMultiReader.java b/lucene/java/trunk/src/test/org/apache/lucene/index/TestMultiReader.java
index 3c5dfeb8..5767349e 100644
--- a/lucene/java/trunk/src/test/org/apache/lucene/index/TestMultiReader.java
+++ b/lucene/java/trunk/src/test/org/apache/lucene/index/TestMultiReader.java
@@ -70,6 +70,18 @@ public void testDocument() throws IOException {
     TestSegmentReader.checkNorms(reader);
   }
   
+  public void testUndeleteAll() throws IOException {
+    sis.read(dir);
+    MultiReader reader = new MultiReader(dir, sis, false, readers);
+    assertTrue(reader != null);
+    assertEquals( 2, reader.numDocs() );
+    reader.delete(0);
+    assertEquals( 1, reader.numDocs() );
+    reader.undeleteAll();
+    assertEquals( 2, reader.numDocs() );
+  }
+        
+  
   public void testTermVectors() {
     MultiReader reader = new MultiReader(dir, sis, false, readers);
     assertTrue(reader != null);
