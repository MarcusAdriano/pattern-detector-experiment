diff --git a/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData.java b/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData.java
index 696a6151..9e6bd9ba 100644
--- a/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData.java
+++ b/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/PerfRunData.java
@@ -48,6 +48,8 @@
  *  <li>Analyzer.
  *  <li>Statistics data which updated during the run.
  * </ul>
+ * Config properties: work.dir=&lt;path to root of docs and index dirs| Default: work&gt;
+ * </ul>
  */
 public class PerfRunData {
 
@@ -117,7 +119,7 @@ public void reinit(boolean eraseIndex) throws Exception {
     
     // directory (default is ram-dir).
     if ("FSDirectory".equals(config.get("directory","RAMDirectory"))) {
-      File workDir = new File("work");
+      File workDir = new File(config.get("work.dir","work"));
       File indexDir = new File(workDir,"index");
       if (eraseIndex && indexDir.exists()) {
         FileUtils.fullyDelete(indexDir);
diff --git a/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker.java b/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker.java
index 051cf10d..adb7dd10 100644
--- a/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker.java
+++ b/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/ReutersDocMaker.java
@@ -31,11 +31,11 @@
 
 /**
  * A DocMaker using the Reuters collection for its input.
- *
- * Config properties:
- * docs.dir=&lt;path to the docs dir| Default: reuters-out&gt;
-
- *
+ * <p>
+ * Config properties:<ul>
+ * <li>work.dir=&lt;path to the root of docs and indexes dirs| Default: work&gt;</li>
+ * <li>docs.dir=&lt;path to the docs dir| Default: reuters-out&gt;</li>
+ * </ul>
  */
 public class ReutersDocMaker extends BasicDocMaker {
 
@@ -50,9 +50,9 @@
    */
   public void setConfig(Config config) {
     super.setConfig(config);
+    File workDir = new File(config.get("work.dir","work"));
     String d = config.get("docs.dir","reuters-out");
-    dataDir = new File(new File("work"),d);
-
+    dataDir = new File(workDir,d);
 
     collectFiles(dataDir,inputFiles);
     if (inputFiles.size()==0) {
diff --git a/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocMaker.java b/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocMaker.java
index 97beebfb..af3c00ea 100644
--- a/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocMaker.java
+++ b/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/TrecDocMaker.java
@@ -36,6 +36,11 @@
 
 /**
  * A DocMaker using the (compressed) Trec collection for its input.
+ * <p>
+ * Config properties:<ul>
+ * <li>work.dir=&lt;path to the root of docs and indexes dirs| Default: work&gt;</li>
+ * <li>docs.dir=&lt;path to the docs dir| Default: trec&gt;</li>
+ * </ul>
  */
 public class TrecDocMaker extends BasicDocMaker {
 
@@ -61,8 +66,9 @@
    */
   public void setConfig(Config config) {
     super.setConfig(config);
+    File workDir = new File(config.get("work.dir","work"));
     String d = config.get("docs.dir","trec");
-    dataDir = new File(new File("work"),d);
+    dataDir = new File(workDir,d);
     collectFiles(dataDir,inputFiles);
     if (inputFiles.size()==0) {
       throw new RuntimeException("No txt files in dataDir: "+dataDir.getAbsolutePath());
diff --git a/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config.java b/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config.java
index 41ede6be..af6f0b16 100644
--- a/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config.java
+++ b/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/Config.java
@@ -29,9 +29,17 @@
 
 /**
  * Perf run configuration properties.
+ * <p>
  * Numeric peroperty containing ":", e.g. "10:100:5" is interpreted 
  * as array of numeric values. It is extracted once, on first use, and 
- * maintain an round number to return the appropriate value.   
+ * maintain a round number to return the appropriate value.
+ * <p>
+ * The config property "work.dir" tells where is the root of 
+ * docs data dirs and indexes dirs. It is set to either of: <ul>
+ * <li>value supplied for it in the alg file;</li>
+ * <li>otherwise, value of System property "benchmark.work.dir";</li>
+ * <li>otherwise, "work".</li>
+ * </ul>
  */
 public class Config {
 
@@ -70,6 +78,11 @@ public Config (Reader algReader) throws IOException {
     this.props = new Properties();
     props.load(new ByteArrayInputStream(sb.toString().getBytes()));
 
+    // make sure work dir is set properly 
+    if (props.get("work.dir")==null) {
+      props.setProperty("work.dir",System.getProperty("benchmark.work.dir","work"));
+    }
+    
     if (Boolean.valueOf(props.getProperty("print.props","true")).booleanValue()) {
       printProps();
     }
