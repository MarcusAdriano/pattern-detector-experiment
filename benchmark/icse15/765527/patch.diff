diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanPrefUser.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanPrefUser.java
index f71037c4..46e6865a 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanPrefUser.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanPrefUser.java
@@ -20,6 +20,7 @@
 import org.apache.mahout.cf.taste.model.Preference;
 import org.apache.mahout.cf.taste.model.User;
 import org.apache.mahout.cf.taste.impl.common.FastSet;
+import org.apache.mahout.cf.taste.impl.common.ArrayIterator;
 
 import java.io.Serializable;
 
@@ -47,24 +48,27 @@ public K getID() {
 
   @Override
   public Preference getPreferenceFor(Object itemID) {
-    return itemIDs.contains(itemID) ?
-        new GenericPreference(this, new GenericItem<String>(itemID.toString()), 1.0) : null;
+    return itemIDs.contains(itemID) ? buildPreference(itemID) : null;
   }
 
-  /**
-   * @throws UnsupportedOperationException
-   */
   @Override
   public Iterable<Preference> getPreferences() {
-    throw new UnsupportedOperationException();
+    return new ArrayIterator<Preference>(getPreferencesAsArray());
   }
 
-  /**
-   * @throws UnsupportedOperationException
-   */
   @Override
   public Preference[] getPreferencesAsArray() {
-    throw new UnsupportedOperationException();
+    Preference[] result = new Preference[itemIDs.size()];
+    int i = 0;
+    for (Object itemID : itemIDs) {
+      result[i] = buildPreference(itemID);
+      i++;
+    }
+    return result;
+  }
+
+  private Preference buildPreference(Object itemID) {
+    return new BooleanPreference(this, new GenericItem<String>(itemID.toString()));
   }
 
   /**
