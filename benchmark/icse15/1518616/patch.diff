diff --git a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/index/DocFieldProcessor.java b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/index/DocFieldProcessor.java
index dc984bde..1c983434 100644
--- a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/index/DocFieldProcessor.java
+++ b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/index/DocFieldProcessor.java
@@ -210,7 +210,10 @@ public void processDocument(FieldInfos.Builder fieldInfos) throws IOException {
           rehash();
         }
       } else {
-        fp.fieldInfo.update(field.fieldType());
+        // need to addOrUpdate so that FieldInfos can update globalFieldNumbers
+        // with the correct DocValue type (LUCENE-5192)
+        FieldInfo fi = fieldInfos.addOrUpdate(fieldName, field.fieldType());
+        assert fi == fp.fieldInfo : "should only have updated an existing FieldInfo instance";
       }
 
       if (thisFieldGen != fp.lastGen) {
diff --git a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/index/FieldInfos.java b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/index/FieldInfos.java
index f8b33f7b..0ca0882e 100644
--- a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/index/FieldInfos.java
+++ b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/index/FieldInfos.java
@@ -288,6 +288,8 @@ private FieldInfo addOrUpdateInternal(String name, int preferredFieldNumber, boo
 
         if (docValues != null) {
           fi.setDocValuesType(docValues);
+          // must also update docValuesType map so it's aware of this field's DocValueType 
+          globalFieldNumbers.docValuesType.put(name, docValues);
         }
 
         if (!fi.omitsNorms() && normType != null) {
diff --git a/lucene/dev/branches/branch_4x/lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing.java b/lucene/dev/branches/branch_4x/lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing.java
index 71d7a4fc..b6f24392 100644
--- a/lucene/dev/branches/branch_4x/lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing.java
+++ b/lucene/dev/branches/branch_4x/lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing.java
@@ -27,9 +27,11 @@
 import org.apache.lucene.document.BinaryDocValuesField;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
+import org.apache.lucene.document.Field.Store;
 import org.apache.lucene.document.NumericDocValuesField;
 import org.apache.lucene.document.SortedDocValuesField;
 import org.apache.lucene.document.SortedSetDocValuesField;
+import org.apache.lucene.document.StringField;
 import org.apache.lucene.document.TextField;
 import org.apache.lucene.search.FieldCache;
 import org.apache.lucene.store.Directory;
@@ -754,4 +756,30 @@ public void testDocsWithField() throws Exception {
     dir.close();
   }
 
+  public void testSameFieldNameForPostingAndDocValue() throws Exception {
+    // LUCENE-5192: FieldInfos.Builder neglected to update
+    // globalFieldNumbers.docValuesType map if the field existed, resulting in
+    // potentially adding the same field with different DV types.
+    Directory dir = newDirectory();
+    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));
+    IndexWriter writer = new IndexWriter(dir, conf);
+    
+    Document doc = new Document();
+    doc.add(new StringField("f", "mock-value", Store.NO));
+    doc.add(new NumericDocValuesField("f", 5));
+    writer.addDocument(doc);
+    writer.commit();
+    
+    doc = new Document();
+    doc.add(new BinaryDocValuesField("f", new BytesRef("mock")));
+    try {
+      writer.addDocument(doc);
+      fail("should not have succeeded to add a field with different DV type than what already exists");
+    } catch (IllegalArgumentException e) {
+      writer.rollback();
+    }
+    
+    dir.close();
+  }
+
 }
