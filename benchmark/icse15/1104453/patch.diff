diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.java
index e4cba764..86cbefa1 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.java
@@ -200,6 +200,7 @@ protected int indexedTermPrefixLength(final BytesRef priorTerm, final BytesRef i
   private class FSTFieldWriter extends FieldWriter {
     private final Builder<Long> fstBuilder;
     private final PositiveIntOutputs fstOutputs;
+    private final long startTermsFilePointer;
 
     final FieldInfo fieldInfo;
     int numIndexTerms;
@@ -220,6 +221,7 @@ public FSTFieldWriter(FieldInfo fieldInfo, long termsFilePointer) throws IOExcep
 
       // Always put empty string in
       fstBuilder.add(new BytesRef(), fstOutputs.get(termsFilePointer));
+      startTermsFilePointer = termsFilePointer;
     }
 
     @Override
@@ -239,6 +241,11 @@ public boolean checkIndexTerm(BytesRef text, TermStats stats) throws IOException
 
     @Override
     public void add(BytesRef text, TermStats stats, long termsFilePointer) throws IOException {
+      if (text.length == 0) {
+        // We already added empty string in ctor
+        assert termsFilePointer == startTermsFilePointer;
+        return;
+      }
       final int lengthSave = text.length;
       text.length = indexedTermPrefixLength(lastTerm, text);
       try {
diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/util/automaton/fst/FST.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/util/automaton/fst/FST.java
index dbce4c01..f39d54c8 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/util/automaton/fst/FST.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/util/automaton/fst/FST.java
@@ -232,9 +232,7 @@ void finish(int startNode) {
 
   void setEmptyOutput(T v) throws IOException {
     if (emptyOutput != null) {
-      if (!emptyOutput.equals(v)) {
         emptyOutput = outputs.merge(emptyOutput, v);
-      }
     } else {
       emptyOutput = v;
     }
diff --git a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.java b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.java
index ac809b58..672faff4 100644
--- a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.java
+++ b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/util/automaton/fst/TestFSTs.java
@@ -540,7 +540,7 @@ private void verifyUnPruned(int inputMode, FST<T> fst) throws IOException {
           Object output = run(fst, term, null);
 
           assertNotNull("term " + inputToString(inputMode, term) + " is not accepted", output);
-          assertEquals(output, pair.output);
+          assertEquals(pair.output, output);
 
           // verify enum's next
           IntsRefFSTEnum.InputOutput<T> t = fstEnum.next();
