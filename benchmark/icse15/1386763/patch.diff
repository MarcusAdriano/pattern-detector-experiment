diff --git a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.java b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.java
index 93ecefea..9da1dddc 100644
--- a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.java
+++ b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.java
@@ -190,6 +190,7 @@ public int docID() {
 
     @Override
     public float score() throws IOException {
+      assert docIdSetIterator.docID() != NO_MORE_DOCS;
       return theScore;
     }
 
diff --git a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/DisjunctionSumScorer.java b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/DisjunctionSumScorer.java
index 148fd153..14d3dc9d 100644
--- a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/DisjunctionSumScorer.java
+++ b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/DisjunctionSumScorer.java
@@ -68,6 +68,7 @@ public DisjunctionSumScorer(Weight weight, List<Scorer> subScorers) throws IOExc
 
   @Override
   public int nextDoc() throws IOException {
+    assert doc != NO_MORE_DOCS;
     while(true) {
       while (subScorers[0].docID() == doc) {
         if (subScorers[0].nextDoc() != NO_MORE_DOCS) {
@@ -91,11 +92,15 @@ public int nextDoc() throws IOException {
   private void afterNext() throws IOException {
     final Scorer sub = subScorers[0];
     doc = sub.docID();
+    if (doc == NO_MORE_DOCS) {
+      nrMatchers = Integer.MAX_VALUE; // stop looping
+    } else {
     score = sub.score();
     nrMatchers = 1;
     countMatches(1);
     countMatches(2);
   }
+  }
   
   // TODO: this currently scores, but so did the previous impl
   // TODO: remove recursion.
