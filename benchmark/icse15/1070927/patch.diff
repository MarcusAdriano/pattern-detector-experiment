diff --git a/db/derby/code/branches/10.5/java/engine/org/apache/derby/impl/sql/compile/StaticMethodCallNode.java b/db/derby/code/branches/10.5/java/engine/org/apache/derby/impl/sql/compile/StaticMethodCallNode.java
index 2c85e2fd..62f0c654 100644
--- a/db/derby/code/branches/10.5/java/engine/org/apache/derby/impl/sql/compile/StaticMethodCallNode.java
+++ b/db/derby/code/branches/10.5/java/engine/org/apache/derby/impl/sql/compile/StaticMethodCallNode.java
@@ -352,6 +352,12 @@ private void optimizeDomainValueConversion() throws StandardException {
 		int		count = methodParms.length;
 		for (int parm = 0; parm < count; parm++)
 		{
+            //
+            // We also skip the optimization if the argument must be cast to a primitive. In this case we need
+            // a runtime check to make sure that the argument is not null. See DERBY-4459.
+            //
+            if ( (methodParms != null) && methodParms[ parm ].mustCastToPrimitive() ) { continue; }
+            
 			if (methodParms[parm] instanceof SQLToJavaValueNode &&
 				((SQLToJavaValueNode)methodParms[parm]).getSQLValueNode() instanceof
 				JavaToSQLValueNode)
diff --git a/db/derby/code/branches/10.5/java/testing/org/apache/derbyTesting/functionTests/tests/lang/RoutineTest.java b/db/derby/code/branches/10.5/java/testing/org/apache/derbyTesting/functionTests/tests/lang/RoutineTest.java
index 2a3d7f29..827b129f 100644
--- a/db/derby/code/branches/10.5/java/testing/org/apache/derbyTesting/functionTests/tests/lang/RoutineTest.java
+++ b/db/derby/code/branches/10.5/java/testing/org/apache/derbyTesting/functionTests/tests/lang/RoutineTest.java
@@ -45,6 +45,8 @@ Licensed to the Apache Software Foundation (ASF) under one
  */
 public class RoutineTest extends BaseJDBCTestCase {
 
+    private static final String CANNOT_STUFF_NULL_INTO_PRIMITIVE = "39004";
+    
     public RoutineTest(String name)
     {
         super(name);
@@ -616,6 +618,29 @@ public void testAggregateArgument() throws SQLException
     	
     }
     
+    /**
+     * Test that we don't get verification errors trying to cram nulls
+     * into primitive args. See DERBY-4459.
+     */
+    public void test_4459() throws Exception
+    {
+    	Statement s = createStatement();
+
+    	s.executeUpdate
+            (
+             "create function getNullInt() returns int language java parameter style java\n" +
+             "external name '" + RoutineTest.class.getName() + ".getNullInt'"
+             );
+    	s.executeUpdate
+            (
+             "create function negateInt( a int ) returns int language java parameter style java\n" +
+             "external name '" + RoutineTest.class.getName() + ".negateInt'"
+             );
+
+        assertStatementError( CANNOT_STUFF_NULL_INTO_PRIMITIVE, s, "values( negateInt( cast( null as int) ) )" );
+        assertStatementError( CANNOT_STUFF_NULL_INTO_PRIMITIVE, s, "values( negateInt( getNullInt() ) )" );
+    }
+    
     /*
     ** Routine implementations called from the tests but do
     *  not use DriverManager so that this test can be used on
@@ -661,5 +686,8 @@ public static int checkCount(int count)
            return count;
        }
 
+    public static int negateInt( int arg ) { return -arg; }
+    public static Integer getNullInt() { return null; }
+    
 }
 
