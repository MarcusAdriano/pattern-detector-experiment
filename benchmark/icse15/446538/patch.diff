diff --git a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DRDAConnThread.java b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DRDAConnThread.java
index ebe2f9c4..53f2fbe7 100644
--- a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DRDAConnThread.java
+++ b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DRDAConnThread.java
@@ -7491,46 +7491,46 @@ private void closeSession()
 	 */
 	private void handleException(Exception e)
 	{
+		try {
+			if (e instanceof DRDAProtocolException) {
+				// protocol error - write error message
+				sendProtocolException((DRDAProtocolException) e);
+			} else {
+				// something unexpected happened
+				sendUnexpectedException(e);
+				server.consoleExceptionPrintTrace(e);
+			}
+		} finally {
+			// always close the session and stop the thread after handling
+			// these exceptions
+			closeSession();
+			close();
+		}
+	}
+	
+	/**
+	 * Notice the client about a protocol error.
+	 *
+	 * @param de <code>DRDAProtocolException</code> to be sent
+	 */
+	private void sendProtocolException(DRDAProtocolException de) {
 		String dbname = null;
-		if (database != null)
+		if (database != null) {
 			dbname = database.dbName;
+		}
 		
-		// protocol error - write error message and close session
-		if (e instanceof DRDAProtocolException)
-		{
-			try
-			{
-				DRDAProtocolException de = (DRDAProtocolException) e;
-				println2Log(dbname,session.drdaID, 
-							e.getMessage());
-				server.consoleExceptionPrintTrace(e);
+		try {
+			println2Log(dbname, session.drdaID, de.getMessage());
+			server.consoleExceptionPrintTrace(de);
 				reader.clearBuffer();
 				de.write(writer);
 				finalizeChain();
-				closeSession();
-				close();
-			}
-			catch (DRDAProtocolException ioe)
-			{
+		} catch (DRDAProtocolException ioe) {
 				// There may be an IO exception in the write.
-				println2Log(dbname,session.drdaID, 
-							e.getMessage());
+			println2Log(dbname, session.drdaID, de.getMessage());
 				server.consoleExceptionPrintTrace(ioe);
-				closeSession();
-				close();
-			}
 		}
-		else
-		{
-			// something unexpected happened so let's kill this thread
-			sendUnexpectedException(e);
-
-			server.consoleExceptionPrintTrace(e);
-			closeSession();
-			close();
 		}
-	}
-	
 
 	/**
 	 * Send unpexpected error to the client
diff --git a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java
index ee127750..93867c8a 100644
--- a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java
+++ b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java
@@ -743,9 +743,14 @@ protected void startNetworkServer() throws Exception
 					// exception), so we need to clean up first.
 
 						// Close and remove sessions on runQueue.
-						for (int i = 0; i < runQueue.size(); i++)
-							((Session)runQueue.get(i)).close();
+						synchronized (runQueue) {
+							for (int i = 0; i < runQueue.size(); i++) {
+								Session s = (Session) runQueue.get(i);
+								s.close();
+								removeFromSessionTable(s.getConnNum());
+							}
 						runQueue.clear();
+						}
 
 						// Close and remove DRDAConnThreads on threadList.
 						for (int i = 0; i < threadList.size(); i++)
