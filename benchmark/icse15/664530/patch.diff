diff --git a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/Session.java b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/Session.java
index 8d1ea42d..a9fea689 100644
--- a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/Session.java
+++ b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/Session.java
@@ -127,8 +127,9 @@ protected void close() throws SQLException
 	 * initialize a server trace for the DRDA protocol
 	 * 
 	 * @param traceDirectory - directory for trace file
-         * @param throwException - true if we should throw an exception if turning on tracing fails.
-         *                         We do this for NetworkServerControl API commands.
+     * @param throwException - true if we should throw an exception if
+     *                         turning on tracing fails.  We do this
+     *                         for NetworkServerControl API commands.
 	 * @throws IOException 
 	 */
 	protected void initTrace(String traceDirectory, boolean throwException)  throws Exception
@@ -142,12 +143,12 @@ protected void initTrace(String traceDirectory, boolean throwException)  throws
 		if (dssTrace == null)
 			dssTrace = new DssTrace();
                 try {
-                    dssTrace.startComBufferTrace (traceFileName);
+            dssTrace.startComBufferTrace(traceFileName);
                     traceOn = true;
-                } catch (Exception e)
-                {   
-                    if (throwException)
+        } catch (Exception e) {   
+            if (throwException) {
                         throw e;
+            }
                     // If there is an error starting tracing for the session,
                     // log to the console and derby.log and do not turn tracing on.
                     // let connection continue.
