diff --git a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/db/compaction/CompactionManager.java b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/db/compaction/CompactionManager.java
index 106f0cf1..1f91b4ce 100644
--- a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/db/compaction/CompactionManager.java
+++ b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/db/compaction/CompactionManager.java
@@ -655,6 +655,8 @@ private void scrubOne(ColumnFamilyStore cfs, SSTableReader sstable) throws IOExc
         final BufferedRandomAccessFile dataFile = BufferedRandomAccessFile.getUncachingReader(sstable.getFilename());
         String indexFilename = sstable.descriptor.filenameFor(Component.PRIMARY_INDEX);
         BufferedRandomAccessFile indexFile = BufferedRandomAccessFile.getUncachingReader(indexFilename);
+        ScrubInfo scrubInfo = new ScrubInfo(dataFile, sstable);
+
         try
         {
             ByteBuffer nextIndexKey = ByteBufferUtil.readWithShortLength(indexFile);
@@ -664,10 +666,16 @@ private void scrubOne(ColumnFamilyStore cfs, SSTableReader sstable) throws IOExc
                 assert firstRowPositionFromIndex == 0 : firstRowPositionFromIndex;
             }
 
-            SSTableWriter writer = maybeCreateWriter(cfs, compactionFileLocation, expectedBloomFilterSize, null, Collections.singletonList(sstable));
-            executor.beginCompaction(new ScrubInfo(dataFile, sstable));
+            SSTableWriter writer = maybeCreateWriter(cfs,
+                                                     compactionFileLocation,
+                                                     expectedBloomFilterSize,
+                                                     null,
+                                                     Collections.singletonList(sstable));
+
             int goodRows = 0, badRows = 0, emptyRows = 0;
 
+            executor.beginCompaction(scrubInfo);
+
             while (!dataFile.isEOF())
             {
                 long rowStart = dataFile.getFilePointer();
@@ -807,6 +815,8 @@ private void scrubOne(ColumnFamilyStore cfs, SSTableReader sstable) throws IOExc
         {
             FileUtils.closeQuietly(dataFile);
             FileUtils.closeQuietly(indexFile);
+
+            executor.finishCompaction(scrubInfo);
         }
     }
 
