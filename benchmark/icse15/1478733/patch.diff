diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/common/distance/CosineDistanceMeasure.java b/mahout/trunk/core/src/main/java/org/apache/mahout/common/distance/CosineDistanceMeasure.java
index 0c51591d..37265eb0 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/common/distance/CosineDistanceMeasure.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/common/distance/CosineDistanceMeasure.java
@@ -65,7 +65,7 @@ public static double distance(double[] p1, double[] p2) {
     
     // correct for zero-vector corner case
     if (denominator == 0 && dotProduct == 0) {
-      return 1;
+      return 0;
     }
     
     return 1.0 - dotProduct / denominator;
@@ -89,7 +89,7 @@ public double distance(Vector v1, Vector v2) {
     
     // correct for zero-vector corner case
     if (denominator == 0 && dotProduct == 0) {
-      return 1;
+      return 0;
     }
     
     return 1.0 - dotProduct / denominator;
@@ -110,7 +110,7 @@ public double distance(double centroidLengthSquare, Vector centroid, Vector v) {
     
     // correct for zero-vector corner case
     if (denominator == 0 && dotProduct == 0) {
-      return 1;
+      return 0;
     }
     
     return 1.0 - dotProduct / denominator;
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/iterator/TestClusterClassifier.java b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/iterator/TestClusterClassifier.java
index 62c5acfd..c802b1ee 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/iterator/TestClusterClassifier.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/iterator/TestClusterClassifier.java
@@ -287,6 +287,6 @@ public void testCosineKlusterClassification() {
     Vector pdf = classifier.classify(new DenseVector(2));
     assertEquals("[0,0]", "[0.333, 0.333, 0.333]", AbstractCluster.formatVector(pdf, null));
     pdf = classifier.classify(new DenseVector(2).assign(2));
-    assertEquals("[2,2]", "[0.545, 0.273, 0.182]", AbstractCluster.formatVector(pdf, null));
+    assertEquals("[2,2]", "[0.429, 0.429, 0.143]", AbstractCluster.formatVector(pdf, null));
   }
 }
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/common/distance/CosineDistanceMeasureTest.java b/mahout/trunk/core/src/test/java/org/apache/mahout/common/distance/CosineDistanceMeasureTest.java
index 50b03f06..574fb721 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/common/distance/CosineDistanceMeasureTest.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/common/distance/CosineDistanceMeasureTest.java
@@ -19,6 +19,7 @@
 
 import org.apache.mahout.common.MahoutTestCase;
 import org.apache.mahout.math.DenseVector;
+import org.apache.mahout.math.SequentialAccessSparseVector;
 import org.apache.mahout.math.Vector;
 import org.junit.Test;
 
@@ -55,7 +56,9 @@ public void testMeasure() {
     assertTrue(distanceMatrix[2][0] > distanceMatrix[2][1]);
     assertTrue(distanceMatrix[2][1] > distanceMatrix[2][2]);
 
-
+    // Two equal vectors (despite them being zero) should have 0 distance.
+    assertEquals(distanceMeasure.distance(new SequentialAccessSparseVector(1),
+        new SequentialAccessSparseVector(1)), 0, EPSILON);
   }
 
 }
