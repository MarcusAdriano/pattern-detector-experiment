diff --git a/lucene/dev/trunk/lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexWriter.java b/lucene/dev/trunk/lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexWriter.java
index d7b6de96..6114e9ff 100644
--- a/lucene/dev/trunk/lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexWriter.java
+++ b/lucene/dev/trunk/lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexWriter.java
@@ -114,14 +114,14 @@ public InstantiatedIndexWriter(InstantiatedIndex index, Analyzer analyzer, boole
    *  MAddDocs_20000 -   7 4000 100 false -  -   1 -  -   20000 -  -   535,8 -  -  37,33 - 309 680 640 -  501 968 896
    * </pre>
    *
-   * @see org.apache.lucene.index.IndexWriter#setMergeFactor(int)
+   * @see org.apache.lucene.index.LogMergePolicy#setMergeFactor(int)
    */
   public void setMergeFactor(int mergeFactor) {
     this.mergeFactor = mergeFactor;
   }
 
   /**
-   * @see org.apache.lucene.index.IndexWriter#getMergeFactor()
+   * @see org.apache.lucene.index.LogMergePolicy#getMergeFactor()
    */
   public int getMergeFactor() {
     return mergeFactor;
diff --git a/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java b/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java
index 1b144b45..5e35643c 100644
--- a/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java
+++ b/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java
@@ -82,7 +82,7 @@
 	private Set<?> excltable = Collections.emptySet();
 	
 	/**
-	 * Builds an analyzer with the default stop words ({@link #BRAZILIAN_STOP_WORDS}).
+	 * Builds an analyzer with the default stop words ({@link #getDefaultStopSet()}).
 	 */
 	public BrazilianAnalyzer(Version matchVersion) {
     this(matchVersion, DefaultSetHolder.DEFAULT_STOP_SET);
diff --git a/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java b/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java
index d5796812..7eafcd2d 100644
--- a/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java
+++ b/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java
@@ -65,7 +65,7 @@
   }
 
   /**
-   * Builds an analyzer which removes words in {@link #STOP_WORDS}.
+   * Builds an analyzer which removes words in {@link #getDefaultStopSet()}.
    */
   public CJKAnalyzer(Version matchVersion) {
     this(matchVersion, DefaultSetHolder.DEFAULT_STOP_SET);
diff --git a/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java b/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java
index 89e58f4c..d23f759a 100644
--- a/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java
+++ b/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java
@@ -86,7 +86,7 @@
   private final Set<?> stemExclusionTable;
 
   /**
-   * Builds an analyzer with the default stop words ({@link #CZECH_STOP_WORDS}).
+   * Builds an analyzer with the default stop words ({@link #getDefaultStopSet()}).
    *
    * @param matchVersion Lucene version to match See
    *          {@link <a href="#version">above</a>}
diff --git a/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java b/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java
index f7a295a9..9aca85cc 100644
--- a/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java
+++ b/lucene/dev/trunk/modules/analysis/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java
@@ -109,7 +109,7 @@
   private final Version matchVersion;
 
   /**
-   * Builds an analyzer with the default stop words ({@link #DUTCH_STOP_WORDS}) 
+   * Builds an analyzer with the default stop words ({@link #getDefaultStopSet()}) 
    * and a few default entries for the stem exclusion table.
    * 
    */
diff --git a/lucene/dev/trunk/modules/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/SubmissionReport.java b/lucene/dev/trunk/modules/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/SubmissionReport.java
index 79e3f0b1..2a02aa7c 100644
--- a/lucene/dev/trunk/modules/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/SubmissionReport.java
+++ b/lucene/dev/trunk/modules/benchmark/src/java/org/apache/lucene/benchmark/quality/utils/SubmissionReport.java
@@ -28,7 +28,7 @@
 /**
  * Create a log ready for submission.
  * Extend this class and override
- * {@link #report(QualityQuery, TopDocs, String, Searcher)}
+ * {@link #report(QualityQuery, TopDocs, String, IndexSearcher)}
  * to create different reports. 
  */
 public class SubmissionReport {
diff --git a/lucene/dev/trunk/solr/src/common/org/apache/solr/common/cloud/SolrZkClient.java b/lucene/dev/trunk/solr/src/common/org/apache/solr/common/cloud/SolrZkClient.java
index 70ff66b7..98a63066 100644
--- a/lucene/dev/trunk/solr/src/common/org/apache/solr/common/cloud/SolrZkClient.java
+++ b/lucene/dev/trunk/solr/src/common/org/apache/solr/common/cloud/SolrZkClient.java
@@ -74,7 +74,6 @@ public SolrZkClient(String zkServerAddress, int zkClientTimeout, int zkClientCon
    * @param zkClientTimeout
    * @param strat
    * @param onReconnect
-   * @param clientConnectTimeout
    * @throws InterruptedException
    * @throws TimeoutException
    * @throws IOException
@@ -164,7 +163,7 @@ public Stat exists(final String path, Watcher watcher)
   
   /**
    * @param path
-   * @return
+   * @return true if path exists
    * @throws KeeperException
    * @throws InterruptedException
    */
@@ -178,7 +177,7 @@ public boolean exists(final String path)
    * @param data
    * @param acl
    * @param createMode
-   * @return
+   * @return path of created node
    * @throws KeeperException
    * @throws InterruptedException
    */
@@ -190,7 +189,7 @@ public String create(final String path, byte data[], List<ACL> acl,
   /**
    * @param path
    * @param watcher
-   * @return
+   * @return children of the node at the path
    * @throws KeeperException
    * @throws InterruptedException
    */
@@ -203,7 +202,7 @@ public String create(final String path, byte data[], List<ACL> acl,
    * @param path
    * @param watcher
    * @param stat
-   * @return
+   * @return node's data
    * @throws KeeperException
    * @throws InterruptedException
    */
@@ -216,7 +215,7 @@ public String create(final String path, byte data[], List<ACL> acl,
    * @param path
    * @param data
    * @param version
-   * @return
+   * @return node's state
    * @throws KeeperException
    * @throws InterruptedException
    */
@@ -229,8 +228,8 @@ public Stat setData(final String path, byte data[], int version)
    * 
    * @param path
    * @param data
-   * @param watcher
-   * @return
+   * @param createMode
+   * @return path of created node
    * @throws KeeperException
    * @throws InterruptedException
    */
diff --git a/lucene/dev/trunk/solr/src/common/org/apache/solr/common/params/FacetParams.java b/lucene/dev/trunk/solr/src/common/org/apache/solr/common/params/FacetParams.java
index e742638f..02aa6310 100644
--- a/lucene/dev/trunk/solr/src/common/org/apache/solr/common/params/FacetParams.java
+++ b/lucene/dev/trunk/solr/src/common/org/apache/solr/common/params/FacetParams.java
@@ -228,7 +228,6 @@
    * String indicating what "other" ranges should be computed for a
    * numerical range facet (multi-value).
    * Can be overriden on a per field basis.
-   * @see FacetNumberOther
    */
   public static final String FACET_RANGE_OTHER = FACET_RANGE + ".other";
   /**
diff --git a/lucene/dev/trunk/solr/src/common/org/apache/solr/common/util/StrUtils.java b/lucene/dev/trunk/solr/src/common/org/apache/solr/common/util/StrUtils.java
index 7848358f..fc2187aa 100644
--- a/lucene/dev/trunk/solr/src/common/org/apache/solr/common/util/StrUtils.java
+++ b/lucene/dev/trunk/solr/src/common/org/apache/solr/common/util/StrUtils.java
@@ -242,7 +242,7 @@ public static boolean parseBool(String s) {
    * {@link NullPointerException} and {@link SolrException} free version of {@link #parseBool(String)}
    * @param s
    * @param def
-   * @return
+   * @return parsed boolean value (or def, if s is null or invalid)
    */
   public static boolean parseBool(String s, boolean def) {
     if( s != null ) {
diff --git a/lucene/dev/trunk/solr/src/java/org/apache/solr/cloud/ZkController.java b/lucene/dev/trunk/solr/src/java/org/apache/solr/cloud/ZkController.java
index 602794e2..45fa0104 100644
--- a/lucene/dev/trunk/solr/src/java/org/apache/solr/cloud/ZkController.java
+++ b/lucene/dev/trunk/solr/src/java/org/apache/solr/cloud/ZkController.java
@@ -186,7 +186,7 @@ public void close() {
   /**
    * @param collection
    * @param fileName
-   * @return
+   * @return true if config file exists
    * @throws KeeperException
    * @throws InterruptedException
    */
@@ -206,7 +206,7 @@ public CloudState getCloudState() {
   /**
    * @param zkConfigName
    * @param fileName
-   * @return
+   * @return config file data (in bytes)
    * @throws KeeperException
    * @throws InterruptedException
    */
@@ -250,7 +250,7 @@ public SolrZkClient getZkClient() {
   }
 
   /**
-   * @return
+   * @return zookeeper server address
    */
   public String getZkServerAddress() {
     return zkServerAddress;
@@ -392,7 +392,7 @@ public String getNodeName() {
 
   /**
    * @param path
-   * @return
+   * @return true if the path exists
    * @throws KeeperException
    * @throws InterruptedException
    */
@@ -403,7 +403,7 @@ public boolean pathExists(String path) throws KeeperException,
 
   /**
    * @param collection
-   * @return
+   * @return config value
    * @throws KeeperException
    * @throws InterruptedException
    * @throws IOException 
diff --git a/lucene/dev/trunk/solr/src/java/org/apache/solr/handler/RequestHandlerUtils.java b/lucene/dev/trunk/solr/src/java/org/apache/solr/handler/RequestHandlerUtils.java
index 34eb84ed..d7d85767 100644
--- a/lucene/dev/trunk/solr/src/java/org/apache/solr/handler/RequestHandlerUtils.java
+++ b/lucene/dev/trunk/solr/src/java/org/apache/solr/handler/RequestHandlerUtils.java
@@ -49,7 +49,7 @@ public static void addExperimentalFormatWarning( SolrQueryResponse rsp )
    * Check the request parameters and decide if it should commit or optimize.
    * If it does, it will check parameters for "waitFlush" and "waitSearcher"
    * 
-   * @deprecated Use {@link #handleCommit(UpdateRequestProcessor,SolrParams,boolean)}
+   * @deprecated Use {@link #handleCommit(SolrQueryRequest,UpdateRequestProcessor,SolrParams,boolean)}
    *
    * @since solr 1.2
    */
diff --git a/lucene/dev/trunk/solr/src/java/org/apache/solr/response/BaseResponseWriter.java b/lucene/dev/trunk/solr/src/java/org/apache/solr/response/BaseResponseWriter.java
index b6360481..d86de764 100644
--- a/lucene/dev/trunk/solr/src/java/org/apache/solr/response/BaseResponseWriter.java
+++ b/lucene/dev/trunk/solr/src/java/org/apache/solr/response/BaseResponseWriter.java
@@ -302,12 +302,12 @@ public void writeOther(String name, Object other) throws IOException { }
      * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}
      * so they can be processed as a whole, rather than on a doc-by-doc basis.
      * If set to false, this method calls
-     * {@link #writeAllDocs(DocListInfo, List)}, else if set to true, then this
+     * {@link #writeAllDocs(BaseResponseWriter.DocListInfo, List)}, else if set to true, then this
      * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc
      * basis. one
      * 
      * @return True to force {@link #writeDoc(SolrDocument)} to be called, False
-     *         to force {@link #writeAllDocs(DocListInfo, List)} to be called.
+     *         to force {@link #writeAllDocs(BaseResponseWriter.DocListInfo, List)} to be called.
      */
     public boolean isStreamingDocs() { return true; }
 
diff --git a/lucene/dev/trunk/solr/src/java/org/apache/solr/schema/IndexSchema.java b/lucene/dev/trunk/solr/src/java/org/apache/solr/schema/IndexSchema.java
index b5727233..079ddcd4 100644
--- a/lucene/dev/trunk/solr/src/java/org/apache/solr/schema/IndexSchema.java
+++ b/lucene/dev/trunk/solr/src/java/org/apache/solr/schema/IndexSchema.java
@@ -99,7 +99,7 @@
    * If the is stream is null, the resource loader will load the schema resource by name.
    * @see SolrResourceLoader#openSchema
    * By default, this follows the normal config path directory searching rules.
-   * @see Config#openResource
+   * @see SolrResourceLoader#openResource
    */
   public IndexSchema(SolrConfig solrConfig, String name, InputStream is) {
     this.solrConfig = solrConfig;
diff --git a/lucene/dev/trunk/solr/src/java/org/apache/solr/schema/SortableLongField.java b/lucene/dev/trunk/solr/src/java/org/apache/solr/schema/SortableLongField.java
index f68d5e85..a3501d15 100644
--- a/lucene/dev/trunk/solr/src/java/org/apache/solr/schema/SortableLongField.java
+++ b/lucene/dev/trunk/solr/src/java/org/apache/solr/schema/SortableLongField.java
@@ -38,7 +38,7 @@
 /**
  * @version $Id$
  * 
- * @deprecated use {@link LongField} or {@link TrieLongtField} - will be removed in 5.x
+ * @deprecated use {@link LongField} or {@link TrieLongField} - will be removed in 5.x
  */
 @Deprecated
 public class SortableLongField extends FieldType {
diff --git a/lucene/dev/trunk/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java b/lucene/dev/trunk/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java
index 06eaa741..c69102ac 100644
--- a/lucene/dev/trunk/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java
+++ b/lucene/dev/trunk/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java
@@ -357,7 +357,7 @@ public QueryResult search(QueryResult qr, QueryCommand cmd) throws IOException {
 
   /**
    * @return the indexDir on which this searcher is opened
-   * @see org.apache.solr.search.SolrIndexSearcher#SolrIndexSearcher(org.apache.solr.core.SolrCore, org.apache.solr.schema.IndexSchema, String, String, boolean)
+   * @see #SolrIndexSearcher(SolrCore, IndexSchema, String, Directory, boolean)
    */
   public String getIndexDir() {
     return indexDir;
diff --git a/lucene/dev/trunk/solr/src/java/org/apache/solr/search/function/ValueSource.java b/lucene/dev/trunk/solr/src/java/org/apache/solr/search/function/ValueSource.java
index ffcdac97..8f62760f 100644
--- a/lucene/dev/trunk/solr/src/java/org/apache/solr/search/function/ValueSource.java
+++ b/lucene/dev/trunk/solr/src/java/org/apache/solr/search/function/ValueSource.java
@@ -92,7 +92,7 @@ public static Map newContext(IndexSearcher searcher) {
    * EXPERIMENTAL: This method is subject to change.
    * <br>WARNING: Sorted function queries are not currently weighted.
    * <p>
-   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, AtomicReaderContext)}
+   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}
    * to populate the SortField.
    *
    * @param reverse true if this is a reverse sort.
diff --git a/lucene/dev/trunk/solr/src/solrj/org/apache/solr/client/solrj/impl/LBHttpSolrServer.java b/lucene/dev/trunk/solr/src/solrj/org/apache/solr/client/solrj/impl/LBHttpSolrServer.java
index a12a9397..6922223f 100644
--- a/lucene/dev/trunk/solr/src/solrj/org/apache/solr/client/solrj/impl/LBHttpSolrServer.java
+++ b/lucene/dev/trunk/solr/src/solrj/org/apache/solr/client/solrj/impl/LBHttpSolrServer.java
@@ -150,7 +150,7 @@ public int getNumDeadServersToTry() {
       return numDeadServersToTry;
     }
 
-    /** @return The number of dead servers to try if there are no live servers left.
+    /** @param numDeadServersToTry The number of dead servers to try if there are no live servers left.
      * Defaults to the number of servers in this request. */
     public void setNumDeadServersToTry(int numDeadServersToTry) {
       this.numDeadServersToTry = numDeadServersToTry;
diff --git a/lucene/dev/trunk/solr/src/solrj/org/apache/solr/client/solrj/response/SpellCheckResponse.java b/lucene/dev/trunk/solr/src/solrj/org/apache/solr/client/solrj/response/SpellCheckResponse.java
index e4001ec1..c5bb419e 100644
--- a/lucene/dev/trunk/solr/src/solrj/org/apache/solr/client/solrj/response/SpellCheckResponse.java
+++ b/lucene/dev/trunk/solr/src/solrj/org/apache/solr/client/solrj/response/SpellCheckResponse.java
@@ -115,7 +115,7 @@ public String getFirstSuggestion(String token) {
    * <p>
    *  Return the first collated query string.  For convenience and backwards-compatibility.  Use getCollatedResults() for full data.
    * </p>
-   * @return
+   * @return first collated query string
    */
   public String getCollatedResult() {
     return collations==null || collations.size()==0 ? null : collations.get(0).collationQueryString;
@@ -126,7 +126,7 @@ public String getCollatedResult() {
    *  Return all collations.  
    *  Will include # of hits and misspelling-to-correction details if "spellcheck.collateExtendedResults was true.
    * </p>
-   * @return
+   * @return all collations
    */
   public List<Collation> getCollatedResults() {
   	return collations;
