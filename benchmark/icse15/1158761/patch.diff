diff --git a/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/SequenceFileDumper.java b/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/SequenceFileDumper.java
index 01901e18..aa3e9735 100644
--- a/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/SequenceFileDumper.java
+++ b/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/SequenceFileDumper.java
@@ -88,9 +88,12 @@ public static void main(String[] args) throws Exception {
         Configuration conf = new Configuration();
 
         Writer writer;
+        boolean shouldClose;
         if (cmdLine.hasOption(outputOpt)) {
+          shouldClose = true;
           writer = Files.newWriter(new File(cmdLine.getValue(outputOpt).toString()), Charsets.UTF_8);
         } else {
+          shouldClose = false;
           writer = new OutputStreamWriter(System.out);
         }
         try {
@@ -127,10 +130,15 @@ public static void main(String[] args) throws Exception {
             }
             writer.append("Count: ").append(String.valueOf(count)).append('\n');
           }
+
+          writer.flush();
+
         } finally {
+          if (shouldClose) {
           Closeables.closeQuietly(writer);
         }
       }
+      }
 
     } catch (OptionException e) {
       log.error("Exception", e);
diff --git a/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/VectorDumper.java b/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/VectorDumper.java
index bfe56c78..da026ee8 100644
--- a/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/VectorDumper.java
+++ b/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/VectorDumper.java
@@ -135,9 +135,12 @@ public static void main(String[] args) throws Exception {
         boolean namesAsComments = cmdLine.hasOption(namesAsCommentsOpt);
         boolean transposeKeyValue = cmdLine.hasOption(vectorAsKeyOpt);
         Writer writer;
+        boolean shouldClose;
         if (cmdLine.hasOption(outputOpt)) {
+          shouldClose = true;
           writer = Files.newWriter(new File(cmdLine.getValue(outputOpt).toString()), Charsets.UTF_8);
         } else {
+          shouldClose = false;
           writer = new OutputStreamWriter(System.out);
         }
         try {
@@ -194,9 +197,14 @@ public static void main(String[] args) throws Exception {
             }
             count++;
           }
+
+          writer.flush();
+
         } finally {
+          if (shouldClose) {
           Closeables.closeQuietly(writer);
         }
+        }
 
       }
 
