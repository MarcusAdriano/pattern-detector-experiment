diff --git a/lucene/dev/branches/lucene_solr_4_7/solr/core/src/java/org/apache/solr/cloud/ZkController.java b/lucene/dev/branches/lucene_solr_4_7/solr/core/src/java/org/apache/solr/cloud/ZkController.java
index b2e4a037..f16b6944 100644
--- a/lucene/dev/branches/lucene_solr_4_7/solr/core/src/java/org/apache/solr/cloud/ZkController.java
+++ b/lucene/dev/branches/lucene_solr_4_7/solr/core/src/java/org/apache/solr/cloud/ZkController.java
@@ -1053,7 +1053,7 @@ private boolean needsToBeAssignedShardId(final CoreDescriptor desc,
 
     final CloudDescriptor cloudDesc = desc.getCloudDescriptor();
     
-    final String shardId = state.getShardId(getBaseUrl(), desc.getName());
+    final String shardId = state.getShardId(getNodeName(), desc.getName());
 
     if (shardId != null) {
       cloudDesc.setShardId(shardId);
@@ -1260,13 +1260,13 @@ private void waitForCoreNodeName(CoreDescriptor descriptor) {
           for (Replica replica : slice.getReplicas()) {
             // TODO: for really large clusters, we could 'index' on this
             
-            String baseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);
+            String nodeName = replica.getStr(ZkStateReader.NODE_NAME_PROP);
             String core = replica.getStr(ZkStateReader.CORE_NAME_PROP);
             
-            String msgBaseUrl = getBaseUrl();
+            String msgNodeName = getNodeName();
             String msgCore = descriptor.getName();
 
-            if (baseUrl.equals(msgBaseUrl) && core.equals(msgCore)) {
+            if (nodeName.equals(msgNodeName) && core.equals(msgCore)) {
               descriptor.getCloudDescriptor()
                   .setCoreNodeName(replica.getName());
               return;
@@ -1286,7 +1286,7 @@ private void waitForShardId(CoreDescriptor cd) {
     log.info("waiting to find shard id in clusterstate for " + cd.getName());
     int retryCount = 320;
     while (retryCount-- > 0) {
-      final String shardId = zkStateReader.getClusterState().getShardId(getBaseUrl(), cd.getName());
+      final String shardId = zkStateReader.getClusterState().getShardId(getNodeName(), cd.getName());
       if (shardId != null) {
         cd.getCloudDescriptor().setShardId(shardId);
         return;
diff --git a/lucene/dev/branches/lucene_solr_4_7/solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState.java b/lucene/dev/branches/lucene_solr_4_7/solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState.java
index a84afe99..a94a559d 100644
--- a/lucene/dev/branches/lucene_solr_4_7/solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState.java
+++ b/lucene/dev/branches/lucene_solr_4_7/solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState.java
@@ -201,15 +201,15 @@ public DocCollection getCollection(String collection) {
     return Collections.unmodifiableSet(liveNodes);
   }
 
-  public String getShardId(String baseUrl, String coreName) {
+  public String getShardId(String nodeName, String coreName) {
     // System.out.println("###### getShardId(" + baseUrl + "," + coreName + ") in " + collectionStates);
     for (DocCollection coll : collectionStates.values()) {
       for (Slice slice : coll.getSlices()) {
         for (Replica replica : slice.getReplicas()) {
           // TODO: for really large clusters, we could 'index' on this
-          String rbaseUrl = replica.getStr(ZkStateReader.BASE_URL_PROP);
+          String rnodeName = replica.getStr(ZkStateReader.NODE_NAME_PROP);
           String rcore = replica.getStr(ZkStateReader.CORE_NAME_PROP);
-          if (baseUrl.equals(rbaseUrl) && coreName.equals(rcore)) {
+          if (nodeName.equals(rnodeName) && coreName.equals(rcore)) {
             return slice.getName();
           }
         }
