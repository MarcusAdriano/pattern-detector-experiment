diff --git a/lucene/solr/branches/cloud/src/common/org/apache/solr/common/cloud/ZkStateReader.java b/lucene/solr/branches/cloud/src/common/org/apache/solr/common/cloud/ZkStateReader.java
index a408d8e6..e9b7b5b8 100644
--- a/lucene/solr/branches/cloud/src/common/org/apache/solr/common/cloud/ZkStateReader.java
+++ b/lucene/solr/branches/cloud/src/common/org/apache/solr/common/cloud/ZkStateReader.java
@@ -40,6 +40,8 @@
   private static Logger log = LoggerFactory.getLogger(ZkStateReader.class);
   
   public static final String COLLECTIONS_ZKNODE = "/collections";
+  public static final String URL_PROP = "url";
+  public static final String NODE_NAME = "node_name";
   public static final String SHARDS_ZKNODE = "/shards";
   public static final String LIVE_NODES_ZKNODE = "/live_nodes";
   
diff --git a/lucene/solr/branches/cloud/src/java/org/apache/solr/cloud/ZkController.java b/lucene/solr/branches/cloud/src/java/org/apache/solr/cloud/ZkController.java
index e0ca3b73..4c69f317 100644
--- a/lucene/solr/branches/cloud/src/java/org/apache/solr/cloud/ZkController.java
+++ b/lucene/solr/branches/cloud/src/java/org/apache/solr/cloud/ZkController.java
@@ -66,8 +66,6 @@
 
   static final String CONFIGS_ZKNODE = "/configs";
 
-  public static final String URL_PROP = "url";
-  public static final String NODE_NAME = "node_name";
   public final static String COLLECTION_PARAM_PREFIX="collection.";
   public final static String CONFIGNAME_PROP="configName";
 
@@ -449,9 +447,9 @@ public void register(String coreName, CloudDescriptor cloudDesc, boolean forcePr
     }
 
     ZkNodeProps props = new ZkNodeProps();
-    props.put(URL_PROP, shardUrl);
+    props.put(ZkStateReader.URL_PROP, shardUrl);
     
-    props.put(NODE_NAME, getNodeName());
+    props.put(ZkStateReader.NODE_NAME, getNodeName());
 
     byte[] bytes = props.store();
     
diff --git a/lucene/solr/branches/cloud/src/java/org/apache/solr/handler/component/QueryComponent.java b/lucene/solr/branches/cloud/src/java/org/apache/solr/handler/component/QueryComponent.java
index c27a7a12..d79ed0f3 100644
--- a/lucene/solr/branches/cloud/src/java/org/apache/solr/handler/component/QueryComponent.java
+++ b/lucene/solr/branches/cloud/src/java/org/apache/solr/handler/component/QueryComponent.java
@@ -30,6 +30,7 @@
 import org.apache.solr.common.cloud.CloudState;
 import org.apache.solr.common.cloud.Slice;
 import org.apache.solr.common.cloud.ZkNodeProps;
+import org.apache.solr.common.cloud.ZkStateReader;
 import org.apache.solr.common.params.CommonParams;
 import org.apache.solr.common.params.ModifiableSolrParams;
 import org.apache.solr.common.params.ShardParams;
@@ -203,7 +204,7 @@ void checkDistributed(ResponseBuilder rb) {
             StringBuilder sliceShardsStr = new StringBuilder();
             boolean first = true;
             for (ZkNodeProps nodeProps : sliceShards.values()) {
-              if (!liveNodes.contains(nodeProps.get(ZkController.NODE_NAME)))
+              if (!liveNodes.contains(nodeProps.get(ZkStateReader.NODE_NAME)))
                 continue;
               if (first) {
                 first = false;
diff --git a/lucene/solr/branches/cloud/src/solrj/org/apache/solr/client/solrj/impl/CloudSolrServer.java b/lucene/solr/branches/cloud/src/solrj/org/apache/solr/client/solrj/impl/CloudSolrServer.java
index 6661e2b5..60955330 100644
--- a/lucene/solr/branches/cloud/src/solrj/org/apache/solr/client/solrj/impl/CloudSolrServer.java
+++ b/lucene/solr/branches/cloud/src/solrj/org/apache/solr/client/solrj/impl/CloudSolrServer.java
@@ -14,7 +14,6 @@
 import org.apache.solr.client.solrj.SolrRequest;
 import org.apache.solr.client.solrj.SolrServer;
 import org.apache.solr.client.solrj.SolrServerException;
-import org.apache.solr.cloud.ZkController;
 import org.apache.solr.common.SolrException;
 import org.apache.solr.common.cloud.CloudState;
 import org.apache.solr.common.cloud.Slice;
@@ -120,10 +119,10 @@ public void connect() {
     List<String> urlList = new ArrayList<String>();
     for (Slice slice : slices.values()) {
       for (ZkNodeProps nodeProps : slice.getShards().values()) {
-        String node = nodeProps.get(ZkController.NODE_NAME);
+        String node = nodeProps.get(ZkStateReader.NODE_NAME);
         if (!liveNodes.contains(node)) continue;
         if (nodes.put(node, nodeProps) == null) {
-          String url = nodeProps.get(ZkController.URL_PROP);
+          String url = nodeProps.get(ZkStateReader.URL_PROP);
           urlList.add(url);
         }
       }
diff --git a/lucene/solr/branches/cloud/src/test/org/apache/solr/cloud/ZkControllerTest.java b/lucene/solr/branches/cloud/src/test/org/apache/solr/cloud/ZkControllerTest.java
index fd436ce3..4fffcbbf 100644
--- a/lucene/solr/branches/cloud/src/test/org/apache/solr/cloud/ZkControllerTest.java
+++ b/lucene/solr/branches/cloud/src/test/org/apache/solr/cloud/ZkControllerTest.java
@@ -103,16 +103,16 @@ public void testReadShards() throws Exception {
         assertNotNull(shards.get(SHARD3));
 
         ZkNodeProps props = shards.get(SHARD1);
-        assertEquals(URL1, props.get(ZkController.URL_PROP));
-        assertEquals(TEST_NODE_NAME, props.get(ZkController.NODE_NAME));
+        assertEquals(URL1, props.get(ZkStateReader.URL_PROP));
+        assertEquals(TEST_NODE_NAME, props.get(ZkStateReader.NODE_NAME));
 
         props = shards.get(SHARD2);
-        assertEquals(URL2, props.get(ZkController.URL_PROP));
-        assertEquals(TEST_NODE_NAME, props.get(ZkController.NODE_NAME));
+        assertEquals(URL2, props.get(ZkStateReader.URL_PROP));
+        assertEquals(TEST_NODE_NAME, props.get(ZkStateReader.NODE_NAME));
 
         props = shards.get(SHARD3);
-        assertEquals(URL3, props.get(ZkController.URL_PROP));
-        assertEquals(TEST_NODE_NAME, props.get(ZkController.NODE_NAME));
+        assertEquals(URL3, props.get(ZkStateReader.URL_PROP));
+        assertEquals(TEST_NODE_NAME, props.get(ZkStateReader.NODE_NAME));
 
       }
 
@@ -202,8 +202,8 @@ private void addShardToZk(SolrZkClient zkClient, String shardsPath,
       KeeperException, InterruptedException {
 
     ZkNodeProps props = new ZkNodeProps();
-    props.put(ZkController.URL_PROP, url);
-    props.put(ZkController.NODE_NAME, TEST_NODE_NAME);
+    props.put(ZkStateReader.URL_PROP, url);
+    props.put(ZkStateReader.NODE_NAME, TEST_NODE_NAME);
     byte[] bytes = props.store();
 
     zkClient
