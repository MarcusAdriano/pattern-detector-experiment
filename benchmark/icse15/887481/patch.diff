diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/dht/RandomPartitioner.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/dht/RandomPartitioner.java
index 9bd1b246..796d1ca6 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/dht/RandomPartitioner.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/dht/RandomPartitioner.java
@@ -39,9 +39,6 @@
 
     private static final String DELIMITER = ":";
     
-    //to avoid having to create the pattern on every String.split
-    private Pattern diskDelimiter = Pattern.compile(DELIMITER);
-
     private static final Comparator<DecoratedKey<BigIntegerToken>> comparator =
         new Comparator<DecoratedKey<BigIntegerToken>>() {
         public int compare(DecoratedKey<BigIntegerToken> o1, DecoratedKey<BigIntegerToken> o2)
@@ -64,9 +61,11 @@ public int compare(DecoratedKey<BigIntegerToken> o1, DecoratedKey<BigIntegerToke
     
     public DecoratedKey<BigIntegerToken> convertFromDiskFormat(String key)
     {
-        String[] parts = diskDelimiter.split(key, 2);
-        assert parts.length == 2;
-        return new DecoratedKey<BigIntegerToken>(new BigIntegerToken(parts[0]), parts[1]);
+        int splitPoint = key.indexOf(DELIMITER);
+        String first = key.substring(0, splitPoint);
+        String second = key.substring(splitPoint+1);
+
+        return new DecoratedKey<BigIntegerToken>(new BigIntegerToken(first), second);
     }
 
     public String convertToDiskFormat(DecoratedKey<BigIntegerToken> key)
