diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java
index 2a4338b9..b5b750d8 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/DatabaseMetaDataTest.java
@@ -208,11 +208,9 @@ public void testDetermineFeatureSupport() throws SQLException
         assertTrue(dmd.supportsAlterTableWithAddColumn());
         assertTrue(dmd.supportsAlterTableWithDropColumn());
         
-        // Bug DERBY-2243 - return value is indicating support
-        // level of the SQL engine, so should be consistent.
-        if (usingEmbedded())
-            assertFalse(dmd.supportsANSI92EntryLevelSQL());
-        else
+	/* DERBY-2243 Derby does support ANSI 92 standards
+	* and this behaviour is now consistant across drivers
+	*/
             assertTrue(dmd.supportsANSI92EntryLevelSQL());
               
         assertFalse(dmd.supportsANSI92FullSQL());
@@ -243,8 +241,10 @@ public void testDetermineFeatureSupport() throws SQLException
         assertFalse(dmd.supportsDataManipulationTransactionsOnly());
         assertTrue(dmd.supportsDifferentTableCorrelationNames());
         
-        // Bug DERBY-2244, order by with expressions was added by DERBY-134
-        assertFalse(dmd.supportsExpressionsInOrderBy());
+	/* DERBY-2244 Derby does support Order By clause
+	* thus the changing the assert condition to TRUE
+	*/
+	assertTrue(dmd.supportsExpressionsInOrderBy());
         
         assertFalse(dmd.supportsExtendedSQLGrammar());
         assertFalse(dmd.supportsFullOuterJoins());
