diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/CallableStatement.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/CallableStatement.java
index 7b0fbf35..3af45121 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/CallableStatement.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/CallableStatement.java
@@ -1185,13 +1185,22 @@ public void completeExecuteCall(Sqlca sqlca, Cursor singletonParams) // no resul
         if ( parameterMetaData_ == null ) { return; }
 
         int     cursorParamCount = singletonParams.columns_;
-        try {
+        
             for ( int i = 0; i < cursorParamCount; i++ )
             {
                 if ( parameterMetaData_.sqlxParmmode_[ i ] == java.sql.ParameterMetaData.parameterModeInOut )
                 {
                     int jdbcParamNumber = i + 1;
-                    Object  returnArg = singletonParams.isNull_[ i ] ? null : singletonParams.getObject( jdbcParamNumber );
+                Object  returnArg;
+                
+                try {
+                    returnArg = singletonParams.isNull_[ i ] ? null : singletonParams.getObject( jdbcParamNumber );
+                } catch (SqlException se)
+                {
+                    IllegalArgumentException iae = new IllegalArgumentException( se.getMessage() );
+                    iae.initCause( se );
+                    throw iae;
+                }
 
                     //
                     // special case to coerce Integer to Short for SMALLINT
@@ -1205,12 +1214,8 @@ public void completeExecuteCall(Sqlca sqlca, Cursor singletonParams) // no resul
                     }
                     
                     setInput( jdbcParamNumber, returnArg );
-                }
-            }
-        } catch (Exception se)
-        {
-            throw new IllegalArgumentException( se.getMessage() );
-        }
+            }   // end if INOUT arg
+        }       // end loop through args
     }
 
     
