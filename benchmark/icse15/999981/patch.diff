diff --git a/incubator/aries/trunk/samples/blog/blog-biz/src/main/java/org/apache/aries/samples/blog/biz/BloggingServiceImpl.java b/incubator/aries/trunk/samples/blog/blog-biz/src/main/java/org/apache/aries/samples/blog/biz/BloggingServiceImpl.java
index 500111d2..82117f7e 100644
--- a/incubator/aries/trunk/samples/blog/blog-biz/src/main/java/org/apache/aries/samples/blog/biz/BloggingServiceImpl.java
+++ b/incubator/aries/trunk/samples/blog/blog-biz/src/main/java/org/apache/aries/samples/blog/biz/BloggingServiceImpl.java
@@ -20,6 +20,7 @@
 
 import java.text.ParseException;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.List;
 
 import org.apache.aries.samples.blog.api.BlogAuthor;
@@ -64,7 +65,8 @@ public void createBlogAuthor(String email, String nickName, String name,
 			String bio, String dob) {
 		try {
 			blogAuthorManager.createAuthor(email, dob, name, nickName, bio);
-		} catch (ParseException e) {
+        }
+        catch (ParseException e) {
 			// TODO Auto-generated catch block
 			e.printStackTrace();
 		}
@@ -74,7 +76,8 @@ public void updateBlogAuthor(String email, String nickName, String name,
 			String bio, String dob) {
 		try {
 			blogAuthorManager.updateAuthor(email, dob, name, nickName, bio);
-		} catch (ParseException e) {
+        }
+        catch (ParseException e) {
 			// TODO Auto-generated catch block
 			e.printStackTrace();
 		}
@@ -105,23 +108,33 @@ public void createBlogEntry(String email, String title, String blogText,
 	}
 
 	public void createBlogComment(String comment, String authorEmail, long id) {
+        if (blogCommentManager != null) {
 		blogCommentManager.createComment(comment, authorEmail, id);
 	}
+    }
 
 	public void deleteBlogComment(BlogComment comment) {
+        if (blogCommentManager != null) {
 		blogCommentManager.deleteComment(comment.getId());
 	}
+    }
 
 	public List<? extends BlogComment> getCommentsForEntry(BlogEntry entry) {
+        if (blogCommentManager != null) {
 		return blogCommentManager.getCommentsForPost(entry.getId());
 	}
+        return Collections.<BlogComment>emptyList();
+    }
 
 	public BlogEntry getBlogEntry(long id) {
 		return blogEntryManager.getBlogPost(id);
 	}
 	
 	public boolean isCommentingAvailable() {
+        if (blogCommentManager != null) {
 		return blogCommentManager.isCommentingAvailable();
+        }
+        return false;
 
 	}
 }
