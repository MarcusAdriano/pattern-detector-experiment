diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/StaticMethodCallNode.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/StaticMethodCallNode.java
index e33b8b76..46202856 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/StaticMethodCallNode.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/StaticMethodCallNode.java
@@ -512,9 +512,9 @@ private void resolveRoutine(FromList fromList, SubqueryList subqueryList, Vector
 
 			AliasDescriptor proc = (AliasDescriptor) list.get(i);
 
-			RoutineAliasInfo routineInfo = (RoutineAliasInfo) proc.getAliasInfo();
-			int parameterCount = routineInfo.getParameterCount();
-            boolean hasVarargs = routineInfo.hasVarargs();
+			RoutineAliasInfo rai = (RoutineAliasInfo) proc.getAliasInfo();
+			int parameterCount = rai.getParameterCount();
+            boolean hasVarargs = rai.hasVarargs();
 
             if ( hasVarargs )
             {
@@ -528,10 +528,10 @@ else if (parameterCount != methodParms.length)
 			// pre-form the method signature. If it is a dynamic result set procedure
 			// then we need to add in the ResultSet array
 
-			TypeDescriptor[] parameterTypes = routineInfo.getParameterTypes();
+			TypeDescriptor[] parameterTypes = rai.getParameterTypes();
 
 			int sigParameterCount = parameterCount;
-			if (routineInfo.getMaxDynamicResultSets() > 0)
+			if (rai.getMaxDynamicResultSets() > 0)
             { sigParameterCount++; }
 
 			signature = new JSQLType[sigParameterCount];
@@ -547,7 +547,7 @@ else if (parameterCount != methodParms.length)
 
 
 				// if it's an OUT or INOUT parameter we need an array.
-				int parameterMode = routineInfo.getParameterModes()[ getRoutineArgIdx( routineInfo, p ) ];
+				int parameterMode = rai.getParameterModes()[ getRoutineArgIdx( rai, p ) ];
 
 				if (parameterMode != JDBC30Translation.PARAMETER_MODE_IN) {
 
@@ -609,6 +609,7 @@ else if (parameterCount != methodParms.length)
                         coerceMethodParameter
                             (
                              fromList, subqueryList, aggregateVector,
+                             rai,
                              methodParms.length,
                              paramdtd, parameterTypeId, parameterMode,
                              idx
@@ -620,6 +621,7 @@ else if (parameterCount != methodParms.length)
                     coerceMethodParameter
                         (
                          fromList, subqueryList, aggregateVector,
+                         rai,
                          methodParms.length,
                          paramdtd, parameterTypeId, parameterMode,
                          p
@@ -641,7 +643,7 @@ else if (parameterCount != methodParms.length)
 
 			}
 
-			this.routineInfo = routineInfo;
+			this.routineInfo = rai;
 			ad = proc;
 
 			// If a procedure is in the system schema and defined as executing
@@ -676,6 +678,7 @@ else if (parameterCount != methodParms.length)
          FromList fromList,
          SubqueryList subqueryList,
          Vector aggregateVector, 
+         RoutineAliasInfo rai,
          int    parameterCount, // number of declared routine args
          DataTypeDescriptor paramdtd,   // declared type of routine arg
          TypeId parameterTypeId,    // declared type id of routine arg
@@ -703,7 +706,7 @@ else if (parameterCount != methodParms.length)
                     (
                      SQLState.LANG_DB2_PARAMETER_NEEDS_MARKER,
                      RoutineAliasInfo.parameterMode(parameterMode),
-                     routineInfo.getParameterNames()[p]
+                     rai.getParameterNames()[p]
                      );
             }
             isParameterMarker = false;
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/VarargsTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/VarargsTest.java
index 1aa34b76..dbaaf342 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/VarargsTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/VarargsTest.java
@@ -54,6 +54,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
     private static  final   String  BAD_TIME_FORMAT = "22007";
     private static  final   String  BAD_BOOLEAN_FORMAT = "22018";
     private static  final   String  NEEDS_DJRS_STYLE = "42ZB2";
+    private static  final   String  NEEDS_PARAMETER_MARKER = "42886";
 
     ///////////////////////////////////////////////////////////////////////////////////
     //
@@ -1157,6 +1158,28 @@ public void test_06_tableFunctions() throws Exception
 
     }
 
+    /**
+     * <p>
+     * Test for NPE reported on DERBY-6047.
+     * </p>
+     */
+    public void test_07_6047() throws Exception
+    {
+        Connection conn = getConnection();
+
+        goodStatement
+            ( conn,
+              "create procedure PROC_6047( inout x int )\n" +
+              "parameter style java modifies sql data language java\n" +
+              "external name 'DUMMY.PROC_6047'\n"
+              );
+
+        expectCompilationError
+            ( NEEDS_PARAMETER_MARKER,
+              "call PROC_6047(1)"
+              );
+    }
+    
     ///////////////////////////////////////////////////////////////////////////////////
     //
     // MINIONS
