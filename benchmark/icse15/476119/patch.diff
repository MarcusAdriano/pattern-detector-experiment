diff --git a/db/derby/code/branches/10.1/java/client/org/apache/derby/client/am/Connection.java b/db/derby/code/branches/10.1/java/client/org/apache/derby/client/am/Connection.java
index 3d0ce440..35e32b00 100644
--- a/db/derby/code/branches/10.1/java/client/org/apache/derby/client/am/Connection.java
+++ b/db/derby/code/branches/10.1/java/client/org/apache/derby/client/am/Connection.java
@@ -913,11 +913,17 @@ public int getTransactionIsolation() throws SqlException {
                                 holdability());
             }
             
+            boolean savedInUnitOfWork = inUnitOfWork_;
             rs = getTransactionIsolationStmt.executeQuery("values current isolation");
             rs.next();
             String isolationStr = rs.getString(1);
             isolation_ = translateIsolation(isolationStr);
             rs.close();	
+            // So... of we did not have an active transaction before
+            // the query, we pretend to still not have an open
+            // transaction. The result set is closed, so this should
+            // not be problematic. DERBY-2084
+            inUnitOfWork_ = savedInUnitOfWork;
         }
         catch(SQLException se) {
         	throw new SqlException(agent_.logWriter_, se.getMessage());
