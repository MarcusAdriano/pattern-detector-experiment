diff --git a/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/GenericActivationHolder.java b/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/GenericActivationHolder.java
index bf1d95ce..772173a6 100644
--- a/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/GenericActivationHolder.java
+++ b/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/GenericActivationHolder.java
@@ -255,8 +255,19 @@ public ResultSet execute() throws StandardException
 			if (gc != ps.getActivationClass())
 			{
 
+                GeneratedClass newGC;
+
 				// ensure the statement is valid by rePreparing it.
+                // DERBY-3260: If someone else reprepares the statement at the
+                // same time as we do, there's a window between the calls to
+                // rePrepare() and getActivationClass() when the activation
+                // class can be set to null, leading to NullPointerException
+                // being thrown later. Therefore, synchronize on ps to close
+                // the window.
+                synchronized (ps) {
 				ps.rePrepare(getLanguageConnectionContext());
+                    newGC = ps.getActivationClass();
+                }
 				
 				/*
 				** If we get here, it means the PreparedStatement has been
@@ -265,8 +276,6 @@ public ResultSet execute() throws StandardException
 				** from the old Activation to the new one, and make that the
 				** current Activation.  If not, throw an exception.
 				*/
-				GeneratedClass		newGC = ps.getActivationClass();
-
 				BaseActivation		newAC = (BaseActivation) newGC.newInstance(lcc);
 
 				DataTypeDescriptor[]	newParamTypes = ps.getParameterTypes();
