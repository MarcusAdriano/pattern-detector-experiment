diff --git a/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/core/JmxMonitoredMap.java b/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/core/JmxMonitoredMap.java
index 86c6e140..499be895 100644
--- a/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/core/JmxMonitoredMap.java
+++ b/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/core/JmxMonitoredMap.java
@@ -53,7 +53,11 @@
 
   private String jmxRootName;
 
-  public JmxMonitoredMap(String coreName, JmxConfiguration jmxConfig) {
+  private String coreHashCode;
+
+  public JmxMonitoredMap(String coreName, String coreHashCode,
+                          final JmxConfiguration jmxConfig) {
+    this.coreHashCode = coreHashCode;
     jmxRootName = "solr" + (coreName == null ? "" : "/" + coreName);
 
     if (jmxConfig.agentId != null && jmxConfig.serviceUrl != null) {
@@ -133,7 +137,7 @@ public SolrInfoMBean put(String key, SolrInfoMBean infoBean) {
         ObjectName name = getObjectName(key, infoBean);
         if (server.isRegistered(name))
           server.unregisterMBean(name);
-        SolrDynamicMBean mbean = new SolrDynamicMBean(infoBean);
+        SolrDynamicMBean mbean = new SolrDynamicMBean(coreHashCode, infoBean);
         server.registerMBean(mbean, name);
       } catch (Exception e) {
         LOG.warn( "Failed to register info bean: " + key, e);
@@ -199,7 +203,9 @@ private ObjectName getObjectName(String key, SolrInfoMBean infoBean)
 
     private HashSet<String> staticStats;
 
-    public SolrDynamicMBean(SolrInfoMBean managedResource) {
+    private String coreHashCode;
+
+    public SolrDynamicMBean(String coreHashCode, SolrInfoMBean managedResource) {
       this.infoBean = managedResource;
       staticStats = new HashSet<String>();
 
@@ -210,6 +216,7 @@ public SolrDynamicMBean(SolrInfoMBean managedResource) {
       staticStats.add("category");
       staticStats.add("sourceId");
       staticStats.add("source");
+      this.coreHashCode = coreHashCode;
     }
 
     public MBeanInfo getMBeanInfo() {
@@ -220,6 +227,10 @@ public MBeanInfo getMBeanInfo() {
                 null, true, false, false));
       }
 
+      // add core's hashcode
+      attrInfoList.add(new MBeanAttributeInfo("coreHashCode", String.class.getName(),
+                null, true, false, false));
+
       try {
         NamedList dynamicStats = infoBean.getStatistics();
         if (dynamicStats != null) {
diff --git a/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/core/SolrCore.java b/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/core/SolrCore.java
index 8f1a3a51..e4eb9f3a 100644
--- a/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/core/SolrCore.java
+++ b/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/core/SolrCore.java
@@ -529,7 +529,7 @@ public SolrCore(String name, String dataDir, SolrConfig config, IndexSchema sche
 
     //Initialize JMX
     if (config.jmxConfig.enabled) {
-      infoRegistry = new JmxMonitoredMap<String, SolrInfoMBean>(name, config.jmxConfig);
+      infoRegistry = new JmxMonitoredMap<String, SolrInfoMBean>(name, String.valueOf(this.hashCode()), config.jmxConfig);
     } else  {
       log.info("JMX monitoring not detected for core: " + name);
       infoRegistry = new ConcurrentHashMap<String, SolrInfoMBean>();
diff --git a/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/core/TestJmxIntegration.java b/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/core/TestJmxIntegration.java
index 63f45429..edd2ab65 100644
--- a/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/core/TestJmxIntegration.java
+++ b/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/core/TestJmxIntegration.java
@@ -111,6 +111,28 @@ public void testJmxUpdate() throws Exception {
             numDocs > oldNumDocs);
   }
 
+  @Test
+  public void testJmxOnCoreReload() throws Exception {
+    List<MBeanServer> servers = MBeanServerFactory.findMBeanServer(null);
+    MBeanServer mbeanServer = servers.get(0);
+    log.info("Servers in testJmxUpdate: " + servers);
+    log.info(h.getCore().getInfoRegistry().toString());
+
+    String coreName = h.getCore().getName();
+    if (coreName.length() == 0) {
+      coreName = h.getCoreContainer().getDefaultCoreName().length() > 0 ? h.getCoreContainer().getDefaultCoreName() : "";
+    }
+
+    Set<ObjectInstance> oldBeans = mbeanServer.queryMBeans(null, null);
+    int oldNumberOfObjects = oldBeans.size();
+    h.getCoreContainer().reload(coreName);
+
+    Set<ObjectInstance> newBeans = mbeanServer.queryMBeans(null, null);
+    int newNumberOfObjects = newBeans.size();
+
+    assertEquals("Number of registered MBeans is not the same after Solr core reload", oldNumberOfObjects, newNumberOfObjects);
+  }
+
   private ObjectName getObjectName(String key, SolrInfoMBean infoBean)
           throws MalformedObjectNameException {
     Hashtable<String, String> map = new Hashtable<String, String>();
diff --git a/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/core/TestJmxMonitoredMap.java b/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/core/TestJmxMonitoredMap.java
index a38480d5..e05266bc 100644
--- a/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/core/TestJmxMonitoredMap.java
+++ b/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/core/TestJmxMonitoredMap.java
@@ -72,7 +72,7 @@ public void setUp() throws Exception {
         }
         String url = "service:jmx:rmi:///jndi/rmi://:" + port + "/solrjmx";
         JmxConfiguration config = new JmxConfiguration(true, null, url);
-        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, config);
+        monitoredMap = new JmxMonitoredMap<String, SolrInfoMBean>(null, "", config);
         JMXServiceURL u = new JMXServiceURL(url);
         connector = JMXConnectorFactory.connect(u);
         mbeanServer = connector.getMBeanServerConnection();
