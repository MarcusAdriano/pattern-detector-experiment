diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/ShutDownDBWhenNSShutsDownTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/ShutDownDBWhenNSShutsDownTest.java
index 282ab432..6b175d7b 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/ShutDownDBWhenNSShutsDownTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/ShutDownDBWhenNSShutsDownTest.java
@@ -24,6 +24,7 @@
 import org.apache.derbyTesting.functionTests.util.TestUtil;
 import org.apache.derbyTesting.junit.BaseJDBCTestCase;
 import org.apache.derbyTesting.junit.BaseTestCase;
+import org.apache.derbyTesting.junit.TestConfiguration;
 import org.apache.derby.drda.NetworkServerControl;
 
 import junit.framework.*;
@@ -79,12 +80,7 @@ public void testEngineShutdownDoesNotTakeDownNS() throws Exception {
         Thread.sleep(500);
 
         // shut down the engine
-        try {
-            getConnection("", "shutdown=true");
-            fail("shutdown didn't raise exception");
-        } catch (SQLException sqle) {
-            assertSQLState("XJ015", sqle);
-        }
+        TestConfiguration.getCurrent().shutdownEngine();
 
         // see if it is still possible to connect to the server (before
         // DERBY-1326, this would hang)
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java
index 5a04a7b4..85b3937f 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java
@@ -201,24 +201,6 @@ public Connection openConnection(String databaseName) throws SQLException
         return conn;        
     }
 
-    /**
-     * Get a connection to a database using the specified connection 
-     * attributes.
-     *  
-     * @param databaseName database to connect to
-     * @param connAttrs connection attributes
-     * @return connection to database
-     * @throws SQLException
-     */
-    public Connection getConnection(String databaseName, String connAttrs) 
-    	throws SQLException
-	{
-    	Connection conn = getTestConfiguration().getConnection(databaseName, 
-    															connAttrs);
-    	initializeConnection(conn);
-    	return conn;       
-	}    
-    
     /**
      * Run a SQL script through ij discarding the output
      * using this object's default connection. Intended for
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/TestConfiguration.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/TestConfiguration.java
index 45eafd9e..89ffb881 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/TestConfiguration.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/TestConfiguration.java
@@ -588,7 +588,7 @@ Connection openConnection (String databaseName) throws SQLException {
      * @return connection to database.
      * @throws SQLException
      */
-    public Connection getDefaultConnection(String connAttrs)
+    private Connection getDefaultConnection(String connAttrs)
         throws SQLException {
         return getConnection(getDatabaseName(), connAttrs);
     }
@@ -602,7 +602,7 @@ public Connection getDefaultConnection(String connAttrs)
      * @return connection to database.
      * @throws SQLException
      */
-    public Connection getConnection (String databaseName, String connAttrs) 
+    private Connection getConnection (String databaseName, String connAttrs) 
     	throws SQLException {
         Connection con = null;
         JDBCClient client =getJDBCClient();
@@ -644,6 +644,20 @@ public void shutdownDatabase()
         }
     }
     
+    /**
+     * Shutdown the engine for this configuration
+     * assuming it is booted.
+     *
+     */
+    public void shutdownEngine()
+    {
+        try {
+            getConnection("", "shutdown=true");
+            Assert.fail("Engine failed to shut down");
+        } catch (SQLException e) {
+             BaseJDBCTestCase.assertSQLState("Engine shutdown", "XJ015", e);
+        }
+    }    
     /**
      * Set the verbosity, i.e., whether debug statements print.
      */
