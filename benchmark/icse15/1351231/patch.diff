diff --git a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock.java b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock.java
index c9c5963b..b7b39464 100644
--- a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock.java
+++ b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/util/packed/Packed64SingleBlock.java
@@ -140,7 +140,7 @@ public long get(int index) {
 
   @Override
   public int get(int index, long[] arr, int off, int len) {
-    assert len > 0;
+    assert len > 0 : "len must be > 0 (got " + len + ")";
     assert index >= 0 && index < valueCount;
     len = Math.min(len, valueCount - index);
     assert off + len <= arr.length;
@@ -192,7 +192,7 @@ public void set(int index, long value) {
 
   @Override
   public int set(int index, long[] arr, int off, int len) {
-    assert len > 0;
+    assert len > 0 : "len must be > 0 (got " + len + ")";
     assert index >= 0 && index < valueCount;
     len = Math.min(len, valueCount - index);
     assert off + len <= arr.length;
diff --git a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java
index 583ba438..f993a9bb 100644
--- a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java
+++ b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java
@@ -244,6 +244,7 @@ public boolean hasArray() {
     }
 
     public int get(int index, long[] arr, int off, int len) {
+      assert len > 0 : "len must be > 0 (got " + len + ")";
       assert index >= 0 && index < valueCount;
       assert off + len <= arr.length;
 
@@ -263,7 +264,7 @@ protected MutableImpl(int valueCount, int bitsPerValue) {
     }
 
     public int set(int index, long[] arr, int off, int len) {
-      assert len > 0;
+      assert len > 0 : "len must be > 0 (got " + len + ")";
       assert index >= 0 && index < valueCount;
       len = Math.min(len, valueCount - index);
       assert off + len <= arr.length;
diff --git a/lucene/dev/trunk/lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts.java b/lucene/dev/trunk/lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts.java
index 1d9189d5..6ea803d0 100644
--- a/lucene/dev/trunk/lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts.java
+++ b/lucene/dev/trunk/lucene/core/src/test/org/apache/lucene/util/packed/TestPackedInts.java
@@ -445,7 +445,7 @@ public void testFill() {
   public void testBulkGet() {
     final int valueCount = 1111;
     final int index = random().nextInt(valueCount);
-    final int len = random().nextInt(valueCount * 2);
+    final int len = _TestUtil.nextInt(random(), 1, valueCount * 2);
     final int off = random().nextInt(77);
 
     for (int bpv = 1; bpv <= 64; ++bpv) {
@@ -479,7 +479,7 @@ public void testBulkGet() {
   public void testBulkSet() {
     final int valueCount = 1111;
     final int index = random().nextInt(valueCount);
-    final int len = random().nextInt(valueCount * 2);
+    final int len = _TestUtil.nextInt(random(), 1, valueCount * 2);
     final int off = random().nextInt(77);
     long[] arr = new long[off+len];
 
