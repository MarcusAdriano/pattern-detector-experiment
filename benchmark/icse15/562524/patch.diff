diff --git a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DDMWriter.java b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DDMWriter.java
index e0a8aded..df93da1b 100644
--- a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DDMWriter.java
+++ b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DDMWriter.java
@@ -709,7 +709,7 @@ protected void writeScalarStream (boolean chainedWithSameCorrelator,
 		out.flush();
 		
 	    }catch(IOException e){
-		agent.markCommunicationsFailure ("DDMWriter.writeScalarStream()",
+		agent.markCommunicationsFailure (e,"DDMWriter.writeScalarStream()",
 						 "",
 						 e.getMessage(),
 						 "*");
diff --git a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DRDAConnThread.java b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DRDAConnThread.java
index 9e410684..e4343c3b 100644
--- a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DRDAConnThread.java
+++ b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DRDAConnThread.java
@@ -450,10 +450,40 @@ protected void setTimeSlice(long value)
 	protected void markCommunicationsFailure(String arg1, String arg2, String arg3,
 		String arg4) throws DRDAProtocolException
 	{
+	    markCommunicationsFailure(null,arg1,arg2,arg3, arg4);
+
+	}
+        
+        
+        /**
+         * Indicate a communications failure. Log to derby.log
+         * 
+         * @param e  - Source exception that was thrown
+         * @param arg1 - info about the communications failure
+         * @param arg2 - info about the communications failure
+         * @param arg3 - info about the communications failure
+         * @param arg4 - info about the communications failure
+         *
+         * @exception DRDAProtocolException  disconnect exception always thrown
+         */
+        protected void markCommunicationsFailure(Exception e, String arg1, String arg2, String arg3,
+                String arg4) throws DRDAProtocolException
+        {
+            String dbname = null;
+   
+            if (database != null)
+            {
+                dbname = database.dbName;
+            }
+            if (e != null) {
+                println2Log(dbname,session.drdaID, e.getMessage());
+                server.consoleExceptionPrintTrace(e);
+            }
+        
 		Object[] oa = {arg1,arg2,arg3,arg4};
 		throw DRDAProtocolException.newDisconnectException(this,oa);
-
 	}
+
 	/**
 	 * Syntax error
 	 *
