diff --git a/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BeanRecipe.java b/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BeanRecipe.java
index 2d315eaa..7f92e2bd 100644
--- a/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BeanRecipe.java
+++ b/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BeanRecipe.java
@@ -345,7 +345,7 @@ private Object getInstance() throws ComponentDefinitionException {
     private Map<Method, List<Object>> findMatchingMethods(Class type, String name, boolean instance, List<Object> args, List<ReifiedType> types) {
         Map<Method, List<Object>> matches = new HashMap<Method, List<Object>>();
         // Get constructors
-        List<Method> methods = getPublicMethods(type);
+        List<Method> methods = new ArrayList<Method>(Arrays.asList(getPublicMethods(type)));
         // Discard any signature with wrong cardinality
         for (Iterator<Method> it = methods.iterator(); it.hasNext();) {
             Method mth = it.next();
diff --git a/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/utils/ReflectionUtils.java b/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/utils/ReflectionUtils.java
index 2c4bc21a..c54fda55 100644
--- a/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/utils/ReflectionUtils.java
+++ b/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/utils/ReflectionUtils.java
@@ -53,6 +53,7 @@
  */
 public class ReflectionUtils {
 
+    private static Map<Class<?>, WeakReference<Method[]>> publicMethods = Collections.synchronizedMap(new WeakHashMap<Class<?>, WeakReference<Method[]>>());
     private static Map<Class<?>, PropertyDescriptor[][]> beanInfos = Collections.synchronizedMap(new WeakHashMap<Class<?>, PropertyDescriptor[][]>());
 
     public static boolean hasDefaultConstructor(Class type) {
@@ -121,9 +122,15 @@ public static Method getLifecycleMethod(Class clazz, String name) {
         return null;
     }
 
-    public static List<Method> getPublicMethods(Class clazz) {
-        ArrayList<Method> methods = new ArrayList<Method>();
-        doGetPublicMethods(clazz, methods);
+    public static Method[] getPublicMethods(Class clazz) {
+        WeakReference<Method[]> ref = publicMethods.get(clazz);
+        Method[] methods = ref != null ? ref.get() : null;
+        if (methods == null) {
+            ArrayList<Method> array = new ArrayList<Method>();
+            doGetPublicMethods(clazz, array);
+            methods = array.toArray(new Method[array.size()]);
+            publicMethods.put(clazz, new WeakReference<Method[]>(methods));
+        }
         return methods;
     }
 
