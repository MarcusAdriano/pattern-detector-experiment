diff --git a/incubator/solr/trunk/src/java/org/apache/solr/core/SolrCore.java b/incubator/solr/trunk/src/java/org/apache/solr/core/SolrCore.java
index 1251ee0e..dd65078a 100644
--- a/incubator/solr/trunk/src/java/org/apache/solr/core/SolrCore.java
+++ b/incubator/solr/trunk/src/java/org/apache/solr/core/SolrCore.java
@@ -864,6 +864,7 @@ private void readDoc(DocumentBuilder builder, XmlPullParser xpp) throws IOExcept
       String attrVal = xpp.getAttributeValue(i);
       if ("boost".equals(attrName)) {
         docBoost = Float.parseFloat(attrVal);
+        builder.setBoost(docBoost);
       } else {
         log.warning("Unknown attribute doc/@" + attrName);
       }
@@ -911,8 +912,8 @@ private void readDoc(DocumentBuilder builder, XmlPullParser xpp) throws IOExcept
                                         // need this line for isNull???
       // Don't add fields marked as null (for now at least)
       if (!isNull) {
-        if (docBoost != 1.0f) {
-          builder.addField(name,val,docBoost);
+        if (boost != 1.0f) {
+          builder.addField(name,val,boost);
         } else {
           builder.addField(name,val);
         }
diff --git a/incubator/solr/trunk/src/test/org/apache/solr/BasicFunctionalityTest.java b/incubator/solr/trunk/src/test/org/apache/solr/BasicFunctionalityTest.java
index c5b5928c..b7634c35 100644
--- a/incubator/solr/trunk/src/test/org/apache/solr/BasicFunctionalityTest.java
+++ b/incubator/solr/trunk/src/test/org/apache/solr/BasicFunctionalityTest.java
@@ -157,6 +157,43 @@ public void testMultipleUpdatesPerAdd() {
 
   }
 
+  public void testDocBoost() throws Exception {
+    String res = h.update("<add>" + "<doc><field name=\"id\">1</field>"+
+                                          "<field name=\"text\">hello</field></doc>" + 
+                          "<doc boost=\"2.0\"><field name=\"id\">2</field>" +
+                                          "<field name=\"text\">hello</field></doc>" + 
+                          "</add>");
+
+    assertEquals("<result status=\"0\"></result><result status=\"0\"></result>", res);
+    assertU("<commit/>");
+    assertQ(req("text:hello")
+            ,"//*[@numFound='2']"
+            );
+    String resp = h.query(lrf.makeRequest("q", "text:hello", "debugQuery", "true"));
+    //System.out.println(resp);
+    // second doc ranked first
+    assertTrue( resp.indexOf("id=2") < resp.indexOf("id=1") );
+  }
+
+  public void testFieldBoost() throws Exception {
+    String res = h.update("<add>" + "<doc><field name=\"id\">1</field>"+
+                                      "<field name=\"text\">hello</field></doc>" + 
+                                    "<doc><field name=\"id\">2</field>" +
+                                      "<field boost=\"2.0\" name=\"text\">hello</field></doc>" + 
+                          "</add>");
+
+    assertEquals("<result status=\"0\"></result><result status=\"0\"></result>", res);
+    assertU("<commit/>");
+    assertQ(req("text:hello"),
+            "//*[@numFound='2']"
+            );
+    String resp = h.query(lrf.makeRequest("q", "text:hello", "debugQuery", "true"));
+    //System.out.println(resp);
+    // second doc ranked first
+    assertTrue( resp.indexOf("id=2") < resp.indexOf("id=1") );
+  }
+
+
   public void testXMLWriter() throws Exception {
 
     SolrQueryResponse rsp = new SolrQueryResponse();
