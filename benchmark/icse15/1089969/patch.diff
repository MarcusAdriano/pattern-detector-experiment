diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/RowMutation.java b/cassandra/trunk/src/java/org/apache/cassandra/db/RowMutation.java
index 28266cc1..a4bd459c 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/RowMutation.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/RowMutation.java
@@ -33,8 +33,9 @@
 import org.apache.cassandra.net.Message;
 import org.apache.cassandra.service.StorageService;
 import org.apache.cassandra.thrift.ColumnOrSuperColumn;
-import org.apache.cassandra.thrift.Mutation;
 import org.apache.cassandra.thrift.Counter;
+import org.apache.cassandra.thrift.Deletion;
+import org.apache.cassandra.thrift.Mutation;
 import org.apache.cassandra.thrift.SlicePredicate;
 import org.apache.cassandra.utils.ByteBufferUtil;
 import org.apache.cassandra.utils.FBUtilities;
@@ -236,7 +237,7 @@ public static RowMutation getRowMutationFromMutations(String keyspace, ByteBuffe
             {
                 if (mutation.deletion != null)
                 {
-                    deleteColumnOrSuperColumnToRowMutation(rm, cfName, mutation.deletion.predicate, mutation.deletion.super_column, mutation.deletion.timestamp);
+                    deleteColumnOrSuperColumnToRowMutation(rm, cfName, mutation.deletion);
                 }
                 if (mutation.column_or_supercolumn != null)
                 {
@@ -322,18 +323,21 @@ private static void addCounterToRowMutation(RowMutation rm, String cfName, Count
         }
     }
 
-    private static void deleteColumnOrSuperColumnToRowMutation(RowMutation rm, String cfName, SlicePredicate predicate, ByteBuffer scName, long timestamp)
+    private static void deleteColumnOrSuperColumnToRowMutation(RowMutation rm, String cfName, Deletion del)
     {
-        if (predicate != null && predicate.column_names != null)
+        if (del.predicate != null && del.predicate.column_names != null)
         {
-            for (ByteBuffer c : predicate.column_names)
+            for(ByteBuffer c : del.predicate.column_names)
             {
-                rm.delete(new QueryPath(cfName, scName, c), timestamp);
+                if (del.super_column == null && DatabaseDescriptor.getColumnFamilyType(rm.table_, cfName) == ColumnFamilyType.Super)
+                    rm.delete(new QueryPath(cfName, c), del.timestamp);
+                else
+                    rm.delete(new QueryPath(cfName, del.super_column, c), del.timestamp);
             }
         }
         else
         {
-            rm.delete(new QueryPath(cfName, scName), timestamp);
+            rm.delete(new QueryPath(cfName, del.super_column), del.timestamp);
         }
     }
 
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/thrift/ThriftValidation.java b/cassandra/trunk/src/java/org/apache/cassandra/thrift/ThriftValidation.java
index b05582b3..45916b6d 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/thrift/ThriftValidation.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/thrift/ThriftValidation.java
@@ -303,10 +303,14 @@ public static void validateMutation(CFMetaData metadata, Mutation mut)
         Counter counter = mut.counter;
 
         boolean isCommutative = metadata.getDefaultValidator().isCommutative();
+        int nulls = 0;
+        if (cosc == null) nulls++;
+        if (del == null) nulls++;
+        if (counter == null) nulls++;
 
-        if (cosc == null && del == null && counter == null)
+        if (nulls != 2)
         {
-            throw new InvalidRequestException("Mutation must have at least one of column_or_superColumn, deletion, counter or counter_deletion");
+            throw new InvalidRequestException("mutation must have one and only one of column_or_supercolumn, deletion, counter or counter_deletion");
         }
 
         if (cosc != null)
