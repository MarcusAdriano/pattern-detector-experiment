diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/NetHarnessJavaTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/NetHarnessJavaTest.java
index 2a510572..c6d37cdf 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/NetHarnessJavaTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/NetHarnessJavaTest.java
@@ -38,6 +38,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
  * The following tests could not be run this way, reasons for the
  * 
  * dblook_test_net - filters output
+ * dblook_test_net_territory - filters output 
  * getCurrentProperties - ExceptionInInitializerError, needs investigation
  * maxthreads - forks VM
  * runtimeinfo" - filters output
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/dblook_test_net.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/dblook_test_net.java
index 7624530c..fd647a7b 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/dblook_test_net.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/dblook_test_net.java
@@ -36,6 +36,7 @@ public static void main (String [] args) {
 		testDirectory = "dblook_test_net/";
 		new dblook_test_net().doTest();
 		System.out.println("\n[ Done. ]\n");
+		renameDbLookLog("dblook_test_net");
 
 	}
 
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/dblook_test_net_territory.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/dblook_test_net_territory.java
index e69de29b..536d489b 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/dblook_test_net_territory.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/dblook_test_net_territory.java
@@ -0,0 +1,74 @@
+/*
+
+   Derby - Class org.apache.derbyTesting.functionTests.tests.derbynet.dblook_test_net_territory
+
+   Licensed to the Apache Software Foundation (ASF) under one or more
+   contributor license agreements.  See the NOTICE file distributed with
+   this work for additional information regarding copyright ownership.
+   The ASF licenses this file to You under the Apache License, Version 2.0
+   (the "License"); you may not use this file except in compliance with
+   the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+
+ */
+
+package org.apache.derbyTesting.functionTests.tests.derbynet;
+
+import java.io.File;
+
+import org.apache.derbyTesting.functionTests.tests.tools.dblook_test;
+
+public class dblook_test_net_territory extends dblook_test {
+
+	// This test runs dblook on a test database using
+	// a connection to the Network Server.
+
+	public static void main (String [] args) {
+
+		System.out.println("\n-= Start dblook (net server) Test. =-");
+
+		territoryBased = ";territory=nl_NL;collation=TERRITORY_BASED";
+		testDirectory = "territory_dblook_test_net/";
+		expectedCollation = "TERRITORY_BASED";
+		separator = System.getProperty("file.separator");
+		new dblook_test_net_territory().doTest();
+		System.out.println("\n[ Done. ]\n");
+		renameDbLookLog("dblook_test_net_territory");
+
+	}
+
+	/* **********************************************
+	 * doTest
+	 * Run a test of the dblook utility using
+	 * Network Server.
+	 ****/
+
+	protected void doTest() {
+
+		try {
+
+			createTestDatabase(dbCreationScript_1);
+
+			// Don't let error stream ruin the diff.
+			System.err.close();
+
+			// The only test we need to run is the one for
+			// Network Server; see functionTests/tools/
+			// dblook_test.java.
+			runTest(3, testDBName, testDBName + "_new");
+
+		} catch (Exception e) {
+			System.out.println("-=- FAILED: to complete the test:");
+			e.printStackTrace();
+		}
+
+	}
+
+}
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/dblook_test.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/dblook_test.java
index 0c88bc2e..206e36bd 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/dblook_test.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/dblook_test.java
@@ -64,13 +64,15 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 	private static final char TEST_DELIMITER='#';
 
 	protected static String testDirectory = "dblook_test";
-	protected static final String testDBName = "wombat";
+	protected static String testDBName = "wombat";
 	protected static String separator;
 
 	private static String dbPath;
 	private static int duplicateCounter = 0;
 	private static int sysNameCount = 0;
 	private static String jdbcProtocol;
+	protected static String territoryBased = "";
+	protected static String expectedCollation = "UCS_BASIC";
 
 	/* **********************************************
 	 * main:
@@ -81,6 +83,7 @@ public static void main (String[] args) {
 		separator = System.getProperty("file.separator");
 		new dblook_test().doTest();
 		System.out.println("\n[ Done. ]\n");
+		renameDbLookLog("dblook_test");
 
 	}
 
@@ -721,7 +724,29 @@ private void dumpSysCatalogs(String dbName)
 		Connection conn = DriverManager.getConnection(
 				"jdbc:derby:" + dbName);
 		conn.setAutoCommit(false);
+
+		// Set the system schema to ensure that UCS_BASIC collation is used.
 		Statement stmt = conn.createStatement();
+		stmt.executeUpdate("SET SCHEMA SYS");
+
+		// Ensure that the database has the expected collation type. 
+		ResultSet rs = null;
+		try {
+			rs = stmt.executeQuery("VALUES SYSCS_UTIL.SYSCS_GET_DATABASE_PROPERTY('derby.database.collation')");
+			rs.next();
+			String collation = rs.getString(1); 
+			if (collation == null || !collation.equals(expectedCollation)) {
+				throw new SQLException("Collation doesn't match with the expected type " + 
+						expectedCollation);
+			}
+		} catch (Exception e) {
+			System.out.println("FAILED: incorrect database collation\n");
+			System.out.println(e.getMessage());
+		} finally {
+			if (rs != null) {
+				rs.close();
+			}
+		}
 
 		// Load any id-to-name mappings that will be useful
 		// when dumping the catalogs.
@@ -732,7 +757,7 @@ private void dumpSysCatalogs(String dbName)
 		// won't cause diffs.
 
 		writeOut("\n========== SYSALIASES ==========\n");
-		ResultSet rs =
+		rs =
 			stmt.executeQuery("select schemaid, sys.sysaliases.* from sys.sysaliases");
 		dumpResultSet(rs, idToNameMap, null);
 
@@ -1188,7 +1213,7 @@ private void createDBFromDDL(String newDBName,
 			"' from ddl script '" + scriptName + "'");
 
 		Connection conn = DriverManager.getConnection(
-			"jdbc:derby:" + newDBName + ";create=true");
+				"jdbc:derby:" + newDBName + ";create=true" + territoryBased);
 
 		Statement stmt = conn.createStatement();
 		BufferedReader ddlScript =
@@ -1506,6 +1531,39 @@ private void deleteFile(File aFile)
 
 	}
 
+	/* **********************************************
+	 * renameDbLookLog:
+	 * Checks if the logfile of dblook exists and
+	 * tries to rename it to prevent possible 
+	 * next tests from failing. The log should not be 
+	 * deleted because the output may be examined in 
+	 * case a test fails.
+	 * The new name of dblook.log should be dblook_testname#.log,
+	 * where # is a 'version' number. The 'version' number is
+	 * needed because the same test may be run multiple
+	 * times with different parameters.
+	 * @param nameOfTest Name of the finished test.
+	 ****/
+
+	protected static void renameDbLookLog(String nameOfTest)
+	{
+		File dbLookTestLog = new File("dblook.log");
+		if (dbLookTestLog.exists()) {
+			int i = 0;
+			String renamedLogName = nameOfTest + i + ".log";
+			File renamedLog = new File(renamedLogName);
+			while (renamedLog.exists()) {
+				i++;
+				renamedLogName = nameOfTest + i + ".log";
+				renamedLog = new File(renamedLogName);
+			}
+			if (!dbLookTestLog.renameTo(renamedLog)) {
+				System.out.println("Failed to rename dblook.org to " + 
+						renamedLogName);
+			}
+		}
+	}
+
 	/* **********************************************
 	 * dumpFileToSysOut:
 	 * Checks to see if the received file is empty,
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/dblook_test_territory.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/dblook_test_territory.java
index e69de29b..6fbef03e 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/dblook_test_territory.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/dblook_test_territory.java
@@ -0,0 +1,44 @@
+/*
+
+   Derby - Class org.apache.derbyTesting.functionTests.tests.tools.dblook_test_territory
+
+   Licensed to the Apache Software Foundation (ASF) under one or more
+   contributor license agreements.  See the NOTICE file distributed with
+   this work for additional information regarding copyright ownership.
+   The ASF licenses this file to You under the Apache License, Version 2.0
+   (the "License"); you may not use this file except in compliance with
+   the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+
+ */
+
+package org.apache.derbyTesting.functionTests.tests.tools;
+
+import java.io.File;
+
+public class dblook_test_territory extends dblook_test {
+
+	/* **********************************************
+	 * main:
+	 ****/
+
+	public static void main (String[] args) {
+
+		territoryBased = ";territory=nl_NL;collation=TERRITORY_BASED";
+		testDirectory = "territory_" + testDirectory;
+		expectedCollation = "TERRITORY_BASED";
+		separator = System.getProperty("file.separator");
+		new dblook_test_territory().doTest();
+		System.out.println("\n[ Done. ]\n");
+		renameDbLookLog("dblook_test_territory");
+
+	}
+
+}
diff --git a/db/derby/code/trunk/java/tools/org/apache/derby/tools/dblook.java b/db/derby/code/trunk/java/tools/org/apache/derby/tools/dblook.java
index 79df4eaa..add48f2a 100644
--- a/db/derby/code/trunk/java/tools/org/apache/derby/tools/dblook.java
+++ b/db/derby/code/trunk/java/tools/org/apache/derby/tools/dblook.java
@@ -584,13 +584,16 @@ private void prepForDump() throws Exception {
 		// have multiple ResultSets open on the same connection).
 		this.conn.setAutoCommit(false);
 
+		// Set the system schema to ensure that UCS_BASIC collation is used.
+		Statement stmt = conn.createStatement();
+		stmt.executeUpdate("SET SCHEMA SYS");
+
 		// Prepare statements.
 		getColNameFromNumberQuery = conn.prepareStatement(
 			"SELECT COLUMNNAME FROM SYS.SYSCOLUMNS WHERE " +
 			"REFERENCEID = ? AND COLUMNNUMBER = ?");
 
 		// Load list of user tables and table ids, for general use.
-		Statement stmt = conn.createStatement();
 		ResultSet rs = stmt.executeQuery("SELECT T.TABLEID, T.TABLENAME, " +
 				"S.SCHEMANAME FROM SYS.SYSTABLES T, SYS.SYSSCHEMAS S " + 
 				"WHERE T.TABLETYPE = 'T' AND T.SCHEMAID = S.SCHEMAID");
