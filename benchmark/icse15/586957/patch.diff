diff --git a/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/conn/GenericStatementContext.java b/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/conn/GenericStatementContext.java
index 8afe9c4a..e8022d03 100644
--- a/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/conn/GenericStatementContext.java
+++ b/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/conn/GenericStatementContext.java
@@ -96,6 +96,9 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 	*/
 	private short			sqlAllowed = -1;
 
+    // Counter used to create unique savepoint names.
+    private static long nextNameId = Long.MIN_VALUE;
+
 	/*
 	   constructor
 		@param tc transaction
@@ -105,7 +108,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 		super(lcc.getContextManager(), org.apache.derby.iapi.reference.ContextId.LANG_STATEMENT);
 		this.lcc = lcc;
 
-		internalSavePointName = "ISSP" + hashCode();
+        internalSavePointName = createInternalSavepointName();
 
 		if (SanityManager.DEBUG)
 		{
@@ -115,6 +118,16 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 	}
 
+    /**
+     * Generate a unique name for this savepoint.
+     * This method should only be called from the constructor.
+     *
+     * @return the savepoint name.
+     */
+    private synchronized static String createInternalSavepointName() {
+        return "ISSP" + nextNameId++;
+    }
+
     /**
      * This is a TimerTask that is responsible for timing out statements,
      * typically when an application has called Statement.setQueryTimeout().
