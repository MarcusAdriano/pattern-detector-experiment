diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/TopService.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/TopService.java
index 1fb349f9..a581b1d0 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/TopService.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/TopService.java
@@ -229,6 +229,9 @@ synchronized Object findModule(ProtocolKey key, boolean findOnly, Properties pro
      * was found
      */
     private ModuleInstance findModuleInstance(Object instance) {
+        // DERBY-4018: Need to hold the synchronization over the entire loop
+        // to prevent concurrent modifications from causing an
+        // ArrayIndexOutOfBoundsException.
         synchronized (moduleInstances) {
             for (int i = 0; i < moduleInstances.size(); i++) {
                 ModuleInstance module = (ModuleInstance) moduleInstances.get(i);
@@ -269,8 +272,20 @@ Object bootModule(boolean create, Object service, ProtocolKey key, Properties pr
 		// see if a running implementation will handle this protocol
 		synchronized (this) {
 
-			for (int i = 0; i < moduleInstances.size(); i++) {
-				ModuleInstance module = (ModuleInstance) moduleInstances.elementAt(i);
+            for (int i = 0;; i++) {
+                final ModuleInstance module;
+
+                // DERBY-4018: Synchronized block in order to close the window
+                // between size() and elementAt() where the size may change
+                // and result in an ArrayIndexOutOfBoundsException.
+                synchronized (moduleInstances) {
+                    if (i < moduleInstances.size()) {
+                        module = (ModuleInstance) moduleInstances.elementAt(i);
+                    } else {
+                        // No more instances to look at, break out of the loop.
+                        break;
+                    }
+                }
 
                 // DERBY-2074: The module has not been properly booted, so we
                 // cannot yet determine whether or not this is a module we can
