diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJobTest.java b/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJobTest.java
index 41b00f53..b9082089 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJobTest.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/hadoop/als/ParallelALSFactorizationJobTest.java
@@ -60,7 +60,7 @@ public void setUp() throws Exception {
     outputDir.delete();
     tmpDir = getTestTempDir("tmp");
 
-    conf = new Configuration();
+    conf = getConfiguration();
     // reset as we run all tests in the same JVM
     SharingMapper.reset();
   }
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/data/DataLoaderTest.java b/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/data/DataLoaderTest.java
index fd98545a..3cdc78b9 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/data/DataLoaderTest.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/data/DataLoaderTest.java
@@ -257,7 +257,7 @@ public void testLoadDataFromFile() throws Exception {
     Dataset dataset = DataLoader.generateDataset(descriptor, false, sData);
 
     Path dataPath = Utils.writeDataToTestFile(sData);
-    FileSystem fs = dataPath.getFileSystem(new Configuration());
+    FileSystem fs = dataPath.getFileSystem(getConfiguration());
     Data loaded = DataLoader.loadData(dataset, fs, dataPath);
 
     testLoadedData(source, attrs, missings, loaded);
@@ -269,7 +269,7 @@ public void testLoadDataFromFile() throws Exception {
     dataset = DataLoader.generateDataset(descriptor, true, sData);
 
     dataPath = Utils.writeDataToTestFile(sData);
-    fs = dataPath.getFileSystem(new Configuration());
+    fs = dataPath.getFileSystem(getConfiguration());
     loaded = DataLoader.loadData(dataset, fs, dataPath);
 
     testLoadedData(source, attrs, missings, loaded);
@@ -295,7 +295,7 @@ public void testGenerateDatasetFromFile() throws Exception {
     Dataset expected = DataLoader.generateDataset(descriptor, false, sData);
 
     Path path = Utils.writeDataToTestFile(sData);
-    FileSystem fs = path.getFileSystem(new Configuration());
+    FileSystem fs = path.getFileSystem(getConfiguration());
     
     Dataset dataset = DataLoader.generateDataset(descriptor, false, fs, path);
     
@@ -308,7 +308,7 @@ public void testGenerateDatasetFromFile() throws Exception {
     expected = DataLoader.generateDataset(descriptor, false, sData);
 
     path = Utils.writeDataToTestFile(sData);
-    fs = path.getFileSystem(new Configuration());
+    fs = path.getFileSystem(getConfiguration());
     
     dataset = DataLoader.generateDataset(descriptor, false, fs, path);
     
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/data/Utils.java b/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/data/Utils.java
index 3d627cf2..87f3a8f0 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/data/Utils.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/data/Utils.java
@@ -27,10 +27,10 @@
 import com.google.common.io.Closeables;
 import com.google.common.io.Files;
 import org.apache.commons.lang3.ArrayUtils;
-import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
 import org.apache.mahout.classifier.df.data.Dataset.Attribute;
+import org.apache.mahout.common.MahoutTestCase;
 
 /**
  * Helper methods used by the tests
@@ -249,7 +249,8 @@ private static void writeDataToFile(String[] sData, Path path) throws IOExceptio
 
   public static Path writeDataToTestFile(String[] sData) throws IOException {
     Path testData = new Path("testdata/Data");
-    FileSystem fs = testData.getFileSystem(new Configuration());
+    MahoutTestCase ca = new MahoutTestCase();
+    FileSystem fs = testData.getFileSystem(ca.getConfiguration());
     if (!fs.exists(testData)) {
       fs.mkdirs(testData);
     }
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/mapreduce/inmem/InMemInputFormatTest.java b/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/mapreduce/inmem/InMemInputFormatTest.java
index a7f58180..0a4a0343 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/mapreduce/inmem/InMemInputFormatTest.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/mapreduce/inmem/InMemInputFormatTest.java
@@ -43,7 +43,7 @@ public void testSplits() throws Exception {
       int numSplits = rng.nextInt(maxNumSplits) + 1;
       int nbTrees = rng.nextInt(maxNbTrees) + 1;
 
-      Configuration conf = new Configuration();
+      Configuration conf = getConfiguration();
       Builder.setNbTrees(conf, nbTrees);
 
       InMemInputFormat inputFormat = new InMemInputFormat();
@@ -86,7 +86,7 @@ public void testRecordReader() throws Exception {
       int numSplits = rng.nextInt(maxNumSplits) + 1;
       int nbTrees = rng.nextInt(maxNbTrees) + 1;
 
-      Configuration conf = new Configuration();
+      Configuration conf = getConfiguration();
       Builder.setNbTrees(conf, nbTrees);
 
       InMemInputFormat inputFormat = new InMemInputFormat();
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/mapreduce/partial/PartialBuilderTest.java b/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/mapreduce/partial/PartialBuilderTest.java
index e36bd4bc..3903c332 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/mapreduce/partial/PartialBuilderTest.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/classifier/df/mapreduce/partial/PartialBuilderTest.java
@@ -50,7 +50,7 @@
 
   @Test
   public void testProcessOutput() throws Exception {
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     conf.setInt("mapred.map.tasks", NUM_MAPS);
 
     Random rng = RandomUtils.getRandom();
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/classify/ClusterClassificationDriverTest.java b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/classify/ClusterClassificationDriverTest.java
index 4898a276..6462bcc9 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/classify/ClusterClassificationDriverTest.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/classify/ClusterClassificationDriverTest.java
@@ -30,6 +30,7 @@
 import org.apache.hadoop.io.IntWritable;
 import org.apache.hadoop.io.SequenceFile;
 import org.apache.hadoop.io.Writable;
+import org.apache.hadoop.util.ToolRunner;
 import org.apache.mahout.clustering.ClusteringTestUtils;
 import org.apache.mahout.clustering.canopy.CanopyDriver;
 import org.apache.mahout.clustering.iterator.CanopyClusteringPolicy;
@@ -128,7 +129,7 @@ public void testVectorClassificationWithOutlierRemoval() throws Exception {
     clusteringOutputPath = getTestTempDirPath("output");
     classifiedOutputPath = getTestTempDirPath("classify");
 
-    conf = new Configuration();
+    conf = getConfiguration();
 
     ClusteringTestUtils.writePointsToFile(points,
         new Path(pointsPath, "file1"), fs, conf);
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/kmeans/TestEigenSeedGenerator.java b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/kmeans/TestEigenSeedGenerator.java
index fe7ddebe..80617e46 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/kmeans/TestEigenSeedGenerator.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/kmeans/TestEigenSeedGenerator.java
@@ -61,7 +61,7 @@
   @Before
   public void setUp() throws Exception {
     super.setUp();
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     fs = FileSystem.get(conf);
   }
 
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/kmeans/TestRandomSeedGenerator.java b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/kmeans/TestRandomSeedGenerator.java
index f5e9d23e..9f28d161 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/kmeans/TestRandomSeedGenerator.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/kmeans/TestRandomSeedGenerator.java
@@ -60,7 +60,7 @@
   @Before
   public void setUp() throws Exception {
     super.setUp();
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     fs = FileSystem.get(conf);
   }
   
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestAffinityMatrixInputJob.java b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestAffinityMatrixInputJob.java
index 7f632e58..6e0cd18d 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestAffinityMatrixInputJob.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestAffinityMatrixInputJob.java
@@ -70,7 +70,7 @@
   @Test
   public void testAffinityMatrixInputMapper() throws Exception {
     AffinityMatrixInputMapper mapper = new AffinityMatrixInputMapper();
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     conf.setInt(Keys.AFFINITY_DIMENSIONS, RAW_DIMENSIONS);
     
     // set up the dummy writer and the M/R context
@@ -97,7 +97,7 @@ public void testAffinityMatrixInputMapper() throws Exception {
   @Test
   public void testAffinitymatrixInputReducer() throws Exception {
     AffinityMatrixInputMapper mapper = new AffinityMatrixInputMapper();
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     conf.setInt(Keys.AFFINITY_DIMENSIONS, RAW_DIMENSIONS);
     
     // set up the dummy writer and the M/R context
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestMatrixDiagonalizeJob.java b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestMatrixDiagonalizeJob.java
index 80f6a180..7d4ec1f7 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestMatrixDiagonalizeJob.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestMatrixDiagonalizeJob.java
@@ -54,7 +54,7 @@ private static double rowSum(double [] row) {
   @Test
   public void testMatrixDiagonalizeMapper() throws Exception {
     MatrixDiagonalizeMapper mapper = new MatrixDiagonalizeMapper();
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     conf.setInt(Keys.AFFINITY_DIMENSIONS, RAW_DIMENSIONS);
     
     // set up the dummy writers
@@ -78,7 +78,7 @@ public void testMatrixDiagonalizeMapper() throws Exception {
   @Test
  public void testMatrixDiagonalizeReducer() throws Exception {
     MatrixDiagonalizeMapper mapper = new MatrixDiagonalizeMapper();
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     conf.setInt(Keys.AFFINITY_DIMENSIONS, RAW_DIMENSIONS);
     
     // set up the dummy writers
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestUnitVectorizerJob.java b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestUnitVectorizerJob.java
index 3f4c0aff..f317f6ed 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestUnitVectorizerJob.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestUnitVectorizerJob.java
@@ -37,7 +37,7 @@
   @Test
   public void testUnitVectorizerMapper() throws Exception {
     UnitVectorizerMapper mapper = new UnitVectorizerMapper();
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     
     // set up the dummy writers
     DummyRecordWriter<IntWritable, VectorWritable> writer = new
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestVectorCache.java b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestVectorCache.java
index 309d678f..9091efe3 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestVectorCache.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestVectorCache.java
@@ -41,7 +41,7 @@
   
   @Test
   public void testSave() throws Exception {
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     Writable key = new IntWritable(0);
     Vector value = new DenseVector(VECTOR);
     Path path = getTestTempDirPath("output");
@@ -64,7 +64,7 @@ public void testSave() throws Exception {
   @Test
   public void testLoad() throws Exception {
     // save a vector manually
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     Writable key = new IntWritable(0);
     Vector value = new DenseVector(VECTOR);
     Path path = getTestTempDirPath("output");
@@ -92,7 +92,7 @@ public void testLoad() throws Exception {
   
   @Test
   public void testAll() throws Exception {
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     Vector v = new DenseVector(VECTOR);
     Path toSave = getTestTempDirPath("output");
     Writable key = new IntWritable(0);
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestVectorMatrixMultiplicationJob.java b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestVectorMatrixMultiplicationJob.java
index 5949191c..2fd83e2d 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestVectorMatrixMultiplicationJob.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/spectral/TestVectorMatrixMultiplicationJob.java
@@ -43,7 +43,7 @@
   @Test
   public void testVectorMatrixMultiplicationMapper() throws Exception {
     VectorMatrixMultiplicationMapper mapper = new VectorMatrixMultiplicationMapper();
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     
     // set up all the parameters for the job
     Vector toSave = new DenseVector(VECTOR);
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/streaming/mapreduce/StreamingKMeansTestMR.java b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/streaming/mapreduce/StreamingKMeansTestMR.java
index ddb98f23..9b582b4c 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/streaming/mapreduce/StreamingKMeansTestMR.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/streaming/mapreduce/StreamingKMeansTestMR.java
@@ -34,6 +34,7 @@
 import org.apache.mahout.clustering.ClusteringUtils;
 import org.apache.mahout.clustering.streaming.cluster.DataUtils;
 import org.apache.mahout.clustering.streaming.cluster.StreamingKMeans;
+import org.apache.mahout.common.MahoutTestCase;
 import org.apache.mahout.common.Pair;
 import org.apache.mahout.common.RandomUtils;
 import org.apache.mahout.common.commandline.DefaultOptionCreator;
@@ -56,7 +57,7 @@
 import static org.junit.Assert.assertTrue;
 
 @RunWith(Parameterized.class)
-public class StreamingKMeansTestMR {
+public class StreamingKMeansTestMR extends MahoutTestCase {
   private static final int NUM_DATA_POINTS = 1 << 15;
   private static final int NUM_DIMENSIONS = 8;
   private static final int NUM_PROJECTIONS = 3;
@@ -232,7 +233,7 @@ public void testHypercubeMapReduce() throws IOException {
 
   @Test
   public void testHypercubeMapReduceRunSequentially() throws Exception {
-    Configuration configuration = new Configuration();
+    Configuration configuration = getConfiguration();
     configure(configuration);
     configuration.set(DefaultOptionCreator.METHOD_OPTION, DefaultOptionCreator.SEQUENTIAL_METHOD);
 
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/topdown/postprocessor/ClusterCountReaderTest.java b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/topdown/postprocessor/ClusterCountReaderTest.java
index 3b8076f7..6f25d0f7 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/topdown/postprocessor/ClusterCountReaderTest.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/topdown/postprocessor/ClusterCountReaderTest.java
@@ -56,7 +56,7 @@
   @Before
   public void setUp() throws Exception {
     super.setUp();
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     fs = FileSystem.get(conf);
   }
   
@@ -79,7 +79,7 @@ public void testGetNumberOfClusters() throws Exception {
     List<VectorWritable> points = getPointsWritable(REFERENCE);
     
     Path pointsPath = getTestTempDirPath("points");
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     ClusteringTestUtils.writePointsToFile(points, new Path(pointsPath, "file1"), fs, conf);
     ClusteringTestUtils.writePointsToFile(points, new Path(pointsPath, "file2"), fs, conf);
     
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/topdown/postprocessor/ClusterOutputPostProcessorTest.java b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/topdown/postprocessor/ClusterOutputPostProcessorTest.java
index 1cd6b672..dbb950ab 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/topdown/postprocessor/ClusterOutputPostProcessorTest.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/clustering/topdown/postprocessor/ClusterOutputPostProcessorTest.java
@@ -66,7 +66,7 @@
   @Before
   public void setUp() throws Exception {
     super.setUp();
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     fs = FileSystem.get(conf);
   }
 
@@ -89,7 +89,7 @@ public void testTopDownClustering() throws Exception {
     List<VectorWritable> points = getPointsWritable(REFERENCE);
 
     Path pointsPath = getTestTempDirPath("points");
-    conf = new Configuration();
+    conf = getConfiguration();
     ClusteringTestUtils.writePointsToFile(points, new Path(pointsPath, "file1"), fs, conf);
     ClusteringTestUtils.writePointsToFile(points, new Path(pointsPath, "file2"), fs, conf);
 
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/common/MahoutTestCase.java b/mahout/trunk/core/src/test/java/org/apache/mahout/common/MahoutTestCase.java
index eabfb208..775c8d85 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/common/MahoutTestCase.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/common/MahoutTestCase.java
@@ -32,7 +32,7 @@
 import org.junit.After;
 import org.junit.Before;
 
-public abstract class MahoutTestCase extends org.apache.mahout.math.MahoutTestCase {
+public class MahoutTestCase extends org.apache.mahout.math.MahoutTestCase {
 
   /** "Close enough" value for floating-point comparisons. */
   public static final double EPSILON = 0.000001;
@@ -64,7 +64,7 @@ public void tearDown() throws Exception {
     super.tearDown();
   }
 
-  protected final Configuration getConfiguration() throws IOException {
+  public final Configuration getConfiguration() throws IOException {
     Configuration conf = new Configuration();
     conf.set("hadoop.tmp.dir", getTestTempDir("hadoop" + Math.random()).getAbsolutePath());
     return conf;
@@ -72,7 +72,7 @@ protected final Configuration getConfiguration() throws IOException {
 
   protected final Path getTestTempDirPath() throws IOException {
     if (testTempDirPath == null) {
-      fs = FileSystem.get(new Configuration());
+      fs = FileSystem.get(getConfiguration());
       long simpleRandomLong = (long) (Long.MAX_VALUE * Math.random());
       testTempDirPath = fs.makeQualified(
           new Path("/tmp/mahout-" + getClass().getSimpleName() + '-' + simpleRandomLong));
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/TestDistributedRowMatrix.java b/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/TestDistributedRowMatrix.java
index 31b7e0ca..4c09cfc0 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/TestDistributedRowMatrix.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/TestDistributedRowMatrix.java
@@ -378,8 +378,8 @@ public DistributedRowMatrix randomDistributedMatrix(int numRows,
     return saveToFs(c, baseTmpDirPath);
   }
 
-  private static DistributedRowMatrix saveToFs(final Matrix m, Path baseTmpDirPath) throws IOException {
-    Configuration conf = new Configuration();
+  private DistributedRowMatrix saveToFs(final Matrix m, Path baseTmpDirPath) throws IOException {
+    Configuration conf = getConfiguration();
     FileSystem fs = FileSystem.get(baseTmpDirPath.toUri(), conf);
 
     ClusteringTestUtils.writePointsToFile(new Iterable<VectorWritable>() {
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/similarity/TestVectorDistanceSimilarityJob.java b/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/similarity/TestVectorDistanceSimilarityJob.java
index a0145665..bb2c3733 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/similarity/TestVectorDistanceSimilarityJob.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/similarity/TestVectorDistanceSimilarityJob.java
@@ -170,7 +170,7 @@ public void testMaxDistance() throws Exception {
     List<VectorWritable> points = getPointsWritable(REFERENCE);
     List<VectorWritable> seeds = getPointsWritable(SEEDS);
 
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     ClusteringTestUtils.writePointsToFile(points, true, new Path(input, "file1"), fs, conf);
     ClusteringTestUtils.writePointsToFile(seeds, true, new Path(seedsPath, "part-seeds"), fs, conf);
 
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/stochasticsvd/LocalSSVDSolverDenseTest.java b/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/stochasticsvd/LocalSSVDSolverDenseTest.java
index ba5abdfa..784c7a54 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/stochasticsvd/LocalSSVDSolverDenseTest.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/stochasticsvd/LocalSSVDSolverDenseTest.java
@@ -69,7 +69,7 @@ public void testSSVDSolverPowerIterations2() throws IOException {
 
   public void runSSVDSolver(int q) throws IOException {
 
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     conf.set("mapred.job.tracker", "local");
     conf.set("fs.default.name", "file:///");
 
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/stochasticsvd/LocalSSVDSolverSparseSequentialTest.java b/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/stochasticsvd/LocalSSVDSolverSparseSequentialTest.java
index 0b937daf..cd206df5 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/stochasticsvd/LocalSSVDSolverSparseSequentialTest.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/stochasticsvd/LocalSSVDSolverSparseSequentialTest.java
@@ -71,7 +71,7 @@ public void testSSVDSolverPowerIterations1() throws IOException {
 
   public void runSSVDSolver(int q) throws IOException {
 
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     conf.set("mapred.job.tracker", "local");
     conf.set("fs.default.name", "file:///");
 
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/stochasticsvd/SSVDTestsHelper.java b/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/stochasticsvd/SSVDTestsHelper.java
index 05d3402b..7a0c8862 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/stochasticsvd/SSVDTestsHelper.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/math/hadoop/stochasticsvd/SSVDTestsHelper.java
@@ -26,6 +26,7 @@
 import org.apache.hadoop.io.IntWritable;
 import org.apache.hadoop.io.SequenceFile;
 import org.apache.hadoop.io.Writable;
+import org.apache.mahout.common.MahoutTestCase;
 import org.apache.mahout.common.RandomUtils;
 import org.apache.mahout.math.DenseMatrix;
 import org.apache.mahout.math.DenseVector;
@@ -115,7 +116,8 @@ static Matrix generateDenseOrthonormalRandom(int m, int n, Random rnd) {
   // do not use. for internal consumption only.
   public static void main(String[] args) throws Exception {
     // create 1Gb input for distributed tests.
-    Configuration conf = new Configuration();
+    MahoutTestCase ca = new MahoutTestCase();
+    Configuration conf = ca.getConfiguration();
     FileSystem dfs = FileSystem.getLocal(conf);
     Path outputDir=new Path("/tmp/DRM");
     dfs.mkdirs(outputDir);
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/collocations/llr/CollocMapperTest.java b/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/collocations/llr/CollocMapperTest.java
index 074faa6d..188ce23a 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/collocations/llr/CollocMapperTest.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/collocations/llr/CollocMapperTest.java
@@ -72,7 +72,7 @@ public void testCollectNgrams() throws Exception {
                           {"t_of", "worst of"},};
     // set up expectations for mocks. ngram max size = 2
     
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     conf.set(CollocMapper.MAX_SHINGLE_SIZE, "2");
     EasyMock.expect(context.getConfiguration()).andReturn(conf);
     
@@ -134,7 +134,7 @@ public void testCollectNgramsWithUnigrams() throws Exception {
                                          {"u_times", "times"},};
 
     // set up expectations for mocks. ngram max size = 2
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     conf.set(CollocMapper.MAX_SHINGLE_SIZE, "2");
     conf.setBoolean(CollocDriver.EMIT_UNIGRAMS, true);
     EasyMock.expect(context.getConfiguration()).andReturn(conf);
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/collocations/llr/LLRReducerTest.java b/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/collocations/llr/LLRReducerTest.java
index 79b3a9d0..9d346616 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/collocations/llr/LLRReducerTest.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/collocations/llr/LLRReducerTest.java
@@ -90,7 +90,7 @@ public void testReduce() throws Exception {
                             {1, 0, 1, 5}  // worst of
     };
     
-    Configuration config = new Configuration();
+    Configuration config = getConfiguration();
     config.set(LLRReducer.NGRAM_TOTAL, "7");
     EasyMock.expect(context.getConfiguration()).andReturn(config);
     
diff --git a/mahout/trunk/examples/src/test/java/org/apache/mahout/clustering/display/ClustersFilterTest.java b/mahout/trunk/examples/src/test/java/org/apache/mahout/clustering/display/ClustersFilterTest.java
index e8af1800..6e43b97b 100644
--- a/mahout/trunk/examples/src/test/java/org/apache/mahout/clustering/display/ClustersFilterTest.java
+++ b/mahout/trunk/examples/src/test/java/org/apache/mahout/clustering/display/ClustersFilterTest.java
@@ -35,7 +35,7 @@
   @Before
   public void setUp() throws Exception {
     super.setUp();
-    configuration = new Configuration();
+    configuration = getConfiguration();
     output = getTestTempDirPath();
   }
 
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/TestClusterDumper.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/TestClusterDumper.java
index e0814c8f..a4dbdb96 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/TestClusterDumper.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/TestClusterDumper.java
@@ -24,6 +24,7 @@
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
+import org.apache.hadoop.util.ToolRunner;
 import org.apache.lucene.analysis.standard.StandardAnalyzer;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
@@ -82,7 +83,7 @@
   @Before
   public void setUp() throws Exception {
     super.setUp();
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     FileSystem fs = FileSystem.get(conf);
     // Create test data
     getSampleData(DOCS);
@@ -175,7 +176,7 @@ public void testCanopy() throws Exception { // now run the Job
     DistanceMeasure measure = new EuclideanDistanceMeasure();
     
     Path output = getTestTempDirPath("output");
-    CanopyDriver.run(new Configuration(), getTestTempDirPath("testdata"),
+    CanopyDriver.run(getConfiguration(), getTestTempDirPath("testdata"),
         output, measure, 8, 4, true, 0.0, true);
     // run ClusterDumper
     ClusterDumper clusterDumper = new ClusterDumper(new Path(output,
@@ -206,7 +207,7 @@ public void testFuzzyKmeans() throws Exception {
     DistanceMeasure measure = new EuclideanDistanceMeasure();
     // now run the Canopy job to prime kMeans canopies
     Path output = getTestTempDirPath("output");
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     CanopyDriver.run(conf, getTestTempDirPath("testdata"), output, measure, 8,
         4, false, 0.0, true);
     // now run the Fuzzy KMeans job
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/TestClusterEvaluator.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/TestClusterEvaluator.java
index 6557a5a3..343f4f53 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/TestClusterEvaluator.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/TestClusterEvaluator.java
@@ -71,7 +71,7 @@
   @Before
   public void setUp() throws Exception {
     super.setUp();
-    conf = new Configuration();
+    conf = getConfiguration();
     fs = FileSystem.get(conf);
     testdata = getTestTempDirPath("testdata");
     output = getTestTempDirPath("output");
@@ -262,7 +262,7 @@ public void testAllSameValueCluster() throws IOException {
   public void testCanopy() throws Exception {
     ClusteringTestUtils.writePointsToFile(sampleData, new Path(testdata, "file1"), fs, conf);
     DistanceMeasure measure = new EuclideanDistanceMeasure();
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     CanopyDriver.run(conf, testdata, output, measure, 3.1, 1.1, true, 0.0, true);
     int numIterations = 10;
     Path clustersIn = new Path(output, "clusters-0-final");
@@ -280,7 +280,7 @@ public void testKmeans() throws Exception {
     ClusteringTestUtils.writePointsToFile(sampleData, new Path(testdata, "file1"), fs, conf);
     DistanceMeasure measure = new EuclideanDistanceMeasure();
     // now run the Canopy job to prime kMeans canopies
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     CanopyDriver.run(conf, testdata, output, measure, 3.1, 1.1, false, 0.0, true);
     // now run the KMeans job
     Path kmeansOutput = new Path(output, "kmeans");
@@ -301,7 +301,7 @@ public void testFuzzyKmeans() throws Exception {
     ClusteringTestUtils.writePointsToFile(sampleData, new Path(testdata, "file1"), fs, conf);
     DistanceMeasure measure = new EuclideanDistanceMeasure();
     // now run the Canopy job to prime kMeans canopies
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     CanopyDriver.run(conf, testdata, output, measure, 3.1, 1.1, false, 0.0, true);
     Path fuzzyKMeansOutput = new Path(output, "fuzzyk");
     // now run the KMeans job
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/cdbw/TestCDbwEvaluator.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/cdbw/TestCDbwEvaluator.java
index 65171177..0ad0c4a5 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/cdbw/TestCDbwEvaluator.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/cdbw/TestCDbwEvaluator.java
@@ -75,7 +75,7 @@
   @Before
   public void setUp() throws Exception {
     super.setUp();
-    conf = new Configuration();
+    conf = getConfiguration();
     fs = FileSystem.get(conf);
     testdata = getTestTempDirPath("testdata");
     output = getTestTempDirPath("output");
@@ -266,7 +266,7 @@ public void testAlmostSameValueCluster() throws IOException {
   public void testCanopy() throws Exception {
     ClusteringTestUtils.writePointsToFile(sampleData, getTestTempFilePath("testdata/file1"), fs, conf);
     DistanceMeasure measure = new EuclideanDistanceMeasure();
-    CanopyDriver.run(new Configuration(), testdata, output, measure, 3.1, 2.1, true, 0.0, true);
+    CanopyDriver.run(getConfiguration(), testdata, output, measure, 3.1, 2.1, true, 0.0, true);
     int numIterations = 10;
     Path clustersIn = new Path(output, "clusters-0-final");
     RepresentativePointsDriver.run(conf, clustersIn, new Path(output, "clusteredPoints"), output, measure,
@@ -285,7 +285,7 @@ public void testKmeans() throws Exception {
     ClusteringTestUtils.writePointsToFile(sampleData, getTestTempFilePath("testdata/file1"), fs, conf);
     DistanceMeasure measure = new EuclideanDistanceMeasure();
     // now run the Canopy job to prime kMeans canopies
-    CanopyDriver.run(new Configuration(), testdata, output, measure, 3.1, 2.1, false, 0.0, true);
+    CanopyDriver.run(getConfiguration(), testdata, output, measure, 3.1, 2.1, false, 0.0, true);
     // now run the KMeans job
     Path kmeansOutput = new Path(output, "kmeans");
     KMeansDriver.run(testdata, new Path(output, "clusters-0-final"), kmeansOutput, measure, 0.001, 10, true, 0.0, true);
@@ -307,7 +307,7 @@ public void testFuzzyKmeans() throws Exception {
     ClusteringTestUtils.writePointsToFile(sampleData, getTestTempFilePath("testdata/file1"), fs, conf);
     DistanceMeasure measure = new EuclideanDistanceMeasure();
     // now run the Canopy job to prime kMeans canopies
-    CanopyDriver.run(new Configuration(), testdata, output, measure, 3.1, 2.1, false, 0.0, true);
+    CanopyDriver.run(getConfiguration(), testdata, output, measure, 3.1, 2.1, false, 0.0, true);
     Path fuzzyKMeansOutput = new Path(output, "fuzzyk");
     // now run the KMeans job
     FuzzyKMeansDriver.run(testdata, new Path(output, "clusters-0-final"), fuzzyKMeansOutput, measure, 0.001, 10, 2,
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/LuceneSegmentInputFormatTest.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/LuceneSegmentInputFormatTest.java
index 1d22a8d1..02af3479 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/LuceneSegmentInputFormatTest.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/LuceneSegmentInputFormatTest.java
@@ -41,7 +41,8 @@
   @Before
   public void before() throws Exception {
     inputFormat = new LuceneSegmentInputFormat();
-    LuceneStorageConfiguration lucene2SeqConf = new LuceneStorageConfiguration(new Configuration(), Collections.singletonList(indexPath1), new Path("output"), "id", Collections.singletonList("field"));
+    LuceneStorageConfiguration lucene2SeqConf = new
+    LuceneStorageConfiguration(getConfiguration(), Collections.singletonList(indexPath1), new Path("output"), "id", Collections.singletonList("field"));
     conf = lucene2SeqConf.serialize();
 
     jobContext = getJobContext(conf, new JobID());
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/LuceneSegmentInputSplitTest.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/LuceneSegmentInputSplitTest.java
index c6364afe..302754c4 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/LuceneSegmentInputSplitTest.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/LuceneSegmentInputSplitTest.java
@@ -37,7 +37,7 @@
 
   @Before
   public void before() throws IOException {
-    configuration = new Configuration();
+    configuration = getConfiguration();
   }
 
   @After
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/LuceneSegmentRecordReaderTest.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/LuceneSegmentRecordReaderTest.java
index 8a772884..bf1c2531 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/LuceneSegmentRecordReaderTest.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/LuceneSegmentRecordReaderTest.java
@@ -39,7 +39,8 @@
 
   @Before
   public void before() throws IOException, InterruptedException {
-    LuceneStorageConfiguration lucene2SeqConf = new LuceneStorageConfiguration(new Configuration(), asList(getIndexPath1()), new Path("output"), "id", asList("field"));
+    LuceneStorageConfiguration lucene2SeqConf = new
+    LuceneStorageConfiguration(getConfiguration(), asList(getIndexPath1()), new Path("output"), "id", asList("field"));
     configuration = lucene2SeqConf.serialize();
     commitDocuments(getDirectory(getIndexPath1AsFile()), docs.subList(0, 500));
     commitDocuments(getDirectory(getIndexPath1AsFile()), docs.subList(500, 1000));
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/LuceneStorageConfigurationTest.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/LuceneStorageConfigurationTest.java
index f07bbbcd..d1e65c16 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/LuceneStorageConfigurationTest.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/LuceneStorageConfigurationTest.java
@@ -18,6 +18,7 @@
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.Path;
+import org.apache.mahout.common.MahoutTestCase;
 import org.junit.Test;
 
 import java.io.IOException;
@@ -25,11 +26,11 @@
 import static java.util.Arrays.asList;
 import static org.junit.Assert.assertEquals;
 
-public class LuceneStorageConfigurationTest {
+public class LuceneStorageConfigurationTest extends MahoutTestCase {
   
   @Test
   public void testSerialization() throws Exception {
-    Configuration configuration = new Configuration();
+    Configuration configuration = getConfiguration();
     Path indexPath = new Path("indexPath");
     Path outputPath = new Path("outputPath");
     LuceneStorageConfiguration luceneStorageConfiguration =
@@ -44,6 +45,6 @@ public void testSerialization() throws Exception {
   
   @Test(expected = IllegalArgumentException.class)
   public void testSerializationNotSerialized() throws IOException {
-    new LuceneStorageConfiguration(new Configuration());
+    new LuceneStorageConfiguration(getConfiguration());
   }
 }
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromLuceneStorageDriverTest.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromLuceneStorageDriverTest.java
index 336d630b..bc4c03a9 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromLuceneStorageDriverTest.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromLuceneStorageDriverTest.java
@@ -48,7 +48,7 @@
 
   @Before
   public void before() throws Exception {
-    conf = new Configuration();
+    conf = getConfiguration();
     conf.set("io.serializations", "org.apache.hadoop.io.serializer.JavaSerialization,"
       + "org.apache.hadoop.io.serializer.WritableSerialization");
 
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromLuceneStorageMRJobTest.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromLuceneStorageMRJobTest.java
index 92bda634..edb2bf25 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromLuceneStorageMRJobTest.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromLuceneStorageMRJobTest.java
@@ -41,7 +41,7 @@
   @Before
   public void before() throws IOException {
     lucene2seq = new SequenceFilesFromLuceneStorageMRJob();
-    Configuration configuration = new Configuration();
+    Configuration configuration = getConfiguration();
     Path seqOutputPath = new Path(getTestTempDirPath(), "seqOutputPath");//don't make the output directory
     lucene2SeqConf = new LuceneStorageConfiguration(configuration, asList(getIndexPath1(), getIndexPath2()),
             seqOutputPath, SingleFieldDocument.ID_FIELD, asList(SingleFieldDocument.FIELD));
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromLuceneStorageTest.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromLuceneStorageTest.java
index 90b3975d..3f9305c1 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromLuceneStorageTest.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromLuceneStorageTest.java
@@ -48,7 +48,7 @@
 
   @Before
   public void before() throws IOException {
-    configuration = new Configuration();
+    configuration = getConfiguration();
     seqFilesOutputPath = new Path(getTestTempDirPath(), "seqfiles");
 
     lucene2Seq = new SequenceFilesFromLuceneStorage();
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromMailArchivesTest.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromMailArchivesTest.java
index e1998256..b281d35e 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromMailArchivesTest.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/SequenceFilesFromMailArchivesTest.java
@@ -98,7 +98,7 @@ public void testSequential() throws Exception {
     String expectedChunkPath = expectedChunkFile.getAbsolutePath();
     Assert.assertTrue("Expected chunk file " + expectedChunkPath + " not found!", expectedChunkFile.isFile());
 
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     SequenceFileIterator<Text, Text> iterator = new SequenceFileIterator<Text, Text>(new Path(expectedChunkPath), true, conf);
     Assert.assertTrue("First key/value pair not found!", iterator.hasNext());
     Pair<Text, Text> record = iterator.next();
@@ -131,7 +131,7 @@ public void testMapReduce() throws Exception {
 
     Path tmpDir = this.getTestTempDirPath();
     Path mrOutputDir = new Path(tmpDir, "mail-archives-out-mr");
-    Configuration configuration = new Configuration();
+    Configuration configuration = getConfiguration();
     FileSystem fs = FileSystem.get(configuration);
 
     File expectedInputFile = new File(inputDir.toString());
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/TestSequenceFilesFromDirectory.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/TestSequenceFilesFromDirectory.java
index 05bc18ed..148ac129 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/text/TestSequenceFilesFromDirectory.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/text/TestSequenceFilesFromDirectory.java
@@ -59,7 +59,7 @@
   @Test
   public void testSequenceFileFromDirectoryBasic() throws Exception {
     // parameters
-    Configuration configuration = new Configuration();
+    Configuration configuration = getConfiguration();
 
     FileSystem fs = FileSystem.get(configuration);
 
@@ -108,7 +108,7 @@ public void testSequenceFileFromDirectoryBasic() throws Exception {
   @Test
   public void testSequenceFileFromDirectoryMapReduce() throws Exception {
 
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
 
     FileSystem fs = FileSystem.get(conf);
 
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/TestConcatenateVectorsJob.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/TestConcatenateVectorsJob.java
index d615cc2d..c0fcb892 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/TestConcatenateVectorsJob.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/TestConcatenateVectorsJob.java
@@ -50,7 +50,7 @@
   @Test
   public void testConcatenateVectorsReducer() throws Exception {
     
-    Configuration configuration = new Configuration();
+    Configuration configuration = getConfiguration();
     configuration.set(ConcatenateVectorsJob.MATRIXA_DIMS, "5");
     configuration.set(ConcatenateVectorsJob.MATRIXB_DIMS, "3");
     
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/regex/RegexMapperTest.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/regex/RegexMapperTest.java
index ea2548e1..728a78c5 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/regex/RegexMapperTest.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/regex/RegexMapperTest.java
@@ -32,7 +32,7 @@
   @Test
   public void testRegex() throws Exception {
     RegexMapper mapper = new RegexMapper();
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     conf.set(RegexMapper.REGEX, "(?<=(\\?|&)q=).*?(?=&|$)");
     conf.set(RegexMapper.TRANSFORMER_CLASS, URLDecodeTransformer.class.getName());
     DummyRecordWriter<LongWritable, Text> mapWriter = new DummyRecordWriter<LongWritable, Text>();
@@ -56,7 +56,7 @@ public void testRegex() throws Exception {
   @Test
   public void testGroups() throws Exception {
     RegexMapper mapper = new RegexMapper();
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     conf.set(RegexMapper.REGEX, "(\\d+)\\.(\\d+)\\.(\\d+)");
     conf.set(RegexMapper.TRANSFORMER_CLASS, URLDecodeTransformer.class.getName());
     conf.setStrings(RegexMapper.GROUP_MATCHERS, "1", "3");
@@ -79,7 +79,7 @@ public void testGroups() throws Exception {
   @Test
   public void testFPGFormatter() throws Exception {
     RegexMapper mapper = new RegexMapper();
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     conf.set(RegexMapper.REGEX, "(?<=(\\?|&)q=).*?(?=&|$)");
     conf.set(RegexMapper.TRANSFORMER_CLASS, URLDecodeTransformer.class.getName());
     conf.set(RegexMapper.FORMATTER_CLASS, FPGFormatter.class.getName());
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/io/VectorWriterTest.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/io/VectorWriterTest.java
index 511bf5cf..96b2704c 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/io/VectorWriterTest.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/io/VectorWriterTest.java
@@ -41,7 +41,7 @@
   @Test
   public void testSFVW() throws Exception {
     Path path = getTestTempFilePath("sfvw");
-    Configuration conf = new Configuration();
+    Configuration conf = getConfiguration();
     FileSystem fs = FileSystem.get(conf);
     SequenceFile.Writer seqWriter = new SequenceFile.Writer(fs, conf, path, LongWritable.class, VectorWritable.class);
     SequenceFileVectorWriter writer = new SequenceFileVectorWriter(seqWriter);
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/DriverTest.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/DriverTest.java
index 2a50bc82..cbd91064 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/DriverTest.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/DriverTest.java
@@ -59,7 +59,7 @@ public void setUp() throws Exception {
     outputDir = getTestTempDir("output");
     outputDir.delete();
 
-    conf = new Configuration();
+    conf = getConfiguration();
   }
 
   private Document asDocument(String line) {
