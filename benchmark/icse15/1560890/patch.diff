diff --git a/mahout/trunk/math/src/main/java/org/apache/mahout/math/MatrixVectorView.java b/mahout/trunk/math/src/main/java/org/apache/mahout/math/MatrixVectorView.java
index da088d24..2aa1c09c 100644
--- a/mahout/trunk/math/src/main/java/org/apache/mahout/math/MatrixVectorView.java
+++ b/mahout/trunk/math/src/main/java/org/apache/mahout/math/MatrixVectorView.java
@@ -38,10 +38,10 @@ public MatrixVectorView(Matrix matrix, int row, int column, int rowStride, int c
 
   public MatrixVectorView(Matrix matrix, int row, int column, int rowStride, int columnStride) {
     super(viewSize(matrix, row, column, rowStride, columnStride));
-    if (row < 0 || row > matrix.rowSize()) {
+    if (row < 0 || row >= matrix.rowSize()) {
       throw new IndexException(row, matrix.rowSize());
     }
-    if (column < 0 || column > matrix.columnSize()) {
+    if (column < 0 || column >= matrix.columnSize()) {
       throw new IndexException(column, matrix.columnSize());
     }
 
diff --git a/mahout/trunk/math/src/test/java/org/apache/mahout/math/MatrixVectorViewTest.java b/mahout/trunk/math/src/test/java/org/apache/mahout/math/MatrixVectorViewTest.java
index 6e9a592c..400df8d9 100644
--- a/mahout/trunk/math/src/test/java/org/apache/mahout/math/MatrixVectorViewTest.java
+++ b/mahout/trunk/math/src/test/java/org/apache/mahout/math/MatrixVectorViewTest.java
@@ -17,6 +17,7 @@
 
 package org.apache.mahout.math;
 
+import org.apache.mahout.math.function.Functions;
 import org.junit.Test;
 
 public class MatrixVectorViewTest extends MahoutTestCase {
@@ -34,4 +35,24 @@ public void testColumnView() {
     assertEquals(matrix.numRows(), outerProduct.numRows());
     assertEquals(matrix.numRows(), outerProduct.numCols());
   }
+
+  /**
+   * Test for out of range column or row access.
+   */
+  @Test
+  public void testIndexRange() {
+    Matrix m = new DenseMatrix(20, 30).assign(Functions.random());
+    try {
+      m.viewColumn(30);
+      fail("Should have thrown exception");
+    } catch (IllegalArgumentException e) {
+      assertTrue(e.getMessage().startsWith("Index 30 is outside allowable"));
+    }
+    try {
+      m.viewRow(20);
+      fail("Should have thrown exception");
+    } catch (IllegalArgumentException e) {
+      assertTrue(e.getMessage().startsWith("Index 20 is outside allowable"));
+    }
+  }
 }
