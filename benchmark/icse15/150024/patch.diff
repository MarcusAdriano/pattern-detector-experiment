diff --git a/lucene/java/trunk/src/java/org/apache/lucene/search/Similarity.java b/lucene/java/trunk/src/java/org/apache/lucene/search/Similarity.java
index b5eedce5..2f8de536 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/search/Similarity.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/search/Similarity.java
@@ -60,7 +60,6 @@
 import org.apache.lucene.index.Term;
 
 import org.apache.lucene.index.IndexWriter;       // for javadoc
-import org.apache.lucene.index.IndexReader;       // for javadoc
 import org.apache.lucene.document.Field;          // for javadoc
 
 
@@ -229,13 +228,13 @@ private static byte floatToByte(float f) {
    * form the initial score for a document.
    *
    * <p>Terms and phrases repeated in a document indicate the topic of the
-   * document, so implemenations of this method usually return larger values
+   * document, so implementations of this method usually return larger values
    * when <code>freq</code> is large, and smaller values when <code>freq</code>
    * is small.
    *
    * <p>The default implementation calls {@link #tf(float)}.
    *
-   * @param tf the frequency of a term within a document
+   * @param freq the frequency of a term within a document
    * @return a score factor based on a term's within-document frequency
    */
   public float tf(int freq) {
@@ -247,7 +246,7 @@ public float tf(int freq) {
    * the frequency that is passed to {@link #tf(float)}.
    *
    * <p>A phrase match with a small edit distance to a document passage more
-   * closely matches the document, so implemenations of this method usually
+   * closely matches the document, so implementations of this method usually
    * return larger values when the edit distance is small and smaller values
    * when it is large.
    *
@@ -267,7 +266,7 @@ public float tf(int freq) {
    * when <code>freq</code> is large, and smaller values when <code>freq</code>
    * is small.
    *
-   * @param tf the frequency of a term within a document
+   * @param freq the frequency of a term within a document
    * @return a score factor based on a term's within-document frequency
    */
   public abstract float tf(float freq);
