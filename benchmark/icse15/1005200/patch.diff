diff --git a/cassandra/trunk/src/java/org/apache/cassandra/avro/CassandraServer.java b/cassandra/trunk/src/java/org/apache/cassandra/avro/CassandraServer.java
index 71ef2a66..f2a34089 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/avro/CassandraServer.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/avro/CassandraServer.java
@@ -670,7 +670,7 @@ public CharSequence system_add_keyspace(KsDef ksDef) throws AvroRemoteException,
 
             KSMetaData ksmeta = new KSMetaData(
                     ksDef.name.toString(),
-                    (Class<? extends AbstractReplicationStrategy>)Class.forName(ksDef.strategy_class.toString()),
+                    FBUtilities.<AbstractReplicationStrategy>classForName(ksDef.strategy_class.toString(), "keyspace replication strategy"),
                     strategyOptions,
                     ksDef.replication_factor,
                     cfDefs.toArray(new CFMetaData[cfDefs.size()]));
@@ -678,10 +678,6 @@ public CharSequence system_add_keyspace(KsDef ksDef) throws AvroRemoteException,
             return DatabaseDescriptor.getDefsVersion().toString();
             
         }
-        catch (ClassNotFoundException e)
-        {
-            throw newInvalidRequestException(e);
-        }
         catch (ConfigurationException e)
         {
             throw newInvalidRequestException(e);
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/thrift/CassandraServer.java b/cassandra/trunk/src/java/org/apache/cassandra/thrift/CassandraServer.java
index ce402678..b27a1c09 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/thrift/CassandraServer.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/thrift/CassandraServer.java
@@ -789,19 +789,13 @@ public String system_add_keyspace(KsDef ks_def) throws InvalidRequestException,
             }
 
             KSMetaData ksm = new KSMetaData(ks_def.name,
-                                            (Class<? extends AbstractReplicationStrategy>) Class.forName(ks_def.strategy_class),
+                                            FBUtilities.<AbstractReplicationStrategy>classForName(ks_def.strategy_class, "keyspace replication strategy"),
                                             ks_def.strategy_options,
                                             ks_def.replication_factor,
                                             cfDefs.toArray(new CFMetaData[cfDefs.size()]));
             applyMigrationOnStage(new AddKeyspace(ksm));
             return DatabaseDescriptor.getDefsVersion().toString();
         }
-        catch (ClassNotFoundException e)
-        {
-            InvalidRequestException ex = new InvalidRequestException(e.getMessage());
-            ex.initCause(e);
-            throw ex;
-        }
         catch (ConfigurationException e)
         {
             InvalidRequestException ex = new InvalidRequestException(e.getMessage());
@@ -841,7 +835,7 @@ public String system_drop_keyspace(String keyspace) throws InvalidRequestExcepti
 
     public String system_rename_keyspace(String old_name, String new_name) throws InvalidRequestException, TException
     {
-        state().hasColumnFamilyListAccess(Permission.WRITE);
+        state().hasKeyspaceListAccess(Permission.WRITE);
         
         try
         {
@@ -865,7 +859,7 @@ public String system_rename_keyspace(String old_name, String new_name) throws In
     /** update an existing keyspace, but do not allow column family modifications. */
     public String system_update_keyspace(KsDef ks_def) throws InvalidRequestException, TException
     {
-        state().hasColumnFamilyListAccess(Permission.WRITE);
+        state().hasKeyspaceListAccess(Permission.WRITE);
         
         if (ks_def.getCf_defs() != null && ks_def.getCf_defs().size() > 0)
             throw new InvalidRequestException("Keyspace update must not contain any column family definitions.");
