diff --git a/lucene/dev/branches/branch_3x/lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java b/lucene/dev/branches/branch_3x/lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java
index 7ddc9603..06dab2f3 100644
--- a/lucene/dev/branches/branch_3x/lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java
+++ b/lucene/dev/branches/branch_3x/lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianAnalyzer.java
@@ -114,7 +114,7 @@
 	private Set<?> excltable = Collections.emptySet();
 	
 	/**
-	 * Builds an analyzer with the default stop words ({@link #BRAZILIAN_STOP_WORDS}).
+	 * Builds an analyzer with the default stop words ({@link #getDefaultStopSet()}).
 	 */
 	public BrazilianAnalyzer(Version matchVersion) {
     this(matchVersion, DefaultSetHolder.DEFAULT_STOP_SET);
diff --git a/lucene/dev/branches/branch_3x/lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java b/lucene/dev/branches/branch_3x/lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java
index c8974570..f0d3d631 100644
--- a/lucene/dev/branches/branch_3x/lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java
+++ b/lucene/dev/branches/branch_3x/lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java
@@ -73,7 +73,7 @@
   //~ Constructors -----------------------------------------------------------
 
   /**
-   * Builds an analyzer which removes words in {@link #STOP_WORDS}.
+   * Builds an analyzer which removes words in {@link #getDefaultStopSet()}.
    */
   public CJKAnalyzer(Version matchVersion) {
     this(matchVersion, DefaultSetHolder.DEFAULT_STOP_SET);
diff --git a/lucene/dev/branches/branch_3x/lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java b/lucene/dev/branches/branch_3x/lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java
index 7eacd420..c5dd3fc8 100644
--- a/lucene/dev/branches/branch_3x/lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java
+++ b/lucene/dev/branches/branch_3x/lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/cz/CzechAnalyzer.java
@@ -120,7 +120,7 @@
   private final Set<?> stemExclusionTable;
 
   /**
-   * Builds an analyzer with the default stop words ({@link #CZECH_STOP_WORDS}).
+   * Builds an analyzer with the default stop words ({@link #getDefaultStopSet()}).
    * 
    * @param matchVersion Lucene version to match See
    *          {@link <a href="#version">above</a>}
diff --git a/lucene/dev/branches/branch_3x/lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java b/lucene/dev/branches/branch_3x/lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java
index af066d1b..5c88692f 100644
--- a/lucene/dev/branches/branch_3x/lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java
+++ b/lucene/dev/branches/branch_3x/lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java
@@ -116,7 +116,7 @@
   private final Version matchVersion;
 
   /**
-   * Builds an analyzer with the default stop words ({@link #DUTCH_STOP_WORDS}) 
+   * Builds an analyzer with the default stop words ({@link #getDefaultStopSet()}) 
    * and a few default entries for the stem exclusion table.
    * 
    */
diff --git a/lucene/dev/branches/branch_3x/lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexWriter.java b/lucene/dev/branches/branch_3x/lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexWriter.java
index e62345b4..f7ed5c23 100644
--- a/lucene/dev/branches/branch_3x/lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexWriter.java
+++ b/lucene/dev/branches/branch_3x/lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexWriter.java
@@ -126,14 +126,14 @@ public InstantiatedIndexWriter(InstantiatedIndex index, Analyzer analyzer, boole
    *  MAddDocs_20000 -   7 4000 100 false -  -   1 -  -   20000 -  -   535,8 -  -  37,33 - 309 680 640 -  501 968 896
    * </pre>
    *
-   * @see org.apache.lucene.index.IndexWriter#setMergeFactor(int)
+   * @see org.apache.lucene.index.LogMergePolicy#setMergeFactor(int)
    */
   public void setMergeFactor(int mergeFactor) {
     this.mergeFactor = mergeFactor;
   }
 
   /**
-   * @see org.apache.lucene.index.IndexWriter#getMergeFactor()
+   * @see org.apache.lucene.index.LogMergePolicy#getMergeFactor()
    */
   public int getMergeFactor() {
     return mergeFactor;
diff --git a/lucene/dev/branches/branch_3x/solr/src/common/org/apache/solr/common/params/FacetParams.java b/lucene/dev/branches/branch_3x/solr/src/common/org/apache/solr/common/params/FacetParams.java
index fc8dcc4b..7c1f3622 100644
--- a/lucene/dev/branches/branch_3x/solr/src/common/org/apache/solr/common/params/FacetParams.java
+++ b/lucene/dev/branches/branch_3x/solr/src/common/org/apache/solr/common/params/FacetParams.java
@@ -207,7 +207,6 @@
    * String indicating what "other" ranges should be computed for a
    * numerical range facet (multi-value).
    * Can be overriden on a per field basis.
-   * @see FacetNumberOther
    */
   public static final String FACET_RANGE_OTHER = FACET_RANGE + ".other";
   /**
diff --git a/lucene/dev/branches/branch_3x/solr/src/common/org/apache/solr/common/util/StrUtils.java b/lucene/dev/branches/branch_3x/solr/src/common/org/apache/solr/common/util/StrUtils.java
index 7848358f..fc2187aa 100644
--- a/lucene/dev/branches/branch_3x/solr/src/common/org/apache/solr/common/util/StrUtils.java
+++ b/lucene/dev/branches/branch_3x/solr/src/common/org/apache/solr/common/util/StrUtils.java
@@ -242,7 +242,7 @@ public static boolean parseBool(String s) {
    * {@link NullPointerException} and {@link SolrException} free version of {@link #parseBool(String)}
    * @param s
    * @param def
-   * @return
+   * @return parsed boolean value (or def, if s is null or invalid)
    */
   public static boolean parseBool(String s, boolean def) {
     if( s != null ) {
diff --git a/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/request/SolrQueryRequest.java b/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/request/SolrQueryRequest.java
index 6c450e1d..754b01dc 100644
--- a/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/request/SolrQueryRequest.java
+++ b/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/request/SolrQueryRequest.java
@@ -19,6 +19,7 @@
 
 import org.apache.solr.search.SolrIndexSearcher;
 import org.apache.solr.schema.IndexSchema;
+import org.apache.solr.common.params.CommonParams; //javadoc
 import org.apache.solr.common.params.SolrParams;
 import org.apache.solr.common.util.ContentStream;
 import org.apache.solr.core.SolrCore;
diff --git a/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/response/BaseResponseWriter.java b/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/response/BaseResponseWriter.java
index 5659b55d..9683cf0c 100644
--- a/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/response/BaseResponseWriter.java
+++ b/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/response/BaseResponseWriter.java
@@ -303,12 +303,12 @@ public void writeOther(String name, Object other) throws IOException { }
      * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}
      * so they can be processed as a whole, rather than on a doc-by-doc basis.
      * If set to false, this method calls
-     * {@link #writeAllDocs(DocListInfo, List)}, else if set to true, then this
+     * {@link #writeAllDocs(org.apache.solr.response.BaseResponseWriter.DocListInfo, List)}, else if set to true, then this
      * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc
      * basis. one
      * 
      * @return True to force {@link #writeDoc(SolrDocument)} to be called, False
-     *         to force {@link #writeAllDocs(DocListInfo, List)} to be called.
+     *         to force {@link #writeAllDocs(org.apache.solr.response.BaseResponseWriter.DocListInfo, List)} to be called.
      */
     public boolean isStreamingDocs() { return true; }
 
diff --git a/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/schema/IndexSchema.java b/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/schema/IndexSchema.java
index 4a418ce7..b8814854 100644
--- a/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/schema/IndexSchema.java
+++ b/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/schema/IndexSchema.java
@@ -108,7 +108,7 @@ public IndexSchema(SolrConfig solrConfig, String name) {
    * If the is stream is null, the resource loader will load the schema resource by name.
    * @see SolrResourceLoader#openSchema
    * By default, this follows the normal config path directory searching rules.
-   * @see Config#openResource
+   * @see SolrResourceLoader#openResource
    */
   public IndexSchema(SolrConfig solrConfig, String name, InputStream is) {
     this.solrConfig = solrConfig;
diff --git a/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java b/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java
index 52885c16..bde64013 100644
--- a/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java
+++ b/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/search/SolrIndexSearcher.java
@@ -378,7 +378,7 @@ public QueryResult search(QueryResult qr, QueryCommand cmd) throws IOException {
 
   /**
    * @return the indexDir on which this searcher is opened
-   * @see org.apache.solr.search.SolrIndexSearcher#SolrIndexSearcher(org.apache.solr.core.SolrCore, org.apache.solr.schema.IndexSchema, String, String, boolean)
+   * @see #SolrIndexSearcher(SolrCore, IndexSchema, String, Directory, boolean)
    */
   public String getIndexDir() {
     return indexDir;
diff --git a/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/search/SpatialFilterQParser.java b/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/search/SpatialFilterQParser.java
index 536141df..9ba48b1d 100644
--- a/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/search/SpatialFilterQParser.java
+++ b/lucene/dev/branches/branch_3x/solr/src/java/org/apache/solr/search/SpatialFilterQParser.java
@@ -32,7 +32,7 @@
 
 
 /**
- * @see {@link SpatialFilterQParserPlugin}
+ * @see SpatialFilterQParserPlugin
  */
 public class SpatialFilterQParser extends QParser {
   boolean bbox;  // do bounding box only
diff --git a/lucene/dev/branches/branch_3x/solr/src/solrj/org/apache/solr/client/solrj/response/SpellCheckResponse.java b/lucene/dev/branches/branch_3x/solr/src/solrj/org/apache/solr/client/solrj/response/SpellCheckResponse.java
index 25eb3c71..0bea8de5 100644
--- a/lucene/dev/branches/branch_3x/solr/src/solrj/org/apache/solr/client/solrj/response/SpellCheckResponse.java
+++ b/lucene/dev/branches/branch_3x/solr/src/solrj/org/apache/solr/client/solrj/response/SpellCheckResponse.java
@@ -112,7 +112,7 @@ public String getFirstSuggestion(String token) {
    * <p>
    *  Return the first collated query string.  For convenience and backwards-compatibility.  Use getCollatedResults() for full data.
    * </p>
-   * @return
+   * @return first collated query string
    */
   public String getCollatedResult() {
     return collations==null || collations.size()==0 ? null : collations.get(0).collationQueryString;
@@ -123,7 +123,7 @@ public String getCollatedResult() {
    *  Return all collations.  
    *  Will include # of hits and misspelling-to-correction details if "spellcheck.collateExtendedResults was true.
    * </p>
-   * @return
+   * @return all collations
    */
   public List<Collation> getCollatedResults() {
   	return collations;
