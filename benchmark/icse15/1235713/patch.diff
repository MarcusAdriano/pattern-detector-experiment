diff --git a/lucene/dev/branches/branch_3x/lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask.java b/lucene/dev/branches/branch_3x/lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask.java
index 54ed1b92..1950a623 100644
--- a/lucene/dev/branches/branch_3x/lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask.java
+++ b/lucene/dev/branches/branch_3x/lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/PerfTask.java
@@ -199,9 +199,6 @@ String getPadding () {
     return new String(c);
   }
   
-  /* (non-Javadoc)
-   * @see java.lang.Object#toString()
-   */
   @Override
   public String toString() {
     String padd = getPadding();
@@ -248,22 +245,23 @@ protected boolean shouldNotRecordStats () {
   }
 
   /**
-   * Task setup work that should not be measured for that specific task.
-   * By default it does nothing, but tasks can implement this, moving work from 
-   * doLogic() to this method. Only the work done in doLogicis measured for this task.
-   * Notice that higher level (sequence) tasks containing this task would then 
-   * measure larger time than the sum of their contained tasks.
-   * @throws Exception 
+   * Task setup work that should not be measured for that specific task. By
+   * default it does nothing, but tasks can implement this, moving work from
+   * {@link #doLogic()} to this method. Only the work done in {@link #doLogic()}
+   * is measured for this task. Notice that higher level (sequence) tasks
+   * containing this task would then measure larger time than the sum of their
+   * contained tasks.
    */
   public void setup () throws Exception {
   }
   
   /**
-   * Task tearDown work that should not be measured for that specific task.
-   * By default it does nothing, but tasks can implement this, moving work from 
-   * doLogic() to this method. Only the work done in doLogicis measured for this task.
-   * Notice that higher level (sequence) tasks containing this task would then 
-   * measure larger time than the sum of their contained tasks.
+   * Task tearDown work that should not be measured for that specific task. By
+   * default it does nothing, but tasks can implement this, moving work from
+   * {@link #doLogic()} to this method. Only the work done in {@link #doLogic()}
+   * is measured for this task. Notice that higher level (sequence) tasks
+   * containing this task would then measure larger time than the sum of their
+   * contained tasks.
    */
   public void tearDown() throws Exception {
     if (++logStepCount % logStep == 0) {
@@ -274,7 +272,9 @@ public void tearDown() throws Exception {
   }
 
   /**
-   * Sub classes that supports parameters must override this method to return true.
+   * Sub classes that support parameters must override this method to return
+   * true.
+   * 
    * @return true iff this task supports command line params.
    */
   public boolean supportsParams () {
@@ -283,7 +283,9 @@ public boolean supportsParams () {
   
   /**
    * Set the params of this task.
-   * @exception UnsupportedOperationException for tasks supporting command line parameters.
+   * 
+   * @exception UnsupportedOperationException
+   *              for tasks supporting command line parameters.
    */
   public void setParams(String params) {
     if (!supportsParams()) {
