diff --git a/aries/branches/0.2-incubating-RCx/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintContainerImpl.java b/aries/branches/0.2-incubating-RCx/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintContainerImpl.java
index 4f7a09bf..1562ca84 100644
--- a/aries/branches/0.2-incubating-RCx/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintContainerImpl.java
+++ b/aries/branches/0.2-incubating-RCx/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintContainerImpl.java
@@ -272,16 +272,16 @@ public void run() {
                                 synchronized (scheduled) {
                                     Throwable t = new TimeoutException();
                                     state = State.Failed;
+                                    String[] missingDependecies = getMissingDependencies();
                                     unregisterServices();
                                     untrackServiceReferences();
                                     destroyComponents();
-                                    String[] missingDependecies = getMissingDependencies();
                                     LOGGER.error("Unable to start blueprint container for bundle " + bundleContext.getBundle().getSymbolicName() + " due to unresolved dependencies " + Arrays.asList(missingDependecies), t);
                                     eventDispatcher.blueprintEvent(new BlueprintEvent(BlueprintEvent.FAILURE, getBundleContext().getBundle(), getExtenderBundle(), missingDependecies, t));
                                 }
                             }
                         };
-                        timeoutFuture = executors.schedule(r, timeout, TimeUnit.MILLISECONDS);
+                        timeoutFuture = executors.schedule(r, 10, TimeUnit.SECONDS);
                         state = State.WaitForInitialReferences;
                         break;
                     case WaitForInitialReferences:
