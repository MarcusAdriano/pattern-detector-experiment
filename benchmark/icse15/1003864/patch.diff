diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexWriter.java
index f6c7da7f..d44976b9 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexWriter.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/IndexWriter.java
@@ -184,6 +184,7 @@ defensive measure in case any internal state (buffered
    * @see #setDefaultWriteLockTimeout
    * @deprecated use {@link IndexWriterConfig#WRITE_LOCK_TIMEOUT} instead
    */
+  @Deprecated
   public static long WRITE_LOCK_TIMEOUT = IndexWriterConfig.WRITE_LOCK_TIMEOUT;
 
   private long writeLockTimeout;
@@ -197,6 +198,7 @@ defensive measure in case any internal state (buffered
    * Value to denote a flush trigger is disabled
    * @deprecated use {@link IndexWriterConfig#DISABLE_AUTO_FLUSH} instead
    */
+  @Deprecated
   public final static int DISABLE_AUTO_FLUSH = IndexWriterConfig.DISABLE_AUTO_FLUSH;
 
   /**
@@ -204,6 +206,7 @@ defensive measure in case any internal state (buffered
    * by default). Change using {@link #setMaxBufferedDocs(int)}.
    * @deprecated use {@link IndexWriterConfig#DEFAULT_MAX_BUFFERED_DOCS} instead.
    */
+  @Deprecated
   public final static int DEFAULT_MAX_BUFFERED_DOCS = IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS;
 
   /**
@@ -211,6 +214,7 @@ defensive measure in case any internal state (buffered
    * docs consume 16 MB RAM).  Change using {@link #setRAMBufferSizeMB}.
    * @deprecated use {@link IndexWriterConfig#DEFAULT_RAM_BUFFER_SIZE_MB} instead.
    */
+  @Deprecated
   public final static double DEFAULT_RAM_BUFFER_SIZE_MB = IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB;
 
   /**
@@ -218,6 +222,7 @@ defensive measure in case any internal state (buffered
    * by default). Change using {@link #setMaxBufferedDeleteTerms(int)}.
    * @deprecated use {@link IndexWriterConfig#DEFAULT_MAX_BUFFERED_DELETE_TERMS} instead
    */
+  @Deprecated
   public final static int DEFAULT_MAX_BUFFERED_DELETE_TERMS = IndexWriterConfig.DEFAULT_MAX_BUFFERED_DELETE_TERMS;
 
   /**
@@ -225,12 +230,14 @@ defensive measure in case any internal state (buffered
    * 
    * @deprecated see {@link IndexWriterConfig}
    */
+  @Deprecated
   public final static int DEFAULT_MAX_FIELD_LENGTH = 10000;
 
   /**
    * Default value is 128. Change using {@link #setTermIndexInterval(int)}.
    * @deprecated use {@link IndexWriterConfig#DEFAULT_TERM_INDEX_INTERVAL} instead.
    */
+  @Deprecated
   public final static int DEFAULT_TERM_INDEX_INTERVAL = IndexWriterConfig.DEFAULT_TERM_INDEX_INTERVAL;
 
   /**
@@ -751,6 +758,7 @@ private LogMergePolicy getLogMergePolicy() {
    *  @deprecated use {@link LogMergePolicy#getUseCompoundDocStore()} and
    *  {@link LogMergePolicy#getUseCompoundFile()} directly.
    */
+  @Deprecated
   public boolean getUseCompoundFile() {
     return getLogMergePolicy().getUseCompoundFile();
   }
@@ -772,6 +780,7 @@ public boolean getUseCompoundFile() {
    *             Note that this method set the given value on both, therefore
    *             you should consider doing the same.
    */
+  @Deprecated
   public void setUseCompoundFile(boolean value) {
     getLogMergePolicy().setUseCompoundFile(value);
     getLogMergePolicy().setUseCompoundDocStore(value);
@@ -782,6 +791,7 @@ public void setUseCompoundFile(boolean value) {
    * @see Similarity#setDefault(Similarity)
    * @deprecated use {@link IndexWriterConfig#setSimilarity(Similarity)} instead
    */
+  @Deprecated
   public void setSimilarity(Similarity similarity) {
     ensureOpen();
     this.similarity = similarity;
@@ -796,6 +806,7 @@ public void setSimilarity(Similarity similarity) {
    * <p>This defaults to the current value of {@link Similarity#getDefault()}.
    * @deprecated use {@link IndexWriterConfig#getSimilarity()} instead
    */
+  @Deprecated
   public Similarity getSimilarity() {
     ensureOpen();
     return similarity;
@@ -823,6 +834,7 @@ public Similarity getSimilarity() {
    * @see #DEFAULT_TERM_INDEX_INTERVAL
    * @deprecated use {@link IndexWriterConfig#setTermIndexInterval(int)}
    */
+  @Deprecated
   public void setTermIndexInterval(int interval) {
     ensureOpen();
     this.termIndexInterval = interval;
@@ -836,6 +848,7 @@ public void setTermIndexInterval(int interval) {
    * @see #setTermIndexInterval(int)
    * @deprecated use {@link IndexWriterConfig#getTermIndexInterval()}
    */
+  @Deprecated
   public int getTermIndexInterval() {
     // We pass false because this method is called by SegmentMerger while we are in the process of closing
     ensureOpen(false);
@@ -865,6 +878,7 @@ public int getTermIndexInterval() {
    *  IO error
    *  @deprecated use {@link #IndexWriter(Directory, IndexWriterConfig)} instead
    */
+  @Deprecated
   public IndexWriter(Directory d, Analyzer a, boolean create, MaxFieldLength mfl)
        throws CorruptIndexException, LockObtainFailedException, IOException {
     this(d, new IndexWriterConfig(Version.LUCENE_31, a).setOpenMode(
@@ -891,6 +905,7 @@ public IndexWriter(Directory d, Analyzer a, boolean create, MaxFieldLength mfl)
    *  IO error
    *  @deprecated use {@link #IndexWriter(Directory, IndexWriterConfig)} instead
    */
+  @Deprecated
   public IndexWriter(Directory d, Analyzer a, MaxFieldLength mfl)
     throws CorruptIndexException, LockObtainFailedException, IOException {
     this(d, new IndexWriterConfig(Version.LUCENE_31, a)
@@ -916,6 +931,7 @@ public IndexWriter(Directory d, Analyzer a, MaxFieldLength mfl)
    *  IO error
    *  @deprecated use {@link #IndexWriter(Directory, IndexWriterConfig)} instead
    */
+  @Deprecated
   public IndexWriter(Directory d, Analyzer a, IndexDeletionPolicy deletionPolicy, MaxFieldLength mfl)
     throws CorruptIndexException, LockObtainFailedException, IOException {
     this(d, new IndexWriterConfig(Version.LUCENE_31, a).setMaxFieldLength(
@@ -947,6 +963,7 @@ public IndexWriter(Directory d, Analyzer a, IndexDeletionPolicy deletionPolicy,
    *  IO error
    *  @deprecated use {@link #IndexWriter(Directory, IndexWriterConfig)} instead
    */
+  @Deprecated
   public IndexWriter(Directory d, Analyzer a, boolean create, IndexDeletionPolicy deletionPolicy, MaxFieldLength mfl)
        throws CorruptIndexException, LockObtainFailedException, IOException {
     this(d, new IndexWriterConfig(Version.LUCENE_31, a).setOpenMode(
@@ -987,6 +1004,7 @@ public IndexWriter(Directory d, Analyzer a, boolean create, IndexDeletionPolicy
    *  IO error
    *  @deprecated use {@link #IndexWriter(Directory, IndexWriterConfig)} instead
    */
+  @Deprecated
   public IndexWriter(Directory d, Analyzer a, IndexDeletionPolicy deletionPolicy, MaxFieldLength mfl, IndexCommit commit)
        throws CorruptIndexException, LockObtainFailedException, IOException {
     this(d, new IndexWriterConfig(Version.LUCENE_31, a)
@@ -1169,6 +1187,7 @@ public IndexWriterConfig getConfig() {
    * 
    * @deprecated use {@link IndexWriterConfig#setMergePolicy(MergePolicy)} instead.
    */
+  @Deprecated
   public void setMergePolicy(MergePolicy mp) {
     ensureOpen();
     if (mp == null)
@@ -1192,6 +1211,7 @@ public void setMergePolicy(MergePolicy mp) {
    * 
    * @deprecated use {@link IndexWriterConfig#getMergePolicy()} instead
    */
+  @Deprecated
   public MergePolicy getMergePolicy() {
     ensureOpen();
     return mergePolicy;
@@ -1201,6 +1221,7 @@ public MergePolicy getMergePolicy() {
    * Expert: set the merge scheduler used by this writer.
    * @deprecated use {@link IndexWriterConfig#setMergeScheduler(MergeScheduler)} instead
    */
+  @Deprecated
   synchronized public void setMergeScheduler(MergeScheduler mergeScheduler) throws CorruptIndexException, IOException {
     ensureOpen();
     if (mergeScheduler == null)
@@ -1224,6 +1245,7 @@ synchronized public void setMergeScheduler(MergeScheduler mergeScheduler) throws
    * @see #setMergeScheduler(MergeScheduler)
    * @deprecated use {@link IndexWriterConfig#getMergeScheduler()} instead
    */
+  @Deprecated
   public MergeScheduler getMergeScheduler() {
     ensureOpen();
     return mergeScheduler;
@@ -1250,6 +1272,7 @@ public MergeScheduler getMergeScheduler() {
    * LogByteSizeMergePolicy#setMaxMergeMB}.</p>
    * @deprecated use {@link LogMergePolicy#setMaxMergeDocs(int)} directly.
    */
+  @Deprecated
   public void setMaxMergeDocs(int maxMergeDocs) {
     getLogMergePolicy().setMaxMergeDocs(maxMergeDocs);
   }
@@ -1266,6 +1289,7 @@ public void setMaxMergeDocs(int maxMergeDocs) {
    * @see #setMaxMergeDocs
    * @deprecated use {@link LogMergePolicy#getMaxMergeDocs()} directly.
    */
+  @Deprecated
   public int getMaxMergeDocs() {
     return getLogMergePolicy().getMaxMergeDocs();
   }
@@ -1285,6 +1309,7 @@ public int getMaxMergeDocs() {
    * will be indexed for a field.
    * @deprecated use {@link IndexWriterConfig#setMaxFieldLength(int)} instead
    */
+  @Deprecated
   public void setMaxFieldLength(int maxFieldLength) {
     ensureOpen();
     this.maxFieldLength = maxFieldLength;
@@ -1302,6 +1327,7 @@ public void setMaxFieldLength(int maxFieldLength) {
    * @see #setMaxFieldLength
    * @deprecated use {@link IndexWriterConfig#getMaxFieldLength()} instead
    */
+  @Deprecated
   public int getMaxFieldLength() {
     ensureOpen();
     return maxFieldLength;
@@ -1348,6 +1374,7 @@ public int getReaderTermsIndexDivisor() {
    * @see #setRAMBufferSizeMB
    * @deprecated use {@link IndexWriterConfig#setMaxBufferedDocs(int)} instead.
    */
+  @Deprecated
   public void setMaxBufferedDocs(int maxBufferedDocs) {
     ensureOpen();
     if (maxBufferedDocs != DISABLE_AUTO_FLUSH && maxBufferedDocs < 2)
@@ -1392,6 +1419,7 @@ private void pushMaxBufferedDocs() {
    * @see #setMaxBufferedDocs
    * @deprecated use {@link IndexWriterConfig#getMaxBufferedDocs()} instead.
    */
+  @Deprecated
   public int getMaxBufferedDocs() {
     ensureOpen();
     return docWriter.getMaxBufferedDocs();
@@ -1436,6 +1464,7 @@ public int getMaxBufferedDocs() {
    * when maxBufferedDocs is already disabled
    * @deprecated use {@link IndexWriterConfig#setRAMBufferSizeMB(double)} instead.
    */
+  @Deprecated
   public void setRAMBufferSizeMB(double mb) {
     if (mb > 2048.0) {
       throw new IllegalArgumentException("ramBufferSize " + mb + " is too large; should be comfortably less than 2048");
@@ -1458,6 +1487,7 @@ public void setRAMBufferSizeMB(double mb) {
    * Returns the value set by {@link #setRAMBufferSizeMB} if enabled.
    * @deprecated use {@link IndexWriterConfig#getRAMBufferSizeMB()} instead.
    */
+  @Deprecated
   public double getRAMBufferSizeMB() {
     return docWriter.getRAMBufferSizeMB();
   }
@@ -1475,6 +1505,7 @@ public double getRAMBufferSizeMB() {
    * @see #setRAMBufferSizeMB
    * @deprecated use {@link IndexWriterConfig#setMaxBufferedDeleteTerms(int)} instead.
    */
+  @Deprecated
   public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {
     ensureOpen();
     if (maxBufferedDeleteTerms != DISABLE_AUTO_FLUSH
@@ -1495,6 +1526,7 @@ public void setMaxBufferedDeleteTerms(int maxBufferedDeleteTerms) {
    * @see #setMaxBufferedDeleteTerms
    * @deprecated use {@link IndexWriterConfig#getMaxBufferedDeleteTerms()} instead
    */
+  @Deprecated
   public int getMaxBufferedDeleteTerms() {
     ensureOpen();
     return docWriter.getMaxBufferedDeleteTerms();
@@ -1516,6 +1548,7 @@ public int getMaxBufferedDeleteTerms() {
    * <p>This must never be less than 2.  The default value is 10.
    * @deprecated use {@link LogMergePolicy#setMergeFactor(int)} directly.
    */
+  @Deprecated
   public void setMergeFactor(int mergeFactor) {
     getLogMergePolicy().setMergeFactor(mergeFactor);
   }
@@ -1533,6 +1566,7 @@ public void setMergeFactor(int mergeFactor) {
    * @see #setMergeFactor
    * @deprecated use {@link LogMergePolicy#getMergeFactor()} directly.
    */
+  @Deprecated
   public int getMergeFactor() {
     return getLogMergePolicy().getMergeFactor();
   }
@@ -1593,6 +1627,7 @@ public boolean verbose() {
    * @see #setDefaultWriteLockTimeout to change the default value for all instances of IndexWriter.
    * @deprecated use {@link IndexWriterConfig#setWriteLockTimeout(long)} instead
    */
+  @Deprecated
   public void setWriteLockTimeout(long writeLockTimeout) {
     ensureOpen();
     this.writeLockTimeout = writeLockTimeout;
@@ -1606,6 +1641,7 @@ public void setWriteLockTimeout(long writeLockTimeout) {
    * @see #setWriteLockTimeout
    * @deprecated use {@link IndexWriterConfig#getWriteLockTimeout()}
    */
+  @Deprecated
   public long getWriteLockTimeout() {
     ensureOpen();
     return writeLockTimeout;
@@ -1616,6 +1652,7 @@ public long getWriteLockTimeout() {
    * milliseconds).
    * @deprecated use {@link IndexWriterConfig#setDefaultWriteLockTimeout(long)} instead
    */
+  @Deprecated
   public static void setDefaultWriteLockTimeout(long writeLockTimeout) {
     IndexWriterConfig.setDefaultWriteLockTimeout(writeLockTimeout);
   }
@@ -1626,6 +1663,7 @@ public static void setDefaultWriteLockTimeout(long writeLockTimeout) {
    * @see #setDefaultWriteLockTimeout
    * @deprecated use {@link IndexWriterConfig#getDefaultWriteLockTimeout()} instead
    */
+  @Deprecated
   public static long getDefaultWriteLockTimeout() {
     return IndexWriterConfig.getDefaultWriteLockTimeout();
   }
@@ -4435,6 +4473,7 @@ public static void unlock(Directory directory) throws IOException {
    *             {@link IndexWriterConfig#UNLIMITED_FIELD_LENGTH} or your own
    *             value.
    */
+  @Deprecated
   public static final class MaxFieldLength {
 
     private int limit;
@@ -4507,6 +4546,7 @@ public String toString()
    *             {@link IndexWriterConfig#setMergedSegmentWarmer}
    *             instead.
    */
+  @Deprecated
   public void setMergedSegmentWarmer(IndexReaderWarmer warmer) {
     mergedSegmentWarmer = warmer;
     // Required so config.getMergedSegmentWarmer returns the right value. But
@@ -4519,6 +4559,7 @@ public void setMergedSegmentWarmer(IndexReaderWarmer warmer) {
    * 
    * @deprecated use {@link IndexWriterConfig#getMergedSegmentWarmer()} instead.
    */
+  @Deprecated
   public IndexReaderWarmer getMergedSegmentWarmer() {
     return mergedSegmentWarmer;
   }
diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/search/PhraseQuery.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/search/PhraseQuery.java
index cc109c7d..0f8e0a3c 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/search/PhraseQuery.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/search/PhraseQuery.java
@@ -259,7 +259,7 @@ public Explanation explain(IndexReader reader, int doc)
       fieldExpl.setDescription("fieldWeight("+field+":"+query+" in "+doc+
                                "), product of:");
 
-      Scorer scorer = (Scorer) scorer(reader, true, false);
+      Scorer scorer = scorer(reader, true, false);
       if (scorer == null) {
         return new Explanation(0.0f, "no matching docs");
       }
diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/store/Directory.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/store/Directory.java
index 46a86283..f8069410 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/store/Directory.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/store/Directory.java
@@ -256,6 +256,7 @@ public void copy(Directory to, String src, String dest) throws IOException {
    * }
    * </pre>
    */
+  @Deprecated
   public static void copy(Directory src, Directory dest, boolean closeDirSrc) throws IOException {
     IndexFileNameFilter filter = IndexFileNameFilter.getFilter();
     for (String file : src.listAll()) {
diff --git a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestIndexWriter.java b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestIndexWriter.java
index 26a1857c..45fbfa87 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestIndexWriter.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestIndexWriter.java
@@ -1241,6 +1241,7 @@ public void testSmallRAMBuffer() throws IOException {
      *             removed because changing ram buffer settings during a write
      *             session won't be possible.
      */
+    @Deprecated
     public void testChangingRAMBuffer() throws IOException {
       MockDirectoryWrapper dir = newDirectory();      
       IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(
@@ -1299,6 +1300,7 @@ else if (10 == j) {
      * @deprecated after setters on IW go away, this test can be deleted because
      *             changing those settings on IW won't be possible.
      */
+    @Deprecated
     public void testChangingRAMBuffer2() throws IOException {
       MockDirectoryWrapper dir = newDirectory();      
       IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(
diff --git a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig.java b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig.java
index 594c3624..25c8ce4e 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig.java
@@ -253,7 +253,7 @@ public void testInvalidValues() throws Exception {
    * @deprecated should be removed once all the deprecated setters are removed
    *             from IndexWriter.
    */
-  @Test
+  @Test @Deprecated
   public void testIndexWriterSetters() throws Exception {
     // This test intentionally tests deprecated methods. The purpose is to pass
     // whatever the user set on IW to IWC, so that if the user calls
diff --git a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery.java b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery.java
index f3fcb46c..e64e4fee 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery.java
@@ -81,7 +81,7 @@ public TokenStream tokenStream(String fieldName, Reader reader) {
     public PayloadFilter(TokenStream input, String fieldName) {
       super(input);
       this.fieldName = fieldName;
-      payAtt = (PayloadAttribute) addAttribute(PayloadAttribute.class);
+      payAtt = addAttribute(PayloadAttribute.class);
     }
 
     @Override
