diff --git a/incubator/solr/trunk/src/java/org/apache/solr/core/SolrConfig.java b/incubator/solr/trunk/src/java/org/apache/solr/core/SolrConfig.java
index 69a6c930..9f689b87 100644
--- a/incubator/solr/trunk/src/java/org/apache/solr/core/SolrConfig.java
+++ b/incubator/solr/trunk/src/java/org/apache/solr/core/SolrConfig.java
@@ -17,10 +17,15 @@
 
 package org.apache.solr.core;
 
+import org.apache.solr.request.LocalSolrQueryRequest;
+import org.apache.solr.request.SolrQueryRequest;
+import org.apache.solr.util.NamedList;
+
 import org.xml.sax.SAXException;
 
 import javax.xml.parsers.ParserConfigurationException;
 
+import java.util.StringTokenizer;
 import java.io.IOException;
 import java.io.InputStream;
 
@@ -77,4 +82,24 @@ public static synchronized void initConfig(String file)
       throw new RuntimeException("Error in " + DEFAULT_CONF_FILE, ee);
     }
   }
+
+  /**
+   * Returns a Request object based on the admin/pingQuery section
+   * of the Solr config file.
+   */
+  public static SolrQueryRequest getPingQueryRequest(SolrCore core) {
+
+    // TODO: check for nested tags and parse as a named list instead
+    String urlSnippet = config.get("admin/pingQuery", "").trim();
+    
+    StringTokenizer qtokens = new StringTokenizer(urlSnippet,"&");
+    String tok;
+    NamedList params = new NamedList();
+    while (qtokens.hasMoreTokens()) {
+      tok = qtokens.nextToken();
+      String[] split = tok.split("=", 2);
+      params.add(split[0], split[1]);
+    }
+    return new LocalSolrQueryRequest(core, params);
+  }
 }
diff --git a/incubator/solr/trunk/src/java/org/apache/solr/request/LocalSolrQueryRequest.java b/incubator/solr/trunk/src/java/org/apache/solr/request/LocalSolrQueryRequest.java
index 7d3c77fe..0fed104f 100644
--- a/incubator/solr/trunk/src/java/org/apache/solr/request/LocalSolrQueryRequest.java
+++ b/incubator/solr/trunk/src/java/org/apache/solr/request/LocalSolrQueryRequest.java
@@ -61,5 +61,9 @@ public LocalSolrQueryRequest(SolrCore core, NamedList args) {
   public LocalSolrQueryRequest(SolrCore core, Map<String,String[]> args) {
     super(core, new MultiMapSolrParams(args));
   }
+  public LocalSolrQueryRequest(SolrCore core, SolrParams args) {
+    super(core, args);
+  }
+ 
 }
 
