diff --git a/lucene/solr/trunk/src/java/org/apache/solr/core/SolrCore.java b/lucene/solr/trunk/src/java/org/apache/solr/core/SolrCore.java
index 24e7fc0d..aed032cd 100644
--- a/lucene/solr/trunk/src/java/org/apache/solr/core/SolrCore.java
+++ b/lucene/solr/trunk/src/java/org/apache/solr/core/SolrCore.java
@@ -1340,10 +1340,12 @@ private void initQParsers() {
     for (int i=0; i<QParserPlugin.standardPlugins.length; i+=2) {
      try {
        String name = (String)QParserPlugin.standardPlugins[i];
+       if (null == qParserPlugins.get(name)) {
        Class<QParserPlugin> clazz = (Class<QParserPlugin>)QParserPlugin.standardPlugins[i+1];
        QParserPlugin plugin = clazz.newInstance();
        qParserPlugins.put(name, plugin);
        plugin.init(null);
+       }
      } catch (Exception e) {
        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);
      }
@@ -1372,9 +1374,11 @@ private void initValueSourceParsers() {
     for (Map.Entry<String, ValueSourceParser> entry : ValueSourceParser.standardValueSourceParsers.entrySet()) {
       try {
         String name = entry.getKey();
+        if (null == valueSourceParsers.get(name)) {
         ValueSourceParser valueSourceParser = entry.getValue();
         valueSourceParsers.put(name, valueSourceParser);
         valueSourceParser.init(null);
+        }
       } catch (Exception e) {
         throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);
       }
diff --git a/lucene/solr/trunk/src/test/org/apache/solr/core/DummyValueSourceParser.java b/lucene/solr/trunk/src/test/org/apache/solr/core/DummyValueSourceParser.java
index 3f24d583..dedf7b04 100644
--- a/lucene/solr/trunk/src/test/org/apache/solr/core/DummyValueSourceParser.java
+++ b/lucene/solr/trunk/src/test/org/apache/solr/core/DummyValueSourceParser.java
@@ -1 +1,56 @@
   + native
+package org.apache.solr.core;
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import org.apache.lucene.queryParser.ParseException;
+import org.apache.solr.common.util.NamedList;
+import org.apache.solr.search.FunctionQParser;
+import org.apache.solr.search.ValueSourceParser;
+import org.apache.solr.search.function.DocValues;
+import org.apache.solr.search.function.SimpleFloatFunction;
+import org.apache.solr.search.function.ValueSource;
+
+
+/**
+ * Mock ValueSource parser that doesn't do much of anything
+ *
+ **/
+public class DummyValueSourceParser extends ValueSourceParser {
+  private NamedList args;
+
+  public void init(NamedList args) {
+    this.args = args;
+  }
+
+  public ValueSource parse(FunctionQParser fp) throws ParseException {
+    ValueSource source = fp.parseValueSource();
+    ValueSource result = new SimpleFloatFunction(source) {
+      protected String name() {
+        return "foo";
+      }
+
+      protected float func(int doc, DocValues vals) {
+        float result = 0;
+        return result;
+      }
+    };
+    return result;
+  }
+
+
+}
diff --git a/lucene/solr/trunk/src/test/org/apache/solr/core/SOLR749Test.java b/lucene/solr/trunk/src/test/org/apache/solr/core/SOLR749Test.java
index e69de29b..6507f2d3 100644
--- a/lucene/solr/trunk/src/test/org/apache/solr/core/SOLR749Test.java
+++ b/lucene/solr/trunk/src/test/org/apache/solr/core/SOLR749Test.java
@@ -0,0 +1,49 @@
+package org.apache.solr.core;
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import org.apache.solr.util.AbstractSolrTestCase;
+import org.apache.solr.search.QParserPlugin;
+import org.apache.solr.search.FooQParserPlugin;
+import org.apache.solr.search.ValueSourceParser;
+
+
+/**
+ * Test for https://issues.apache.org/jira/browse/SOLR-749
+ *
+ **/
+public class SOLR749Test extends AbstractSolrTestCase{
+  public String getSchemaFile() {
+    return "schema.xml";
+  }
+
+  public String getSolrConfigFile() {
+    return "solrconfig-SOLR-749.xml";
+  }
+
+  public void testConstruction() throws Exception {
+    SolrCore core = h.getCore();
+    assertTrue("core is null and it shouldn't be", core != null);
+    QParserPlugin parserPlugin = core.getQueryPlugin(QParserPlugin.DEFAULT_QTYPE);
+    assertTrue("parserPlugin is null and it shouldn't be", parserPlugin != null);
+    assertTrue("parserPlugin is not an instanceof " + FooQParserPlugin.class, parserPlugin instanceof FooQParserPlugin);
+
+    ValueSourceParser vsp = core.getValueSourceParser("boost");
+    assertTrue("vsp is null and it shouldn't be", vsp != null);
+    assertTrue("vsp is not an instanceof " + DummyValueSourceParser.class, vsp instanceof DummyValueSourceParser);
+  }
+}
