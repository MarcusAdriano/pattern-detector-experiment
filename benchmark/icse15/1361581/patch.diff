diff --git a/mahout/trunk/math/src/main/java/org/apache/mahout/math/MatrixView.java b/mahout/trunk/math/src/main/java/org/apache/mahout/math/MatrixView.java
index 76499d96..e2f7f48d 100644
--- a/mahout/trunk/math/src/main/java/org/apache/mahout/math/MatrixView.java
+++ b/mahout/trunk/math/src/main/java/org/apache/mahout/math/MatrixView.java
@@ -93,19 +93,19 @@ public void setQuick(int row, int column, double value) {
 
   @Override
   public Matrix viewPart(int[] offset, int[] size) {
-    if (offset[ROW] < ROW) {
-      throw new IndexException(offset[ROW], ROW);
+    if (offset[ROW] < 0) {
+      throw new IndexException(offset[ROW], 0);
     }
     if (offset[ROW] + size[ROW] > rowSize()) {
       throw new IndexException(offset[ROW] + size[ROW], rowSize());
     }
-    if (offset[COL] < ROW) {
-      throw new IndexException(offset[COL], ROW);
+    if (offset[COL] < 0) {
+      throw new IndexException(offset[COL], 0);
     }
     if (offset[COL] + size[COL] > columnSize()) {
       throw new IndexException(offset[COL] + size[COL], columnSize());
     }
-    int[] origin = offset.clone();
+    int[] origin = this.offset.clone();
     origin[ROW] += offset[ROW];
     origin[COL] += offset[COL];
     return new MatrixView(matrix, origin, size);
diff --git a/mahout/trunk/math/src/test/java/org/apache/mahout/math/MatrixTest.java b/mahout/trunk/math/src/test/java/org/apache/mahout/math/MatrixTest.java
index 6d097386..e025cc9b 100644
--- a/mahout/trunk/math/src/test/java/org/apache/mahout/math/MatrixTest.java
+++ b/mahout/trunk/math/src/test/java/org/apache/mahout/math/MatrixTest.java
@@ -184,6 +184,15 @@ public void testAssignDoubleArrayArrayCardinality() {
     test.assign(new double[test.rowSize() + 1][test.columnSize()]);
   }
 
+  /** Tests MAHOUT-1046 */
+  @Test
+  public void testMatrixViewBug() {
+    Matrix m = test.viewPart(0, 3, 0, 2);
+    // old bug would blow cookies with an index exception here.
+    m = m.viewPart(2, 1, 0, 1);
+    assertEquals(5.5, m.zSum(), 0);
+  }
+
   @Test
   public void testAssignMatrixBinaryFunction() {
     test.assign(test, Functions.PLUS);
