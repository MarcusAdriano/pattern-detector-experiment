diff --git a/lucene/dev/branches/branch_3x/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions.java b/lucene/dev/branches/branch_3x/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions.java
index 96cf6bd9..7efddb3f 100644
--- a/lucene/dev/branches/branch_3x/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions.java
+++ b/lucene/dev/branches/branch_3x/lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions.java
@@ -1360,6 +1360,9 @@ public void testLegalbutVeryLargePositions() throws Exception {
     Document doc = new Document();
     Token t1 = new Token("foo", 0, 3);
     t1.setPositionIncrement(Integer.MAX_VALUE-500);
+    if (random.nextBoolean()) {
+      t1.setPayload(new Payload(new byte[] { 0x1 } ));
+    }
     TokenStream overflowingTokenStream = new CannedTokenStream(
         new Token[] { t1 }
     );
diff --git a/lucene/dev/branches/branch_3x/lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream.java b/lucene/dev/branches/branch_3x/lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream.java
index 98ce232f..c67fdb15 100644
--- a/lucene/dev/branches/branch_3x/lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream.java
+++ b/lucene/dev/branches/branch_3x/lucene/test-framework/src/java/org/apache/lucene/analysis/CannedTokenStream.java
@@ -21,6 +21,7 @@
 
 import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
 import org.apache.lucene.analysis.tokenattributes.OffsetAttribute;
+import org.apache.lucene.analysis.tokenattributes.PayloadAttribute;
 import org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute;
 
 public final class CannedTokenStream extends TokenStream {
@@ -29,6 +30,7 @@
   private final CharTermAttribute termAtt = addAttribute(CharTermAttribute.class);
   private final PositionIncrementAttribute posIncrAtt = addAttribute(PositionIncrementAttribute.class);
   private final OffsetAttribute offsetAtt = addAttribute(OffsetAttribute.class);
+  private final PayloadAttribute payloadAtt = addAttribute(PayloadAttribute.class);
   
   public CannedTokenStream(Token[] tokens) {
     this.tokens = tokens;
@@ -45,6 +47,7 @@ public boolean incrementToken() throws IOException {
       termAtt.append(token.toString());
       posIncrAtt.setPositionIncrement(token.getPositionIncrement());
       offsetAtt.setOffset(token.startOffset(), token.endOffset());
+      payloadAtt.setPayload(token.getPayload());
       return true;
     } else {
       return false;
