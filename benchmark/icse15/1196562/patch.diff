diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/ColPermsDescriptor.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/ColPermsDescriptor.java
index b2e85d32..1976f8ce 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/ColPermsDescriptor.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/ColPermsDescriptor.java
@@ -26,10 +26,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import org.apache.derby.catalog.UUID;
 
 import org.apache.derby.iapi.error.StandardException;
-import org.apache.derby.iapi.sql.dictionary.DataDictionary;
 import org.apache.derby.iapi.services.io.FormatableBitSet;
 import org.apache.derby.iapi.services.io.StoredFormatIds;
-import org.apache.derby.impl.sql.catalog.DDdependableFinder;
 
 /**
  * This class describes a row in the SYS.SYSCOLPERMS system table, which keeps
@@ -166,7 +164,8 @@ public String getClassType()
 	 */
 	public DependableFinder getDependableFinder() 
 	{
-	    return	new DDdependableFinder(StoredFormatIds.COLUMNS_PERMISSION_FINDER_V01_ID);
+        return getDependableFinder(
+                StoredFormatIds.COLUMNS_PERMISSION_FINDER_V01_ID);
 	}
 
 }
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/DataDictionary.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/DataDictionary.java
index af6d78f8..e58037d4 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/DataDictionary.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/DataDictionary.java
@@ -35,6 +35,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import org.apache.derby.iapi.store.access.TransactionController;
 import org.apache.derby.iapi.types.RowLocation;
 
+import org.apache.derby.catalog.DependableFinder;
 import org.apache.derby.catalog.TypeDescriptor;
 import org.apache.derby.catalog.UUID;
 import org.apache.derby.iapi.services.uuid.UUIDFactory;
@@ -2241,4 +2242,25 @@ public void dropAllPermDescriptors(UUID objectID, TransactionController tc)
      * system resources and potentially cause side-effects due to the errors.
      */
     public void disableIndexStatsRefresher();
+
+    /**
+     * Get a {@code DependableFinder} instance.
+     *
+     * @param formatId the format id
+     * @return an instance capable of finding {@code Dependable}s with the
+     * specified format id
+     */
+    public DependableFinder getDependableFinder(int formatId);
+
+    /**
+     * Get a {@code DependableFinder} instance for referenced columns in
+     * a table.
+     *
+     * @param formatId the format id
+     * @param columnBitMap byte array encoding the bitmap of referenced columns
+     * @return an instance capable of finding {@code Dependable}s with the
+     * specified format id
+     */
+    public DependableFinder getColumnDependableFinder(
+            int formatId, byte[] columnBitMap);
 }
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/PermDescriptor.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/PermDescriptor.java
index 921a2027..06fe0cd8 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/PermDescriptor.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/PermDescriptor.java
@@ -29,8 +29,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import org.apache.derby.iapi.services.sanity.SanityManager;
 import org.apache.derby.iapi.services.io.StoredFormatIds;
 import org.apache.derby.iapi.sql.depend.Provider;
-import org.apache.derby.impl.sql.catalog.DDdependableFinder;
-import org.apache.derby.iapi.sql.dictionary.PrivilegedSQLObject;
 
 /**
  * This class describes rows in the SYS.SYSPERMS system table, which keeps track of the
@@ -209,7 +207,8 @@ public String getClassType() {
      * @see Dependable#getDependableFinder
      */
     public DependableFinder getDependableFinder() {
-        return new DDdependableFinder(StoredFormatIds.PERM_DESCRIPTOR_FINDER_V01_ID);
+        return getDependableFinder(
+                StoredFormatIds.PERM_DESCRIPTOR_FINDER_V01_ID);
     }
 
 }
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/RoleGrantDescriptor.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/RoleGrantDescriptor.java
index efdb6b6b..dc12c177 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/RoleGrantDescriptor.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/RoleGrantDescriptor.java
@@ -30,7 +30,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
 import org.apache.derby.iapi.sql.depend.Provider;
 import org.apache.derby.iapi.store.access.TransactionController;
-import org.apache.derby.impl.sql.catalog.DDdependableFinder;
 
 /**
  * This class is used by rows in the SYS.SYSROLES system table.
@@ -209,6 +208,6 @@ public String getClassType()
      */
     public DependableFinder getDependableFinder()
     {
-        return new DDdependableFinder(StoredFormatIds.ROLE_GRANT_FINDER_V01_ID);
+        return getDependableFinder(StoredFormatIds.ROLE_GRANT_FINDER_V01_ID);
     }
 }
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/RoutinePermsDescriptor.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/RoutinePermsDescriptor.java
index 5d50b54d..78fec065 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/RoutinePermsDescriptor.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/RoutinePermsDescriptor.java
@@ -27,8 +27,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 import org.apache.derby.iapi.error.StandardException;
 import org.apache.derby.iapi.services.io.StoredFormatIds;
-import org.apache.derby.iapi.sql.dictionary.DataDictionary;
-import org.apache.derby.impl.sql.catalog.DDdependableFinder;
 
 /**
  * This class describes rows in the SYS.SYSROUTINEPERMS system table, which keeps track of the routine
@@ -163,6 +161,7 @@ public String getClassType()
 	 */
 	public DependableFinder getDependableFinder() 
 	{
-	    return	new DDdependableFinder(StoredFormatIds.ROUTINE_PERMISSION_FINDER_V01_ID);
+        return getDependableFinder(
+                StoredFormatIds.ROUTINE_PERMISSION_FINDER_V01_ID);
 	}
 }
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/SequenceDescriptor.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/SequenceDescriptor.java
index 09fa742a..3fc3d8b5 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/SequenceDescriptor.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/SequenceDescriptor.java
@@ -34,7 +34,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import org.apache.derby.iapi.types.DataTypeDescriptor;
 import org.apache.derby.iapi.types.TypeId;
 import org.apache.derby.iapi.store.access.TransactionController;
-import org.apache.derby.impl.sql.catalog.DDdependableFinder;
 
 /**
  * This class is used by rows in the SYS.SYSSEQUENCES system table.
@@ -305,7 +304,8 @@ public String getClassType() {
      * @see Dependable#getDependableFinder
      */
     public DependableFinder getDependableFinder() {
-        return new DDdependableFinder(StoredFormatIds.SEQUENCE_DESCRIPTOR_FINDER_V01_ID);
+        return getDependableFinder(
+                StoredFormatIds.SEQUENCE_DESCRIPTOR_FINDER_V01_ID);
     }
 
     /*Accessor methods*/
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/TablePermsDescriptor.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/TablePermsDescriptor.java
index 6fa21b4a..863ad5f1 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/TablePermsDescriptor.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/TablePermsDescriptor.java
@@ -26,9 +26,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import org.apache.derby.catalog.UUID;
 
 import org.apache.derby.iapi.services.io.StoredFormatIds;
-import org.apache.derby.iapi.sql.dictionary.DataDictionary;
 import org.apache.derby.iapi.error.StandardException;
-import org.apache.derby.impl.sql.catalog.DDdependableFinder;
 
 /**
  * This class describes a row in the SYS.SYSTABLEPERMS system table, which
@@ -183,6 +181,7 @@ public String getClassType()
 	 */
 	public DependableFinder getDependableFinder() 
 	{
-	    return	new DDdependableFinder(StoredFormatIds.TABLE_PERMISSION_FINDER_V01_ID);
+        return getDependableFinder(
+                StoredFormatIds.TABLE_PERMISSION_FINDER_V01_ID);
 	}
 }
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/TupleDescriptor.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/TupleDescriptor.java
index f4f36966..d7e18992 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/TupleDescriptor.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/TupleDescriptor.java
@@ -21,18 +21,9 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 package org.apache.derby.iapi.sql.dictionary;
 
-import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
-import org.apache.derby.iapi.error.StandardException;
-
 import	org.apache.derby.catalog.DependableFinder;
 import org.apache.derby.iapi.services.sanity.SanityManager;
 
-import org.apache.derby.iapi.reference.SQLState;
-
-// is it OK to do this?
-import org.apache.derby.impl.sql.catalog.DDdependableFinder;
-import org.apache.derby.impl.sql.catalog.DDColumnDependableFinder;
-
 /**
  * This is the superclass of all Descriptors. Users of DataDictionary should use
  * the specific descriptor.
@@ -98,15 +89,15 @@ public boolean isPersistent()
 	//////////////////////////////////////////////////////////////////
 
 
-	public DependableFinder getDependableFinder(int formatId)
+	DependableFinder getDependableFinder(int formatId)
 	{
-		return	new DDdependableFinder(formatId);
+		return dataDictionary.getDependableFinder(formatId);
 	}
 
 	DependableFinder getColumnDependableFinder(int formatId, byte[]
 													  columnBitMap)
 	{
-		return new DDColumnDependableFinder(formatId, columnBitMap);
+		return dataDictionary.getColumnDependableFinder(formatId, columnBitMap);
 	}
 	
 	/** Each descriptor must identify itself with its type; i.e index, check
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java
index 0a052adc..ccbac3c2 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java
@@ -139,6 +139,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import org.apache.derby.iapi.services.uuid.UUIDFactory;
 import org.apache.derby.catalog.AliasInfo;
 import org.apache.derby.catalog.DefaultInfo;
+import org.apache.derby.catalog.DependableFinder;
 import org.apache.derby.catalog.TypeDescriptor;
 import org.apache.derby.catalog.UUID;
 import org.apache.derby.catalog.types.BaseTypeIdImpl;
@@ -13908,4 +13909,13 @@ public void createIndexStatsRefresher(Database db, String dbName) {
                    indexStatsUpdateTracing, db, authorizationDatabaseOwner,
                    dbName);
     }
+
+    public DependableFinder getDependableFinder(int formatId) {
+        return new DDdependableFinder(formatId);
+    }
+
+    public DependableFinder getColumnDependableFinder(
+            int formatId, byte[] columnBitMap) {
+        return new DDColumnDependableFinder(formatId, columnBitMap);
+    }
 }
diff --git a/db/derby/code/trunk/java/storeless/org/apache/derby/impl/storeless/EmptyDictionary.java b/db/derby/code/trunk/java/storeless/org/apache/derby/impl/storeless/EmptyDictionary.java
index afc462c0..d73116b8 100644
--- a/db/derby/code/trunk/java/storeless/org/apache/derby/impl/storeless/EmptyDictionary.java
+++ b/db/derby/code/trunk/java/storeless/org/apache/derby/impl/storeless/EmptyDictionary.java
@@ -24,6 +24,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import java.util.List;
 import java.util.Properties;
 
+import org.apache.derby.catalog.DependableFinder;
 import org.apache.derby.catalog.UUID;
 import org.apache.derby.iapi.db.Database;
 import org.apache.derby.iapi.error.StandardException;
@@ -897,4 +898,13 @@ public boolean doCreateIndexStatsRefresher() {
     public void createIndexStatsRefresher(Database db, String dbName) {
         // Do nothing
     }
+
+    public DependableFinder getDependableFinder(int formatId) {
+        return null;
+    }
+
+    public DependableFinder getColumnDependableFinder(
+            int formatId, byte[] columnBitMap) {
+        return null;
+    }
 }
