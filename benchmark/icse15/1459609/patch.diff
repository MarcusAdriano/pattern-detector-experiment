diff --git a/lucene/dev/trunk/lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/WholeBreakIterator.java b/lucene/dev/trunk/lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/WholeBreakIterator.java
index d88205a9..30555f3a 100644
--- a/lucene/dev/trunk/lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/WholeBreakIterator.java
+++ b/lucene/dev/trunk/lucene/highlighter/src/java/org/apache/lucene/search/postingshighlight/WholeBreakIterator.java
@@ -112,6 +112,6 @@ public void setText(CharacterIterator newText) {
     start = newText.getBeginIndex();
     end = newText.getEndIndex();
     text = newText;
-    current = newText.getIndex();
+    current = start;
   }
 }
diff --git a/lucene/dev/trunk/lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestWholeBreakIterator.java b/lucene/dev/trunk/lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestWholeBreakIterator.java
index e93c759a..3b481fbc 100644
--- a/lucene/dev/trunk/lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestWholeBreakIterator.java
+++ b/lucene/dev/trunk/lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestWholeBreakIterator.java
@@ -63,6 +63,13 @@ public void testSliceMiddle() throws Exception {
     assertSameBreaks("000000", 3, 0, expected, actual);
   }
 
+  /** the current position must be ignored, initial position is always first() */
+  public void testFirstPosition() throws Exception {
+    BreakIterator expected = BreakIterator.getSentenceInstance(Locale.ROOT);
+    BreakIterator actual = new WholeBreakIterator();
+    assertSameBreaks("000ab000", 3, 2, 4, expected, actual);
+  }
+
   public void assertSameBreaks(String text, BreakIterator expected, BreakIterator actual) {
     assertSameBreaks(new StringCharacterIterator(text), 
                      new StringCharacterIterator(text), 
@@ -71,8 +78,12 @@ public void assertSameBreaks(String text, BreakIterator expected, BreakIterator
   }
   
   public void assertSameBreaks(String text, int offset, int length, BreakIterator expected, BreakIterator actual) {
-    assertSameBreaks(new StringCharacterIterator(text, offset, offset+length, offset), 
-                     new StringCharacterIterator(text, offset, offset+length, offset), 
+    assertSameBreaks(text, offset, length, offset, expected, actual);
+  }
+  
+  public void assertSameBreaks(String text, int offset, int length, int current, BreakIterator expected, BreakIterator actual) {
+    assertSameBreaks(new StringCharacterIterator(text, offset, offset+length, current), 
+                     new StringCharacterIterator(text, offset, offset+length, current), 
                      expected, 
                      actual);
   }
