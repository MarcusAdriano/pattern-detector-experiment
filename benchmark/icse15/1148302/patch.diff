diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/PhaseChanger.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/PhaseChanger.java
index 1674bf7d..190a7c59 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/PhaseChanger.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/PhaseChanger.java
@@ -23,6 +23,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
 import java.sql.SQLException;
+import java.util.Set;
 
 import javax.sql.DataSource;
 
@@ -261,8 +262,36 @@ private void clearDerby23ThreadLocals(Object contextService)
             throws Exception {
         if (contextService != null) {
             Class cls = contextService.getClass();
-            clearField(cls, "threadContextList", contextService);
-            clearField(cls, "allContexts", contextService);
+
+            // DERBY-5343: Ideally, we'd just set the two fields to null
+            // like this:
+            //
+            //     clearField(cls, "threadContextList", contextService);
+            //     clearField(cls, "allContexts", contextService);
+            //
+            // However, the fields are final in the versions that suffer from
+            // DERBY-23, and Java versions prior to Java 5 don't allow us to
+            // modify final fields. So let's take a different approach to make
+            // it work on Java 1.4.2 and Foundation Profile 1.1 as well.
+
+            // The field threadContextList is a ThreadLocal. Clear it in the
+            // current thread. Assuming all other threads that have accessed
+            // the database engine (background threads and any helper threads
+            // started by the test cases) are stopped and made eligible for
+            // garbage collection, this should be a sufficient replacement for
+            // setting the field to null.
+            Field tclField = cls.getDeclaredField("threadContextList");
+            tclField.setAccessible(true);
+            ThreadLocal tcl = (ThreadLocal) tclField.get(contextService);
+            tcl.set(null);
+
+            // The field allContexts is a HashSet. Calling clear() should be
+            // equivalent to setting it to null in terms of making its elements
+            // eligible for garbage collection.
+            Field acField = cls.getDeclaredField("allContexts");
+            acField.setAccessible(true);
+            Set ac = (Set) acField.get(contextService);
+            ac.clear();
         }
     }
 }
