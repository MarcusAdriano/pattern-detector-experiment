diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ClobUpdatableReaderTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ClobUpdatableReaderTest.java
index b41c2891..05c5628e 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ClobUpdatableReaderTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ClobUpdatableReaderTest.java
@@ -56,10 +56,8 @@ public ClobUpdatableReaderTest (String name) {
      * Test updating a large clob
      */
     public void testUpdateableStoreReader () throws Exception {
-        Connection con = getConnection();
-        try {
-            con.setAutoCommit (false);
-            PreparedStatement ps = con.prepareStatement ("insert into updateClob " +
+        getConnection().setAutoCommit (false);
+        PreparedStatement ps = prepareStatement ("insert into updateClob " +
                     "(id , data) values (? ,?)");
             ps.setInt (1, 2);
             StringBuffer sb = new StringBuffer ();
@@ -72,7 +70,7 @@ public void testUpdateableStoreReader () throws Exception {
                                                 sb.length());
             ps.execute();
             ps.close();
-            Statement stmt = con.createStatement ();
+        Statement stmt = createStatement ();
             ResultSet rs = stmt.executeQuery("select data from " +
                     "updateClob where id = 2");
             rs.next();
@@ -97,23 +95,13 @@ public void testUpdateableStoreReader () throws Exception {
                                     new String (newdata, 0, len));
             r.close();
         }
-        finally {
-            if (con != null) {
-                con.commit ();
-                con.close ();
-            }
-        }
-
-    }
 
     /**
      * Tests updates on reader.
      */
     public void testUpdateableReader () throws Exception {
-        Connection con = getConnection();
-        try {
-            con.setAutoCommit (false);
-            PreparedStatement ps = con.prepareStatement ("insert into updateClob " +
+        getConnection().setAutoCommit (false);
+        PreparedStatement ps = prepareStatement ("insert into updateClob " +
                     "(id , data) values (? ,?)");
             ps.setInt (1, 1);
             StringBuffer sb = new StringBuffer ();
@@ -125,7 +113,7 @@ public void testUpdateableReader () throws Exception {
                                                 sb.length());
             ps.execute();
             ps.close();
-            Statement stmt = con.createStatement ();
+        Statement stmt = createStatement ();
             ResultSet rs = stmt.executeQuery("select data from " +
                     "updateClob where id = 1");
             rs.next();
@@ -179,13 +167,6 @@ public void testUpdateableReader () throws Exception {
             assertEquals ("update not reflected",  unicodeStr,
                                         String.valueOf (unicodeChars));            
         }
-        finally {
-            if (con != null) {
-                con.commit ();
-                con.close();
-            }
-        }
-    }   
     
     /**
      * Tests that the Clob can handle multiple streams and the length call
@@ -201,6 +182,7 @@ public void testUpdateableReader () throws Exception {
      */
     public void testMultiplexedOperationProblem()
             throws IOException, SQLException {
+        getConnection().setAutoCommit(false);
         int length = 266000;
         PreparedStatement ps = prepareStatement(
                 "insert into updateClob (id, data) values (?,?)");
@@ -241,6 +223,11 @@ public void testMultiplexedOperationProblem()
         assertEquals(length, clob.length());
         lastReadAscii = assertCorrectChar(lastReadAscii, ra.read());
         lastReadChar = assertCorrectChar(lastReadChar, r.read());
+        // Close resources.
+        r.close();
+        ra.close();
+        rs.close();
+        psFetchClob.close();
     }
 
 
@@ -293,13 +280,11 @@ private String getUnicodeString () {
      * @throws SQLException if database access fails
      */
     public void setUp() throws Exception {
-        Connection con = getConnection ();
-        Statement stmt = con.createStatement ();
+        Statement stmt = createStatement ();
         stmt.execute ("create table updateClob " +
                 "(id integer primary key, data clob)");
         stmt.close();
-        con.commit();
-        con.close();
+        commit();
     }
     
     public static Test suite() {
@@ -316,10 +301,11 @@ public static Test suite() {
      * Cleans up the database.
      */
     protected void tearDown() throws java.lang.Exception {
-        Connection con = getConnection ();
-        Statement stmt = con.createStatement ();
+        rollback();
+        Statement stmt = createStatement ();
         stmt.execute ("drop table updateClob");
         stmt.close();
-        con.close();
+        commit();
+        super.tearDown();
     }
 }
