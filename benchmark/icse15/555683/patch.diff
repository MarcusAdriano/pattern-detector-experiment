diff --git a/lucene/java/trunk/src/java/org/apache/lucene/index/MultiLevelSkipListReader.java b/lucene/java/trunk/src/java/org/apache/lucene/index/MultiLevelSkipListReader.java
index 2fa9c277..156a67a0 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/index/MultiLevelSkipListReader.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/index/MultiLevelSkipListReader.java
@@ -172,9 +172,11 @@ void init(long skipPointer, int df) {
     this.docCount = df;
     Arrays.fill(skipDoc, 0);
     Arrays.fill(numSkipped, 0);
+    Arrays.fill(childPointer, 0);
+    
     haveSkipped = false;
     for (int i = 1; i < numberOfSkipLevels; i++) {
-      skipStream[0] = null;
+      skipStream[i] = null;
     }
   }
   
diff --git a/lucene/java/trunk/src/test/org/apache/lucene/index/TestMultiLevelSkipList.java b/lucene/java/trunk/src/test/org/apache/lucene/index/TestMultiLevelSkipList.java
index 7435bd36..ba1abee9 100644
--- a/lucene/java/trunk/src/test/org/apache/lucene/index/TestMultiLevelSkipList.java
+++ b/lucene/java/trunk/src/test/org/apache/lucene/index/TestMultiLevelSkipList.java
@@ -57,10 +57,12 @@ public void testSimpleSkip() throws IOException {
     writer.close();
 
     IndexReader reader = IndexReader.open(dir);
-    SegmentTermPositions tp = (SegmentTermPositions) reader.termPositions(term);
+    SegmentTermPositions tp = (SegmentTermPositions) reader.termPositions();
     tp.freqStream = new CountingStream(tp.freqStream);
     
-    tp.next();
+    for (int i = 0; i < 2; i++) {
+      counter = 0;
+      tp.seek(term);
 
     checkSkipTo(tp, 14, 185); // no skips
     checkSkipTo(tp, 17, 190); // one skip on level 0
@@ -70,6 +72,7 @@ public void testSimpleSkip() throws IOException {
     // because than more bytes would be read from the freqStream
     checkSkipTo(tp, 4800, 250);// one skip on level 2
   }
+  }
 
   public void checkSkipTo(TermPositions tp, int target, int maxCounter) throws IOException {
     tp.skipTo(target);
