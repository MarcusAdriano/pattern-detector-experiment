diff --git a/lucene/dev/branches/lucene_solr_4_6/solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter.java b/lucene/dev/branches/lucene_solr_4_6/solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter.java
index bfadb3bb..b853760c 100644
--- a/lucene/dev/branches/lucene_solr_4_6/solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter.java
+++ b/lucene/dev/branches/lucene_solr_4_6/solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter.java
@@ -602,6 +602,10 @@ private void alternateField( NamedList docSummaries, SolrParams params, Document
     String alternateField = params.getFieldParam(fieldName, HighlightParams.ALTERNATE_FIELD);
     if (alternateField != null && alternateField.length() > 0) {
       IndexableField[] docFields = doc.getFields(alternateField);
+      if (docFields.length == 0) {
+        // The alternate field did not exist, treat the original field as fallback instead
+        docFields = doc.getFields(fieldName);
+      }
       List<String> listFields = new ArrayList<String>();
       for (IndexableField field : docFields) {
         if (field.binaryValue() == null)
diff --git a/lucene/dev/branches/lucene_solr_4_6/solr/core/src/test/org/apache/solr/highlight/HighlighterTest.java b/lucene/dev/branches/lucene_solr_4_6/solr/core/src/test/org/apache/solr/highlight/HighlighterTest.java
index c50a216a..67158e9d 100644
--- a/lucene/dev/branches/lucene_solr_4_6/solr/core/src/test/org/apache/solr/highlight/HighlighterTest.java
+++ b/lucene/dev/branches/lucene_solr_4_6/solr/core/src/test/org/apache/solr/highlight/HighlighterTest.java
@@ -661,6 +661,16 @@ public void testAlternateSummary() {
             "//lst[@name='highlighting']/lst[@name='1' and count(*)=1]",
             "//lst[@name='highlighting']/lst[@name='1']/arr[@name='t_text']/str[.='a piece of text']"
             );
+
+    // with a non-existing alternate field + max length
+    args.put("hl.alternateField", "NonExistingField");
+    args.put("hl.maxAlternateFieldLength", "15");
+    sumLRF = h.getRequestFactory("standard", 0, 200, args);
+    assertQ("Alternate summarization",
+            sumLRF.makeRequest("tv_text:keyword"),
+            "//lst[@name='highlighting']/lst[@name='1' and count(*)=1]",
+            "//lst[@name='highlighting']/lst[@name='1']/arr[@name='t_text']/str[.='a piece of text']"
+            );
   }
   
   @Test
