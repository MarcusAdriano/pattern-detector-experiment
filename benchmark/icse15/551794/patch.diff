diff --git a/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/compile/CreateAliasNode.java b/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/compile/CreateAliasNode.java
index b8765796..98518bfe 100644
--- a/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/compile/CreateAliasNode.java
+++ b/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/compile/CreateAliasNode.java
@@ -285,7 +285,7 @@ private TypeDescriptor typeDescriptorWithCorrectCollation(TypeDescriptor changeT
 			//Use the collation type and info of the schema in which this
 			//function is defined for the return value of the function
 			newTDWithCorrectCollation.setCollationType(
-		    	     getSchemaDescriptor(getObjectName().getSchemaName(), false).getCollationType());
+					getSchemaDescriptor().getCollationType());
 			newTDWithCorrectCollation.setCollationDerivation(
 	        		StringDataValue.COLLATION_DERIVATION_IMPLICIT);
 			return newTDWithCorrectCollation;
diff --git a/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java b/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java
index f08b0075..df9361d6 100644
--- a/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java
+++ b/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java
@@ -717,6 +717,8 @@ private void commonTestingForTerritoryBasedDB(Statement s) throws SQLException{
     		" RETURNS VARCHAR(20) RETURNS NULL ON NULL INPUT EXTERNAL NAME " + 
 			"'org.apache.derbyTesting.functionTests.tests.lang.RoutineTest.concat' "+
 			" LANGUAGE JAVA PARAMETER STYLE JAVA");
+    //DERBY-2831 Creating a function inside a non-existent schema should not
+    //fail when it's return type is of character string type.
 
     //Start of parameter testing
     //Start with simple ? param in a string comparison
