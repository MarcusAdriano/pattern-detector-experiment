diff --git a/lucene/solr/branches/cloud/src/java/org/apache/solr/cloud/ZkController.java b/lucene/solr/branches/cloud/src/java/org/apache/solr/cloud/ZkController.java
index 9c301567..440a22fd 100644
--- a/lucene/solr/branches/cloud/src/java/org/apache/solr/cloud/ZkController.java
+++ b/lucene/solr/branches/cloud/src/java/org/apache/solr/cloud/ZkController.java
@@ -103,15 +103,15 @@
    * @param localHost
    * @param locaHostPort
    * @param localHostContext
-   * @param coreConatiner
+   * @param coreContainer
    * @throws InterruptedException
    * @throws TimeoutException
    * @throws IOException
    */
   public ZkController(String zkServerAddress, int zkClientTimeout, String localHost, String locaHostPort,
-      String localHostContext, final CoreContainer coreConatiner) throws InterruptedException,
+      String localHostContext, final CoreContainer coreContainer) throws InterruptedException,
       TimeoutException, IOException {
-    this.coreContainer = coreConatiner;
+    this.coreContainer = coreContainer;
     this.zkServerAddress = zkServerAddress;
     this.localHostPort = locaHostPort;
     this.localHostContext = localHostContext;
@@ -126,10 +126,14 @@ public void command() {
               // for others to do the same, then load
               createEphemeralNode();
               // register cores in case any new cores came online will zk was down
-              Collection<SolrCore> cores = coreConatiner.getCores();
+              
+              // coreContainer may currently be null in tests, so don't reregister
+              if(coreContainer != null) {
+                Collection<SolrCore> cores = coreContainer.getCores();
               for(SolrCore core : cores) {
                 register(core, false);
               }
+              }
               updateCloudState();
             } catch (KeeperException e) {
               log.error("", e);
diff --git a/lucene/solr/branches/cloud/src/test/org/apache/solr/cloud/ZkControllerTest.java b/lucene/solr/branches/cloud/src/test/org/apache/solr/cloud/ZkControllerTest.java
index 33b7b453..363bd496 100644
--- a/lucene/solr/branches/cloud/src/test/org/apache/solr/cloud/ZkControllerTest.java
+++ b/lucene/solr/branches/cloud/src/test/org/apache/solr/cloud/ZkControllerTest.java
@@ -79,7 +79,7 @@ public void testReadShards() throws Exception {
       }
 
       zkController = new ZkController(AbstractZkTestCase.ZOO_KEEPER_ADDRESS, TIMEOUT, "localhost",
-          "8983", "/solr");
+          "8983", "/solr", null);
       zkController.updateCloudState();
       CloudState cloudInfo = zkController.getCloudState();
       Map<String,Slice> slices = cloudInfo.getSlices("collection1");
@@ -152,7 +152,7 @@ public void testReadConfigName() throws Exception {
       }
       zkClient.close();
       ZkController zkController = new ZkController(AbstractZkTestCase.ZOO_KEEPER_ADDRESS, TIMEOUT,
-          "localhost", "8983", "/solr");
+          "localhost", "8983", "/solr", null);
       try {
         String configName = zkController.readConfigName(COLLECTION_NAME);
         assertEquals(configName, actualConfigName);
@@ -178,7 +178,7 @@ public void testUploadToCloud() throws Exception {
       AbstractZkTestCase.makeSolrZkNode();
 
       zkController = new ZkController(AbstractZkTestCase.ZOO_KEEPER_ADDRESS, TIMEOUT, "localhost",
-          "8983", "/solr");
+          "8983", "/solr", null);
 
       zkController.uploadDirToCloud(new File("solr/conf"),
           ZkController.CONFIGS_ZKNODE + "/config1");
