diff --git a/lucene/dev/trunk/lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest.java b/lucene/dev/trunk/lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest.java
index 011cf9d3..ebf9aee7 100644
--- a/lucene/dev/trunk/lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest.java
+++ b/lucene/dev/trunk/lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest.java
@@ -63,7 +63,7 @@
 
 public class SpatialOpRecursivePrefixTreeTest extends StrategyTestCase {
 
-  static final int ITERATIONS = 10;//Test Iterations
+  static final int ITERATIONS = 1;//Test Iterations
 
   private SpatialPrefixTree grid;
 
@@ -371,13 +371,9 @@ protected Shape gridSnap(Shape snapMe) {
       ShapePair me = (ShapePair) snapMe;
       return new ShapePair(gridSnap(me.shape1), gridSnap(me.shape2), me.biasContainsThenWithin);
     }
-    if (ctx.isGeo()) {
-      //A hack; works around issue with (dateline) wrap-around when the point or rect is exactly
-      // adjacent to the dateline.
       if (snapMe instanceof Point) {
         snapMe = snapMe.getBoundingBox();
       }
-    }
     //The next 4 lines mimic PrefixTreeStrategy.createIndexableFields()
     double distErrPct = ((PrefixTreeStrategy) strategy).getDistErrPct();
     double distErr = SpatialArgs.calcDistanceFromErrPct(snapMe, distErrPct, ctx);
