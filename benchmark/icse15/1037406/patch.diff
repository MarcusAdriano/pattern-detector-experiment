diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/TermVectorsReader.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/TermVectorsReader.java
index bc98c488..b9a9c6a1 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/TermVectorsReader.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/TermVectorsReader.java
@@ -90,7 +90,6 @@
         assert format == tvdFormat;
         assert format == tvfFormat;
 
-        assert (tvx.length()-FORMAT_SIZE) % 16 == 0;
         numTotalDocs = (int) (tvx.length() >> 4);
 
         if (-1 == docStoreOffset) {
diff --git a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/index/TestIndexWriterOnDiskFull.java b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/index/TestIndexWriterOnDiskFull.java
index 48687587..0eefee17 100644
--- a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/index/TestIndexWriterOnDiskFull.java
+++ b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/index/TestIndexWriterOnDiskFull.java
@@ -57,6 +57,7 @@ public void testAddDocumentOnDiskFull() throws IOException {
         MockDirectoryWrapper dir = new MockDirectoryWrapper(random, new RAMDirectory());
         dir.setMaxSizeInBytes(diskFree);
         IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));
+        writer.setInfoStream(VERBOSE ? System.out : null);
         MergeScheduler ms = writer.getConfig().getMergeScheduler();
         if (ms instanceof ConcurrentMergeScheduler)
           // This test intentionally produces exceptions
@@ -101,6 +102,7 @@ public void testAddDocumentOnDiskFull() throws IOException {
             
             // Make sure reader can open the index:
             IndexReader.open(dir, true).close();
+            _TestUtil.checkIndex(dir);
           }
             
           dir.close();
@@ -109,6 +111,7 @@ public void testAddDocumentOnDiskFull() throws IOException {
           diskFree += 500;
         } else {
           //_TestUtil.syncConcurrentMerges(writer);
+          dir.setMaxSizeInBytes(0);
           writer.close();
           dir.close();
           break;
diff --git a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/store/MockIndexOutputWrapper.java b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/store/MockIndexOutputWrapper.java
index 58c09003..3a4a3e5f 100644
--- a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/store/MockIndexOutputWrapper.java
+++ b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/store/MockIndexOutputWrapper.java
@@ -90,14 +90,19 @@ public void writeBytes(byte[] b, int offset, int len) throws IOException {
     }
 
     if (dir.maxSize != 0 && freeSpace <= len) {
-      if (freeSpace > 0 && freeSpace < len) {
+      if (freeSpace > 0) {
         realUsage += freeSpace;
         delegate.writeBytes(b, offset, (int) freeSpace);
       }
       if (realUsage > dir.maxUsedSize) {
         dir.maxUsedSize = realUsage;
       }
-      throw new IOException("fake disk full at " + dir.getRecomputedActualSizeInBytes() + " bytes when writing " + name);
+      String message = "fake disk full at " + dir.getRecomputedActualSizeInBytes() + " bytes when writing " + name + " (file length=" + delegate.length();
+      if (freeSpace > 0) {
+        message += "; wrote " + freeSpace + " of " + len + " bytes";
+      }
+      message += ")";
+      throw new IOException(message);
     } else {
       if (dir.randomState.nextBoolean()) {
         final int half = len/2;
