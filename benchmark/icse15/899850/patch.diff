diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Column.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Column.java
index 0e1b37b6..d9401b58 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Column.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Column.java
@@ -36,7 +36,7 @@
  *  with something like PCollections -- http://code.google.com
  */
 
-public final class Column implements IColumn
+public class Column implements IColumn
 {
     private static Logger logger_ = Logger.getLogger(Column.class);
 
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamily.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamily.java
index fe25ace2..737980f5 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamily.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamily.java
@@ -38,7 +38,7 @@
 import org.apache.cassandra.utils.FBUtilities;
 
 
-public final class ColumnFamily implements IColumnContainer
+public class ColumnFamily implements IColumnContainer
 {
     /* The column serializer for this Column Family. Create based on config. */
     private static ColumnFamilySerializer serializer_ = new ColumnFamilySerializer();
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
index 2b5ea16b..5df9c8e9 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
@@ -55,7 +55,7 @@
 import com.google.common.collect.Iterators;
 import com.google.common.base.Predicate;
 
-public final class ColumnFamilyStore implements ColumnFamilyStoreMBean
+public class ColumnFamilyStore implements ColumnFamilyStoreMBean
 {
     private static Logger logger_ = Logger.getLogger(ColumnFamilyStore.class);
 
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/CommitLog.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/CommitLog.java
index 4a08d2ff..f089edb8 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/CommitLog.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/CommitLog.java
@@ -79,7 +79,7 @@
     private static final Logger logger_ = Logger.getLogger(CommitLog.class);
     private static final Map<String, CommitLogHeader> clHeaders_ = new HashMap<String, CommitLogHeader>();
 
-    public static final class CommitLogContext
+    public static class CommitLogContext
     {
         /* Commit Log associated with this operation */
         public final String file;
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/DBConstants.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/DBConstants.java
index 2db14655..d9f5b20b 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/DBConstants.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/DBConstants.java
@@ -18,7 +18,7 @@
 */
 package org.apache.cassandra.db;
 
-final class DBConstants
+class DBConstants
 {
 	public static final int boolSize_ = 1;
 	public static final int intSize_ = 4;
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/SuperColumn.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/SuperColumn.java
index 350a4d9e..c588930b 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/SuperColumn.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/SuperColumn.java
@@ -33,7 +33,7 @@
 import org.apache.cassandra.utils.FBUtilities;
 
 
-public final class SuperColumn implements IColumn, IColumnContainer
+public class SuperColumn implements IColumn, IColumnContainer
 {
 	private static Logger logger_ = Logger.getLogger(SuperColumn.class);
 
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/util/BufferedRandomAccessFile.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/util/BufferedRandomAccessFile.java
index 2192a2af..02453f14 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/util/BufferedRandomAccessFile.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/util/BufferedRandomAccessFile.java
@@ -36,7 +36,7 @@
  * superclass.
  */
 
-public final class BufferedRandomAccessFile extends RandomAccessFile implements FileDataInput
+public class BufferedRandomAccessFile extends RandomAccessFile implements FileDataInput
 {
     static final int LogBuffSz_ = 16; // 64K buffer
     public static final int BuffSz_ = (1 << LogBuffSz_);
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/net/ProtocolHeader.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/net/ProtocolHeader.java
index 8c88813b..1be39daa 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/net/ProtocolHeader.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/net/ProtocolHeader.java
@@ -18,7 +18,7 @@
 
 package org.apache.cassandra.net;
 
-public final class ProtocolHeader
+public class ProtocolHeader
 {
     public static final String SERIALIZER = "SERIALIZER";
     public static final String COMPRESSION = "COMPRESSION";
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/AntiEntropyService.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/AntiEntropyService.java
index 8f5f32e6..eb2ccf8e 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/AntiEntropyService.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/AntiEntropyService.java
@@ -772,7 +772,7 @@ public void doVerb(Message message)
     /**
      * A tuple of table and cf.
      */
-    static final class CFPair extends Pair<String,String>
+    static class CFPair extends Pair<String,String>
     {
         public CFPair(String table, String cf)
         {
@@ -785,7 +785,7 @@ public CFPair(String table, String cf)
      * A tuple of a local and remote tree. One of the trees should be null, but
      * not both.
      */
-    static final class TreePair extends Pair<MerkleTree,MerkleTree>
+    static class TreePair extends Pair<MerkleTree,MerkleTree>
     {
         public TreePair(MerkleTree local, MerkleTree remote)
         {
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageLoadBalancer.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageLoadBalancer.java
index 76ed4993..9392daf3 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageLoadBalancer.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageLoadBalancer.java
@@ -47,7 +47,7 @@
  * keys at an Endpoint. Monitor load information for a 5 minute
  * interval and then do load balancing operations if necessary.
  */
-public final class StorageLoadBalancer implements IEndPointStateChangeSubscriber
+public class StorageLoadBalancer implements IEndPointStateChangeSubscriber
 {
     class LoadBalancer implements Runnable
     {
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
index 59ba964a..2a138c0e 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
@@ -57,7 +57,7 @@
  * This class will also maintain histograms of the load information
  * of other nodes in the cluster.
  */
-public final class StorageService implements IEndPointStateChangeSubscriber, StorageServiceMBean
+public class StorageService implements IEndPointStateChangeSubscriber, StorageServiceMBean
 {
     private static Logger logger_ = Logger.getLogger(StorageService.class);     
 
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StreamManager.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StreamManager.java
index ff4f4404..ff7ae1c8 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StreamManager.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StreamManager.java
@@ -38,7 +38,7 @@
  * This class manages the streaming of multiple files 
  * one after the other. 
 */
-public final class StreamManager
+public class StreamManager
 {   
     private static Logger logger_ = Logger.getLogger( StreamManager.class );
         
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/utils/BloomCalculations.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/utils/BloomCalculations.java
index d48a7566..12e2253e 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/utils/BloomCalculations.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/utils/BloomCalculations.java
@@ -82,7 +82,7 @@ public static int computeBestK(int bucketsPerElement){
      * A wrapper class that holds two key parameters for a Bloom Filter: the
      * number of hash functions used, and the number of buckets per element used.
      */
-    public static final class BloomSpecification {
+    public static class BloomSpecification {
         final int K; // number of hash functions.
         final int bucketsPerElement;
 
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/utils/HashingSchemes.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/utils/HashingSchemes.java
index 0b8370cc..4d666419 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/utils/HashingSchemes.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/utils/HashingSchemes.java
@@ -26,7 +26,7 @@
  * To change this template use File | Settings | File Templates.
  */
 
-public final class HashingSchemes
+public class HashingSchemes
 {
     public static final String SHA_1 = "SHA-1";
     public static final String SHA1 = "SHA1";
