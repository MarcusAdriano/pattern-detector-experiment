diff --git a/db/derby/code/branches/10.10/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TriggerTest.java b/db/derby/code/branches/10.10/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TriggerTest.java
index 3b2871a2..78145e95 100644
--- a/db/derby/code/branches/10.10/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TriggerTest.java
+++ b/db/derby/code/branches/10.10/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TriggerTest.java
@@ -92,6 +92,16 @@ protected void initializeConnection(Connection conn) throws SQLException
     
     protected void setUp() throws Exception
     {
+        //DERBY-5866( testFiringConstraintOrder(
+        // org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)
+        // junit.framework.AssertionFailedError: 
+        // matching triggers need to be fired in order creation:
+        // 1,NO CASCADE BEFORE,DELETE,ROW )
+        //Do the cleanup here rather than in tearDown. This way, if a test
+        // fixture fails, we will have the left over wombat database with
+        // the schema and data used by the failing fixture.
+        JDBC.dropSchema(getConnection().getMetaData(),
+                getTestConfiguration().getUserName());
         Statement s = createStatement();
         s.executeUpdate("CREATE PROCEDURE TRIGGER_LOG_INFO(" +
                 "O VARCHAR(255)) " +
@@ -105,9 +115,6 @@ protected void setUp() throws Exception
     protected void tearDown() throws Exception
     {
         TRIGGER_INFO.set(null);
-        JDBC.dropSchema(getConnection().getMetaData(),
-                getTestConfiguration().getUserName());
-
         super.tearDown();
     }
     
