diff --git a/lucene/java/trunk/src/demo/org/apache/lucene/demo/DeleteFiles.java b/lucene/java/trunk/src/demo/org/apache/lucene/demo/DeleteFiles.java
index 93d46bc5..b4e296dc 100644
--- a/lucene/java/trunk/src/demo/org/apache/lucene/demo/DeleteFiles.java
+++ b/lucene/java/trunk/src/demo/org/apache/lucene/demo/DeleteFiles.java
@@ -18,27 +18,36 @@
  * limitations under the License.
  */
 
-import java.io.IOException;
-
 import org.apache.lucene.store.Directory;
 import org.apache.lucene.store.FSDirectory;
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.Term;
+//import org.apache.lucene.index.Term;
 
 class DeleteFiles {
+  
   public static void main(String[] args) {
+    String usage = "java org.apache.lucene.demo.DeleteFiles <unique_term>";
+    if (args.length == 0) {
+      System.err.println("Usage: " + usage);
+      System.exit(1);
+    }
     try {
-      Directory directory = FSDirectory.getDirectory("demo index", false);
+      Directory directory = FSDirectory.getDirectory("index", false);
       IndexReader reader = IndexReader.open(directory);
 
-//       Term term = new Term("path", "pizza");
-//       int deleted = reader.delete(term);
+      Term term = new Term("path", args[0]);
+      int deleted = reader.delete(term);
 
-//       System.out.println("deleted " + deleted +
-// 			 " documents containing " + term);
+      System.out.println("deleted " + deleted +
+ 			 " documents containing " + term);
 
-      for (int i = 0; i < reader.maxDoc(); i++)
+      // one can also delete documents by their internal id:
+      /*
+      for (int i = 0; i < reader.maxDoc(); i++) {
+        System.out.println("Deleting document with id " + i);
 	reader.delete(i);
+      }*/
 
       reader.close();
       directory.close();
diff --git a/lucene/java/trunk/src/demo/org/apache/lucene/demo/FileDocument.java b/lucene/java/trunk/src/demo/org/apache/lucene/demo/FileDocument.java
index 901aace3..2f94f6e8 100644
--- a/lucene/java/trunk/src/demo/org/apache/lucene/demo/FileDocument.java
+++ b/lucene/java/trunk/src/demo/org/apache/lucene/demo/FileDocument.java
@@ -49,9 +49,10 @@ public static Document Document(File f)
     // make a new, empty document
     Document doc = new Document();
 
-    // Add the path of the file as a field named "path".  Use a Text field, so
-    // that the index stores the path, and so that the path is searchable
-    doc.add(Field.Text("path", f.getPath()));
+    // Add the path of the file as a field named "path".  Use a
+    // Keyword field, so that it's searchable, but so that no attempt is made
+    // to tokenize the field into words.
+    doc.add(Field.Keyword("path", f.getPath()));
 
     // Add the last modified date of the file a field named "modified".  Use a
     // Keyword field, so that it's searchable, but so that no attempt is made
diff --git a/lucene/java/trunk/src/demo/org/apache/lucene/demo/HTMLDocument.java b/lucene/java/trunk/src/demo/org/apache/lucene/demo/HTMLDocument.java
index 5f600666..93a73a79 100644
--- a/lucene/java/trunk/src/demo/org/apache/lucene/demo/HTMLDocument.java
+++ b/lucene/java/trunk/src/demo/org/apache/lucene/demo/HTMLDocument.java
@@ -45,9 +45,10 @@ public static Document Document(File f)
     // make a new, empty document
     Document doc = new Document();
 
-    // Add the url as a field named "url".  Use an UnIndexed field, so
-    // that the url is just stored with the document, but is not searchable.
-    doc.add(Field.UnIndexed("url", f.getPath().replace(dirSep, '/')));
+    // Add the url as a field named "path".  Use a Keyword field, so 
+    // that it's searchable, but so that no attempt is made
+    // to tokenize the field into words.
+    doc.add(Field.Keyword("path", f.getPath().replace(dirSep, '/')));
 
     // Add the last modified date of the file a field named "modified".  Use a
     // Keyword field, so that it's searchable, but so that no attempt is made
diff --git a/lucene/java/trunk/src/demo/org/apache/lucene/demo/IndexHTML.java b/lucene/java/trunk/src/demo/org/apache/lucene/demo/IndexHTML.java
index c229fd97..dc57ae10 100644
--- a/lucene/java/trunk/src/demo/org/apache/lucene/demo/IndexHTML.java
+++ b/lucene/java/trunk/src/demo/org/apache/lucene/demo/IndexHTML.java
@@ -146,12 +146,12 @@ private static void indexDocs(File file) throws Exception {
 	  uidIter.next();			  // keep matching docs
 	} else if (!deleting) {			  // add new docs
 	  Document doc = HTMLDocument.Document(file);
-	  System.out.println("adding " + doc.get("url"));
+	  System.out.println("adding " + doc.get("path"));
 	writer.addDocument(doc);
 	}
       } else {					  // creating a new index
 	Document doc = HTMLDocument.Document(file);
-	System.out.println("adding " + doc.get("url"));
+	System.out.println("adding " + doc.get("path"));
 	writer.addDocument(doc);		  // add docs unconditionally
       }
     }
diff --git a/lucene/java/trunk/src/demo/org/apache/lucene/demo/SearchFiles.java b/lucene/java/trunk/src/demo/org/apache/lucene/demo/SearchFiles.java
index f3bf6b07..6be1f68f 100644
--- a/lucene/java/trunk/src/demo/org/apache/lucene/demo/SearchFiles.java
+++ b/lucene/java/trunk/src/demo/org/apache/lucene/demo/SearchFiles.java
@@ -18,7 +18,6 @@
  * limitations under the License.
  */
 
-import java.io.IOException;
 import java.io.BufferedReader;
 import java.io.InputStreamReader;
 
@@ -58,15 +57,13 @@ public static void main(String[] args) {
 	    Document doc = hits.doc(i);
 	    String path = doc.get("path");
 	    if (path != null) {
-              System.out.println(i + ". " + path);
-	    } else {
-              String url = doc.get("url");
-	      if (url != null) {
-		System.out.println(i + ". " + url);
-		System.out.println("   - " + doc.get("title"));
-	      } else {
-		System.out.println(i + ". " + "No path nor URL for this document");
+              System.out.println((i+1) + ". " + path);
+              String title = doc.get("title");
+	      if (title != null) {
+		System.out.println("   Title: " + doc.get("title"));
 	      }
+	    } else {
+	      System.out.println((i+1) + ". " + "No path for this document");
 	    }
 	  }
 
