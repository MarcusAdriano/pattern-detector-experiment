diff --git a/incubator/cassandra/trunk/contrib/bmt_example/CassandraBulkLoader.java b/incubator/cassandra/trunk/contrib/bmt_example/CassandraBulkLoader.java
index c3fc0389..395e6f90 100644
--- a/incubator/cassandra/trunk/contrib/bmt_example/CassandraBulkLoader.java
+++ b/incubator/cassandra/trunk/contrib/bmt_example/CassandraBulkLoader.java
@@ -124,7 +124,7 @@ public void configure(JobConf job) {
                 {
                     throw new RuntimeException(e);
                 }
-                StorageService.instance().updateTokenMetadataUnsafe(new BigIntegerToken(new BigInteger(values[0])), address);
+                StorageService.instance().updateForeignTokenUnsafe(new BigIntegerToken(new BigInteger(values[0])), address);
             }
         }
         public void close()
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
index 93d1a15a..00d590ab 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
@@ -174,6 +174,15 @@ private void updateForeignToken(Token token, InetAddress endpoint)
         SystemTable.updateToken(endpoint, token);
     }
 
+    /**
+     * for bulk loading clients to be able to use tokenmetadata/messagingservice
+     * without fully starting storageservice / systemtable.
+     */
+    public void updateForeignTokenUnsafe(Token token, InetAddress endpoint)
+    {
+        tokenMetadata_.update(token, endpoint);
+    }
+
     /** This method updates the local token on disk and starts broacasting it to others. */
     public void setToken(Token token)
     {
