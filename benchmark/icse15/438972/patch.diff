diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/AutoloadTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/AutoloadTest.java
index ae71575c..025ec613 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/AutoloadTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/AutoloadTest.java
@@ -30,7 +30,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 package org.apache.derbyTesting.functionTests.tests.jdbc4;
 
-import java.security.PrivilegedActionException;
 import java.sql.*;
 import java.util.*;
 import junit.framework.*;
@@ -107,7 +106,7 @@ public static Test suite()
                         autoloadingCurrentDriver = true;
                 }
                 
-            } catch (PrivilegedActionException e) {
+            } catch (SecurityException e) {
                 // can't read property, assume not autoloading.
             }
                         
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java
index d760a88b..3450b49b 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java
@@ -139,7 +139,7 @@ public static void printStackTrace(Throwable t)
      */
     protected static void setSystemProperty(final String name, 
 					    final String value)
-	throws PrivilegedActionException {
+    {
 	
 	AccessController.doPrivileged
 	    (new java.security.PrivilegedAction(){
@@ -160,7 +160,7 @@ public Object run(){
      * @param name name of the property
      */
     protected static void removeSystemProperty(final String name)
-	throws PrivilegedActionException {
+	{
 	
 	AccessController.doPrivileged
 	    (new java.security.PrivilegedAction(){
@@ -181,7 +181,7 @@ public Object run(){
      * @param name name of the property
      */
     protected static String getSystemProperty(final String name)
-	throws PrivilegedActionException {
+	{
 
 	return (String )AccessController.doPrivileged
 	    (new java.security.PrivilegedAction(){
@@ -200,10 +200,9 @@ public Object run(){
      * file or a SQL script.
      * @param name Resource name, typically - org.apache.derbyTesing.something
      * @return URL to the resource, null if it does not exist.
-     * @throws PrivilegedActionException
      */
     protected static URL getTestResource(final String name)
-	throws PrivilegedActionException {
+	{
 
 	return (URL)AccessController.doPrivileged
 	    (new java.security.PrivilegedAction(){
