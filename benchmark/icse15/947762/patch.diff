diff --git a/incubator/aries/trunk/samples/blog/blog-biz/src/main/java/org/apache/aries/samples/blog/biz/BlogAuthorManagerImpl.java b/incubator/aries/trunk/samples/blog/blog-biz/src/main/java/org/apache/aries/samples/blog/biz/BlogAuthorManagerImpl.java
index 62f80243..b8d961a7 100644
--- a/incubator/aries/trunk/samples/blog/blog-biz/src/main/java/org/apache/aries/samples/blog/biz/BlogAuthorManagerImpl.java
+++ b/incubator/aries/trunk/samples/blog/blog-biz/src/main/java/org/apache/aries/samples/blog/biz/BlogAuthorManagerImpl.java
@@ -46,7 +46,6 @@ public void createAuthor(String email, String dob, String name, String displayNa
     if(email == null) throw new IllegalArgumentException("Email must not be null");
    
     Date dateOfBirth;
-    
 	dateOfBirth = (dob == null || "".equals(dob)) ? null : new SimpleDateFormat("yyyy-MM-dd").parse(dob);
 	
     persistenceService.createAuthor(email, dateOfBirth, name, displayName, bio);
@@ -76,16 +75,16 @@ public void removeAuthor(String emailAddress)
   
   public void updateAuthor(String email, String dob, String name, String displayName, String bio) throws ParseException
   { 
-	  if (email == null)
-			throw new IllegalArgumentException("Email must not be null");
-    Date dateOfBirth = (dob == null) ? null : new SimpleDateFormat("yyyy-MM-dd").parse(dob);
+    if(email == null) throw new IllegalArgumentException("Email must not be null");
+   
+    Date dateOfBirth;
+    dateOfBirth = (dob == null || "".equals(dob)) ? null : new SimpleDateFormat("yyyy-MM-dd").parse(dob);
+
     persistenceService.updateAuthor(email, dateOfBirth, name, displayName, bio);
   }
   
-	private List<? extends BlogAuthor> adaptAuthor(
-			List<? extends Author> authors) {
+  private List<? extends BlogAuthor> adaptAuthor(List<? extends Author> authors) {
 			return new BlogListAdapter<BlogAuthor, Author>(authors, BlogAuthorImpl.class, Author.class);
-
 	}
  
 }
