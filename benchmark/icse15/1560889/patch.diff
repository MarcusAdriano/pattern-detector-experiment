diff --git a/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestSingularValueDecomposition.java b/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestSingularValueDecomposition.java
index 045850a2..cb0dc90d 100644
--- a/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestSingularValueDecomposition.java
+++ b/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestSingularValueDecomposition.java
@@ -244,35 +244,13 @@ public void testConditionNumber() {
     assertEquals(3.0, svd.cond(), 1.5e-15);
   }
 
-  @Test
+  @Test(timeout=1000)
   public void testSvdHang() throws IOException, InterruptedException, ExecutionException, TimeoutException {
-    for (String s : new String[]{"hanging-svd", }) {
-      System.out.printf("starting %s\n", s);
-      final Matrix m = readTsv(s + ".tsv");
-      try {
-        SingularValueDecomposition svd = timeout(2000, new Callable<SingularValueDecomposition>() {
-          @Override
-          public SingularValueDecomposition call() throws Exception {
-            return new SingularValueDecomposition(m);
-          }
-        });
+    System.out.printf("starting hanging-svd\n");
+    final Matrix m = readTsv("hanging-svd.tsv");
+    SingularValueDecomposition svd = new SingularValueDecomposition(m);
         assertEquals(0, m.minus(svd.getU().times(svd.getS()).times(svd.getV().transpose())).aggregate(Functions.PLUS, Functions.ABS), 1e-10);
-        System.out.printf("%s worked\n", s);
-      } catch (ExecutionException e) {
-        System.out.printf("Failed during %s\n", s);
-        throw e;
-      } catch (TimeoutException e) {
-        System.out.printf("%s timed out\n", s);
-        throw e;
-      }
-    }
-  }
-
-  <T> T timeout(int timeLimit, Callable<T> toDo) throws InterruptedException, ExecutionException, TimeoutException {
-    ExecutorService pool = Executors.newFixedThreadPool(1);
-    Future<T> f = pool.submit(toDo);
-    pool.shutdown();
-    return f.get(timeLimit, TimeUnit.MILLISECONDS);
+    System.out.printf("No hang\n");
   }
 
   Matrix readTsv(String name) throws IOException {
