diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/io/DirStorageFactory.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/io/DirStorageFactory.java
index 4fa7c01f..bc3162a8 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/io/DirStorageFactory.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/io/DirStorageFactory.java
@@ -187,7 +187,11 @@ void doInit() throws IOException
             else if( home != null && dataDirectory.startsWith( home))
                 databaseRoot = dataDirectoryFile;
             else
+            {
                 databaseRoot = new File( home, dataDirectory);
+                if (home != null)
+                    dataDirectory = home + getSeparator() +  dataDirectory;
+            }
             canonicalName = databaseRoot.getCanonicalPath();
             createTempDir();
             separatedDataDirectory = dataDirectory + getSeparator();
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/io/DirStorageFactory4.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/io/DirStorageFactory4.java
index 2194adf7..552b437a 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/io/DirStorageFactory4.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/io/DirStorageFactory4.java
@@ -53,14 +53,9 @@ public DirStorageFactory4()
      */
     StorageFile newPersistentFile( String path)
     {
-        String dir = dataDirectory;
-        if (canonicalName != null && path != null && home != null && 
-                !path.startsWith(home)) {
-            dir = canonicalName;
-        }
         if( path == null)
-            return new DirFile4(dir, rwsOK);
-        return new DirFile4(dir, path, rwsOK);
+            return new DirFile4(dataDirectory, rwsOK);
+        return new DirFile4(dataDirectory, path, rwsOK);
     }
 
     /**
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GetPropertyInfoTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GetPropertyInfoTest.java
index dce9ebe4..b24cee15 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GetPropertyInfoTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GetPropertyInfoTest.java
@@ -73,7 +73,22 @@ public static void main(String[] args) throws SQLException,
 
 				for (int j = 0; j < attributes.length; j++)
 				{
-					System.out.println(attributes[j].name + ": " + attributes[j].value);
+					System.out.print(attributes[j].name + " - value: " + attributes[j].value);
+					// Also check on the other PropertyInfo fields
+					String[] choices = attributes[j].choices;
+					System.out.print(" - description: " 
+						+ attributes[j].description +
+						" - required " + attributes[j].required);
+					if (choices != null)
+					{
+						for (int k = 0; k < choices.length; k++)
+						{
+							System.out.print("     - choices [" + k + "] : " + choices[k]);
+						}
+						System.out.print("\n");
+					}
+					else
+						System.out.print(" - choices null \n");
 				}
 
 				// Now set bootPassword and call getPropertyInfo again.  
@@ -121,8 +136,24 @@ public static void main(String[] args) throws SQLException,
 
 				for (int j = 0; j < attributes.length; j++)
 				{
-					System.out.println(attributes[j].name + ": " + attributes[j].value);
+					System.out.print(attributes[j].name + " - value: " + attributes[j].value);
+					// Also check on the other PropertyInfo fields
+					String[] choices = attributes[j].choices;
+					System.out.print(" - description: " 
+						+ attributes[j].description +
+						" - required " + attributes[j].required);
+					if (choices != null)
+					{
+						for (int k = 0; k < choices.length; k++)
+						{
+							System.out.print("     - choices [" + k + "] : " + choices[k]);
+						}
+						System.out.print("\n");
 				}
+					else
+						System.out.print(" - choices null \n");
+				}
+
 				// Now set database name and call getPropertyInfo again.  
 				// This time attribute length should be zero, sice we pass all
 				// minimum required properties. 
