diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanItemPreferenceArray.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanItemPreferenceArray.java
index fd41250b..6f43f8e4 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanItemPreferenceArray.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanItemPreferenceArray.java
@@ -154,6 +154,22 @@ public BooleanItemPreferenceArray clone() {
     return new PreferenceArrayIterator();
   }
   
+  @Override
+  public String toString() {
+    StringBuilder result = new StringBuilder(10*IDs.length);
+    result.append("BooleanItemPreferenceArray[itemID:");
+    result.append(id);
+    result.append(",{");
+    for (int i = 0; i < IDs.length; i++) {
+      if (i > 0) {
+        result.append(',');
+      }
+      result.append(IDs[i]);
+    }
+    result.append("}]");
+    return result.toString();
+  }
+  
   private final class PreferenceArrayIterator implements Iterator<Preference> {
     private int i = 0;
     
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanUserPreferenceArray.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanUserPreferenceArray.java
index 085fb9ce..1e235bbe 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanUserPreferenceArray.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanUserPreferenceArray.java
@@ -154,6 +154,22 @@ public BooleanUserPreferenceArray clone() {
     return new PreferenceArrayIterator();
   }
   
+  @Override
+  public String toString() {
+    StringBuilder result = new StringBuilder(10*IDs.length);
+    result.append("BooleanUserPreferenceArray[userID:");
+    result.append(id);
+    result.append(",{");
+    for (int i = 0; i < IDs.length; i++) {
+      if (i > 0) {
+        result.append(',');
+      }
+      result.append(IDs[i]);
+    }
+    result.append("}]");
+    return result.toString();
+  }
+  
   private final class PreferenceArrayIterator implements Iterator<Preference> {
     private int i = 0;
     
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericItemPreferenceArray.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericItemPreferenceArray.java
index d4a34526..ddc46600 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericItemPreferenceArray.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericItemPreferenceArray.java
@@ -214,6 +214,24 @@ public GenericItemPreferenceArray clone() {
     return new PreferenceArrayIterator();
   }
   
+  @Override
+  public String toString() {
+    StringBuilder result = new StringBuilder(20*IDs.length);
+    result.append("GenericItemPreferenceArray[itemID:");
+    result.append(id);
+    result.append(",{");
+    for (int i = 0; i < IDs.length; i++) {
+      if (i > 0) {
+        result.append(',');
+      }
+      result.append(IDs[i]);
+      result.append('=');
+      result.append(values[i]);
+    }
+    result.append("}]");
+    return result.toString();
+  }
+  
   private final class PreferenceArrayIterator implements Iterator<Preference> {
     private int i = 0;
     
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericUserPreferenceArray.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericUserPreferenceArray.java
index a6f09227..62c07a67 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericUserPreferenceArray.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericUserPreferenceArray.java
@@ -215,6 +215,24 @@ public GenericUserPreferenceArray clone() {
     return new PreferenceArrayIterator();
   }
   
+  @Override
+  public String toString() {
+    StringBuilder result = new StringBuilder(20*IDs.length);
+    result.append("GenericUserPreferenceArray[userID:");
+    result.append(id);
+    result.append(",{");
+    for (int i = 0; i < IDs.length; i++) {
+      if (i > 0) {
+        result.append(',');
+      }
+      result.append(IDs[i]);
+      result.append('=');
+      result.append(values[i]);
+    }
+    result.append("}]");
+    return result.toString();
+  }
+  
   private final class PreferenceArrayIterator implements Iterator<Preference> {
     private int i = 0;
     
