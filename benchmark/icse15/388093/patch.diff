diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java
index 7c0bd22e..c2480a04 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java
@@ -4274,5 +4274,30 @@ else if (streamUsedFlags[columnIndex - 1])
     	
     	streamUsedFlags[columnIndex - 1] = true;
     }
+
+    /**
+     * JDBC 4.0
+     *
+     * <p>
+     * Checks whether this <code>ResultSet</code> object has been
+     * closed, either automatically or because <code>close()</code>
+     * has been called.
+     *
+     * @return <code>true</code> if the <code>ResultSet</code> is
+     * closed, <code>false</code> otherwise
+     * @exception SQLException if a database error occurs
+     */
+    public final boolean isClosed() throws SQLException {
+        if (isClosed) return true;
+        try {
+            // isClosed is not updated when EmbedConnection.close() is
+            // called, so we need to check the status of the
+            // connection
+            checkExecIfClosed("");
+            return false;
+        } catch (SQLException sqle) {
+            return isClosed;
+        }
+    }
 }
 
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet40.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet40.java
index 6e5f879b..00044130 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet40.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet40.java
@@ -83,19 +83,6 @@ public final int getHoldability() throws SQLException {
         return statement.getResultSetHoldability();
     }
     
-    /**
-     * Checks whether this <code>ResultSet</code> object has been
-     * closed, either automatically or because <code>close()</code>
-     * has been called.
-     *
-     * @return <code>true</code> if the <code>ResultSet</code> is
-     * closed, <code>false</code> otherwise
-     * @exception SQLException if a database error occurs
-     */
-    public final boolean isClosed() throws SQLException {
-        return isClosed;
-    }
-    
     public void updateNString(int columnIndex, String nString) throws SQLException {
         throw Util.notImplemented();
     }
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestResultSetMethods.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestResultSetMethods.java
index d700ae4a..478829d3 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestResultSetMethods.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestResultSetMethods.java
@@ -214,6 +214,18 @@ void t_isClosed(){
             assert_(count == 3, "expected three result sets");
             stmt.execute("drop procedure retrieve_result_sets");
 
+            // close statement
+            rs = stmt2.executeQuery("values(1)");
+            stmt2.close();
+            assert_(rs.isClosed(), "rs should be closed");
+
+            // close connection
+            Connection conn2 = ij.startJBMS();
+            stmt2 = conn2.createStatement();
+            rs = stmt2.executeQuery("values(1)");
+            conn2.close();
+            assert_(rs.isClosed(), "rs should be closed");
+
             stmt.close();
             stmt2.close();
             
