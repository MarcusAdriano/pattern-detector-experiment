diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/tools/NodeCmd.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/tools/NodeCmd.java
index fbb65ad8..d77b86a3 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/tools/NodeCmd.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/tools/NodeCmd.java
@@ -37,6 +37,7 @@
 import org.apache.cassandra.concurrent.IExecutorMBean;
 import org.apache.cassandra.config.DatabaseDescriptor;
 import org.apache.cassandra.db.ColumnFamilyStoreMBean;
+import org.apache.cassandra.db.CompactionManagerMBean;
 import org.apache.cassandra.dht.Token;
 import org.apache.cassandra.net.MessagingServiceMBean;
 
@@ -75,7 +76,7 @@ private static void printUsage()
                 "clearsnapshot, tpstats, flush, drain, repair, decommission, move, loadbalance, removetoken [status|force]|[token], " +
                 "setcachecapacity [keyspace] [cfname] [keycachecapacity] [rowcachecapacity], " +
                 "getcompactionthreshold [keyspace] [cfname], setcompactionthreshold [cfname] [minthreshold] [maxthreshold], " +
-                "netstats [host], cfhistograms <keyspace> <column_family>");
+                "netstats [host], cfhistograms <keyspace> <column_family>, compactionstats");
         String usage = String.format("java %s --host <arg> <command>%n", NodeCmd.class.getName());
         hf.printHelp(usage, "", options, header);
     }
@@ -248,6 +249,16 @@ public void printNetworkStats(final InetAddress addr, PrintStream outs)
         outs.printf("%-25s%10s%10s%15s%n", "Responses", "n/a", pending, completed);
     }
     
+    public void printCompactionStats(PrintStream outs)
+    {
+        CompactionManagerMBean cm = probe.getCompactionManagerProxy();
+        outs.println("compaction type: " + (cm.getCompactionType() == null ? "n/a" : cm.getCompactionType()));
+        outs.println("column family: " + (cm.getColumnFamilyInProgress() == null ? "n/a" : cm.getColumnFamilyInProgress()));
+        outs.println("bytes compacted: " + (cm.getBytesCompacted() == null ? "n/a" : cm.getBytesCompacted()));
+        outs.println("bytes total in progress: " + (cm.getBytesTotalInProgress() == null ? "n/a" : cm.getBytesTotalInProgress() ));
+        outs.println("pending tasks: " + cm.getPendingTasks());
+    }
+ 
     public void printColumnFamilyStats(PrintStream outs)
     {
         Map <String, List <ColumnFamilyStoreMBean>> cfstoreMap = new HashMap <String, List <ColumnFamilyStoreMBean>>();
@@ -493,6 +504,10 @@ else if (cmdName.equals("compact"))
                 System.exit(3);
             }
         }
+        else if (cmdName.equals("compactionstats"))
+        {
+            nodeCmd.printCompactionStats(System.out);
+        }
         else if (cmdName.equals("cfstats"))
         {
             nodeCmd.printColumnFamilyStats(System.out);
diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/tools/NodeProbe.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/tools/NodeProbe.java
index 75ad89d5..50f9592b 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/tools/NodeProbe.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/tools/NodeProbe.java
@@ -45,6 +45,8 @@
 import org.apache.cassandra.concurrent.IExecutorMBean;
 import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.db.ColumnFamilyStoreMBean;
+import org.apache.cassandra.db.CompactionManager;
+import org.apache.cassandra.db.CompactionManagerMBean;
 import org.apache.cassandra.dht.IPartitioner;
 import org.apache.cassandra.dht.Token;
 import org.apache.cassandra.locator.IEndpointSnitch;
@@ -72,6 +74,7 @@
 
     private JMXConnector jmxc;
     private MBeanServerConnection mbeanServerConn;
+    private CompactionManagerMBean compactionProxy;
     private StorageServiceMBean ssProxy;
     private MemoryMXBean memProxy;
     private RuntimeMXBean runtimeProxy;
@@ -121,6 +124,8 @@ private void connect() throws IOException
             ssProxy = JMX.newMBeanProxy(mbeanServerConn, name, StorageServiceMBean.class);
             name = new ObjectName(StreamingService.MBEAN_OBJECT_NAME);
             streamProxy = JMX.newMBeanProxy(mbeanServerConn, name, StreamingServiceMBean.class);
+            name = new ObjectName(CompactionManager.MBEAN_OBJECT_NAME);
+            compactionProxy = JMX.newMBeanProxy(mbeanServerConn, name, CompactionManagerMBean.class);
         } catch (MalformedObjectNameException e)
         {
             throw new RuntimeException(
@@ -224,6 +229,11 @@ public void drain() throws IOException, InterruptedException, ExecutionException
         }
     }
 
+    public CompactionManagerMBean getCompactionManagerProxy()
+    {
+      return compactionProxy;
+    }
+
     public JMXInstrumentedCacheMBean getKeyCacheMBean(String tableName, String cfName)
     {
         String keyCachePath = "org.apache.cassandra.db:type=Caches,keyspace=" + tableName + ",cache=" + cfName + "KeyCache";
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeCmd.java b/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeCmd.java
index fbb65ad8..d77b86a3 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeCmd.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeCmd.java
@@ -37,6 +37,7 @@
 import org.apache.cassandra.concurrent.IExecutorMBean;
 import org.apache.cassandra.config.DatabaseDescriptor;
 import org.apache.cassandra.db.ColumnFamilyStoreMBean;
+import org.apache.cassandra.db.CompactionManagerMBean;
 import org.apache.cassandra.dht.Token;
 import org.apache.cassandra.net.MessagingServiceMBean;
 
@@ -75,7 +76,7 @@ private static void printUsage()
                 "clearsnapshot, tpstats, flush, drain, repair, decommission, move, loadbalance, removetoken [status|force]|[token], " +
                 "setcachecapacity [keyspace] [cfname] [keycachecapacity] [rowcachecapacity], " +
                 "getcompactionthreshold [keyspace] [cfname], setcompactionthreshold [cfname] [minthreshold] [maxthreshold], " +
-                "netstats [host], cfhistograms <keyspace> <column_family>");
+                "netstats [host], cfhistograms <keyspace> <column_family>, compactionstats");
         String usage = String.format("java %s --host <arg> <command>%n", NodeCmd.class.getName());
         hf.printHelp(usage, "", options, header);
     }
@@ -248,6 +249,16 @@ public void printNetworkStats(final InetAddress addr, PrintStream outs)
         outs.printf("%-25s%10s%10s%15s%n", "Responses", "n/a", pending, completed);
     }
     
+    public void printCompactionStats(PrintStream outs)
+    {
+        CompactionManagerMBean cm = probe.getCompactionManagerProxy();
+        outs.println("compaction type: " + (cm.getCompactionType() == null ? "n/a" : cm.getCompactionType()));
+        outs.println("column family: " + (cm.getColumnFamilyInProgress() == null ? "n/a" : cm.getColumnFamilyInProgress()));
+        outs.println("bytes compacted: " + (cm.getBytesCompacted() == null ? "n/a" : cm.getBytesCompacted()));
+        outs.println("bytes total in progress: " + (cm.getBytesTotalInProgress() == null ? "n/a" : cm.getBytesTotalInProgress() ));
+        outs.println("pending tasks: " + cm.getPendingTasks());
+    }
+ 
     public void printColumnFamilyStats(PrintStream outs)
     {
         Map <String, List <ColumnFamilyStoreMBean>> cfstoreMap = new HashMap <String, List <ColumnFamilyStoreMBean>>();
@@ -493,6 +504,10 @@ else if (cmdName.equals("compact"))
                 System.exit(3);
             }
         }
+        else if (cmdName.equals("compactionstats"))
+        {
+            nodeCmd.printCompactionStats(System.out);
+        }
         else if (cmdName.equals("cfstats"))
         {
             nodeCmd.printColumnFamilyStats(System.out);
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeProbe.java b/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeProbe.java
index 75ad89d5..50f9592b 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeProbe.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeProbe.java
@@ -45,6 +45,8 @@
 import org.apache.cassandra.concurrent.IExecutorMBean;
 import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.db.ColumnFamilyStoreMBean;
+import org.apache.cassandra.db.CompactionManager;
+import org.apache.cassandra.db.CompactionManagerMBean;
 import org.apache.cassandra.dht.IPartitioner;
 import org.apache.cassandra.dht.Token;
 import org.apache.cassandra.locator.IEndpointSnitch;
@@ -72,6 +74,7 @@
 
     private JMXConnector jmxc;
     private MBeanServerConnection mbeanServerConn;
+    private CompactionManagerMBean compactionProxy;
     private StorageServiceMBean ssProxy;
     private MemoryMXBean memProxy;
     private RuntimeMXBean runtimeProxy;
@@ -121,6 +124,8 @@ private void connect() throws IOException
             ssProxy = JMX.newMBeanProxy(mbeanServerConn, name, StorageServiceMBean.class);
             name = new ObjectName(StreamingService.MBEAN_OBJECT_NAME);
             streamProxy = JMX.newMBeanProxy(mbeanServerConn, name, StreamingServiceMBean.class);
+            name = new ObjectName(CompactionManager.MBEAN_OBJECT_NAME);
+            compactionProxy = JMX.newMBeanProxy(mbeanServerConn, name, CompactionManagerMBean.class);
         } catch (MalformedObjectNameException e)
         {
             throw new RuntimeException(
@@ -224,6 +229,11 @@ public void drain() throws IOException, InterruptedException, ExecutionException
         }
     }
 
+    public CompactionManagerMBean getCompactionManagerProxy()
+    {
+      return compactionProxy;
+    }
+
     public JMXInstrumentedCacheMBean getKeyCacheMBean(String tableName, String cfName)
     {
         String keyCachePath = "org.apache.cassandra.db:type=Caches,keyspace=" + tableName + ",cache=" + cfName + "KeyCache";
