diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java
index 3db1a7db..bc2a5021 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java
@@ -257,6 +257,7 @@ private NamedList rQuery(int expectedDocCount, String query, SolrServer server)
 
   @Test
   public void doTestDetails() throws Exception {
+    clearIndexWithReplication();
     { 
       NamedList<Object> details = getDetails(masterClient);
       
@@ -267,7 +268,9 @@ public void doTestDetails() throws Exception {
       assertNotNull("master has master section", 
                     details.get("master"));
     }
-    {
+
+    // check details on the slave a couple of times before & after fetching
+    for (int i = 0; i < 3; i++) {
       NamedList<Object> details = getDetails(slaveClient);
       
       assertEquals("slave isMaster?", 
@@ -276,6 +279,17 @@ public void doTestDetails() throws Exception {
                    "true", details.get("isSlave"));
       assertNotNull("slave has slave section", 
                     details.get("slave"));
+      // SOLR-2677: assert not false negatives
+      Object timesFailed = ((NamedList)details.get("slave")).get(SnapPuller.TIMES_FAILED);
+      assertEquals("slave has fetch error count",
+                   null, timesFailed);
+
+      if (3 != i) {
+        // index & fetch
+        index(masterClient, "id", i, "name", "name = " + i);
+        masterClient.commit();
+        pullFromTo(masterJetty, slaveJetty);
+      }
     }
 
     SolrInstance repeater = null;
