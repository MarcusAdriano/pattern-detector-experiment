diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/Config.java b/cassandra/trunk/src/java/org/apache/cassandra/config/Config.java
index 8efdd465..f76b6f22 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/Config.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/Config.java
@@ -82,7 +82,7 @@
     /* if the size of columns or super-columns are more than this, indexing will kick in */
     public Integer column_index_size_in_kb = 64;
     public Integer in_memory_compaction_limit_in_mb = 256;
-    public Boolean compaction_multithreading = true;
+    public Integer concurrent_compactors = Runtime.getRuntime().availableProcessors();
     public Integer compaction_throughput_mb_per_sec = 16;
     
     public String[] data_file_directories;
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java b/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
index e4f74b31..6c4e88d6 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
@@ -341,8 +341,11 @@ else if (conf.memtable_flush_writers == null)
                 throw new ConfigurationException("in_memory_compaction_limit_in_mb must be a positive integer");
             }
 
-            if (conf.compaction_multithreading == null)
-                conf.compaction_multithreading = true;
+            if (conf.concurrent_compactors == null)
+                conf.concurrent_compactors = Runtime.getRuntime().availableProcessors();
+
+            if (conf.concurrent_compactors <= 0)
+                throw new ConfigurationException("concurrent_compactors should be strictly greater than 0");
 
             if (conf.compaction_throughput_mb_per_sec == null)
                 conf.compaction_throughput_mb_per_sec = 16;
@@ -729,9 +732,9 @@ public static int getInMemoryCompactionLimit()
         return conf.in_memory_compaction_limit_in_mb * 1024 * 1024;
     }
 
-    public static boolean getCompactionMultithreading()
+    public static int getConcurrentCompactors()
     {
-        return conf.compaction_multithreading;
+        return conf.concurrent_compactors;
     }
 
     public static int getCompactionThroughputMbPerSec()
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java b/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java
index 1ecbbcad..82003576 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java
@@ -1212,9 +1212,7 @@ public CompactionExecutor()
 
         private static int getThreadCount()
         {
-            if (!DatabaseDescriptor.getCompactionMultithreading())
-                return 1;
-            return Math.max(2, Runtime.getRuntime().availableProcessors());
+            return Math.max(1, DatabaseDescriptor.getConcurrentCompactors());
         }
 
         void beginCompaction(CompactionInfo.Holder ci)
