diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLBoolean.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLBoolean.java
index 6f357f91..6010b862 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLBoolean.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLBoolean.java
@@ -519,45 +519,6 @@ public void setBigDecimal(Number bigDecimal) throws StandardException
 
 	}
 
-	/**
-	 * Set the value of this BooleanDataValue to the given byte array value
-	 *
-	 * @param theValue	The value to set this BooleanDataValue to
-	 */
-	public void setValue(byte[] theValue)
-	{
-		if (SanityManager.DEBUG)
-			SanityManager.ASSERT( ! immutable,
-						"Attempt to set the value of an immutable SQLBoolean");
-
-		if (theValue != null)
-		{
-			isnull = false;
-			int length = theValue.length;
-	
-			/*
-			** Step through all bytes.  As soon
-			** as we get one with something other
-			** than 0, then we know we have a 'true'
-			*/
-			for (int i = 0; i < length; i++)
-			{
-				if (theValue[i] != 0)
-				{
-					value = true;
-					return;
-				}
-			}
-		}
-		else
-		{
-			isnull = true;
-		}
-		value = false;
-
-	}
-
-
 	/**
 	 * Set the value of this BooleanDataValue to the given String.
 	 * String is trimmed and upcased.  If resultant string is not
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/BooleanValuesTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/BooleanValuesTest.java
index 504d1f02..48e356c7 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/BooleanValuesTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/BooleanValuesTest.java
@@ -58,6 +58,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
     private static final String BAD_CONVERSION = "42846";
     private static final String ILLEGAL_INSERT = "42821";
     private static final String BAD_DEFAULT = "42894";
+    private static final String ILLEGAL_UPDATE = "XCL12";
 
     ///////////////////////////////////////////////////////////////////////////////////
     //
@@ -1818,6 +1819,44 @@ public void test_4965() throws SQLException {
         }
     }
 
+    /**
+     * Verify fix for DERBY-5063 - updateBytes() should fail when invoked
+     * on boolean columns.
+     */
+    public void test_5063_updateBytes() throws SQLException {
+        setAutoCommit(false);
+
+        Statement s = createStatement();
+        s.execute("create table derby5063(b boolean)");
+
+        PreparedStatement ps = prepareStatement("select b from derby5063",
+                ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE);
+
+        byte[] bytes = "abc".getBytes();
+
+        // Test updateBytes()
+        ResultSet rs = ps.executeQuery();
+        rs.moveToInsertRow();
+        try {
+            rs.updateBytes(1, bytes);
+            fail("updateBytes should fail");
+        } catch (SQLException sqle) {
+            assertSQLState(ILLEGAL_UPDATE, sqle);
+        }
+        rs.close();
+
+        // setObject() should also fail when the argument is a byte array
+        rs = ps.executeQuery();
+        rs.moveToInsertRow();
+        try {
+            rs.updateObject(1, bytes);
+            fail("updateObject should fail");
+        } catch (SQLException sqle) {
+            assertSQLState(ILLEGAL_UPDATE, sqle);
+        }
+        rs.close();
+    }
+
     ///////////////////////////////////////////////////////////////////////////////////
     //
     // SQL ROUTINES
