diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/DefinitionsUpdateResponseVerbHandler.java b/cassandra/trunk/src/java/org/apache/cassandra/db/DefinitionsUpdateResponseVerbHandler.java
index 6bf03eb4..d11ce97b 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/DefinitionsUpdateResponseVerbHandler.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/DefinitionsUpdateResponseVerbHandler.java
@@ -19,6 +19,7 @@
 package org.apache.cassandra.db;
 
 import org.apache.cassandra.concurrent.StageManager;
+import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.config.DatabaseDescriptor;
 import org.apache.cassandra.db.migration.Migration;
 import org.apache.cassandra.net.IVerbHandler;
@@ -67,7 +68,14 @@ else if (DatabaseDescriptor.getDefsVersion().timestamp() > version.timestamp())
                             else
                             {
                                 logger.debug("Applying {} from {}", m.getClass().getSimpleName(), message.getFrom());
+                                try
+                                {
                                 m.apply();
+                                }
+                                catch (ConfigurationException ex)
+                                {
+                                    logger.info("Migration not applied " + ex.getMessage());
+                                }
                                 m.announce();
                             }
                         }
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/service/MigrationManager.java b/cassandra/trunk/src/java/org/apache/cassandra/service/MigrationManager.java
index 9102045b..ccb859a0 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/service/MigrationManager.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/service/MigrationManager.java
@@ -111,7 +111,7 @@ public static void announce(UUID version, Set<InetAddress> hosts)
      * This method silently eats IOExceptions thrown by Migration.apply() as a result of applying a migration out of
      * order.
      */
-    public static void applyMigrations(UUID from, UUID to) throws IOException
+    public static void applyMigrations(final UUID from, final UUID to) throws IOException
     {
         List<Future> updates = new ArrayList<Future>();
         Collection<IColumn> migrations = Migration.getLocalMigrations(from, to);
@@ -129,6 +129,7 @@ public void run()
                     catch (ConfigurationException ex)
                     {
                         // this happens if we try to apply something that's already been applied. ignore and proceed.
+                        logger.debug("Migration not applied " + ex.getMessage());
                     }
                     catch (IOException ex)
                     {
