diff --git a/db/derby/code/branches/10.8/java/engine/org/apache/derby/impl/io/BaseStorageFactory.java b/db/derby/code/branches/10.8/java/engine/org/apache/derby/impl/io/BaseStorageFactory.java
index 6894e63f..d61ed270 100644
--- a/db/derby/code/branches/10.8/java/engine/org/apache/derby/impl/io/BaseStorageFactory.java
+++ b/db/derby/code/branches/10.8/java/engine/org/apache/derby/impl/io/BaseStorageFactory.java
@@ -110,6 +110,15 @@ public String getCanonicalName() throws IOException
         return canonicalName;
     }
     
+    /**
+     * Set the canonicalName. May need adjustment due to DERBY-5096
+     * 
+     * @param name uniquely identifiable name for this database
+     */
+    public void setCanonicalName(String name) {
+       canonicalName = name;
+    }
+    
     /**
      * Construct a StorageFile from a path name.
      *
diff --git a/db/derby/code/branches/10.8/java/engine/org/apache/derby/impl/io/VFMemoryStorageFactory.java b/db/derby/code/branches/10.8/java/engine/org/apache/derby/impl/io/VFMemoryStorageFactory.java
index 22d4f723..d249836e 100644
--- a/db/derby/code/branches/10.8/java/engine/org/apache/derby/impl/io/VFMemoryStorageFactory.java
+++ b/db/derby/code/branches/10.8/java/engine/org/apache/derby/impl/io/VFMemoryStorageFactory.java
@@ -188,6 +188,15 @@ public String getCanonicalName() {
         return canonicalName;
     }
 
+    /**
+     * Set the canonicalName. May need adjustment due to DERBY-5096
+     * 
+     * @param name uniquely identifiable name for this database
+     */
+    public void setCanonicalName(String name) {
+       canonicalName = name;
+    }
+    
     /**
      * Returns a handle to the specific storage file.
      *
diff --git a/db/derby/code/branches/10.8/java/engine/org/apache/derby/io/StorageFactory.java b/db/derby/code/branches/10.8/java/engine/org/apache/derby/io/StorageFactory.java
index 315d01a4..5ec7ecfb 100644
--- a/db/derby/code/branches/10.8/java/engine/org/apache/derby/io/StorageFactory.java
+++ b/db/derby/code/branches/10.8/java/engine/org/apache/derby/io/StorageFactory.java
@@ -231,4 +231,12 @@ public void init( String home, String databaseName, String tempDirName, String u
      */
     public StorageFile createTemporaryFile (String prefix, String suffix)
                                                             throws IOException;
+    
+    /**
+     * Set the canonicalName. May need adjustment due to DERBY-5096
+     * 
+     * @param name uniquely identifiable name for this database
+     */
+    public void setCanonicalName(String name);
+    
 }
diff --git a/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/util/corruptio/CorruptBaseStorageFactory.java b/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/util/corruptio/CorruptBaseStorageFactory.java
index b6174281..d5d197fc 100644
--- a/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/util/corruptio/CorruptBaseStorageFactory.java
+++ b/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/util/corruptio/CorruptBaseStorageFactory.java
@@ -117,6 +117,15 @@ public String getCanonicalName() throws IOException
 		return realStorageFactory.getCanonicalName();
     }
     
+    /**
+     * Set the canonicalName. May need adjustment due to DERBY-5096
+     * 
+     * @param name uniquely identifiable name for this database
+     */
+    public void setCanonicalName(String name) {
+       realStorageFactory.setCanonicalName(name);
+    }
+    
     /**
      * Construct a StorageFile from a path name.
      *
