diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/depend/Dependent.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/depend/Dependent.java
index 5c754687..0feff261 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/depend/Dependent.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/depend/Dependent.java
@@ -70,18 +70,4 @@ Mark the dependent as invalid (due to at least one of
 	void makeInvalid(int action,
 					 LanguageConnectionContext lcc) 
 			throws StandardException;
-
-	/**
-		Attempt to revalidate the dependent. For prepared statements,
-		this could go through its dependencies and check that they
-		are up to date; if not, it would recompile the statement.
-		Any failure during this attempt should throw
-		DependencyStatementException.unableToRevalidate().
-
-		@param lcc		The LanguageConnectionContext
-
-		@exception StandardException thrown if unable to make it valid
-	 */
-	void makeValid(LanguageConnectionContext lcc) 
-		throws StandardException;
 }
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/ConstraintDescriptor.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/ConstraintDescriptor.java
index 3237d2cf..b46b6708 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/ConstraintDescriptor.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/ConstraintDescriptor.java
@@ -644,14 +644,6 @@ public void makeInvalid(int action, LanguageConnectionContext lcc)
 		}
 	}
 
-	/**
-     * Attempt to revalidate the dependent. Meaningless
-	 * for constraints.
-	 */
-	public void makeValid(LanguageConnectionContext lcc) 
-	{
-	}
-	
 	/** @see TupleDescriptor#getDescriptorName */
 	public String getDescriptorName() { return constraintName; }
 	
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/DefaultDescriptor.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/DefaultDescriptor.java
index 2c4a9733..0eb58ef1 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/DefaultDescriptor.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/DefaultDescriptor.java
@@ -250,13 +250,4 @@ public void makeInvalid(int action, LanguageConnectionContext lcc)
 				") not expected to get called");
 		}
 	}
-
-	/**
-     * Attempt to revalidate the dependent. Meaningless
-	 * for defaults.
-	 */
-	public void makeValid(LanguageConnectionContext lcc) 
-	{
-	}
-
 }
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/SPSDescriptor.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/SPSDescriptor.java
index 52e95a28..0c0523cd 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/SPSDescriptor.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/SPSDescriptor.java
@@ -1022,28 +1022,6 @@ public final synchronized void makeInvalid(int action,
 
 	}
 
-	/**
-     * Attempt to revalidate the dependent. For prepared statements,
-	 * this could go through its dependencies and check that they
-	 * are up to date; if not, it would recompile the statement.
-	 * Any failure during this attempt should throw
-	 * StandardException.unableToRevalidate().
-	 *
-	 * @exception StandardException thrown if unable to make it valid
-	 */
-	public final synchronized void makeValid(LanguageConnectionContext lcc) 
-		throws StandardException
-	{
-		if (valid)
-		{
-			return;
-		}
-		prepareAndRelease(lcc);
-
-		updateSYSSTATEMENTS(lcc, RECOMPILE, null);
-		
-	}
-
 	/**
 	 * Invalidate and revalidate.  The functional equivalent
 	 * of calling makeInvalid() and makeValid(), except it
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/TriggerDescriptor.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/TriggerDescriptor.java
index a95a63d3..312e2e03 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/TriggerDescriptor.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/TriggerDescriptor.java
@@ -714,16 +714,6 @@ public void makeInvalid(int action, LanguageConnectionContext lcc) throws Standa
 		
 	}
 
-	/**
-     * Attempt to revalidate the dependent. Meaningless
-	 * for a trigger.
-	 *
-	 * @param 	lcc the language connection context
-	 */
-	public void makeValid(LanguageConnectionContext lcc) 
-	{
-	}
-
 
 	//////////////////////////////////////////////////////////////
 	//
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/ViewDescriptor.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/ViewDescriptor.java
index 8d11cef3..0501d34d 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/ViewDescriptor.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/dictionary/ViewDescriptor.java
@@ -362,20 +362,6 @@ public void makeInvalid(int action, LanguageConnectionContext lcc)
 
 	}
 
-	/**
-		Attempt to revalidate the dependent. For prepared statements,
-		this could go through its dependencies and check that they
-		are up to date; if not, it would recompile the statement.
-		Any failure during this attempt should throw
-		StandardException.unableToRevalidate().
-
-		@exception StandardException thrown if unable to make it valid
-	 */
-	public void makeValid(LanguageConnectionContext lcc) 
-		throws StandardException
-	{
-	}
-
 	//
 	// class interface
 	//
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/GenericPreparedStatement.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/GenericPreparedStatement.java
index 73bc42bb..5964b37e 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/GenericPreparedStatement.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/GenericPreparedStatement.java
@@ -206,8 +206,12 @@ public synchronized boolean	upToDate()
 
 	public void rePrepare(LanguageConnectionContext lcc) 
 		throws StandardException {
-		if (!upToDate())
-		    makeValid(lcc);
+		if (!upToDate()) {
+			PreparedStatement ps = statement.prepare(lcc);
+
+			if (SanityManager.DEBUG)
+				SanityManager.ASSERT(ps == this, "ps != this");
+		}
 	}
 
 	/**
@@ -757,31 +761,6 @@ public void makeInvalid(int action, LanguageConnectionContext lcc)
 		}
 	}
 
-	/**
-		Attempt to revalidate the dependent. For prepared statements,
-		this could go through its dependencies and check that they
-		are up to date; if not, it would recompile the statement.
-		Any failure during this attempt should throw
-		StandardException.unableToRevalidate().
-
-		@exception StandardException thrown if unable to make it valid
-	 */
-	public void makeValid(LanguageConnectionContext lcc) 
-		throws StandardException 
-	{
-		PreparedStatement ps;
-
-		// REMIND: will want to go through dependency list
-		// and check if we can make it valid just on faith,
-		// i.e. when it was marked 'possibly invalid' due
-		// to a rollback or some similar action.
-
-		// this ends up calling makeValid(qt, ac) below:
-		ps = statement.prepare(lcc);
-		if (SanityManager.DEBUG)
-			SanityManager.ASSERT(ps == this, "ps != this");
-	}
-
 	/**
 	 * Is this dependent persistent?  A stored dependency will be required
 	 * if both the dependent and provider are persistent.
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CurrentOfNode.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CurrentOfNode.java
index 62b76a46..e800c5f2 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CurrentOfNode.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CurrentOfNode.java
@@ -169,10 +169,8 @@ public ResultSetNode bindNonVTITables(DataDictionary dataDictionary,
 		// and create a dependency on it
 
 		preStmt = getCursorStatement();
-		if ((preStmt!=null) && (! preStmt.upToDate())) {
-			preStmt.makeValid(getLanguageConnectionContext()); // need to have the query tree
-			if (! preStmt.isValid()) // can't make it valid, say not found
-				preStmt = null;
+		if (preStmt!=null) {
+			preStmt.rePrepare(getLanguageConnectionContext());
 		}
 
 		if (preStmt == null) {
