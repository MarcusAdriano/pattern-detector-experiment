diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ReadCommand.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ReadCommand.java
index eed9b9f2..adb94528 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ReadCommand.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ReadCommand.java
@@ -88,7 +88,9 @@ public void setDigestQuery(boolean isDigestQuery)
 
     protected AbstractType getComparator()
     {
-        return DatabaseDescriptor.getComparator(table, getColumnFamilyName());
+        return queryPath.superColumnName == null
+               ? DatabaseDescriptor.getComparator(table, getColumnFamilyName())
+               : DatabaseDescriptor.getSubComparator(table, getColumnFamilyName());
     }
 }
 
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/marshal/LexicalUUIDType.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/marshal/LexicalUUIDType.java
index a9a8e6e0..29262921 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/marshal/LexicalUUIDType.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/marshal/LexicalUUIDType.java
@@ -48,6 +48,10 @@ public int compare(byte[] o1, byte[] o2)
 
     public String getString(byte[] bytes)
     {
+        if (bytes.length == 0)
+        {
+            return "";
+        }
         if (bytes.length != 16)
         {
             throw new MarshalException("UUIDs must be exactly 16 bytes");
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/marshal/LongType.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/marshal/LongType.java
index f2906458..234fa671 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/marshal/LongType.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/marshal/LongType.java
@@ -44,6 +44,10 @@ public int compare(byte[] o1, byte[] o2)
 
     public String getString(byte[] bytes)
     {
+        if (bytes.length == 0)
+        {
+            return "";
+        }
         if (bytes.length != 8)
         {
             throw new MarshalException("A long is exactly 8 bytes");
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/marshal/TimeUUIDType.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/marshal/TimeUUIDType.java
index 79fd1e38..cfbf5cd6 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/marshal/TimeUUIDType.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/marshal/TimeUUIDType.java
@@ -43,6 +43,10 @@ public int compare(byte[] o1, byte[] o2)
 
     public String getString(byte[] bytes)
     {
+        if (bytes.length == 0)
+        {
+            return "";
+        }
         if (bytes.length != 16)
         {
             throw new MarshalException("UUIDs must be exactly 16 bytes");
