diff --git a/lucene/java/trunk/src/java/org/apache/lucene/search/payloads/BoostingTermQuery.java b/lucene/java/trunk/src/java/org/apache/lucene/search/payloads/BoostingTermQuery.java
index 179eb3fe..7f5af8fe 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/search/payloads/BoostingTermQuery.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/search/payloads/BoostingTermQuery.java
@@ -121,7 +121,7 @@ public float score() throws IOException {
 
 
       public Explanation explain(final int doc) throws IOException {
-        Explanation result = new Explanation();
+        ComplexExplanation result = new ComplexExplanation();
         Explanation nonPayloadExpl = super.explain(doc);
         result.addDetail(nonPayloadExpl);
         //QUESTION: Is there a wau to avoid this skipTo call?  We need to know whether to load the payload or not
@@ -140,6 +140,7 @@ public Explanation explain(final int doc) throws IOException {
         payloadBoost.setDescription("scorePayload(...)");
         result.setValue(nonPayloadExpl.getValue() * avgPayloadScore);
         result.setDescription("btq, product of:");
+        result.setMatch(nonPayloadExpl.getValue()==0 ? Boolean.FALSE : Boolean.TRUE); // LUCENE-1303
         return result;
       }
     }
diff --git a/lucene/java/trunk/src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery.java b/lucene/java/trunk/src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery.java
index 93b5c637..631448f6 100644
--- a/lucene/java/trunk/src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery.java
+++ b/lucene/java/trunk/src/test/org/apache/lucene/search/payloads/TestBoostingTermQuery.java
@@ -92,7 +92,7 @@ protected void setUp() throws Exception {
     for (int i = 0; i < 1000; i++) {
       Document doc = new Document();
       Field noPayloadField = new Field("noPayLoad", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED);
-      noPayloadField.setBoost(0);
+      //noPayloadField.setBoost(0);
       doc.add(noPayloadField);
       doc.add(new Field("field", English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));
       doc.add(new Field("multiField", English.intToEnglish(i) + "  " + English.intToEnglish(i), Field.Store.YES, Field.Index.TOKENIZED));
@@ -186,7 +186,7 @@ public void testNoPayload() throws Exception {
     query.add(c2);
     TopDocs hits = searcher.search(query, null, 100);
     assertTrue("hits is null and it shouldn't be", hits != null);
-    //assertTrue("hits Size: " + hits.totalHits + " is not: " + 1, hits.totalHits == 1);
+    assertTrue("hits Size: " + hits.totalHits + " is not: " + 1, hits.totalHits == 1);
     int[] results = new int[1];
     results[0] = 0;//hits.scoreDocs[0].doc;
     CheckHits.checkHitCollector(query, "noPayLoad", searcher, results);
