diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/PositionedStoreStream.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/PositionedStoreStream.java
index d72891f7..c4fe65d5 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/PositionedStoreStream.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/PositionedStoreStream.java
@@ -60,9 +60,6 @@ Licensed to the Apache Software Foundation (ASF) under one
     /** Underlying store stream serving bytes. */
     //@GuardedBy("EmbedConnection.getConnectionSynchronization()")
     private final InputStream stream;
-    /** Convenience reference to the stream as a resettable stream. */
-    //@GuardedBy("EmbedConnection.getConnectionSynchronization()")
-    private final Resetable resettable;
     /**
      * Position of the underlying store stream.
      * Note that the position is maintained by this class, not the underlying
@@ -78,12 +75,9 @@ Licensed to the Apache Software Foundation (ASF) under one
      * stream.
      *
      * @param in a {@link Resetable}-stream
-     * @throws ClassCastException if the inputstream does not implement
-     *      {@link Resetable}
      */
     public PositionedStoreStream(InputStream in) {
         this.stream = in;
-        this.resettable = (Resetable)in;
     }
 
     /**
@@ -153,7 +147,7 @@ public long skip(long toSkip)
      */
     public void resetStream()
             throws IOException, StandardException {
-        this.resettable.resetStream();
+        ((Resetable)this.stream).resetStream();
         this.pos = 0L;
     }
 
@@ -165,7 +159,7 @@ public void resetStream()
      */
     public void initStream()
             throws StandardException {
-        this.resettable.initStream();
+        ((Resetable)this.stream).initStream();
         this.pos = 0L;
     }
 
@@ -175,7 +169,7 @@ public void initStream()
      * @see Resetable#closeStream
      */
     public void closeStream() {
-        this.resettable.closeStream();
+        ((Resetable)this.stream).closeStream();
     }
 
     /**
