diff --git a/lucene/solr/trunk/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler.java b/lucene/solr/trunk/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler.java
index eb86323d..fedc6ac2 100644
--- a/lucene/solr/trunk/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler.java
+++ b/lucene/solr/trunk/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler.java
@@ -170,7 +170,7 @@ public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp)
     }
 
     if (command != null && DataImporter.ABORT_CMD.equals(command)) {
-      importer.rumCmd(requestParams, null, null);
+      importer.runCmd(requestParams, null, null);
     } else if (importer.getStatus() != DataImporter.Status.IDLE) {
       message = DataImporter.MSG.CMD_RUNNING;
     } else if (command != null) {
@@ -187,7 +187,7 @@ public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp)
         if (requestParams.debug) {
           if (debugEnabled) {
             // Synchronous request for the debug mode
-            importer.rumCmd(requestParams, sw, variables);
+            importer.runCmd(requestParams, sw, variables);
             rsp.add("mode", "debug");
             rsp.add("documents", debugDocuments);
             if (debugLogger != null)
diff --git a/lucene/solr/trunk/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java b/lucene/solr/trunk/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java
index fbcd8335..059aa8eb 100644
--- a/lucene/solr/trunk/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java
+++ b/lucene/solr/trunk/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter.java
@@ -372,12 +372,12 @@ public void runAsync(final RequestParams reqParams, final SolrWriter sw,
     new Thread() {
       @Override
       public void run() {
-        rumCmd(reqParams, sw, variables);
+        runCmd(reqParams, sw, variables);
       }
     }.start();
   }
 
-  void rumCmd(RequestParams reqParams, SolrWriter sw,
+  void runCmd(RequestParams reqParams, SolrWriter sw,
               Map<String, String> variables) {
     String command = reqParams.command;
     if (command.equals("full-import")) {
diff --git a/lucene/solr/trunk/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder.java b/lucene/solr/trunk/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder.java
index 51b42c49..f453c7f4 100644
--- a/lucene/solr/trunk/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder.java
+++ b/lucene/solr/trunk/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDocBuilder.java
@@ -58,7 +58,7 @@ public void singleEntityNoRows() {
       DataImporter.RequestParams rp = new DataImporter.RequestParams();
       rp.command = "full-import";
       SolrWriterImpl swi = new SolrWriterImpl();
-      di.rumCmd(rp, swi, Collections.EMPTY_MAP);
+      di.runCmd(rp, swi, Collections.EMPTY_MAP);
       Assert.assertEquals(Boolean.TRUE, swi.deleteAllCalled);
       Assert.assertEquals(Boolean.TRUE, swi.commitCalled);
       Assert.assertEquals(0, swi.docs.size());
@@ -91,7 +91,7 @@ public void singleEntityOneRow() {
       DataImporter.RequestParams rp = new DataImporter.RequestParams();
       rp.command = "full-import";
       SolrWriterImpl swi = new SolrWriterImpl();
-      di.rumCmd(rp, swi, Collections.EMPTY_MAP);
+      di.runCmd(rp, swi, Collections.EMPTY_MAP);
       Assert.assertEquals(Boolean.TRUE, swi.deleteAllCalled);
       Assert.assertEquals(Boolean.TRUE, swi.commitCalled);
       Assert.assertEquals(1, swi.docs.size());
@@ -136,7 +136,7 @@ public void singleEntityMultipleRows() {
       MockDataSource.setIterator("select * from x", l.iterator());
       ent.dataSrc = new MockDataSource();
       SolrWriterImpl swi = new SolrWriterImpl();
-      di.rumCmd(rp, swi, Collections.EMPTY_MAP);
+      di.runCmd(rp, swi, Collections.EMPTY_MAP);
       Assert.assertEquals(Boolean.TRUE, swi.deleteAllCalled);
       Assert.assertEquals(Boolean.TRUE, swi.commitCalled);
       Assert.assertEquals(3, swi.docs.size());
