diff --git a/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/PreparedStatement.java b/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/PreparedStatement.java
index 91adc060..04057897 100644
--- a/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/PreparedStatement.java
+++ b/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/PreparedStatement.java
@@ -2409,17 +2409,15 @@ protected String getJdbcStatementInterfaceName() {
     }
 
     void checkForValidParameterIndex(int parameterIndex) throws SqlException {
-        if (parameterMetaData_ == null || parameterIndex < 1 || parameterIndex > parameterMetaData_.columns_) {
-        	int totalParameters = 0;
-            if (parameterMetaData_ != null)
-            	//Load totalParmeters with correct number of parameters if 
-            	//ParameterMetaData_ is not null. We will need that in the error
-            	//message.
-            	totalParameters = parameterMetaData_.columns_;
+        if (parameterMetaData_ == null) 
+			throw new SqlException(agent_.logWriter_,
+					new ClientMessageId(SQLState.NO_INPUT_PARAMETERS));
+
+        if (parameterIndex < 1 || parameterIndex > parameterMetaData_.columns_) {
             throw new SqlException(agent_.logWriter_, 
                 new ClientMessageId(SQLState.LANG_INVALID_PARAM_POSITION),
                 new Integer(parameterIndex), 
-                new Integer(totalParameters));
+                new Integer(parameterMetaData_.columns_));
         }
     }
 
diff --git a/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/PrepareStatementTest.java b/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/PrepareStatementTest.java
index d04409aa..3f038ffb 100644
--- a/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/PrepareStatementTest.java
+++ b/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/PrepareStatementTest.java
@@ -1146,12 +1146,6 @@ public void testVariationOfSetObject() throws Exception
         	ps.setObject(1,"cc",java.sql.Types.VARCHAR); 
             fail("Exception expected above!");
         } catch (SQLException e)  {   
-        	if (usingDerbyNetClient())
-        		//note that SQLState is XCL13. For setString above, the 
-        		//SQLState is XCL14. I have entered DERBY-3139 for this
-        		//difference in SQLState.
-        		assertSQLState("XCL13", e);
-        	else
         		assertSQLState("07009", e);
         }
     }
