diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java b/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
index 92464b7b..285b64ad 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
@@ -398,6 +398,7 @@ private static IEndpointSnitch createEndpointSnitch(String endpointSnitchClassNa
         return conf.dynamic_snitch ? new DynamicEndpointSnitch(snitch) : snitch;
     }
     
+    /** load keyspace (table) definitions, but do not initialize the table instances. */
     public static void loadSchemas() throws IOException                         
     {
         // we can load tables from local storage if a version is set in the system table and that acutally maps to
@@ -459,8 +460,6 @@ public boolean accept(File pathname)
                     }
                 }
                 DatabaseDescriptor.setTableDefinition(def, uuid);
-                // this part creates storage and jmx objects.
-                Table.open(def.name);
             }
             
             // happens when someone manually deletes all tables and restarts.
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java b/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
index ae57ad82..493f6b87 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
@@ -19,6 +19,7 @@
 package org.apache.cassandra.db;
 
 import java.io.File;
+import java.io.FileNotFoundException;
 import java.io.FilenameFilter;
 import java.io.IOError;
 import java.io.IOException;
@@ -155,6 +156,11 @@ private ColumnFamilyStore(Table table, String columnFamilyName, IPartitioner par
             {
                 sstable = SSTableReader.open(sstableFiles.getKey(), sstableFiles.getValue(), metadata, this.partitioner);
             }
+            catch (FileNotFoundException ex)
+            {
+                logger.error("Missing sstable component in " + sstableFiles + "; skipped because of " + ex.getMessage());
+                continue;
+            }
             catch (IOException ex)
             {
                 logger.error("Corrupt sstable " + sstableFiles + "; skipped", ex);
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/service/AbstractCassandraDaemon.java b/cassandra/trunk/src/java/org/apache/cassandra/service/AbstractCassandraDaemon.java
index 87a56e5e..3b0c3218 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/service/AbstractCassandraDaemon.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/service/AbstractCassandraDaemon.java
@@ -104,6 +104,7 @@ public void uncaughtException(Thread t, Throwable e)
             System.exit(100);
         }
         
+        // load keyspace descriptions.
         try
         {
             DatabaseDescriptor.loadSchemas();
@@ -114,6 +115,7 @@ public void uncaughtException(Thread t, Throwable e)
             System.exit(100);
         }
         
+        // clean up debris.
         for (String table : DatabaseDescriptor.getTables()) 
         {
             for (CFMetaData cfm : DatabaseDescriptor.getTableMetaData(table).values())
