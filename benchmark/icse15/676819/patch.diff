diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/ResultColumnList.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/ResultColumnList.java
index adb9a5dc..378d1b3e 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/ResultColumnList.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/ResultColumnList.java
@@ -2233,7 +2233,7 @@ public void	setUnionResultExpression(ResultColumnList otherRCL,
 
 		ContextManager cm = getContextManager();
 
-		int size = size();
+		int size = visibleSize();
 		for (int index = 0; index < size; index++)
 		{
 			boolean		 nullableResult;
@@ -2344,7 +2344,7 @@ else if (!thisRC.getName().equals(otherRC.getName()))
 	 */
 	public boolean isExactTypeAndLengthMatch(ResultColumnList otherRCL) throws StandardException
 	{
-		int size = size();
+		int size = visibleSize();
 		for (int index = 0; index < size; index++)
 		{
 			ResultColumn thisRC = (ResultColumn) elementAt(index);
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GroupByTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GroupByTest.java
index 4fd189d6..0141f0f0 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GroupByTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GroupByTest.java
@@ -1758,5 +1758,22 @@ public void testColumnAliasInGroupByAndHaving() throws SQLException
                     " group by name having sum(amount) > 2"),
             new String[][] {  {"Jerry", "57"}, {"John","113"} } );
     }
+
+    /**
+     * Test that GROUP BY can be used in the sub-queries of a UNION.
+     * DERBY-3764.
+     */
+    public void testUnionAndGroupBy() throws SQLException {
+        PreparedStatement ps1 =
+            prepareStatement("select sum(a) from yy group by a union values 1");
+        // The bug is not completely fixed, so executing the statement fail
+        // JDBC.assertDrainResults(ps1.executeQuery());
+
+        PreparedStatement ps2 =
+            prepareStatement("select sum(a) from yy group by a union " +
+                             "select sum(a) from yy group by a");
+        // The bug is not completely fixed, so executing the statement fail
+        // JDBC.assertDrainResults(ps2.executeQuery());
+    }
 }
 
