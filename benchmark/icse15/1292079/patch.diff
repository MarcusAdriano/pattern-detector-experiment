diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/DropOnCommit.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/DropOnCommit.java
index c9ab0dd0..36f61080 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/DropOnCommit.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/DropOnCommit.java
@@ -98,14 +98,6 @@ public void update(Observable obj, Object arg) {
 			}
 
 			obj.deleteObserver(this);
-
-            // DERBY-3993
-            // make sure any observer that may have been added by either
-            // dropContainer() or dropStreamContainer() is also handled.
-            // The calling notifyObservers() call from Xact.doComplete()
-            // may not "see" new observers added during processing of the
-            // initial observer list.
-            xact.notifyObservers(arg);
 		}
 	}
 }
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/Xact.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/Xact.java
index e7061458..011f24c9 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/Xact.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/Xact.java
@@ -1960,20 +1960,25 @@ protected void doComplete(Integer commitOrAbort) throws StandardException {
 		if (savePoints != null)
 			savePoints.removeAllElements();
 
+        do
+        {
 		// notify any of our observers that we are completing.
 		notifyObservers(commitOrAbort);
 
 		checkObserverException();
 
-		if (SanityManager.DEBUG) 
-        {
-			if (countObservers() != 0)
-            {
-                SanityManager.THROWASSERT(
-                    "There should be 0 observers, but we still have "
-					+ countObservers() + " observers.");
-            }
-		}
+            // DERBY-3993
+            // make sure any observer that may have been added by either
+            // dropContainer() or dropStreamContainer() is also handled.
+            // The calling notifyObservers() call from Xact.doComplete()
+            // may not "see" new observers added during processing of the
+            // initial observer list.  So loop until notifyObservers()
+            // call causes countObservers() to go to 0.  This should only
+            // loop if one of the observers adds to the list as part of
+            // the notify.  Even then depending on ordering the added
+            // observer may be picked up in the first try.
+
+        } while (countObservers() > 0);
 	}
 
 	private void checkObserverException() throws StandardException {
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/largedata/_Suite.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/largedata/_Suite.java
index 27bf2b73..b35a8933 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/largedata/_Suite.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/largedata/_Suite.java
@@ -40,6 +40,7 @@ public _Suite(String name) {
     public static Test suite() {
         TestSuite suite = new TestSuite("largedata suite");
         suite.addTest(LobLimitsLiteTest.suite());
+        suite.addTest(Derby5624Test.suite());
         suite.addTest(LobLimitsTest.suite());
         suite.addTest(LobLimitsClientTest.suite());
         return suite;
