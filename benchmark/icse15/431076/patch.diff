diff --git a/incubator/solr/trunk/src/java/org/apache/solr/util/OpenBitSet.java b/incubator/solr/trunk/src/java/org/apache/solr/util/OpenBitSet.java
index 7c78f65f..09300dce 100644
--- a/incubator/solr/trunk/src/java/org/apache/solr/util/OpenBitSet.java
+++ b/incubator/solr/trunk/src/java/org/apache/solr/util/OpenBitSet.java
@@ -655,7 +655,7 @@ public static int bits2words(long numBits) {
   /** returns true if both sets have the same bits set */
   public boolean equals(Object o) {
     if (this == o) return true;
-    if (!(this instanceof OpenBitSet)) return false;
+    if (!(o instanceof OpenBitSet)) return false;
     OpenBitSet a;
     OpenBitSet b = (OpenBitSet)o;
     // make a the larger set.
diff --git a/incubator/solr/trunk/src/test/org/apache/solr/util/TestOpenBitSet.java b/incubator/solr/trunk/src/test/org/apache/solr/util/TestOpenBitSet.java
index d1df7d3f..67b5964b 100644
--- a/incubator/solr/trunk/src/test/org/apache/solr/util/TestOpenBitSet.java
+++ b/incubator/solr/trunk/src/test/org/apache/solr/util/TestOpenBitSet.java
@@ -137,6 +137,28 @@ public void testBig() {
     // doRandomSets(2000,200000);
   }
 
+  public void testEquals() {
+    OpenBitSet b1 = new OpenBitSet(1111);
+    OpenBitSet b2 = new OpenBitSet(2222);
+    assertTrue(b1.equals(b2));
+    assertTrue(b2.equals(b1));
+    b1.set(10);
+    assertFalse(b1.equals(b2));
+    assertFalse(b2.equals(b1));
+    b2.set(10);
+    assertTrue(b1.equals(b2));
+    assertTrue(b2.equals(b1));
+    b2.set(2221);
+    assertFalse(b1.equals(b2));
+    assertFalse(b2.equals(b1));
+    b1.set(2221);
+    assertTrue(b1.equals(b2));
+    assertTrue(b2.equals(b1));
+
+    // try different type of object
+    assertFalse(b1.equals(1));
+  }
+
 }
 
 
