diff --git a/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/SubsystemContentHeader.java b/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/SubsystemContentHeader.java
index 325269ba..637a6d4e 100644
--- a/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/SubsystemContentHeader.java
+++ b/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/SubsystemContentHeader.java
@@ -19,9 +19,9 @@
 import java.util.Comparator;
 import java.util.List;
 
+import org.apache.aries.util.VersionRange;
 import org.osgi.framework.Constants;
 import org.osgi.framework.Version;
-import org.osgi.framework.VersionRange;
 
 public class SubsystemContentHeader extends AbstractHeader {
 	public static class Content {
diff --git a/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/VersionRangeAttribute.java b/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/VersionRangeAttribute.java
index 1b6f6c88..376ff69a 100644
--- a/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/VersionRangeAttribute.java
+++ b/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/VersionRangeAttribute.java
@@ -13,11 +13,32 @@
  */
 package org.apache.aries.subsystem.core.archive;
 
+import org.apache.aries.util.VersionRange;
 import org.osgi.framework.Constants;
 import org.osgi.framework.Version;
-import org.osgi.framework.VersionRange;
 
 public class VersionRangeAttribute extends AbstractAttribute {
+	public static String toFilterString(VersionRange range) {
+		String version = Constants.VERSION_ATTRIBUTE;
+		Version min = range.getMinimumVersion();
+		Version max = range.getMaximumVersion();
+		StringBuilder sb = new StringBuilder();
+		if (max != null)
+			sb.append("(&");
+		if (range.isMinimumExclusive())
+			sb.append("(!(").append(version).append("<=").append(min).append("))");
+		else
+			sb.append('(').append(version).append(">=").append(min).append(')');
+		if (max != null) {
+			if (range.isMaximumExclusive())
+				sb.append("(!(").append(version).append(">=").append(range.getMaximumVersion()).append("))");
+			else
+				sb.append('(').append(version).append("<=").append(max).append(')');
+			sb.append(')');
+		}
+		return sb.toString();
+	}
+	
 	private final VersionRange range;
 	
 	public VersionRangeAttribute() {
@@ -31,7 +52,7 @@ public VersionRangeAttribute(String value) {
 	}
 	
 	public StringBuilder appendToFilter(StringBuilder builder) {
-		return builder.append(range.toFilterString(Constants.VERSION_ATTRIBUTE));
+		return builder.append(toFilterString(range));
 	}
 
 	public VersionRange getVersionRange() {
diff --git a/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/OsgiIdentityRequirement.java b/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/OsgiIdentityRequirement.java
index 7e8fd8a1..1ad8a1fa 100644
--- a/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/OsgiIdentityRequirement.java
+++ b/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/OsgiIdentityRequirement.java
@@ -17,12 +17,13 @@
 import java.util.HashMap;
 import java.util.Map;
 
+import org.apache.aries.subsystem.core.archive.VersionRangeAttribute;
+import org.apache.aries.util.VersionRange;
 import org.osgi.framework.Constants;
 import org.osgi.framework.Filter;
 import org.osgi.framework.FrameworkUtil;
 import org.osgi.framework.InvalidSyntaxException;
 import org.osgi.framework.Version;
-import org.osgi.framework.VersionRange;
 import org.osgi.framework.resource.Capability;
 import org.osgi.framework.resource.Requirement;
 import org.osgi.framework.resource.Resource;
@@ -46,7 +47,7 @@ private static Filter createFilter(String symbolicName, Version version, String
 	private static Filter createFilter(String symbolicName, VersionRange versionRange, String type) {
 		return createFilter(
 				symbolicName,
-				versionRange.toFilterString(ResourceConstants.IDENTITY_VERSION_ATTRIBUTE),
+				VersionRangeAttribute.toFilterString(versionRange),
 				type);
 	}
 	
