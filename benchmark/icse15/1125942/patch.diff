diff --git a/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java b/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java
index 62d0a599..29aaed6d 100644
--- a/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java
+++ b/lucene/dev/branches/branch_3x/solr/src/test/org/apache/solr/client/solrj/embedded/TestSolrProperties.java
@@ -28,7 +28,6 @@
 import javax.xml.xpath.XPathExpressionException;
 import javax.xml.xpath.XPathFactory;
 
-import org.apache.commons.io.IOUtils;
 import org.apache.lucene.util.LuceneTestCase;
 import org.apache.solr.SolrTestCaseJ4;
 import org.apache.solr.client.solrj.SolrQuery;
@@ -39,6 +38,7 @@
 import org.apache.solr.client.solrj.request.UpdateRequest.ACTION;
 import org.apache.solr.client.solrj.response.CoreAdminResponse;
 import org.apache.solr.common.SolrInputDocument;
+import org.apache.solr.common.util.FileUtils;
 import org.apache.solr.core.CoreContainer;
 import org.apache.solr.util.AbstractSolrTestCase;
 import org.junit.After;
@@ -56,6 +56,7 @@
 public class TestSolrProperties extends LuceneTestCase {
   protected static Logger log = LoggerFactory.getLogger(TestSolrProperties.class);
   protected CoreContainer cores = null;
+  private File home;
   private File solrXml;
   
   private static final XPathFactory xpathFactory = XPathFactory.newInstance();
@@ -64,19 +65,27 @@ public String getSolrHome() {
     return "solr/shared";
   }
 
-  public String getSolrXml() {
+  public String getOrigSolrXml() {
     return "solr.xml";
   }
 
+  public String getSolrXml() {
+    return "test-solr.xml";
+  }
+  
   @Override
   @Before
   public void setUp() throws Exception {
     super.setUp();
-    File home = SolrTestCaseJ4.getFile(getSolrHome());
+    System.setProperty("solr.solr.home", getSolrHome());
+    
+    home = SolrTestCaseJ4.getFile(getSolrHome());
     System.setProperty("solr.solr.home", home.getAbsolutePath());
 
     log.info("pwd: " + (new File(".")).getAbsolutePath());
-    solrXml = new File(home, "solr.xml");
+    File origSolrXml = new File(home, getOrigSolrXml());
+    solrXml = new File(home, getSolrXml());
+    FileUtils.copyFile(origSolrXml, solrXml);
     cores = new CoreContainer(home.getAbsolutePath(), solrXml);
   }
 
@@ -85,7 +94,7 @@ public void setUp() throws Exception {
   public void tearDown() throws Exception {
     if (cores != null)
       cores.shutdown();
-    File dataDir = new File(getSolrHome() + "/data");
+    File dataDir = new File(home,"data");
     String skip = System.getProperty("solr.test.leavedatadir");
     if (null != skip && 0 != skip.trim().length()) {
       log.info("NOTE: per solr.test.leavedatadir, dataDir will not be removed: " + dataDir.getAbsolutePath());
@@ -94,8 +103,9 @@ public void tearDown() throws Exception {
         log.warn("!!!! WARNING: best effort to remove " + dataDir.getAbsolutePath() + " FAILED !!!!!");
       }
     }
-    File persistedFile = new File(getSolrHome() + File.separator + "solr-persist.xml");
-    persistedFile.delete();
+    File persistedFile = new File(home,"solr-persist.xml");
+    assertTrue("Failed to delete "+persistedFile, persistedFile.delete());
+    assertTrue("Failed to delete "+solrXml, solrXml.delete());
     super.tearDown();
   }
 
