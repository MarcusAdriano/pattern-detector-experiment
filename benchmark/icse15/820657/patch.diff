diff --git a/incubator/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintEventDispatcher.java b/incubator/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintEventDispatcher.java
index 1832d07d..f459b9fd 100644
--- a/incubator/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintEventDispatcher.java
+++ b/incubator/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintEventDispatcher.java
@@ -52,7 +52,7 @@
 
     private static final Logger LOGGER = LoggerFactory.getLogger(BlueprintEventDispatcher.class);
 
-    private final BlueprintListener eventAdminListener;
+    private final EventAdminListener eventAdminListener;
     private final ServiceTracker containerListenerTracker;
     private final Map<Bundle, BlueprintEvent> states;
     private final ExecutorService executor;
@@ -60,7 +60,7 @@
     public BlueprintEventDispatcher(final BundleContext bundleContext) {
         this.states = new ConcurrentHashMap<Bundle, BlueprintEvent>();
         this.executor = Executors.newSingleThreadExecutor();
-        BlueprintListener listener = null;
+        EventAdminListener listener = null;
         try {
             getClass().getClassLoader().loadClass("org.osgi.service.event.EventAdmin");
             listener = new EventAdminListener(bundleContext);
@@ -161,6 +161,10 @@ public void destroy() {
             // ignore
         }
         this.containerListenerTracker.close();
+        // clean up the EventAdmin tracker if we're using that
+        if (this.eventAdminListener != null) {
+            eventAdminListener.destroy();
+        }
     }
 
     static class EventAdminListener implements BlueprintListener {
@@ -226,6 +230,13 @@ public void blueprintEvent(BlueprintEvent event) {
             eventAdmin.postEvent(new Event(topic, props));
         }
 
+        /**
+         * Perform cleanup at Blueprint extender shutdown.
+         */
+        public void destroy() {
+            tracker.close();
+        }
+
     }
 
 }
