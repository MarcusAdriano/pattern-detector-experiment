diff --git a/lucene/solr/trunk/src/java/org/apache/solr/handler/component/SpellCheckComponent.java b/lucene/solr/trunk/src/java/org/apache/solr/handler/component/SpellCheckComponent.java
index 4d1c36f2..fc4eac46 100644
--- a/lucene/solr/trunk/src/java/org/apache/solr/handler/component/SpellCheckComponent.java
+++ b/lucene/solr/trunk/src/java/org/apache/solr/handler/component/SpellCheckComponent.java
@@ -136,8 +136,6 @@
   @SuppressWarnings("unchecked")
   protected NamedList initParams;
   
-  @SuppressWarnings("unchecked")
-  protected SolrParams defaults;
 
   /**
    * Key is the dictionary, value is the SpellChecker for that dictionary name
@@ -151,12 +149,6 @@
   public void init(NamedList args) {
     super.init(args);
     this.initParams = args;
-    if (args != null)   {
-      Object o = args.get("defaults");
-      if (o != null && o instanceof NamedList) {
-        defaults = SolrParams.toSolrParams((NamedList)o);
-      }
-    }
   }
 
   @Override
@@ -196,17 +188,14 @@ public void process(ResponseBuilder rb) throws IOException {
     }
     if (tokens != null && tokens.isEmpty() == false) {
       if (spellChecker != null) {
-        int count = params.getInt(SPELLCHECK_COUNT, defaults.getInt(
-            SPELLCHECK_COUNT, 1));
+        int count = params.getInt(SPELLCHECK_COUNT, 1);
         boolean onlyMorePopular = params.getBool(SPELLCHECK_ONLY_MORE_POPULAR,
-            defaults.getBool(SPELLCHECK_ONLY_MORE_POPULAR,
-                DEFAULT_ONLY_MORE_POPULAR));
+            DEFAULT_ONLY_MORE_POPULAR);
         boolean extendedResults = params.getBool(SPELLCHECK_EXTENDED_RESULTS,
-            defaults.getBool(SPELLCHECK_EXTENDED_RESULTS, false));
+            false);
         NamedList response = new SimpleOrderedMap();
         IndexReader reader = rb.req.getSearcher().getReader();
-        boolean collate = params.getBool(SPELLCHECK_COLLATE, defaults.getBool(
-            SPELLCHECK_COLLATE, false));
+        boolean collate = params.getBool(SPELLCHECK_COLLATE, false);
         SpellingResult spellingResult = spellChecker.getSuggestions(tokens,
             reader, count, onlyMorePopular, extendedResults);
         if (spellingResult != null) {
