diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/reference/Property.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/reference/Property.java
index 9fa6593b..a37184d4 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/reference/Property.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/reference/Property.java
@@ -725,6 +725,14 @@ Default value for wait timeouts (60 seconds)
     public static final String AUTHENTICATION_BUILTIN_ALGORITHM_DEFAULT =
             "SHA-256";
 
+    /**
+     * Alternative default value for derby.authentication.builtin.algorithm if
+     * {@link #AUTHENTICATION_BUILTIN_ALGORITHM_DEFAULT} is not available at
+     * database creation time.
+     */
+    public static final String AUTHENTICATION_BUILTIN_ALGORITHM_FALLBACK =
+            "SHA-1";
+
 	/*
 	** Log
 	*/
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java
index ff652d8e..94ca0e63 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/catalog/DataDictionaryImpl.java
@@ -158,6 +158,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import java.util.Enumeration;
 import java.io.InputStream;
 import java.io.IOException;
+import java.security.MessageDigest;
+import java.security.NoSuchAlgorithmException;
 
 import java.sql.Types;
 
@@ -765,7 +767,7 @@ public void boot(boolean create, Properties startParams)
                 // in the database for BUILTIN authentication.
                 bootingTC.setProperty(
                         Property.AUTHENTICATION_BUILTIN_ALGORITHM,
-                        Property.AUTHENTICATION_BUILTIN_ALGORITHM_DEFAULT,
+                        findDefaultBuiltinAlgorithm(),
                         false);
 			} else {
 				// Get the ids for non-core tables
@@ -830,6 +832,24 @@ public void boot(boolean create, Properties startParams)
 		booting = false;
 	}
 
+    /**
+     * Find the default message digest algorithm to use for BUILTIN
+     * authentication on this database.
+     *
+     * @return the name of the algorithm to use as the default
+     */
+    private String findDefaultBuiltinAlgorithm() {
+        try {
+            // First check for the preferred default, and return it if present
+            MessageDigest.getInstance(
+                    Property.AUTHENTICATION_BUILTIN_ALGORITHM_DEFAULT);
+            return Property.AUTHENTICATION_BUILTIN_ALGORITHM_DEFAULT;
+        } catch (NoSuchAlgorithmException nsae) {
+            // Couldn't find the preferred algorithm, so use the fallback
+            return Property.AUTHENTICATION_BUILTIN_ALGORITHM_FALLBACK;
+        }
+    }
+
     private CacheManager getPermissionsCache() throws StandardException
     {
         if( permissionsCache == null)
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java
index 02155e7d..1b4ea08c 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java
@@ -22,6 +22,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 package org.apache.derbyTesting.functionTests.tests.jdbcapi;
 
+import java.security.MessageDigest;
+import java.security.NoSuchAlgorithmException;
 import java.sql.CallableStatement;
 import java.sql.Connection;
 import java.sql.PreparedStatement;
@@ -1105,8 +1107,25 @@ public void testSystemShutdown() throws SQLException
      * hash authentication scheme enabled.
      */
     public void testDefaultHashAlgorithm() throws SQLException {
-        // SHA-256 should be the default hash algorithm now
-        assertEquals("SHA-256", getDatabaseProperty(BUILTIN_ALGO_PROP));
+        // SHA-256 should be the default hash algorithm now, if it's supported
+        // on the platform. Otherwise, we fall back to SHA-1.
+        String expected = supportsAlgorithm("SHA-256") ? "SHA-256" : "SHA-1";
+        assertEquals(expected, getDatabaseProperty(BUILTIN_ALGO_PROP));
+    }
+
+    /**
+     * Check if a message digest algorithm is supported on this platform.
+     *
+     * @param algorithm the algorithm to check
+     * @return true if the algorithm is supported, false otherwise
+     */
+    private boolean supportsAlgorithm(String algorithm) {
+        try {
+            MessageDigest.getInstance(algorithm);
+            return true;
+        } catch (NoSuchAlgorithmException nsae) {
+            return false;
+        }
     }
 
     /**
@@ -1119,6 +1138,12 @@ public void testVariousBuiltinAlgorithms() throws SQLException {
         String[] algorithms = { null, "MD5", "SHA-1", "SHA-256", "SHA-512" };
         for (int i = 0; i < algorithms.length; i++) {
             String algo = algorithms[i];
+
+            if (algo != null && !supportsAlgorithm(algo)) {
+                // DERBY-4602: Skip algorithms not supported on this platform
+                continue;
+            }
+
             setDatabaseProperty(BUILTIN_ALGO_PROP, algo);
 
             for (int j = 0; j < USERS.length; j++) {
