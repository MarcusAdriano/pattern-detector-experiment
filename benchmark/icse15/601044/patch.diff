diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java
index c4cf0cd8..39c1542b 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoGenJDBC30Test.java
@@ -395,6 +395,18 @@ public void testInsertOneRowKey() throws SQLException
         assertEquals("Key value after ps.executeUpdate()", 4, keyval);
 
         ps.close();
+        
+        /*
+        DERBY-3249 - Returned generated key result sets have the wrong
+        concurrency. Test should be expanded to handle all concurrencies/types.
+        
+        // Test the type of the Statement object does not affect the
+        // type of the generated key ResultSet (checked in getKeyValue)
+        s = this.createStatement(ResultSet.CONCUR_UPDATABLE, ResultSet.TYPE_SCROLL_INSENSITIVE);
+        s.execute(sql, Statement.RETURN_GENERATED_KEYS);
+        keyval = getKeyValue(s.getGeneratedKeys());
+        assertEquals("Key value after s.execute()", 5, keyval);
+        */
     }
 
 
@@ -1438,7 +1450,8 @@ public void runInsertFourWaysKeyIsNull (String sql)
     public void verifyNullKey (String description, ResultSet r) 
         throws SQLException
     {
-        assertNotNull(description, r);
+        JDBC.assertGeneratedKeyResultSet(description, r);
+
         int i = 0;
         while(r.next())
         {
@@ -1456,7 +1469,8 @@ public void verifyNullKey (String description, ResultSet r)
      */
     public int getKeyValue (ResultSet r) throws SQLException
     {
-        assertNotNull("ResultSet is NULL", r);
+        JDBC.assertGeneratedKeyResultSet("AutoGenJDBC30Test.getKeyValue", r);
+        
         int i = 0;
         int retval = 0;
         while(r.next())
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/JDBC.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/JDBC.java
index cc7de7b9..a4e19feb 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/JDBC.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/JDBC.java
@@ -510,6 +510,40 @@ public static void assertClosed(ResultSet rs)
         
     }
     
+	/**
+     * Assert that a ResultSet representing generated keys is non-null
+     * and of the correct type. This method leaves the ResultSet
+     * open and does not fetch any date from it.
+     * 
+     * @param description For assert messages
+     * @param keys ResultSet returned from getGeneratedKeys().
+     * @throws SQLException
+     */
+    public static void assertGeneratedKeyResultSet(
+            String description, ResultSet keys) throws SQLException
+    {
+        
+        Assert.assertNotNull(description, keys);
+        
+        // Requirements from section 13.6 JDBC 4 specification
+        Assert.assertEquals(
+                description + 
+                " - Required CONCUR_READ_ONLY for generated key result sets",
+                ResultSet.CONCUR_READ_ONLY, keys.getConcurrency());
+        
+        int type = keys.getType();
+        if ( (type != ResultSet.TYPE_FORWARD_ONLY) &&
+             (type != ResultSet.TYPE_SCROLL_INSENSITIVE))
+        {
+            Assert.fail(description +
+                    " - Invalid type for generated key result set" + type);
+        }
+        
+        
+
+    }
+    
+    
 	/**
 	 * Drain a single ResultSet by reading all of its
 	 * rows and columns. Each column is accessed using
