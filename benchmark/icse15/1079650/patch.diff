diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/CompactionManager.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/CompactionManager.java
index d8d38bde..723663da 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/CompactionManager.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/CompactionManager.java
@@ -1122,6 +1122,7 @@ public EchoedRow(SSTableIdentityIterator row)
 
         public void write(PageCacheInformer out) throws IOException
         {
+            assert row.dataSize != 0;
             out.writeLong(row.dataSize);
             row.echoData(out);
         }
diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/io/LazilyCompactedRow.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/io/LazilyCompactedRow.java
index 92a95499..3e48d38a 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/io/LazilyCompactedRow.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/io/LazilyCompactedRow.java
@@ -98,6 +98,7 @@ public void write(PageCacheInformer out) throws IOException
         if (rows.size() == 1 && !shouldPurge && rows.get(0).sstable.descriptor.isLatestVersion && !forceDeserialize)
         {
             SSTableIdentityIterator row = rows.get(0);
+            assert row.dataSize != 0;
             out.writeLong(row.dataSize);
             row.echoData(out);
             return;
@@ -106,7 +107,9 @@ public void write(PageCacheInformer out) throws IOException
         DataOutputBuffer clockOut = new DataOutputBuffer();
         ColumnFamily.serializer().serializeCFInfo(emptyColumnFamily, clockOut);
 
-        out.writeLong(headerBuffer.getLength() + clockOut.getLength() + columnSerializedSize);
+        long dataSize = headerBuffer.getLength() + clockOut.getLength() + columnSerializedSize;
+        assert dataSize != 0;
+        out.writeLong(dataSize);
         out.write(headerBuffer.getData(), 0, headerBuffer.getLength());
         out.write(clockOut.getData(), 0, clockOut.getLength());
         out.writeInt(columnCount);
diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/io/PrecompactedRow.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/io/PrecompactedRow.java
index 16b5ff7d..2899249e 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/io/PrecompactedRow.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/io/PrecompactedRow.java
@@ -118,6 +118,7 @@ public PrecompactedRow(ColumnFamilyStore cfStore, List<SSTableIdentityIterator>
 
     public void write(PageCacheInformer out) throws IOException
     {
+        assert buffer.getLength() != 0;
         out.writeLong(buffer.getLength());
 
         List<Pair<Integer, Integer>> pageCacheMarkers = buffer.getPageCacheMarkers();
diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/io/sstable/SSTableWriter.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/io/sstable/SSTableWriter.java
index a46be8b7..9205b463 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/io/sstable/SSTableWriter.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/io/sstable/SSTableWriter.java
@@ -147,7 +147,9 @@ public void append(DecoratedKey decoratedKey, ColumnFamily cf) throws IOExceptio
         // seek back and write the row size (not including the size Long itself)
         long endPosition = dataFile.getFilePointer();
         dataFile.seek(sizePosition);
-        dataFile.writeLong(endPosition - (sizePosition + 8));
+        long dataSize = endPosition - (sizePosition + 8);
+        assert dataSize != 0;
+        dataFile.writeLong(dataSize);
         // finally, reset for next row
         dataFile.seek(endPosition);
         afterAppend(decoratedKey, startPosition);
