diff --git a/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.java b/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.java
index 42af473f..34d8ba4f 100644
--- a/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.java
+++ b/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/core/JmxMonitoredMap.java
@@ -61,13 +61,10 @@
   public JmxMonitoredMap(String coreName, String coreHashCode,
                           final JmxConfiguration jmxConfig) {
     this.coreHashCode = coreHashCode;
-    jmxRootName = "solr" + (coreName == null ? "" : "/" + coreName);
 
-    if (jmxConfig.agentId != null && jmxConfig.serviceUrl != null) {
-      throw new SolrException(
-              SolrException.ErrorCode.SERVER_ERROR,
-              "Incorrect JMX Configuration in solrconfig.xml, both agentId and serviceUrl cannot be specified at the same time");
-    }
+    jmxRootName = (null != jmxConfig.rootName ? 
+                   jmxConfig.rootName
+                   : ("solr" + (null != coreName ? "/" + coreName : "")));
 
     if (jmxConfig.serviceUrl == null) {
       List<MBeanServer> servers = null;
@@ -85,8 +82,7 @@ public JmxMonitoredMap(String coreName, String coreHashCode,
       }
 
       if (servers == null || servers.isEmpty()) {
-        LOG
-                .info("No JMX servers found, not exposing Solr information with JMX.");
+        LOG.info("No JMX servers found, not exposing Solr information with JMX.");
         return;
       }
       server = servers.get(0);
diff --git a/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/core/SolrConfig.java b/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/core/SolrConfig.java
index 663dac87..e0319cf6 100644
--- a/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/core/SolrConfig.java
+++ b/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/core/SolrConfig.java
@@ -179,10 +179,13 @@ public SolrConfig(String instanceDir, String name, InputSource is)
     
     Node jmx = getNode("jmx", false);
     if (jmx != null) {
-      jmxConfig = new JmxConfiguration(true, get("jmx/@agentId", null), get(
-          "jmx/@serviceUrl", null));
+      jmxConfig = new JmxConfiguration(true, 
+                                       get("jmx/@agentId", null), 
+                                       get("jmx/@serviceUrl", null),
+                                       get("jmx/@rootName", null));
+                                           
     } else {
-      jmxConfig = new JmxConfiguration(false, null, null);
+      jmxConfig = new JmxConfiguration(false, null, null, null);
     }
      maxWarmingSearchers = getInt("query/maxWarmingSearchers",Integer.MAX_VALUE);
 
@@ -325,15 +328,32 @@ public SolrQueryRequest getPingQueryRequest(SolrCore core) {
 
   public static class JmxConfiguration {
     public boolean enabled = false;
-
     public String agentId;
-
     public String serviceUrl;
+    public String rootName;
 
-    public JmxConfiguration(boolean enabled, String agentId, String serviceUrl) {
+    @Deprecated
+    public JmxConfiguration(boolean enabled, 
+                            String agentId, 
+                            String serviceUrl) {
+      this(enabled,agentId,serviceUrl,null);
+    }
+    public JmxConfiguration(boolean enabled, 
+                            String agentId, 
+                            String serviceUrl,
+                            String rootName) {
       this.enabled = enabled;
       this.agentId = agentId;
       this.serviceUrl = serviceUrl;
+      this.rootName = rootName;
+
+      if (agentId != null && serviceUrl != null) {
+        throw new SolrException
+          (SolrException.ErrorCode.SERVER_ERROR,
+           "Incorrect JMX Configuration in solrconfig.xml, "+
+           "both agentId and serviceUrl cannot be specified at the same time");
+      }
+      
     }
   }
 
