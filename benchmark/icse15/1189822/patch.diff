diff --git a/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/db/compaction/AbstractCompactionTask.java b/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/db/compaction/AbstractCompactionTask.java
index bbc6701a..dbcd8cde 100644
--- a/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/db/compaction/AbstractCompactionTask.java
+++ b/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/db/compaction/AbstractCompactionTask.java
@@ -67,7 +67,10 @@ public boolean markSSTablesForCompaction(int min, int max)
         Set<SSTableReader> marked = cfs.getDataTracker().markCompacting(sstables, min, max);
 
         if (marked == null || marked.isEmpty())
+        {
+            cancel();
             return false;
+        }
 
         this.sstables = marked;
         return true;
@@ -77,4 +80,8 @@ public void unmarkSSTables()
     {
         cfs.getDataTracker().unmarkCompacting(sstables);
     }
+
+    // Can be overriden for action that need to be performed if the task won't
+    // execute (if sstable can't be marked successfully)
+    protected void cancel() {}
 }
diff --git a/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/db/compaction/LeveledCompactionTask.java b/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/db/compaction/LeveledCompactionTask.java
index 2571d937..5ce43a39 100644
--- a/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/db/compaction/LeveledCompactionTask.java
+++ b/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/db/compaction/LeveledCompactionTask.java
@@ -52,10 +52,16 @@ public LeveledCompactionTask(ColumnFamilyStore cfs, Collection<SSTableReader> ss
     @Override
     public int execute(CompactionManager.CompactionExecutorStatsCollector collector) throws IOException
     {
+        try
+        {
         int n = super.execute(collector);
-        latch.countDown();
         return n;
     }
+        finally
+        {
+            latch.countDown();
+        }
+    }
 
     public boolean isDone()
     {
@@ -79,4 +85,10 @@ protected boolean partialCompactionsAcceptable()
     {
         return false;
     }
+
+    @Override
+    protected void cancel()
+    {
+        latch.countDown();
+    }
 }
