diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/IndexSearcher.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/IndexSearcher.java
index e3e0a1b6..f7619fe3 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/IndexSearcher.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/IndexSearcher.java
@@ -429,7 +429,7 @@ protected TopFieldDocs search(Weight weight, Filter filter,
    * <p>NOTE: this does not compute scores by default.  If you
    * need scores, create a {@link TopFieldCollector}
    * instance by calling {@link TopFieldCollector#create} and
-   * then pass that to {@link #search(Weight, Filter,
+   * then pass that to {@link #search(IndexReader.AtomicReaderContext[], Weight, Filter,
    * Collector)}.</p>
    */
   protected TopFieldDocs search(Weight weight, Filter filter, int nDocs,
@@ -475,7 +475,7 @@ protected TopFieldDocs search(Weight weight, Filter filter, int nDocs,
    * <p>NOTE: this does not compute scores by default.  If you
    * need scores, create a {@link TopFieldCollector}
    * instance by calling {@link TopFieldCollector#create} and
-   * then pass that to {@link #search(Weight, Filter,
+   * then pass that to {@link #search(IndexReader.AtomicReaderContext[], Weight, Filter,
    * Collector)}.</p>
    */
   protected TopFieldDocs search(AtomicReaderContext[] leaves, Weight weight, Filter filter, int nDocs,
diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/util/automaton/fst/FST.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/util/automaton/fst/FST.java
index 60dc55c1..4af5add0 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/util/automaton/fst/FST.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/util/automaton/fst/FST.java
@@ -483,7 +483,7 @@ int addNode(Builder.UnCompiledNode<T> node) throws IOException {
    * this changes the provided <code>arc</code> (2nd arg) in-place and returns
    * it.
    * 
-   * @returns Returns the second argument (<code>arc</code>).
+   * @return Returns the second argument (<code>arc</code>).
    */
   public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {
     //int pos = address;
