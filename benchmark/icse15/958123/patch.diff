diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutor.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutor.java
index 8c7c50b4..5944ced7 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutor.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutor.java
@@ -29,9 +29,9 @@
 {
     protected static Logger logger = Logger.getLogger(DebuggableThreadPoolExecutor.class);
 
-    public DebuggableThreadPoolExecutor(String threadPoolName)
+    public DebuggableThreadPoolExecutor(String threadPoolName, int priority)
     {
-        this(1, 1, Integer.MAX_VALUE, TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>(), new NamedThreadFactory(threadPoolName));
+        this(1, 1, Integer.MAX_VALUE, TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>(), new NamedThreadFactory(threadPoolName, priority));
     }
 
     public DebuggableThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue, ThreadFactory threadFactory)
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/concurrent/NamedThreadFactory.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/concurrent/NamedThreadFactory.java
index c53cc480..76f8223e 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/concurrent/NamedThreadFactory.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/concurrent/NamedThreadFactory.java
@@ -30,16 +30,26 @@
 public class NamedThreadFactory implements ThreadFactory
 {
     protected final String id;
+    private final int priority;
     protected final AtomicInteger n = new AtomicInteger(1);
 
     public NamedThreadFactory(String id)
     {
+        this(id, Thread.NORM_PRIORITY);
+    }
+
+    public NamedThreadFactory(String id, int priority)
+    {
+
         this.id = id;
+        this.priority = priority;
     }
 
     public Thread newThread(Runnable runnable)
     {        
         String name = id + ":" + n.getAndIncrement();
-        return new Thread(runnable, name);
+        Thread thread = new Thread(runnable, name);
+        thread.setPriority(priority);
+        return thread;
     }
 }
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/db/CompactionManager.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/db/CompactionManager.java
index 67873755..bfdae1fd 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/db/CompactionManager.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/db/CompactionManager.java
@@ -566,7 +566,9 @@ public void run ()
 
         public CompactionExecutor()
         {
-            super("COMPACTION-POOL");
+            super("COMPACTION-POOL", System.getProperty("cassandra.compaction.priority") == null
+                                     ? Thread.NORM_PRIORITY
+                                     : Integer.parseInt(System.getProperty("cassandra.compaction.priority")));
         }
 
         @Override
