diff --git a/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence.java b/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence.java
index 1136c904..21e22a34 100644
--- a/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence.java
+++ b/lucene/java/trunk/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/TaskSequence.java
@@ -39,7 +39,7 @@
   private boolean exhausted = false;
   private boolean resetExhausted = false;
   private PerfTask[] tasksArray;
-  private boolean anyExhaustableTasks;
+  private boolean anyExhaustibleTasks;
   
   public TaskSequence (PerfRunData runData, String name, TaskSequence parent, boolean parallel) {
     super(runData);
@@ -57,8 +57,8 @@ private void initTasksArray() {
       tasksArray = new PerfTask[numTasks];
       for(int k=0;k<numTasks;k++) {
         tasksArray[k] = (PerfTask) tasks.get(k);
-        anyExhaustableTasks |= tasksArray[k] instanceof ResetInputsTask;
-        anyExhaustableTasks |= tasksArray[k] instanceof TaskSequence;
+        anyExhaustibleTasks |= tasksArray[k] instanceof ResetInputsTask;
+        anyExhaustibleTasks |= tasksArray[k] instanceof TaskSequence;
       }
     }
   }
@@ -123,7 +123,7 @@ private int doSerialTasks() throws Exception {
         try {
           final PerfTask task = tasksArray[l];
           count += task.runAndMaybeStats(letChildReport);
-          if (anyExhaustableTasks)
+          if (anyExhaustibleTasks)
             updateExhausted(task);
         } catch (NoMoreDataException e) {
           exhausted = true;
@@ -148,7 +148,7 @@ private int doSerialTasksWithRate() throws Exception {
         nextStartTime += delayStep; // this aims at avarage rate. 
         try {
           count += task.runAndMaybeStats(letChildReport);
-          if (anyExhaustableTasks)
+          if (anyExhaustibleTasks)
             updateExhausted(task);
         } catch (NoMoreDataException e) {
           exhausted = true;
