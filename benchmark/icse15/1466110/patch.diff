diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/common/lucene/AnalyzerUtils.java b/mahout/trunk/core/src/main/java/org/apache/mahout/common/lucene/AnalyzerUtils.java
index 15df9bbf..9c3b5db9 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/common/lucene/AnalyzerUtils.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/common/lucene/AnalyzerUtils.java
@@ -32,7 +32,7 @@ private AnalyzerUtils() {}
    * @throws ClassNotFoundException - {@link ClassNotFoundException}
    */
   public static Analyzer createAnalyzer(String analyzerClassName) throws ClassNotFoundException {
-    return createAnalyzer(analyzerClassName, Version.LUCENE_41);
+    return createAnalyzer(analyzerClassName, Version.LUCENE_42);
   }
 
   public static Analyzer createAnalyzer(String analyzerClassName, Version version) throws ClassNotFoundException {
@@ -47,7 +47,7 @@ public static Analyzer createAnalyzer(String analyzerClassName, Version version)
    * @return {@link Analyzer}
    */
   public static Analyzer createAnalyzer(Class<? extends Analyzer> analyzerClass) {
-    return createAnalyzer(analyzerClass, Version.LUCENE_41);
+    return createAnalyzer(analyzerClass, Version.LUCENE_42);
   }
 
   public static Analyzer createAnalyzer(Class<? extends Analyzer> analyzerClass, Version version) {
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/encoders/TextValueEncoderTest.java b/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/encoders/TextValueEncoderTest.java
index 7171ab4a..301cd97f 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/encoders/TextValueEncoderTest.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/vectorizer/encoders/TextValueEncoderTest.java
@@ -70,7 +70,7 @@ public void testAsString() {
   @Test
   public void testLuceneEncoding() throws Exception {
     LuceneTextValueEncoder enc = new LuceneTextValueEncoder("text");
-    enc.setAnalyzer(new WhitespaceAnalyzer(Version.LUCENE_41));
+    enc.setAnalyzer(new WhitespaceAnalyzer(Version.LUCENE_42));
     Vector v1 = new DenseVector(200);
     enc.addToVector("test1 and more", v1);
     enc.flush(1, v1);
diff --git a/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/NewsgroupHelper.java b/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/NewsgroupHelper.java
index 0cb58020..83603d98 100644
--- a/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/NewsgroupHelper.java
+++ b/mahout/trunk/examples/src/main/java/org/apache/mahout/classifier/NewsgroupHelper.java
@@ -60,7 +60,7 @@
   private static final long WEEK = 7 * 24 * 3600;
   
   private final Random rand = RandomUtils.getRandom();  
-  private final Analyzer analyzer = new StandardAnalyzer(Version.LUCENE_41);
+  private final Analyzer analyzer = new StandardAnalyzer(Version.LUCENE_42);
   private final FeatureVectorEncoder encoder = new StaticWordValueEncoder("body");
   private final FeatureVectorEncoder bias = new ConstantValueEncoder("Intercept");
   
diff --git a/mahout/trunk/integration/src/main/java/org/apache/mahout/text/MailArchivesClusteringAnalyzer.java b/mahout/trunk/integration/src/main/java/org/apache/mahout/text/MailArchivesClusteringAnalyzer.java
index 1d1075e2..2feab5d3 100644
--- a/mahout/trunk/integration/src/main/java/org/apache/mahout/text/MailArchivesClusteringAnalyzer.java
+++ b/mahout/trunk/integration/src/main/java/org/apache/mahout/text/MailArchivesClusteringAnalyzer.java
@@ -41,7 +41,7 @@
  * stop words, excluding non-alpha-numeric tokens, and porter stemming.
  */
 public final class MailArchivesClusteringAnalyzer extends StopwordAnalyzerBase {
-  private static final Version LUCENE_VERSION = Version.LUCENE_41;
+  private static final Version LUCENE_VERSION = Version.LUCENE_42;
   
   // extended set of stop words composed of common mail terms like "hi",
   // HTML tags, and Java keywords asmany of the messages in the archives
diff --git a/mahout/trunk/integration/src/main/java/org/apache/mahout/text/wikipedia/WikipediaAnalyzer.java b/mahout/trunk/integration/src/main/java/org/apache/mahout/text/wikipedia/WikipediaAnalyzer.java
index ebb606a7..b9f46ece 100644
--- a/mahout/trunk/integration/src/main/java/org/apache/mahout/text/wikipedia/WikipediaAnalyzer.java
+++ b/mahout/trunk/integration/src/main/java/org/apache/mahout/text/wikipedia/WikipediaAnalyzer.java
@@ -33,19 +33,19 @@
 public class WikipediaAnalyzer extends StopwordAnalyzerBase {
   
   public WikipediaAnalyzer() {
-    super(Version.LUCENE_41, StopAnalyzer.ENGLISH_STOP_WORDS_SET);
+    super(Version.LUCENE_42, StopAnalyzer.ENGLISH_STOP_WORDS_SET);
   }
   
   public WikipediaAnalyzer(CharArraySet stopSet) {
-    super(Version.LUCENE_41, stopSet);
+    super(Version.LUCENE_42, stopSet);
   }
 
   @Override
   protected TokenStreamComponents createComponents(String fieldName, Reader reader) {
     Tokenizer tokenizer = new WikipediaTokenizer(reader);
-    TokenStream result = new StandardFilter(Version.LUCENE_41, tokenizer);
-    result = new LowerCaseFilter(Version.LUCENE_41, result);
-    result = new StopFilter(Version.LUCENE_41, result, getStopwordSet());
+    TokenStream result = new StandardFilter(Version.LUCENE_42, tokenizer);
+    result = new LowerCaseFilter(Version.LUCENE_42, result);
+    result = new StopFilter(Version.LUCENE_42, result, getStopwordSet());
     return new TokenStreamComponents(tokenizer, result);
   }
 }
diff --git a/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/regex/AnalyzerTransformer.java b/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/regex/AnalyzerTransformer.java
index b2e5ae56..5972be3c 100644
--- a/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/regex/AnalyzerTransformer.java
+++ b/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/regex/AnalyzerTransformer.java
@@ -34,7 +34,7 @@
   private String fieldName = "text";
 
   public AnalyzerTransformer() {
-    this(new StandardAnalyzer(Version.LUCENE_41), "text");
+    this(new StandardAnalyzer(Version.LUCENE_42), "text");
   }
 
   public AnalyzerTransformer(Analyzer analyzer) {
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/TestClusterDumper.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/TestClusterDumper.java
index 75851723..f126df22 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/TestClusterDumper.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/TestClusterDumper.java
@@ -105,8 +105,8 @@ private void getSampleData(String[] docs2) throws IOException {
     RAMDirectory directory = new RAMDirectory();
     
     IndexWriter writer = new IndexWriter(directory, 
-           new IndexWriterConfig(Version.LUCENE_41,new StandardAnalyzer(
-        Version.LUCENE_41)));
+           new IndexWriterConfig(Version.LUCENE_42,new StandardAnalyzer(
+        Version.LUCENE_42)));
             
     try {
       for (int i = 0; i < docs2.length; i++) {
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/dirichlet/TestL1ModelClustering.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/dirichlet/TestL1ModelClustering.java
index 78819903..87b59f9f 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/dirichlet/TestL1ModelClustering.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/clustering/dirichlet/TestL1ModelClustering.java
@@ -135,7 +135,7 @@ private void getSampleData(String[] docs2) throws IOException {
     System.out.println();
     sampleData = Lists.newArrayList();
     RAMDirectory directory = new RAMDirectory();
-    IndexWriter writer = new IndexWriter( directory, new IndexWriterConfig(Version.LUCENE_41,new StandardAnalyzer(Version.LUCENE_41)));
+    IndexWriter writer = new IndexWriter( directory, new IndexWriterConfig(Version.LUCENE_42,new StandardAnalyzer(Version.LUCENE_42)));
 
     FieldType customType = new FieldType(TextField.TYPE_NOT_STORED);
     customType.setStoreTermVectors(true);
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/nlp/collocations/llr/BloomTokenFilterTest.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/nlp/collocations/llr/BloomTokenFilterTest.java
index f958505d..b6cf7355 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/nlp/collocations/llr/BloomTokenFilterTest.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/nlp/collocations/llr/BloomTokenFilterTest.java
@@ -79,7 +79,7 @@ public void testFilter() throws IOException {
   @Test
   public void testAnalyzer() throws IOException {
     Reader reader = new StringReader(input);
-    Analyzer analyzer = new WhitespaceAnalyzer(Version.LUCENE_41);
+    Analyzer analyzer = new WhitespaceAnalyzer(Version.LUCENE_42);
     TokenStream ts = analyzer.tokenStream(null, reader);
     ts.reset();
     validateTokens(allTokens, ts);
@@ -91,7 +91,7 @@ public void testAnalyzer() throws IOException {
   @Test
   public void testNonKeepdAnalyzer() throws IOException {
     Reader reader = new StringReader(input);
-    Analyzer analyzer = new WhitespaceAnalyzer(Version.LUCENE_41);
+    Analyzer analyzer = new WhitespaceAnalyzer(Version.LUCENE_42);
     TokenStream ts = analyzer.tokenStream(null, reader);
     ts.reset();
     TokenStream f = new BloomTokenFilter(getFilter(filterTokens), false /* toss matching tokens */, ts);
@@ -104,7 +104,7 @@ public void testNonKeepdAnalyzer() throws IOException {
   @Test
   public void testKeepAnalyzer() throws IOException {
     Reader reader = new StringReader(input);
-    Analyzer analyzer = new WhitespaceAnalyzer(Version.LUCENE_41);
+    Analyzer analyzer = new WhitespaceAnalyzer(Version.LUCENE_42);
     TokenStream ts = analyzer.tokenStream(null, reader);
     ts.reset();
     TokenStream f = new BloomTokenFilter(getFilter(filterTokens), true /* keep matching tokens */, ts);
@@ -117,7 +117,7 @@ public void testKeepAnalyzer() throws IOException {
   @Test
   public void testShingleFilteredAnalyzer() throws IOException {
     Reader reader = new StringReader(input);
-    Analyzer analyzer = new WhitespaceAnalyzer(Version.LUCENE_41);
+    Analyzer analyzer = new WhitespaceAnalyzer(Version.LUCENE_42);
     TokenStream ts = analyzer.tokenStream(null, reader);
     ts.reset();
     ShingleFilter sf = new ShingleFilter(ts, 3);
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/CachedTermInfoTest.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/CachedTermInfoTest.java
index 847df5a9..4eac1406 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/CachedTermInfoTest.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/CachedTermInfoTest.java
@@ -76,7 +76,7 @@ static RAMDirectory createTestIndex(Field.TermVector termVector,
                                       RAMDirectory directory,
                                       boolean createNew,
                                       int startingId) throws IOException {
-    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(Version.LUCENE_41, new WhitespaceAnalyzer(Version.LUCENE_41)));
+    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(Version.LUCENE_42, new WhitespaceAnalyzer(Version.LUCENE_42)));
 
     try {
       for (int i = 0; i < DOCS.length; i++) {
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/LuceneIterableTest.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/LuceneIterableTest.java
index e5671d41..51ab7bd1 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/LuceneIterableTest.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/lucene/LuceneIterableTest.java
@@ -163,7 +163,7 @@ static RAMDirectory createTestIndex(Field.TermVector termVector,
                                               RAMDirectory directory,
                                               boolean createNew,
                                               int startingId) throws IOException {
-    IndexWriter writer = new IndexWriter( directory, new IndexWriterConfig(Version.LUCENE_41,new StandardAnalyzer(Version.LUCENE_41)));
+    IndexWriter writer = new IndexWriter( directory, new IndexWriterConfig(Version.LUCENE_42,new StandardAnalyzer(Version.LUCENE_42)));
         
     try {
       for (int i = 0; i < DOCS.length; i++) {
