diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/tools/NodeCmd.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/tools/NodeCmd.java
index 905507b1..e5dba827 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/tools/NodeCmd.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/tools/NodeCmd.java
@@ -34,6 +34,7 @@
 import java.util.Map;
 import java.util.Set;
 import java.util.Map.Entry;
+import java.util.concurrent.ExecutionException;
 
 import org.apache.cassandra.cache.JMXInstrumentedCacheMBean;
 import org.apache.cassandra.concurrent.IExecutorMBean;
@@ -76,7 +77,7 @@ private static void printUsage()
         HelpFormatter hf = new HelpFormatter();
         String header = String.format(
                 "%nAvailable commands: ring, info, cleanup, compact, cfstats, snapshot [snapshotname], clearsnapshot, " +
-                "tpstats, flush, repair, decommission, move, loadbalance, removetoken, " +
+                "tpstats, flush, drain, repair, decommission, move, loadbalance, removetoken, " +
                 "setcachecapacity <keyspace> <cfname> <keycachecapacity> <rowcachecapacity>, " +
                 "getcompactionthreshold, setcompactionthreshold [minthreshold] ([maxthreshold])" +
                 "streams [host]");
@@ -502,6 +503,18 @@ else if (cmdName.equals("flush") || cmdName.equals("repair"))
             else // cmdName.equals("repair")
                 probe.forceTableRepair(cmd.getArgs()[1], columnFamilies);
         }
+        else if (cmdName.equals("drain"))
+        {
+            try 
+            {
+                probe.drain();
+            } catch (ExecutionException ee) 
+            {
+                System.err.println("Error occured during flushing");
+                ee.printStackTrace();
+                System.exit(3);
+            }    	
+        }
         else if (cmdName.equals("setcachecapacity"))
         {
             if (cmd.getArgs().length != 5)
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/tools/NodeProbe.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/tools/NodeProbe.java
index ac4cdfca..a41ecd27 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/tools/NodeProbe.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/tools/NodeProbe.java
@@ -33,6 +33,7 @@
 import java.util.Map;
 import java.util.Set;
 import java.util.Map.Entry;
+import java.util.concurrent.ExecutionException;
 
 import javax.management.*;
 import javax.management.remote.JMXConnector;
@@ -145,6 +146,11 @@ public void forceTableRepair(String tableName, String... columnFamilies) throws
         ssProxy.forceTableRepair(tableName, columnFamilies);
     }
     
+    public void drain() throws IOException, InterruptedException, ExecutionException
+    {
+        ssProxy.drain();	
+    }
+    
     public Map<Range, List<String>> getRangeToEndPointMap(String tableName)
     {
         return ssProxy.getRangeToEndPointMap(tableName);
