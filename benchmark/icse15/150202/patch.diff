diff --git a/lucene/java/trunk/src/java/org/apache/lucene/search/BooleanScorer.java b/lucene/java/trunk/src/java/org/apache/lucene/search/BooleanScorer.java
index 9c7a2bc5..c7ef73f9 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/search/BooleanScorer.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/search/BooleanScorer.java
@@ -132,7 +132,7 @@ private final void computeCoordFactors() throws IOException {
   public int doc() { return current.doc; }
 
   public boolean next() throws IOException {
-    boolean more = false;
+    boolean more;
     do {
       while (bucketTable.first != null) {         // more queued
         current = bucketTable.first;
@@ -146,6 +146,7 @@ public boolean next() throws IOException {
       }
 
       // refill the queue
+      more = false;
       end += BucketTable.SIZE;
       for (SubScorer sub = scorers; sub != null; sub = sub.next) {
         Scorer scorer = sub.scorer;
@@ -158,6 +159,7 @@ public boolean next() throws IOException {
         }
       }
     } while (bucketTable.first != null | more);
+
     return false;
   }
 
@@ -249,4 +251,16 @@ public Explanation explain(int doc) throws IOException {
     throw new UnsupportedOperationException();
   }
 
+  public String toString() {
+    StringBuffer buffer = new StringBuffer();
+    buffer.append("boolean(");
+    for (SubScorer sub = scorers; sub != null; sub = sub.next) {
+      buffer.append(sub.scorer.toString());
+      buffer.append(" ");
+    }
+    buffer.append(")");
+    return buffer.toString();
+  }
+
+
 }
diff --git a/lucene/java/trunk/src/java/org/apache/lucene/search/PhraseQuery.java b/lucene/java/trunk/src/java/org/apache/lucene/search/PhraseQuery.java
index efd9a1e1..ea1db642 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/search/PhraseQuery.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/search/PhraseQuery.java
@@ -119,6 +119,8 @@ public PhraseWeight(Searcher searcher) {
       this.searcher = searcher;
     }
 
+    public String toString() { return "weight(" + PhraseQuery.this + ")"; }
+
     public Query getQuery() { return PhraseQuery.this; }
     public float getValue() { return value; }
 
diff --git a/lucene/java/trunk/src/java/org/apache/lucene/search/PhraseScorer.java b/lucene/java/trunk/src/java/org/apache/lucene/search/PhraseScorer.java
index a6f810d1..1cdef820 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/search/PhraseScorer.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/search/PhraseScorer.java
@@ -185,4 +185,6 @@ public Explanation explain(final int doc) throws IOException {
     return tfExplanation;
   }
 
+  public String toString() { return "scorer(" + weight + ")"; }
+
 }
diff --git a/lucene/java/trunk/src/java/org/apache/lucene/search/TermQuery.java b/lucene/java/trunk/src/java/org/apache/lucene/search/TermQuery.java
index e9f842f4..5c61577e 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/search/TermQuery.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/search/TermQuery.java
@@ -78,6 +78,8 @@ public TermWeight(Searcher searcher) {
       this.searcher = searcher;
     }
 
+    public String toString() { return "weight(" + TermQuery.this + ")"; }
+
     public Query getQuery() { return TermQuery.this; }
     public float getValue() { return value; }
 
diff --git a/lucene/java/trunk/src/java/org/apache/lucene/search/TermScorer.java b/lucene/java/trunk/src/java/org/apache/lucene/search/TermScorer.java
index 8a32b4bf..3260b02a 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/search/TermScorer.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/search/TermScorer.java
@@ -157,4 +157,7 @@ public Explanation explain(int doc) throws IOException {
     
     return tfExplanation;
   }
+
+  public String toString() { return "scorer(" + weight + ")"; }
+
 }
