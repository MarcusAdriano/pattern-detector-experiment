diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/AliasInfo.java b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/AliasInfo.java
index a4745085..2b68d86d 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/AliasInfo.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/AliasInfo.java
@@ -67,4 +67,10 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 	 * represents at the source database.
 	 */
 	public String getMethodName();
+
+	/**
+	 * Return true if this alias is a Table Function.
+	 */
+	public boolean isTableFunction();
+
 }
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/types/MethodAliasInfo.java b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/types/MethodAliasInfo.java
index 81603841..25ddff67 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/types/MethodAliasInfo.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/types/MethodAliasInfo.java
@@ -115,6 +115,8 @@ public String getMethodName()
 		return methodName;
 	}
 
+	public boolean isTableFunction() {return false; }
+
 	/**
 	  @see java.lang.Object#toString
 	  */
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/types/RoutineAliasInfo.java b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/types/RoutineAliasInfo.java
index a27993ca..e8ec2691 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/types/RoutineAliasInfo.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/types/RoutineAliasInfo.java
@@ -209,6 +209,10 @@ public TypeDescriptor getReturnType() {
 		return returnType;
 	}
 
+	public boolean isTableFunction() {
+		return returnType.isRowMultiSet();
+	}
+
 
 	// Formatable methods
 
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/types/SynonymAliasInfo.java b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/types/SynonymAliasInfo.java
index 1d72c52d..91b9e369 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/types/SynonymAliasInfo.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/types/SynonymAliasInfo.java
@@ -58,6 +58,8 @@ public String getSynonymSchema() {
 		return schemaName;
 	}
 
+	public boolean isTableFunction() {return false; }
+
 	// Formatable methods
 
 	/**
diff --git a/db/derby/code/trunk/java/shared/org/apache/derby/shared/common/reference/JDBC40Translation.java b/db/derby/code/trunk/java/shared/org/apache/derby/shared/common/reference/JDBC40Translation.java
index c201a1a3..83d2bccd 100644
--- a/db/derby/code/trunk/java/shared/org/apache/derby/shared/common/reference/JDBC40Translation.java
+++ b/db/derby/code/trunk/java/shared/org/apache/derby/shared/common/reference/JDBC40Translation.java
@@ -55,6 +55,10 @@ Licensed to the Apache Software Foundation (ASF) under one or more
     public static final int FUNCTION_NULLABLE          = 1;
     public static final int FUNCTION_NULLABLE_UNKNOWN  = 2;
 
+    public static final int FUNCTION_RESULT_UNKNOWN          = 0;
+    public static final int FUNCTION_NO_TABLE          = 1;
+    public static final int FUNCTION_RETURNS_TABLE  = 2;
+
     // constants from java.sql.Types
     public static final int NCHAR = -15;
     public static final int NVARCHAR = -9;
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/JDBC40TranslationTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/JDBC40TranslationTest.java
index aea79dac..279699c9 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/JDBC40TranslationTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/JDBC40TranslationTest.java
@@ -67,6 +67,21 @@ public void testDatabaseMetaDataFUNCTION_RETURN() {
                      JDBC40Translation.FUNCTION_RETURN);
     }
 
+    public void testDatabaseMetaDataFUNCTION_RESULT_UNKNOWN() {
+        assertEquals(DatabaseMetaData.functionResultUnknown,
+                     JDBC40Translation.FUNCTION_RESULT_UNKNOWN);
+    }
+
+    public void testDatabaseMetaDataFUNCTION_NO_TABLE() {
+        assertEquals(DatabaseMetaData.functionNoTable,
+                     JDBC40Translation.FUNCTION_NO_TABLE);
+    }
+
+    public void testDatabaseMetaDataFUNCTION_RETURNS_TABLE() {
+        assertEquals(DatabaseMetaData.functionReturnsTable,
+                     JDBC40Translation.FUNCTION_RETURNS_TABLE);
+    }
+
     public void testDatabaseMetaDataFUNCTION_NO_NULLS() {
         assertEquals(DatabaseMetaData.functionNoNulls,
                      JDBC40Translation.FUNCTION_NO_NULLS);
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java
index 5a3330ee..ab43f6ab 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestDbMetaData.java
@@ -1,6 +1,6 @@
 /*
 
-   Derby - Class org.apache.derbyTesting.functionTests.tests.jdbc.TestDbMetaData
+   Derby - Class org.apache.derbyTesting.functionTests.tests.jdbc4.TestDbMetaData
 
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
@@ -27,6 +27,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import java.sql.ResultSet;
 import java.sql.SQLException;
 import java.sql.Statement;
+import java.sql.Types;
 
 import junit.framework.Test;
 import junit.framework.TestSuite;
@@ -42,6 +43,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more
  */
 public class TestDbMetaData extends BaseJDBCTestCase {
 
+    private static  final   Integer FUNCTION_NO_TABLE_VALUE = new Integer( DatabaseMetaData.functionNoTable );
+    
     private DatabaseMetaData meta;
 
     public TestDbMetaData(String name) {
@@ -125,59 +128,62 @@ public void testFunctionNullable() {
     private void assertGetFunctionsRs(ResultSet rs) throws SQLException {
         JDBC.assertColumnNames(rs, new String[] {
             "FUNCTION_CAT", "FUNCTION_SCHEM", "FUNCTION_NAME", "REMARKS",
-            "SPECIFIC_NAME" });
+            "FUNCTION_TYPE", "SPECIFIC_NAME" });
+        JDBC.assertColumnTypes(rs, new int[] {
+            Types.VARCHAR, Types.VARCHAR, Types.VARCHAR, Types.VARCHAR,
+            Types.SMALLINT, Types.VARCHAR });
     }
     
     private static final GeneratedId GENERIC_NAME = new GeneratedId();
 
     /** Expected rows from getFunctions() when all functions match. */
     private static final Object[][] ALL_FUNCTIONS = {
-        { null, "APP", "DUMMY1", "java.some.func", GENERIC_NAME },
-        { null, "APP", "DUMMY2", "java.some.func", GENERIC_NAME },
-        { null, "APP", "DUMMY3", "java.some.func", GENERIC_NAME },
-        { null, "APP", "DUMMY4", "java.some.func", GENERIC_NAME },
+        { null, "APP", "DUMMY1", "java.some.func", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
+        { null, "APP", "DUMMY2", "java.some.func", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
+        { null, "APP", "DUMMY3", "java.some.func", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
+        { null, "APP", "DUMMY4", "java.some.func", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
         { null, "SYSCS_UTIL", "SYSCS_CHECK_TABLE",
           "org.apache.derby.catalog.SystemProcedures.SYSCS_CHECK_TABLE",
-          GENERIC_NAME },
+          FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
         { null, "SYSCS_UTIL", "SYSCS_GET_DATABASE_PROPERTY",
           "org.apache.derby.catalog.SystemProcedures." +
-          "SYSCS_GET_DATABASE_PROPERTY", GENERIC_NAME },
+          "SYSCS_GET_DATABASE_PROPERTY", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
         { null, "SYSCS_UTIL", "SYSCS_GET_RUNTIMESTATISTICS",
           "org.apache.derby.catalog.SystemProcedures." +
-          "SYSCS_GET_RUNTIMESTATISTICS", GENERIC_NAME },
+          "SYSCS_GET_RUNTIMESTATISTICS", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
           { null, "SYSCS_UTIL", "SYSCS_GET_USER_ACCESS",
               "org.apache.derby.catalog.SystemProcedures." +
-              "SYSCS_GET_USER_ACCESS", GENERIC_NAME },
+              "SYSCS_GET_USER_ACCESS", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
         { null, "SYSIBM", "BLOBCREATELOCATOR",
           "org.apache.derby.impl.jdbc.LOBStoredProcedure." +
-          "BLOBCREATELOCATOR", GENERIC_NAME },
+          "BLOBCREATELOCATOR", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
         { null, "SYSIBM", "BLOBGETBYTES",
           "org.apache.derby.impl.jdbc.LOBStoredProcedure." +
-          "BLOBGETBYTES", GENERIC_NAME },
+          "BLOBGETBYTES", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
         { null, "SYSIBM", "BLOBGETLENGTH",
           "org.apache.derby.impl.jdbc.LOBStoredProcedure." +
-          "BLOBGETLENGTH", GENERIC_NAME },
+          "BLOBGETLENGTH", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
         { null, "SYSIBM", "BLOBGETPOSITIONFROMBYTES",
           "org.apache.derby.impl.jdbc.LOBStoredProcedure." +
-          "BLOBGETPOSITIONFROMBYTES", GENERIC_NAME },
+          "BLOBGETPOSITIONFROMBYTES", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
         { null, "SYSIBM", "BLOBGETPOSITIONFROMLOCATOR",
           "org.apache.derby.impl.jdbc.LOBStoredProcedure." +
-          "BLOBGETPOSITIONFROMLOCATOR", GENERIC_NAME },
+          "BLOBGETPOSITIONFROMLOCATOR", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
         { null, "SYSIBM", "CLOBCREATELOCATOR",
           "org.apache.derby.impl.jdbc.LOBStoredProcedure." +
-          "CLOBCREATELOCATOR", GENERIC_NAME },
+          "CLOBCREATELOCATOR", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
         { null, "SYSIBM", "CLOBGETLENGTH",
           "org.apache.derby.impl.jdbc.LOBStoredProcedure." +
-          "CLOBGETLENGTH", GENERIC_NAME },
+          "CLOBGETLENGTH", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
         { null, "SYSIBM", "CLOBGETPOSITIONFROMLOCATOR",
           "org.apache.derby.impl.jdbc.LOBStoredProcedure." +
-          "CLOBGETPOSITIONFROMLOCATOR", GENERIC_NAME },
+          "CLOBGETPOSITIONFROMLOCATOR", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
         { null, "SYSIBM", "CLOBGETPOSITIONFROMSTRING",
           "org.apache.derby.impl.jdbc.LOBStoredProcedure." +
-          "CLOBGETPOSITIONFROMSTRING", GENERIC_NAME },
+          "CLOBGETPOSITIONFROMSTRING", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
         { null, "SYSIBM", "CLOBGETSUBSTRING",
           "org.apache.derby.impl.jdbc.LOBStoredProcedure." +
-          "CLOBGETSUBSTRING", GENERIC_NAME },
+          "CLOBGETSUBSTRING", FUNCTION_NO_TABLE_VALUE, GENERIC_NAME },
 
     };
 
