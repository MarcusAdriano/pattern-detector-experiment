diff --git a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/DocumentsWriter.java b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/DocumentsWriter.java
index 241f8293..1b4c1ecf 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/DocumentsWriter.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/java/org/apache/lucene/index/DocumentsWriter.java
@@ -843,6 +843,12 @@ boolean updateDocuments(Collection<Document> docs, Analyzer analyzer, Term delTe
     final int startDocID = docState.docID;
     int docID = startDocID;
 
+    // We must delay pausing until the full doc block is
+    // added, else we can hit deadlock if more than one
+    // thread is adding a block and we need to pause when
+    // both are only part way done:
+    boolean doPauseWaitQueue = false;
+
     //System.out.println(Thread.currentThread().getName() + ": A " + docCount);
     for(Document doc : docs) {
       docState.doc = doc;
@@ -873,13 +879,10 @@ boolean updateDocuments(Collection<Document> docs, Analyzer analyzer, Term delTe
           assert perDoc == null || perDoc.docID == docState.docID;
           final boolean doPause;
           if (perDoc != null) {
-            doPause = waitQueue.add(perDoc);
+            doPauseWaitQueue |= waitQueue.add(perDoc);
           } else {
             skipDocWriter.docID = docState.docID;
-            doPause = waitQueue.add(skipDocWriter);
-          }
-          if (doPause) {
-            waitForWaitQueue();
+            doPauseWaitQueue |= waitQueue.add(skipDocWriter);
           }
         }
 
@@ -937,6 +940,10 @@ boolean updateDocuments(Collection<Document> docs, Analyzer analyzer, Term delTe
           }
         }
       }
+
+      if (doPauseWaitQueue) {
+        waitForWaitQueue();
+      }
     }
     //System.out.println(Thread.currentThread().getName() + ":   A " + docCount);
 
