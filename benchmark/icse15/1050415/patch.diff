diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/IndexReader.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/IndexReader.java
index 3b92a53c..2e3a93eb 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/IndexReader.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/IndexReader.java
@@ -1420,7 +1420,7 @@ public int getTermInfosIndexDivisor() {
   }
 
 
-  private Fields fields;
+  private volatile Fields fields;
 
   /** @lucene.internal */
   void storeFields(Fields fields) {
diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/MultiFields.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/MultiFields.java
index fc3beb7e..248b8255 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/MultiFields.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/MultiFields.java
@@ -19,9 +19,10 @@
 
 import java.io.IOException;
 import java.util.Map;
-import java.util.HashMap;
 import java.util.List;
 import java.util.ArrayList;
+import java.util.concurrent.ConcurrentHashMap;
+
 import org.apache.lucene.util.ReaderUtil;
 import org.apache.lucene.util.ReaderUtil.Gather;  // for javadocs
 import org.apache.lucene.util.Bits;
@@ -45,7 +46,7 @@
 public final class MultiFields extends Fields {
   private final Fields[] subs;
   private final ReaderUtil.Slice[] subSlices;
-  private final Map<String,Terms> terms = new HashMap<String,Terms>();
+  private final Map<String,Terms> terms = new ConcurrentHashMap<String,Terms>();
 
   /** Returns a single {@link Fields} instance for this
    *  reader, merging fields/terms/docs/positions on the
@@ -240,9 +241,10 @@ public FieldsEnum iterator() throws IOException {
   @Override
   public Terms terms(String field) throws IOException {
 
-    final Terms result;
+    Terms result = terms.get(field);
+    if (result != null)
+      return result;
 
-    if (!terms.containsKey(field)) {
 
       // Lazy init: first time this field is requested, we
       // create & add to terms:
@@ -259,13 +261,12 @@ public Terms terms(String field) throws IOException {
       }
       if (subs2.size() == 0) {
         result = null;
+      // don't cache this case with an unbounded cache, since the number of fields that don't exist
+      // is unbounded.
       } else {
         result = new MultiTerms(subs2.toArray(Terms.EMPTY_ARRAY),
                                 slices2.toArray(ReaderUtil.Slice.EMPTY_ARRAY));
-      }
       terms.put(field, result);
-    } else {
-      result = terms.get(field);
     }
 
     return result;
