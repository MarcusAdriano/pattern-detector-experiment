diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLDate.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLDate.java
index 9f504ed5..05bbe1c0 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLDate.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLDate.java
@@ -594,6 +594,11 @@ public void setValue(String theValue)
 	** SQL Operators
 	*/
 
+    NumberDataValue nullValueInt() {
+        return new SQLInteger();
+    }
+
+    
 	/**
 	 * @see DateTimeDataValue#getYear
 	 * 
@@ -602,12 +607,12 @@ public void setValue(String theValue)
 	public NumberDataValue getYear(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(), "getYear called on a null");
-		}
+        if (isNull()) {
+            return nullValueInt();
+        } else {    
 		return SQLDate.setSource(getYear(encodedDate), result);
 	}
+    }
 
 	/**
 	 * @see DateTimeDataValue#getMonth
@@ -617,12 +622,12 @@ public NumberDataValue getYear(NumberDataValue result)
 	public NumberDataValue getMonth(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(), "getMonth called on a null");
-		}
+        if (isNull()) {
+            return nullValueInt();
+        } else {
 		return SQLDate.setSource(getMonth(encodedDate), result);
 	}
+	}
 
 	/**
 	 * @see DateTimeDataValue#getDate
@@ -632,12 +637,12 @@ public NumberDataValue getMonth(NumberDataValue result)
 	public NumberDataValue getDate(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(), "getDate called on a null");
-		}
+        if (isNull()) {
+            return nullValueInt();
+        } else {
 		return SQLDate.setSource(getDay(encodedDate), result);
 	}
+	}
 
 	/**
 	 * @see DateTimeDataValue#getHours
@@ -647,10 +652,6 @@ public NumberDataValue getDate(NumberDataValue result)
 	public NumberDataValue getHours(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(), "getHours called on null.");
-		}
 		throw StandardException.newException(SQLState.LANG_UNARY_FUNCTION_BAD_TYPE, 
 						"getHours", "Date");
 	}
@@ -663,10 +664,6 @@ public NumberDataValue getHours(NumberDataValue result)
 	public NumberDataValue getMinutes(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(), "getMinutes called on null.");
-		}
 		throw StandardException.newException(SQLState.LANG_UNARY_FUNCTION_BAD_TYPE, 
 						"getMinutes", "Date");
 	}
@@ -679,10 +676,6 @@ public NumberDataValue getMinutes(NumberDataValue result)
 	public NumberDataValue getSeconds(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(), "getSeconds called on null.");
-		}
 		throw StandardException.newException(SQLState.LANG_UNARY_FUNCTION_BAD_TYPE, 
 						"getSeconds", "Date");
 	}
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLTime.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLTime.java
index d5b66991..6db67225 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLTime.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLTime.java
@@ -656,6 +656,10 @@ public void setValue(String theValue)
 	** SQL Operators
 	*/
 
+    NumberDataValue nullValueInt() {
+        return new SQLInteger();
+    }
+
 	/**
 	 * @see DateTimeDataValue#getYear
 	 * 
@@ -664,10 +668,6 @@ public void setValue(String theValue)
 	public NumberDataValue getYear(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(), "getYear called on null.");
-		}
 		throw StandardException.newException(SQLState.LANG_UNARY_FUNCTION_BAD_TYPE, 
 						"getYear", "Time");
 	}
@@ -680,10 +680,6 @@ public NumberDataValue getYear(NumberDataValue result)
 	public NumberDataValue getMonth(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(), "getMonth called on null.");
-		}
 		throw StandardException.newException(SQLState.LANG_UNARY_FUNCTION_BAD_TYPE, 
 						"getMonth", "Time");
 	}
@@ -696,10 +692,6 @@ public NumberDataValue getMonth(NumberDataValue result)
 	public NumberDataValue getDate(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(), "getDate called on null.");
-		}
 		throw StandardException.newException(SQLState.LANG_UNARY_FUNCTION_BAD_TYPE, 
 						"getDate", "Time");
 	}
@@ -712,12 +704,12 @@ public NumberDataValue getDate(NumberDataValue result)
 	public NumberDataValue getHours(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(),  "getHours called on null");
-		}
+        if (isNull()) {
+            return nullValueInt();
+        } else {    
 		return SQLDate.setSource(getHour(encodedTime), result);
 	}
+	}
 
 	/**
 	 * @see DateTimeDataValue#getMinutes
@@ -727,12 +719,12 @@ public NumberDataValue getHours(NumberDataValue result)
 	public NumberDataValue getMinutes(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(), "getMinutes called on null");
-		}
+        if (isNull()) {
+            return nullValueInt();
+        } else {    
 		return SQLDate.setSource(getMinute(encodedTime), result);
 	}
+	}
 
 	/**
 	 * @see DateTimeDataValue#getSeconds
@@ -742,12 +734,12 @@ public NumberDataValue getMinutes(NumberDataValue result)
 	public NumberDataValue getSeconds(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(), "getMinutes called on null");
-		}
+        if (isNull()) {
+            return nullValueInt();
+        } else {    
 		return SQLDate.setSource(getSecond(encodedTime), result);
 	}
+	}
 
 	/*
 	** String display of value
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLTimestamp.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLTimestamp.java
index fb0ff46e..4e6dbbf1 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLTimestamp.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLTimestamp.java
@@ -729,6 +729,13 @@ public void setValue(String theValue)
 	** SQL Operators
 	*/
 
+    NumberDataValue nullValueInt() {
+        return new SQLInteger();
+    }
+
+    NumberDataValue nullValueDouble() {
+        return new SQLDouble();
+    }
 
 	/**
 	 * @see DateTimeDataValue#getYear
@@ -738,12 +745,12 @@ public void setValue(String theValue)
 	public NumberDataValue getYear(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(), "getYear called on a null");
-		}
+        if (isNull()) {
+            return nullValueInt();
+        } else {    
 		return SQLDate.setSource(SQLDate.getYear(encodedDate), result);
 	}
+	}
 
 	/**
 	 * @see DateTimeDataValue#getMonth
@@ -753,12 +760,12 @@ public NumberDataValue getYear(NumberDataValue result)
 	public NumberDataValue getMonth(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(), "getMonth called on a null");
-		}
+        if (isNull()) {
+            return nullValueInt();
+        } else {    
 		return SQLDate.setSource(SQLDate.getMonth(encodedDate), result);
 	}
+	}
 
 	/**
 	 * @see DateTimeDataValue#getDate
@@ -768,12 +775,12 @@ public NumberDataValue getMonth(NumberDataValue result)
 	public NumberDataValue getDate(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(), "getDate called on a null");
-		}
+        if (isNull()) {
+            return nullValueInt();
+        } else {    
 		return SQLDate.setSource(SQLDate.getDay(encodedDate), result);
 	}
+	}
 
 	/**
 	 * @see DateTimeDataValue#getHours
@@ -783,12 +790,12 @@ public NumberDataValue getDate(NumberDataValue result)
 	public NumberDataValue getHours(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(), "getHours called on a null");
-		}
+        if (isNull()) {
+            return nullValueInt();
+        } else {    
 		return SQLDate.setSource(SQLTime.getHour(encodedTime), result);
 	}
+	}
 
 	/**
 	 * @see DateTimeDataValue#getMinutes
@@ -798,12 +805,12 @@ public NumberDataValue getHours(NumberDataValue result)
 	public NumberDataValue getMinutes(NumberDataValue result)
 							throws StandardException
 	{
-		if (SanityManager.DEBUG)
-		{
-			SanityManager.ASSERT(!isNull(), "getMinute called on a null");
-		}
+        if (isNull()) {
+            return nullValueInt();
+        } else {    
 		return SQLDate.setSource(SQLTime.getMinute(encodedTime), result);
 	}
+	}
 
 	/**
 	 * @see DateTimeDataValue#getSeconds
@@ -815,12 +822,15 @@ public NumberDataValue getSeconds(NumberDataValue source)
 	{
 		if (SanityManager.DEBUG)
 		{
-			SanityManager.ASSERT(!isNull(), "getSeconds called on a null");
 			SanityManager.ASSERT(source == null || source instanceof SQLDouble,
 		"getSeconds for a timestamp was given a source other than a SQLDouble");
 		}
 		NumberDataValue result;
 
+        if (isNull()) {
+            return nullValueDouble();
+        }
+
 		if (source != null)
 			result = source;
 		else
