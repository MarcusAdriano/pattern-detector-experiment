diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CoalesceFunctionNode.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CoalesceFunctionNode.java
index 12a24c3a..f26187bd 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CoalesceFunctionNode.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CoalesceFunctionNode.java
@@ -36,11 +36,9 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import org.apache.derby.iapi.services.compiler.MethodBuilder;
 import org.apache.derby.iapi.sql.compile.Visitable;
 import org.apache.derby.iapi.sql.compile.Visitor;
-import org.apache.derby.iapi.types.StringDataValue;
 
 import java.lang.reflect.Modifier;
 
-import java.util.Iterator;
 import java.util.Vector;
 
 /**
@@ -176,9 +174,6 @@ public ValueNode bindExpression(FromList fromList, SubqueryList subqueryList,
 			if (((ValueNode) argumentsList.elementAt(index)).requiresTypeFromContext())
 			{
 				((ValueNode)argumentsList.elementAt(index)).setType(getTypeServices());
-				//collation of ? operand should be same as the compilation schema
-				((ValueNode)argumentsList.elementAt(index)).setCollationUsingCompilationSchema(
-						StringDataValue.COLLATION_DERIVATION_IMPLICIT);
 				break;
 			}
 		}
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java
index fddeb9ef..29a91f87 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java
@@ -696,6 +696,18 @@ private void commonTestingForTerritoryBasedDB(Statement s) throws SQLException{
     rs = ps.executeQuery();
     JDBC.assertFullResultSet(rs,new String[][] {{"SYSCOLUMNS"}});      
 
+    //Do parameter testing with COALESCE
+    //following will pass because the ? inside the COALESCE will take the 
+    //collation type of the other operand which is TABLENAME. The result of
+    //COALESCE will have collation type of UCS_BASIC and that is the same
+    //collation that the ? on rhs of = will get.
+    ps = conn.prepareStatement("SELECT TABLENAME FROM SYS.SYSTABLES WHERE " +
+	" COALESCE(TABLENAME, ?) = ?");   
+    ps.setString(1, " ");
+    ps.setString(2, "SYSCOLUMNS ");
+    rs = ps.executeQuery();
+    JDBC.assertFullResultSet(rs,new String[][] {{"SYSCOLUMNS"}});
+
     //Do parameter testing with LTRIM
     //Won't work in territory based database because in 
     //LTRIM(?) = TABLENAME
