diff --git a/db/derby/code/branches/10.10/java/testing/org/apache/derbyTesting/functionTests/tests/tools/dblook_test.java b/db/derby/code/branches/10.10/java/testing/org/apache/derbyTesting/functionTests/tests/tools/dblook_test.java
index a1ddb83b..520d66d3 100644
--- a/db/derby/code/branches/10.10/java/testing/org/apache/derbyTesting/functionTests/tests/tools/dblook_test.java
+++ b/db/derby/code/branches/10.10/java/testing/org/apache/derbyTesting/functionTests/tests/tools/dblook_test.java
@@ -105,6 +105,10 @@ protected void doTest() {
 			createTestDatabase(dbCreationScript_2);
 			runMessageCheckTest(testDBName);
 
+            // Test DERBY-6387 - wrong order of triggers
+            System.out.println("\n-= Start DERBY-6387 test. =-");
+            testDerby6387();
+
 		} catch (SQLException se) {
 
 			System.out.println("FAILED: to complete the test:");
@@ -1728,4 +1732,22 @@ private void printAsHeader(String str) {
 
 	}
 
+    /**
+     * Regression test case for DERBY-6387. Verify that triggers are returned
+     * in the order in which they were created.
+     */
+    private void testDerby6387() throws Exception {
+        // Create the test database.
+        createTestDatabase("dblook_makeDB_derby6387.sql");
+
+        // Run dblook on it.
+        lookOne(testDBName);
+
+        // Check that the error log was empty.
+        dumpFileToSysOut("dblook.log");
+
+        // Check the dblook output. Before DERBY-6387 was fixed, TR24 was
+        // first in the output. It should be last.
+        dumpFileToSysOut(testDBName + ".sql");
+    }
 }
diff --git a/db/derby/code/branches/10.10/java/tools/org/apache/derby/impl/tools/dblook/DB_Trigger.java b/db/derby/code/branches/10.10/java/tools/org/apache/derby/impl/tools/dblook/DB_Trigger.java
index a15a5c3c..f53ea8a3 100644
--- a/db/derby/code/branches/10.10/java/tools/org/apache/derby/impl/tools/dblook/DB_Trigger.java
+++ b/db/derby/code/branches/10.10/java/tools/org/apache/derby/impl/tools/dblook/DB_Trigger.java
@@ -50,7 +50,8 @@ public static void doTriggers (Connection conn)
 		ResultSet rs = stmt.executeQuery("SELECT TRIGGERNAME, SCHEMAID, " +
 			"EVENT, FIRINGTIME, TYPE, TABLEID, REFERENCEDCOLUMNS, " + 
 			"TRIGGERDEFINITION, REFERENCINGOLD, REFERENCINGNEW, OLDREFERENCINGNAME, " +
-			"NEWREFERENCINGNAME FROM SYS.SYSTRIGGERS WHERE STATE != 'D'");
+			"NEWREFERENCINGNAME FROM SYS.SYSTRIGGERS WHERE STATE != 'D'" +
+            "ORDER BY CREATIONTIMESTAMP");
 
 		boolean firstTime = true;
 		while (rs.next()) {
