diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/store/access/xa/XAXactId.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/store/access/xa/XAXactId.java
index 55f9ca34..0580db49 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/store/access/xa/XAXactId.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/store/access/xa/XAXactId.java
@@ -64,10 +64,8 @@ private void copy_init_xid(
 							   byte[]  branch_id)
     {
 		this.format_id = format_id;
-		this.global_id = new byte[global_id.length];
-		System.arraycopy(global_id, 0, this.global_id, 0, global_id.length);
-		this.branch_id = new byte[branch_id.length];
-		System.arraycopy(branch_id, 0, this.branch_id, 0, branch_id.length);
+        this.global_id = (byte[]) global_id.clone();
+        this.branch_id = (byte[]) branch_id.clone();
     }
     
     /**
@@ -229,7 +227,7 @@ public int getFormatId()
      **/
     public byte[] getGlobalTransactionId()
     {
-        return(global_id);
+        return (byte[]) global_id.clone();
     }
 
     /**
@@ -240,7 +238,7 @@ public int getFormatId()
      **/
     public byte[] getBranchQualifier()
     {
-        return(branch_id);
+        return (byte[]) branch_id.clone();
     }
 
 
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/store/raw/GlobalTransactionId.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/store/raw/GlobalTransactionId.java
index e1a85a54..4a2a6d00 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/store/raw/GlobalTransactionId.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/store/raw/GlobalTransactionId.java
@@ -33,31 +33,5 @@ The equals() method for TransactionId implements by value equality.
 */
 public interface GlobalTransactionId extends Formatable 
 {
-    /**
-     * Obtain the format id part of the GlobalTransactionId.
-     * <p>
-     *
-	 * @return Format identifier. O means the OSI CCR format.
-     **/
-    public int getFormat_Id();
-
-    /**
-     * Obtain the global transaction identifier part of GlobalTransactionId 
-     * as an array of bytes.
-     * <p>
-     *
-	 * @return A byte array containing the global transaction identifier.
-     **/
-    public byte[] getGlobalTransactionId();
-
-    /**
-     * Obtain the transaction branch qualifier part of the GlobalTransactionId
-     * in a byte array.
-     * <p>
-     *
-	 * @return A byte array containing the branch qualifier of the transaction.
-     **/
-    public byte[] getBranchQualifier();
-
 	/* need to write a value based HashCode() method. */
 }
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/store/raw/xact/RawTransaction.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/store/raw/xact/RawTransaction.java
index 2895fc8e..c36325a7 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/store/raw/xact/RawTransaction.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/store/raw/xact/RawTransaction.java
@@ -38,8 +38,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 import org.apache.derby.iapi.util.ByteArray;
 import org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream;
-import org.apache.derby.catalog.UUID;
-
 
 import java.util.Observable;
 
@@ -119,11 +117,6 @@ public abstract void logAndUndo(Compensation compensation, LogInstant undoInstan
 	/** Methods to help logging and recovery */
 
 	/** 
-		Set the transaction Ids (Global and internal) of this transaction
-	*/
-	public abstract void setTransactionId(GlobalTransactionId id, TransactionId shortId);
-
-	/**
 		Set the transactionId (Global and internal) of this transaction using a
 		log record that contains the Global id
 	*/
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/GlobalXactId.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/GlobalXactId.java
index 382fed1a..cc9ddb69 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/GlobalXactId.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/GlobalXactId.java
@@ -23,15 +23,11 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 import org.apache.derby.iapi.services.sanity.SanityManager;
 
-import org.apache.derby.iapi.services.io.FormatIdUtil;
 import org.apache.derby.iapi.services.io.StoredFormatIds;
-import org.apache.derby.catalog.UUID;
 
 import org.apache.derby.iapi.store.raw.GlobalTransactionId;
 import org.apache.derby.iapi.store.access.GlobalXact;
 
-import org.apache.derby.iapi.util.ByteArray;
-
 import java.io.ObjectOutput;
 import java.io.ObjectInput;
 import java.io.IOException;
@@ -47,16 +43,14 @@ Licensed to the Apache Software Foundation (ASF) under one or more
      * Constructors for This class:
      **************************************************************************
      */
-	public GlobalXactId(
+    GlobalXactId(
 						int     format_id,
 						byte[]  global_id,
 						byte[]  branch_id)
     {
 		this.format_id = format_id;
-		this.global_id = new byte[global_id.length];
-		System.arraycopy(global_id, 0, this.global_id, 0, global_id.length);
-		this.branch_id = new byte[branch_id.length];
-		System.arraycopy(branch_id, 0, this.branch_id, 0, branch_id.length);
+        this.global_id = (byte[]) global_id.clone();
+        this.branch_id = (byte[]) branch_id.clone();
 	}
 
     /**************************************************************************
@@ -142,21 +136,29 @@ public int getTypeFormatId() {
      **************************************************************************
      */
 
-    /**************************************************************************
-     * Public Methods of This class:
-     **************************************************************************
+    /**
+     * Obtain the format id part of the GlobalTransactionId.
+     * @return format identifier, 0 means the OSI CCR format
      */
-    public int getFormat_Id()
+    int getFormat_Id()
     {
         return(format_id);
     }
 
-    public byte[] getGlobalTransactionId()
+    /**
+     * Obtain the global transaction identifier as an array of bytes.
+     * @return a byte array containing the global transaction identifier
+     */
+    byte[] getGlobalTransactionId()
     {
         return(global_id);
     }
 
-    public byte[] getBranchQualifier()
+    /**
+     * Obtain the transaction branch qualifier as an array of bytes.
+     * @return a byte array containing the branch qualifier of the transaction
+     */
+    byte[] getBranchQualifier()
     {
         return(branch_id);
     }
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/Xact.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/Xact.java
index 627f3b90..d0d148c4 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/Xact.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/Xact.java
@@ -479,7 +479,7 @@ public LogInstant getLastLogInstant()
 	/**
 		Set my transaction identifier.
 	*/
-	public void setTransactionId(GlobalTransactionId extid, TransactionId localid) {
+    void setTransactionId(GlobalTransactionId extid, TransactionId localid) {
 
 		if (SanityManager.DEBUG) {
 
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/XactFactory.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/XactFactory.java
index ab5db1a4..26aa2b26 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/XactFactory.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/XactFactory.java
@@ -35,7 +35,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import org.apache.derby.iapi.services.monitor.Monitor;
 import org.apache.derby.iapi.services.sanity.SanityManager;
 import org.apache.derby.iapi.services.io.Formatable;
-import org.apache.derby.iapi.services.io.FormatIdUtil;
 import org.apache.derby.iapi.services.uuid.UUIDFactory;
 import org.apache.derby.catalog.UUID;
 
@@ -43,14 +42,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import org.apache.derby.iapi.store.access.TransactionController;
 import org.apache.derby.iapi.store.access.TransactionInfo;
 
-import org.apache.derby.iapi.store.access.AccessFactory;
-
-import org.apache.derby.iapi.store.access.xa.XAResourceManager;
-
 import org.apache.derby.iapi.store.raw.LockingPolicy;
-import org.apache.derby.iapi.store.raw.GlobalTransactionId;
 import org.apache.derby.iapi.store.raw.RawStoreFactory;
-import org.apache.derby.iapi.store.raw.Transaction;
 
 import org.apache.derby.iapi.store.raw.data.DataFactory;
 
@@ -60,7 +53,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import org.apache.derby.iapi.store.raw.xact.RawTransaction;
 import org.apache.derby.iapi.store.raw.xact.TransactionFactory;
 import org.apache.derby.iapi.store.raw.xact.TransactionId;
-import org.apache.derby.impl.store.raw.xact.XactXAResourceManager;
 
 import org.apache.derby.iapi.types.DataValueFactory;
 
@@ -68,9 +60,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 import org.apache.derby.iapi.util.InterruptStatus;
 
-import java.util.Enumeration;
 import java.util.Properties;
-import java.util.Hashtable;
 
 public class XactFactory implements TransactionFactory, ModuleControl, ModuleSupportable
 {
@@ -311,7 +301,7 @@ public void createFinished() throws StandardException
      *
 	 * @exception  StandardException  Standard exception policy.
      **/
-	private RawTransaction startCommonTransaction(
+    private Xact startCommonTransaction(
     RawStoreFactory     rsf, 
     ContextManager      cm,
     boolean             readOnly,
@@ -421,7 +411,7 @@ public RawTransaction startGlobalTransaction(
             throw StandardException.newException(SQLState.STORE_XA_XAER_DUPID);
         }
 
-        RawTransaction xact = 
+        Xact xact =
             startCommonTransaction(
                 rsf, 
                 cm, 
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/XactXAResourceManager.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/XactXAResourceManager.java
index 8e15e1c6..f775c51f 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/XactXAResourceManager.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/XactXAResourceManager.java
@@ -33,7 +33,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import org.apache.derby.iapi.store.access.xa.XAXactId;
 import org.apache.derby.iapi.store.access.AccessFactoryGlobals;
 
-import org.apache.derby.iapi.store.raw.GlobalTransactionId;
 import org.apache.derby.iapi.store.raw.RawStoreFactory;
 import org.apache.derby.iapi.store.raw.Transaction;
 
@@ -253,7 +252,7 @@ public boolean visit(TransactionTableEntry entry) {
                     Xact xact = entry.getXact();
                     if (xact.isPrepared())
                     {
-                        GlobalTransactionId xa_id = xact.getGlobalId();
+                        GlobalXactId xa_id = (GlobalXactId) xact.getGlobalId();
 
                         xid_list.add(
                             new XAXactId(
