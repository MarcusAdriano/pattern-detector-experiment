diff --git a/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/cli/CliClient.java b/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/cli/CliClient.java
index 09daf37b..00c4ca7a 100644
--- a/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/cli/CliClient.java
+++ b/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/cli/CliClient.java
@@ -1482,7 +1482,7 @@ private void describeRing(String name) throws TException
             sessionState.err.println(e.getWhy());
 
             if (sessionState.debug)
-                e.printStackTrace();
+                e.printStackTrace(sessionState.err);
         }
     }
 
@@ -1956,7 +1956,7 @@ private void executeUseKeySpace(Tree statement) throws TException
         catch (TException e) 
         {
             if (sessionState.debug)
-                e.printStackTrace();
+                e.printStackTrace(sessionState.err);
             
             sessionState.err.println("Login failure. Did you specify 'keyspace', 'username' and 'password'?");
         }
diff --git a/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/cli/CliMain.java b/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/cli/CliMain.java
index b12a19af..9296fb2f 100644
--- a/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/cli/CliMain.java
+++ b/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/cli/CliMain.java
@@ -81,8 +81,7 @@ public static void connect(String server, int port)
         }
         catch (Exception e)
         {
-            if (sessionState.debug)
-                e.printStackTrace();
+            e.printStackTrace(sessionState.err);
 
             String error = (e.getCause() == null) ? e.getMessage() : e.getCause().getMessage();
             throw new RuntimeException("Exception connecting to " + server + "/" + port + ". Reason: " + error + ".");
@@ -161,8 +160,7 @@ public static void connect(String server, int port)
         {
             sessionState.err.println("Exception retrieving information about the cassandra node, check you have connected to the thrift port.");
 
-            if (sessionState.debug)
-                e.printStackTrace();
+            e.printStackTrace(sessionState.err);
 
             return;
         }
@@ -228,10 +226,8 @@ public static void processStatementInteractive(String query)
             String message = (e.getCause() == null) ? e.getMessage() : e.getCause().getMessage();
             sessionState.err.println(errorTemplate + message);
 
-            if (sessionState.debug)
-            {
+            if (!(e instanceof RuntimeException))
                 e.printStackTrace(sessionState.err);
-            }
 
             if (sessionState.batch || sessionState.inFileMode())
             {
diff --git a/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/cli/CliOptions.java b/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/cli/CliOptions.java
index 867cd5db..c3cfab6d 100644
--- a/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/cli/CliOptions.java
+++ b/cassandra/branches/cassandra-1.0/src/java/org/apache/cassandra/cli/CliOptions.java
@@ -67,7 +67,7 @@
         // options without argument
         options.addOption("B",  BATCH_OPTION,   "enabled batch mode (suppress output; errors are fatal)");
         options.addOption(null, UNFRAME_OPTION, "use cassandra server's unframed transport");
-        options.addOption(null, DEBUG_OPTION,   "display stack traces");
+        options.addOption(null, DEBUG_OPTION,   "display stack-traces (NOTE: We print strack-traces in the places where it makes sense even without --debug)");
         options.addOption("?",  HELP_OPTION,    "usage help");
         options.addOption("v",  VERBOSE_OPTION, "verbose output when using batch mode");
     }
