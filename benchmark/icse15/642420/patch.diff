diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/ModifyColumnNode.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/ModifyColumnNode.java
index 69ca27b2..fc8a02d4 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/ModifyColumnNode.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/ModifyColumnNode.java
@@ -188,14 +188,16 @@ public void checkExistingConstraints(TableDescriptor td)
 			}	
 			else
 			{
+				if (!dd.checkVersion(
+					DataDictionary.DD_VERSION_DERBY_10_4, null)) 
+				{
 				//if a column is part of unique constraint it can't be
 				//made nullable in soft upgrade mode from a pre-10.4 db.
-				if ((existingConstraint.getConstraintType() == 
+					if ((getNodeType() == 
+						C_NodeTypes.MODIFY_COLUMN_CONSTRAINT_NODE) &&
+						(existingConstraint.getConstraintType() == 
 								DataDictionary.UNIQUE_CONSTRAINT)) 
                 {
-					if (!dd.checkVersion(
-							DataDictionary.DD_VERSION_DERBY_10_4, null))
-                    {
 						throw StandardException.newException(
 								SQLState.LANG_MODIFY_COLUMN_EXISTING_CONSTRAINT,
 								name);
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_4.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_4.java
index 81d28ee6..b752bdf3 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_4.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_4.java
@@ -721,4 +721,31 @@ public void testErrorMessage () throws Exception {
                 break;
         }
     }
+    
+    /**
+     * Tests if alter column works for a column in unique constraint.
+     */
+    public void testAlterColumnOfUniqueConstraint () throws Exception {
+        Statement stmt = createStatement();
+        switch (getPhase()) {
+           case PH_CREATE:
+               stmt.executeUpdate("create table datatype_test (fl1 varchar (2) " +
+                       "not null)");
+               stmt.executeUpdate("alter table datatype_test " +
+                       "add constraint ucon_datatype_test unique (fl1)");
+               stmt.executeUpdate("alter table datatype_test alter column fl1" +
+                       " set data type varchar (3)");
+               break;
+           case PH_SOFT_UPGRADE:
+               stmt.executeUpdate("alter table datatype_test alter column fl1 " +
+                       " set data type varchar (4)");
+               break;
+
+           case PH_HARD_UPGRADE:
+               stmt.executeUpdate("alter table datatype_test alter column fl1 " +
+                       " set data type varchar (5)");
+               break;
+        }
+        stmt.close();
+    }
 }
