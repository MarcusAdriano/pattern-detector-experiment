diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/SearcherLifetimeManager.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/SearcherLifetimeManager.java
index 79c2fcab..78cadf59 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/SearcherLifetimeManager.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/SearcherLifetimeManager.java
@@ -252,7 +252,14 @@ public boolean doPrune(int ageSec, IndexSearcher searcher) {
    *  from the same background thread that opens new
    *  searchers. */
   public synchronized void prune(Pruner pruner) throws IOException {
-    final List<SearcherTracker> trackers = new ArrayList<SearcherTracker>(searchers.values());
+    // Cannot just pass searchers.values() to ArrayList ctor
+    // (not thread-safe since the values can change while
+    // ArrayList is init'ing itself); must instead iterate
+    // ourselves:
+    final List<SearcherTracker> trackers = new ArrayList<SearcherTracker>();
+    for(SearcherTracker tracker : searchers.values()) {
+      trackers.add(tracker);
+    }
     Collections.sort(trackers);
     final long newestSec = trackers.isEmpty() ? 0L : trackers.get(0).recordTimeSec;
     for (SearcherTracker tracker: trackers) {
