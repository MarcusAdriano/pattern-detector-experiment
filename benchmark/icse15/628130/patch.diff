diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangProcedureTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangProcedureTest.java
index 3ad01812..8acde25b 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangProcedureTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangProcedureTest.java
@@ -802,6 +802,12 @@ else if (pass == 3)
             drs1 = prepareCall("CALL procWithRollback(3)");
             drs1.execute();
             rs = drs1.getResultSet();
+            //Following shows that the rollback inside the java procedure will
+            //cuase procedure to return no resultset (A procedure does
+            //not return closed resultsets). In 10.2 codeline though, java
+            //procedure returns a closed resultset if there is a rollback 
+            //inside the java procedure.
+            JDBC.assertNoMoreResults(drs1);
 
             JDBC.assertClosed(rs1);
             JDBC.assertClosed(resultSet);
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/JDBC.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/JDBC.java
index 1822f4b2..625c47bd 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/JDBC.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/JDBC.java
@@ -523,15 +523,17 @@ public static void assertNoWarnings(SQLWarning warning)
     }
     
     /**
-     * Assert that the statement has no more results. Logic taken
-     * from javadoc for java.sql.Statement.getMoreResults.
+     * Assert that the statement has no more results(getMoreResults) and it 
+     * indeed does not return any resultsets(by checking getResultSet). 
+     * Also, ensure that update count is -1.
      * @param s Statement holding no results.
      * @throws SQLException Exception checking results.
      */
     public static void assertNoMoreResults(Statement s) throws SQLException
     {
-        Assert.assertTrue((s.getMoreResults() == false)
-                && (s.getUpdateCount() == -1));
+    	Assert.assertFalse(s.getMoreResults());
+        Assert.assertTrue(s.getUpdateCount() == -1);
+        Assert.assertNull(s.getResultSet());
     }
     
     /**
