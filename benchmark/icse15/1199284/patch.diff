diff --git a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/StorageProxy.java b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/StorageProxy.java
index b3389e68..153744a3 100644
--- a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/StorageProxy.java
+++ b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/StorageProxy.java
@@ -306,7 +306,7 @@ private static void sendMessages(String localDataCenter, Map<String, Multimap<Me
                 // from previous loop iterations
                 message.removeHeader(RowMutation.FORWARD_HEADER);
 
-                if (dataCenter.equals(localDataCenter) || StorageService.instance.useEfficientCrossDCWrites())
+                if (dataCenter.equals(localDataCenter))
                 {
                     // direct writes to local DC or old Cassadra versions
                     for (InetAddress destination : messages.getValue())
diff --git a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/StorageService.java b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/StorageService.java
index 608777b4..4e6e8d9d 100644
--- a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/StorageService.java
+++ b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/StorageService.java
@@ -194,7 +194,6 @@ public Range getLocalPrimaryRange()
     private volatile boolean joined = false;
     private String operationMode;
 
-    private volatile boolean efficientCrossDCWrites;
     private MigrationManager migrationManager = new MigrationManager();
 
     /* Used for tracking drain progress */
@@ -726,9 +725,6 @@ public void onChange(InetAddress endpoint, ApplicationState state, VersionedValu
     {
         switch (state)
         {
-            case RELEASE_VERSION:
-                updateEfficientCrossDCWriteMode();
-                break;
             case STATUS:
                 String apStateValue = value.value;
                 String[] pieces = apStateValue.split(VersionedValue.DELIMITER_STR, -1);
@@ -751,25 +747,6 @@ else if (moveName.equals(VersionedValue.STATUS_MOVING))
         }
     }
 
-    /**
-     * We can remove this in 0.8, since mixing 0.7.0 with 0.8 is not supported (0.7.1 is required)
-     */
-    private void updateEfficientCrossDCWriteMode()
-    {
-        for (Map.Entry<InetAddress, EndpointState> entry : Gossiper.instance.getEndpointStates())
-        {
-            VersionedValue version = entry.getValue().getApplicationState(ApplicationState.RELEASE_VERSION);
-
-            // no version means it's old code that doesn't gossip version, < 0.7.1.
-            if (version == null)
-            {
-                efficientCrossDCWrites = false;
-                return;
-            }
-        }
-        efficientCrossDCWrites = true;
-    }
-
     /**
      * Handle node bootstrap
      *
@@ -2387,11 +2364,6 @@ public void updateSnitch(String epSnitchClassName, Boolean dynamic, Integer dyna
             ((DynamicEndpointSnitch)oldSnitch).unregisterMBean();
     }
 
-    public boolean useEfficientCrossDCWrites()
-    {
-        return efficientCrossDCWrites;
-    }
-
     /**
      * Flushes the two largest memtables by ops and by throughput
      */
