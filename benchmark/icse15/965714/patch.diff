diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java b/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
index 0577bece..1c6f5993 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
@@ -837,15 +837,37 @@ private ColumnFamily getColumnFamily(QueryFilter filter, int gcBefore)
             // we can skip the filter step entirely, and we can help out removeDeleted by re-caching the result
             // if any tombstones have aged out since last time.  (This means that the row cache will treat gcBefore as
             // max(gcBefore, all previous gcBefore), which is fine for correctness.)
+            //
+            // But, if the filter is asking for less columns than we have cached, we fall back to the slow path
+            // since we have to copy out a subset.
             if (filter.filter instanceof SliceQueryFilter)
             {
                 SliceQueryFilter sliceFilter = (SliceQueryFilter) filter.filter;
-                if (sliceFilter.start.length == 0 && sliceFilter.finish.length == 0 && sliceFilter.count > cached.getColumnCount())
+                if (sliceFilter.start.length == 0 && sliceFilter.finish.length == 0)
+                {
+                    if (cached.isSuper() && filter.path.superColumnName != null)
+                    {
+                        // subcolumns from named supercolumn
+                        IColumn sc = cached.getColumn(filter.path.superColumnName);
+                        if (sc == null || sliceFilter.count >= sc.getSubColumns().size())
+                        {
+                            ColumnFamily cf = cached.cloneMeShallow();
+                            if (sc != null)
+                                cf.addColumn(sc);
+                            return removeDeleted(cf, gcBefore);
+                        }
+                    }
+                    else
+                    {
+                        // top-level columns
+                        if (sliceFilter.count >= cached.getColumnCount())
                 {
                     removeDeletedColumnsOnly(cached, gcBefore);
                     return removeDeletedCF(cached, gcBefore);
                 }
             }
+                }
+            }
             
             IColumnIterator ci = filter.getMemtableColumnIterator(cached, null, getComparator());
             ColumnFamily cf = ci.getColumnFamily().cloneMeShallow();
