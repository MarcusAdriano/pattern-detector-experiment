diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/CFMetaData.java b/cassandra/trunk/src/java/org/apache/cassandra/config/CFMetaData.java
index e35348a0..410ab047 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/CFMetaData.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/CFMetaData.java
@@ -599,7 +599,7 @@ public AbstractType getValueValidator(ByteBuffer column)
         AbstractType validator = defaultValidator;
         ColumnDefinition columnDefinition = column_metadata.get(column);
         if (columnDefinition != null)
-            validator = columnDefinition.validator;
+            validator = columnDefinition.getValidator();
         return validator;
     }
     
@@ -738,10 +738,12 @@ else if (subcolumnComparator != DatabaseDescriptor.getComparator(cf_def.subcompa
         // update the ones staying
         for (org.apache.cassandra.db.migration.avro.ColumnDef def : cf_def.column_metadata)
         {
-            if (!column_metadata.containsKey(def.name))
+            ColumnDefinition oldDef = column_metadata.get(def.name);
+            if (oldDef == null)
                 continue;
-            column_metadata.get(def.name).setIndexType(def.index_type == null ? null : org.apache.cassandra.thrift.IndexType.valueOf(def.index_type.name()));
-            column_metadata.get(def.name).setIndexName(def.index_name == null ? null : def.index_name.toString());
+            oldDef.setValidator(DatabaseDescriptor.getComparator(def.validation_class));
+            oldDef.setIndexType(def.index_type == null ? null : org.apache.cassandra.thrift.IndexType.valueOf(def.index_type.name()));
+            oldDef.setIndexName(def.index_name == null ? null : def.index_name.toString());
         }
         // add the new ones coming in.
         for (org.apache.cassandra.db.migration.avro.ColumnDef def : toAdd)
@@ -791,7 +793,7 @@ else if (subcolumnComparator != DatabaseDescriptor.getComparator(cf_def.subcompa
             tcd.setIndex_name(cd.getIndexName());
             tcd.setIndex_type(cd.getIndexType());
             tcd.setName(cd.name);
-            tcd.setValidation_class(cd.validator.getClass().getName());
+            tcd.setValidation_class(cd.getValidator().getClass().getName());
             column_meta.add(tcd);
         }
         def.setColumn_metadata(column_meta);
@@ -836,7 +838,7 @@ else if (subcolumnComparator != DatabaseDescriptor.getComparator(cf_def.subcompa
             tcd.index_name = cd.getIndexName();
             tcd.index_type = cd.getIndexType() == null ? null : org.apache.cassandra.db.migration.avro.IndexType.valueOf(cd.getIndexType().name());
             tcd.name = ByteBufferUtil.clone(cd.name);
-            tcd.validation_class = cd.validator.getClass().getName();
+            tcd.validation_class = cd.getValidator().getClass().getName();
             column_meta.add(tcd);
         }
         def.column_metadata = column_meta; 
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/ColumnDefinition.java b/cassandra/trunk/src/java/org/apache/cassandra/config/ColumnDefinition.java
index 2bc4b370..e3f708e2 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/ColumnDefinition.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/ColumnDefinition.java
@@ -35,7 +35,7 @@
     public final static String D_COLDEF_INDEXTYPE = "KEYS";
     public final static String D_COLDEF_INDEXNAME = null;
     public final ByteBuffer name;
-    public final AbstractType validator;
+    private AbstractType validator;
     private IndexType index_type;
     private String index_name;
 
@@ -182,4 +182,14 @@ public void setIndexType(IndexType index_type)
     {
         this.index_type = index_type;
     }
+
+    public AbstractType getValidator()
+    {
+        return validator;
+    }
+
+    public void setValidator(AbstractType validator)
+    {
+        this.validator = validator;
+    }
 }
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java b/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
index ed8615b8..5a78c961 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
@@ -326,7 +326,7 @@ private ColumnFamilyStore(Table table, String columnFamilyName, IPartitioner par
         final CFMetaData indexedCfMetadata = CFMetaData.newIndexMetadata(metadata, info, columnComparator);
         ColumnFamilyStore indexedCfs = ColumnFamilyStore.createColumnFamilyStore(table,
                                                                                  indexedCfMetadata.cfName,
-                                                                                 new LocalPartitioner(metadata.getColumn_metadata().get(info.name).validator),
+                                                                                 new LocalPartitioner(metadata.getColumn_metadata().get(info.name).getValidator()),
                                                                                  indexedCfMetadata);
 
         // link in indexedColumns.  this means that writes will add new data to the index immediately,
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
index 1949de5e..3c0d634a 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
@@ -29,10 +29,8 @@
 import javax.management.MBeanServer;
 import javax.management.ObjectName;
 
-import com.google.common.base.Charsets;
 import com.google.common.collect.ArrayListMultimap;
 import com.google.common.collect.HashMultimap;
-import com.google.common.collect.Iterables;
 import com.google.common.collect.Multimap;
 import org.apache.commons.lang.StringUtils;
 import org.slf4j.Logger;
diff --git a/cassandra/trunk/test/unit/org/apache/cassandra/db/ColumnFamilyStoreTest.java b/cassandra/trunk/test/unit/org/apache/cassandra/db/ColumnFamilyStoreTest.java
index 49cfb76f..a02e0056 100644
--- a/cassandra/trunk/test/unit/org/apache/cassandra/db/ColumnFamilyStoreTest.java
+++ b/cassandra/trunk/test/unit/org/apache/cassandra/db/ColumnFamilyStoreTest.java
@@ -343,7 +343,7 @@ public void testIndexCreate() throws IOException, ConfigurationException, Interr
 
         ColumnFamilyStore cfs = table.getColumnFamilyStore("Indexed2");
         ColumnDefinition old = cfs.metadata.getColumn_metadata().get(ByteBufferUtil.bytes("birthdate"));
-        ColumnDefinition cd = new ColumnDefinition(old.name, old.validator, IndexType.KEYS, "birthdate_index");
+        ColumnDefinition cd = new ColumnDefinition(old.name, old.getValidator(), IndexType.KEYS, "birthdate_index");
         Future<?> future = cfs.addIndex(cd);
         future.get();
         // we had a bug (CASSANDRA-2244) where index would get created but not flushed -- check for that
