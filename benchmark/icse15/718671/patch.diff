diff --git a/db/derby/code/branches/10.2/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TimeHandlingTest.java b/db/derby/code/branches/10.2/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TimeHandlingTest.java
index 1ad80efd..f20bdffc 100644
--- a/db/derby/code/branches/10.2/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TimeHandlingTest.java
+++ b/db/derby/code/branches/10.2/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TimeHandlingTest.java
@@ -37,6 +37,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 import org.apache.derbyTesting.junit.BaseJDBCTestCase;
 import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
+import org.apache.derbyTesting.junit.JDBC;
 
 
 public class TimeHandlingTest extends BaseJDBCTestCase {
@@ -68,6 +69,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
     public static Test suite()
     {
+    	if (! JDBC.vmAtLeastJDBC3())
+    		return new TestSuite("Do not run test with jdk13. DERBY-1840");
         TestSuite suite = new TestSuite(TimeHandlingTest.class);
         
         return new CleanDatabaseTestSetup(suite) {
diff --git a/db/derby/code/branches/10.2/java/testing/org/apache/derbyTesting/junit/JDBC.java b/db/derby/code/branches/10.2/java/testing/org/apache/derbyTesting/junit/JDBC.java
index 2ff79ae6..a58b263c 100644
--- a/db/derby/code/branches/10.2/java/testing/org/apache/derbyTesting/junit/JDBC.java
+++ b/db/derby/code/branches/10.2/java/testing/org/apache/derbyTesting/junit/JDBC.java
@@ -43,6 +43,12 @@
     private static final boolean HAVE_SAVEPOINT
                            = haveClass("java.sql.Savepoint");
 
+    /** Does the ParameterMetaData class exist? Indicates
+     * At least JDK1.4
+     */
+    private static final boolean HAVE_PARAMETER_METADATA = 
+    	haveClass("java.sql.ParameterMetaData");
+
     /**
      * Does the java.sql.SQLXML class exist, indicates JDBC 4. 
      */
@@ -108,6 +114,11 @@ public static boolean vmSupportsJSR169()
 		       && HAVE_SAVEPOINT;
 	}	
 	
+	public static boolean vmAtLeastJDBC3() {
+		return HAVE_PARAMETER_METADATA;
+	}
+	
+	
 	/**
 	 * Rollback and close a connection for cleanup.
 	 * Test code that is expecting Connection.close to succeed
