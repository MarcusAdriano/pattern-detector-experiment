diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CollatorSQLChar.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CollatorSQLChar.java
index 7bada9ac..6e92b2c7 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CollatorSQLChar.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CollatorSQLChar.java
@@ -75,6 +75,18 @@ private void setCollator(RuleBasedCollator collatorForCharacterDatatypes)
 			new WorkHorseForCollatorDatatypes(collatorForCharacterDatatypes, this);
 	}
 	
+	/**
+	 * Get the RuleBasedCollator for this instance of CollatorSQLChar. It 
+	 * will be used to do the collation.
+	 * 
+	 * @return	The Collator object which should be used for collation 
+	 * operation on this object
+	 */
+	protected RuleBasedCollator getCollatorForCollation() throws StandardException
+	{
+		return holderForCollationSensitiveInfo.getCollatorForCollation();
+	}
+	
 	/** @see CollationElementsInterface#getCollationElementsForString */
 	public int[] getCollationElementsForString() throws StandardException 
 	{
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CollatorSQLClob.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CollatorSQLClob.java
index b3fec2f2..d4877932 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CollatorSQLClob.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CollatorSQLClob.java
@@ -76,6 +76,18 @@ private void setCollator(RuleBasedCollator collatorForCharacterDatatypes)
 			new WorkHorseForCollatorDatatypes(collatorForCharacterDatatypes, this);
 	}
 	
+	/**
+	 * Get the RuleBasedCollator for this instance of CollatorSQLClob. It 
+	 * will be used to do the collation.
+	 * 
+	 * @return	The Collator object which should be used for collation 
+	 * operation on this object
+	 */
+	protected RuleBasedCollator getCollatorForCollation() throws StandardException
+	{
+		return holderForCollationSensitiveInfo.getCollatorForCollation();
+	}
+	
 	/** @see CollationElementsInterface#getCollationElementsForString */
 	public int[] getCollationElementsForString() throws StandardException 
 	{
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CollatorSQLLongvarchar.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CollatorSQLLongvarchar.java
index fc33c371..cf4370e5 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CollatorSQLLongvarchar.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CollatorSQLLongvarchar.java
@@ -77,6 +77,18 @@ protected void setCollator(RuleBasedCollator collatorForCharacterDatatypes)
 			new WorkHorseForCollatorDatatypes(collatorForCharacterDatatypes, this);
 	}
 	
+	/**
+	 * Get the RuleBasedCollator for this instance of CollatorSQLLongvarchar. 
+	 * It will be used to do the collation.
+	 * 
+	 * @return	The Collator object which should be used for collation 
+	 * operation on this object
+	 */
+	protected RuleBasedCollator getCollatorForCollation() throws StandardException
+	{
+		return holderForCollationSensitiveInfo.getCollatorForCollation();
+	}
+	
 	/** @see CollationElementsInterface#getCollationElementsForString */
 	public int[] getCollationElementsForString() throws StandardException 
 	{
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CollatorSQLVarchar.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CollatorSQLVarchar.java
index 699d18d5..faf98561 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CollatorSQLVarchar.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/CollatorSQLVarchar.java
@@ -76,6 +76,18 @@ private void setCollator(RuleBasedCollator collatorForCharacterDatatypes)
 			new WorkHorseForCollatorDatatypes(collatorForCharacterDatatypes, this);
 	}
 	
+	/**
+	 * Get the RuleBasedCollator for this instance of CollatorSQLVarchar. It 
+	 * will be used to do the collation.
+	 * 
+	 * @return	The Collator object which should be used for collation 
+	 * operation on this object
+	 */
+	protected RuleBasedCollator getCollatorForCollation() throws StandardException
+	{
+		return holderForCollationSensitiveInfo.getCollatorForCollation();
+	}
+	
 	/** @see CollationElementsInterface#getCollationElementsForString */
 	public int[] getCollationElementsForString() throws StandardException 
 	{
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLChar.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLChar.java
index 2c494a6e..dba97242 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLChar.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLChar.java
@@ -2492,6 +2492,16 @@ protected int stringCollatorCompare(SQLChar str2)
 		return ckey1.compareTo(ckey2);
 	}
 		
+	/**
+	 * This method gets called for the collation sensitive char classes ie
+	 * CollatorSQLChar, CollatorSQLVarchar, CollatorSQLLongvarchar,
+	 * CollatorSQLClob. These collation sensitive chars need to have the 
+	 * collation key in order to do string comparison. And the collation key
+	 * is obtained using the Collator object that these classes already have.
+	 * 
+	 * @return CollationKey obtained using Collator on the string
+	 * @throws StandardException
+	 */
 	protected CollationKey getCollationKey() throws StandardException
 	{
 		char tmpCharArray[];
@@ -2513,7 +2523,7 @@ protected CollationKey getCollationKey() throws StandardException
 			   rawData[lastNonspaceChar - 1] == '\u0020')
 			lastNonspaceChar--;			// count off the trailing spaces.
 
-		RuleBasedCollator rbc = getLocaleFinder().getCollator();		
+		RuleBasedCollator rbc = getCollatorForCollation();		
 		cKey = rbc.getCollationKey(new String(rawData, 0, lastNonspaceChar));
 
 		return cKey;
@@ -2748,6 +2758,11 @@ private Locale getLocale() throws StandardException
 		return getLocaleFinder().getCurrentLocale();
 	}
 
+	protected RuleBasedCollator getCollatorForCollation() throws StandardException
+	{
+		return getLocaleFinder().getCollator();
+	}
+
 	protected LocaleFinder getLocaleFinder()
 	{
 		// This is not very satisfactory, as it creates a dependency on
