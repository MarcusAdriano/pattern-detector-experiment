diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/Blob.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/Blob.java
index 09a392ae..95bbac33 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/Blob.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/Blob.java
@@ -469,7 +469,7 @@ public int setBytesX(long pos, byte[] bytes, int offset, int len) throws SqlExce
         if (len == 0) {
             return 0;
         }
-        if (len + offset > bytes.length) {
+        if (len > bytes.length - offset) {
             throw new SqlException(agent_.logWriter_,
                     new ClientMessageId(SQLState.BLOB_LENGTH_TOO_LONG),
                     new Integer(len));
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedBlob.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedBlob.java
index ad0c7f5c..d6f00c8f 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedBlob.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedBlob.java
@@ -898,7 +898,7 @@ public int setBytes(long pos,
         if (len == 0) {
             return 0;
         }
-        if (len + offset > bytes.length) {
+        if (len > bytes.length - offset) {
             throw Util.generateCsSQLException(SQLState.BLOB_LENGTH_TOO_LONG,
                     new Long(len));
         }
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobSetBytesBoundaryTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobSetBytesBoundaryTest.java
index a7039c21..29038d7a 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobSetBytesBoundaryTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobSetBytesBoundaryTest.java
@@ -91,6 +91,15 @@ public void testSetBytesByBadLengthAndOffset() throws SQLException {
             assertSQLState("XJ079", sqle);
         }
         
+        // Also check that we fail with the expected error if the sum of
+        // offset and length is greater than Integer.MAX_VALUE.
+        try {
+            blob.setBytes(1, new byte[100], 10, Integer.MAX_VALUE);
+            fail("setBytes() should fail when offset+length > bytes.length");
+        } catch (SQLException sqle) {
+            assertSQLState("XJ079", sqle);
+        }
+
         stmt.close();
     }
     
