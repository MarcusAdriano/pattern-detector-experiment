diff --git a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders.java b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders.java
index 3dba63e2..e9955536 100644
--- a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders.java
+++ b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/index/SegmentCoreReaders.java
@@ -53,8 +53,6 @@
   final FieldsProducer fields;
   final DocValuesProducer normsProducer;
 
-  private final Object ownerCoreCacheKey;
-  
   final StoredFieldsReader fieldsReaderOrig;
   final TermVectorsReader termVectorsReaderOrig;
   final CompoundFileDirectory cfsReader;
@@ -89,11 +87,6 @@ protected TermVectorsReader initialValue() {
   
   SegmentCoreReaders(SegmentReader owner, Directory dir, SegmentInfoPerCommit si, IOContext context) throws IOException {
 
-    // SegmentReader uses us as the coreCacheKey; we cannot
-    // call owner.getCoreCacheKey() because that will return
-    // null!:
-    this.ownerCoreCacheKey = this;
-
     final Codec codec = si.info.getCodec();
     final Directory cfsDir; // confusing name: if (cfs) its the cfsdir, otherwise its the segment's directory.
 
@@ -175,7 +168,9 @@ void decRef() throws IOException {
   private void notifyCoreClosedListeners() {
     synchronized(coreClosedListeners) {
       for (CoreClosedListener listener : coreClosedListeners) {
-        listener.onClose(ownerCoreCacheKey);
+        // SegmentReader uses our instance as its
+        // coreCacheKey:
+        listener.onClose(this);
       }
     }
   }
diff --git a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java
index a9e24f32..fbead6a7 100644
--- a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java
+++ b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/index/SegmentReader.java
@@ -407,8 +407,9 @@ public Directory directory() {
   // same entry in the FieldCache.  See LUCENE-1579.
   @Override
   public Object getCoreCacheKey() {
-    // NOTE: if this every changes, be sure to fix
-    // SegmentCoreReader's ownerCoreCacheKey to match!
+    // NOTE: if this ever changes, be sure to fix
+    // SegmentCoreReader.notifyCoreClosedListeners to match!
+    // Today it passes "this" as its coreCacheKey:
     return core;
   }
 
