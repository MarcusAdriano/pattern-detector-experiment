diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/_Suite.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/_Suite.java
index c8039e4e..e1b46993 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/_Suite.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/_Suite.java
@@ -61,7 +61,6 @@ public static Test suite() {
         suite.addTest(ConnectWrongSubprotocolTest.suite());
         
         suite.addTest(ij3Test.suite());
-        suite.addTest(ij5Test.suite());
         
         // SysinfoAPITest currently fails when run against jars, so is
         // disabled. Only the first jar file on the classpath properly
@@ -70,6 +69,12 @@ public static Test suite() {
         //
         //suite.addTest(SysinfoAPITest.suite());
 
+        // tests that do not run with JSR169
+        if (JDBC.vmSupportsJDBC3())  
+        {
+            suite.addTest(ij5Test.suite());            
+        }
+        
         // Tests that are compiled using 1.4 target need to
         // be added this way, otherwise creating the suite
         // will throw an invalid class version error
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ij5Test.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ij5Test.java
index 95e71f15..2ce91b1c 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ij5Test.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ij5Test.java
@@ -24,6 +24,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import java.util.Properties;
 
 import junit.framework.Test;
+import junit.framework.TestSuite;
 
 import org.apache.derbyTesting.functionTests.util.ScriptTestCase;
 import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
@@ -39,6 +40,14 @@ public ij5Test(String script) {
     public static Test suite() {        
         Properties props = new Properties();
         
+        // With JSR169 environments, we would need to set ij.dataSource and
+        // provide the database name, but this would make an extra connection. 
+        // And as we're trying to test ij.showNoConnectionsAtStart=false, 
+        // we cannot get the same output with non-JSR-169 platforms. So,
+        // return an empty suite (i.e. don't run with JSR 169).
+        if (JDBC.vmSupportsJSR169())
+            return new TestSuite("empty: cannot obtain expected output with JSR169");
+        
         props.setProperty("ij.showNoConnectionsAtStart", "false");
         props.setProperty("ij.showNoCountForSelect", "false");
 
