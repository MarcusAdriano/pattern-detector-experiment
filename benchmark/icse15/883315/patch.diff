diff --git a/lucene/solr/trunk/src/solrj/org/apache/solr/client/solrj/SolrQuery.java b/lucene/solr/trunk/src/solrj/org/apache/solr/client/solrj/SolrQuery.java
index ca9e5ed7..689c3064 100644
--- a/lucene/solr/trunk/src/solrj/org/apache/solr/client/solrj/SolrQuery.java
+++ b/lucene/solr/trunk/src/solrj/org/apache/solr/client/solrj/SolrQuery.java
@@ -23,6 +23,8 @@
 import org.apache.solr.common.params.ModifiableSolrParams;
 import org.apache.solr.common.params.StatsParams;
 
+import java.util.regex.Pattern;
+
 
 /**
  * This is an augmented SolrParams with get/set/add fields for common fields used
@@ -445,11 +447,16 @@ public String getFields() {
     return fields;
   }
 
+  private static Pattern scorePattern = Pattern.compile("(^|[, ])score");
+
   public SolrQuery setIncludeScore(boolean includeScore) {
+    String fields = get(CommonParams.FL,"*");
     if (includeScore) {
-      this.add(CommonParams.FL, "score");
+      if (!scorePattern.matcher(fields).find()) {   
+        this.set(CommonParams.FL, fields+",score");
+      }
     } else {
-      this.remove(CommonParams.FL, "score");
+      this.set(CommonParams.FL, scorePattern.matcher(fields).replaceAll(""));
     }
     return this;
   }
diff --git a/lucene/solr/trunk/src/test/org/apache/solr/client/solrj/SolrQueryTest.java b/lucene/solr/trunk/src/test/org/apache/solr/client/solrj/SolrQueryTest.java
index f5f764aa..3cda2151 100644
--- a/lucene/solr/trunk/src/test/org/apache/solr/client/solrj/SolrQueryTest.java
+++ b/lucene/solr/trunk/src/test/org/apache/solr/client/solrj/SolrQueryTest.java
@@ -130,6 +130,13 @@ public void testSettersGetters() {
       assertEquals( Boolean.TRUE, q.setMissing(Boolean.TRUE.toString()).getBool( FacetParams.FACET_MISSING ) );
       assertEquals( Boolean.FALSE, q.setFacetMissing( Boolean.FALSE ).getBool( FacetParams.FACET_MISSING ) );      
       assertEquals( "true", q.setParam( "xxx", true ).getParams( "xxx" )[0] );
+
+      assertEquals( "x,y", q.setFields("x","y").getFields() );    
+      assertEquals( "x,y,score", q.setIncludeScore(true).getFields() );
+      assertEquals( "x,y,score", q.setIncludeScore(true).getFields() ); // set twice on purpose
+      assertEquals( "x,y", q.setIncludeScore(false).getFields() );
+      assertEquals( "x,y", q.setIncludeScore(false).getFields() ); // remove twice on purpose
+
   }
   
   public void testOrder() {
