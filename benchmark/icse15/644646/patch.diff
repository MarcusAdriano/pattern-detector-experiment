diff --git a/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/store/replication/master/AsynchronousLogShipper.java b/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/store/replication/master/AsynchronousLogShipper.java
index 2eaf6a89..f5abc685 100644
--- a/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/store/replication/master/AsynchronousLogShipper.java
+++ b/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/store/replication/master/AsynchronousLogShipper.java
@@ -66,7 +66,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
      * transmission of the log records retrieved from the log buffer
      * (on the master) to the slave being replicated to.
      */
-    final private ReplicationMessageTransmit transmitter;
+    private ReplicationMessageTransmit transmitter;
     
     /**
      * Time interval (in milliseconds) at which the log shipping takes place.
@@ -213,7 +213,14 @@ public void run() {
                 //Interrupt the log shipping thread.
                 return;
             } catch (IOException ioe) {
-                masterController.handleExceptions(ioe);
+                //The transmitter is recreated if the connection to the
+                //slave can be re-established.
+                transmitter = masterController.handleExceptions(ioe);
+                //The transmitter cannot be recreated hence stop the log
+                //shipper thread.
+                if (transmitter != null) {
+                    continue;
+                }
             } catch (StandardException se) {
                 masterController.handleExceptions(se);
             }
diff --git a/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/store/replication/master/MasterController.java b/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/store/replication/master/MasterController.java
index 8b9c4d8c..f4893de2 100644
--- a/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/store/replication/master/MasterController.java
+++ b/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/store/replication/master/MasterController.java
@@ -503,8 +503,11 @@ private void setupConnection() throws StandardException {
      *
      * @param exception the exception which caused the log shipper to terminate
      *                  in an unexcepted manner.
+     *
+     * @return an instance of the transmitter used to transmit messages to the
+     *         slave.
      */
-    void handleExceptions(Exception exception) {
+    ReplicationMessageTransmit handleExceptions(Exception exception) {
         if (exception instanceof IOException) {
             repLogger.logError(MessageId.REPLICATION_LOGSHIPPER_EXCEPTION,
                                exception);
@@ -540,11 +543,14 @@ void handleExceptions(Exception exception) {
                     continue;
                 } catch (Exception e) {
                     printStackAndStopMaster(e);
+                    return null;
                 }
             }
         } else if (exception instanceof StandardException) {
             printStackAndStopMaster(exception);
+            return null;
         }
+        return transmitter;
     }
     
     /**
