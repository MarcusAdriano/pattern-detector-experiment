diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/gms/Gossiper.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/gms/Gossiper.java
index 0fafe4a2..a61d5be5 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/gms/Gossiper.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/gms/Gossiper.java
@@ -26,6 +26,7 @@
 import java.util.Map.Entry;
 import java.util.concurrent.*;
 
+import org.apache.cassandra.utils.FBUtilities;
 import org.cliffc.high_scale_lib.NonBlockingHashMap;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -149,6 +150,7 @@ public int compare(InetAddress addr1,  InetAddress addr2)
 
     private Gossiper()
     {
+        localEndpoint_ = FBUtilities.getLocalAddress();
         // 3 days
         aVeryLongTime_ = 259200 * 1000;
         // half of QUARATINE_DELAY, to ensure justRemovedEndpoints has enough leeway to prevent re-gossip
@@ -870,14 +872,13 @@ void examineGossiper(List<GossipDigest> gDigestList, List<GossipDigest> deltaGos
      * Start the gossiper with the generation # retrieved from the System
      * table
      */
-    public void start(InetAddress localEndpoint, int generationNbr)
+    public void start(int generationNbr)
     {
-        localEndpoint_ = localEndpoint;
         /* Get the seeds from the config and initialize them. */
         Set<InetAddress> seedHosts = DatabaseDescriptor.getSeeds();
         for (InetAddress seed : seedHosts)
         {
-            if (seed.equals(localEndpoint))
+            if (seed.equals(localEndpoint_))
                 continue;
             seeds_.add(seed);
         }
diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/StorageService.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/StorageService.java
index 6d71988f..fc5ac7c5 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/StorageService.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/StorageService.java
@@ -282,7 +282,7 @@ public void startGossiping()
         if (!initialized)
         {
             logger_.warn("Starting gossip by operator request");
-            Gossiper.instance.start(FBUtilities.getLocalAddress(), (int)(System.currentTimeMillis() / 1000));
+            Gossiper.instance.start((int)(System.currentTimeMillis() / 1000));
             initialized = true;
         }
     }
@@ -343,7 +343,7 @@ public synchronized void initClient() throws IOException, ConfigurationException
         logger_.info("Starting up client gossip");
         setMode("Client", false);
         Gossiper.instance.register(this);
-        Gossiper.instance.start(FBUtilities.getLocalAddress(), (int)(System.currentTimeMillis() / 1000)); // needed for node-ring gathering.
+        Gossiper.instance.start((int)(System.currentTimeMillis() / 1000)); // needed for node-ring gathering.
         MessagingService.instance().listen(FBUtilities.getLocalAddress());
         
         // sleep a while to allow gossip to warm up (the other nodes need to know about this one before they can reply).
@@ -418,7 +418,7 @@ private void joinTokenRing() throws IOException, org.apache.cassandra.config.Con
         // (we won't be part of the storage ring though until we add a nodeId to our state, below.)
         Gossiper.instance.register(this);
         Gossiper.instance.register(migrationManager);
-        Gossiper.instance.start(FBUtilities.getLocalAddress(), SystemTable.incrementAndGetGeneration()); // needed for node-ring gathering.
+        Gossiper.instance.start(SystemTable.incrementAndGetGeneration()); // needed for node-ring gathering.
 
         MessagingService.instance().listen(FBUtilities.getLocalAddress());
         StorageLoadBalancer.instance.startBroadcasting();
diff --git a/cassandra/branches/cassandra-0.7/test/unit/org/apache/cassandra/service/RemoveTest.java b/cassandra/branches/cassandra-0.7/test/unit/org/apache/cassandra/service/RemoveTest.java
index 2eb7967c..93f73807 100644
--- a/cassandra/branches/cassandra-0.7/test/unit/org/apache/cassandra/service/RemoveTest.java
+++ b/cassandra/branches/cassandra-0.7/test/unit/org/apache/cassandra/service/RemoveTest.java
@@ -72,7 +72,7 @@ public void setup() throws IOException, ConfigurationException
         Util.createInitialRing(ss, partitioner, endpointTokens, keyTokens, hosts, 6);
 
         MessagingService.instance().listen(FBUtilities.getLocalAddress());
-        Gossiper.instance.start(FBUtilities.getLocalAddress(), 1);
+        Gossiper.instance.start(1);
         for (int i = 0; i < 6; i++)
         {
             Gossiper.instance.initializeNodeUnsafe(hosts.get(i), 1);
