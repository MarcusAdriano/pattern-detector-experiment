diff --git a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
index 29a9b92a..0ba40a50 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
@@ -1713,8 +1713,6 @@ public Token getBootstrapToken()
         List<DecoratedKey> keys = new ArrayList<DecoratedKey>();
         for (ColumnFamilyStore cfs : ColumnFamilyStore.all())
         {
-            if (cfs.table.name.equals(Table.SYSTEM_TABLE))
-                continue;
             for (DecoratedKey key : cfs.allKeySamples())
             {
                 if (range.contains(key.token))
@@ -1723,19 +1721,9 @@ public Token getBootstrapToken()
         }
         FBUtilities.sortSampledKeys(keys, range);
 
-        Token token;
-        if (keys.size() < 3)
-        {
-            token = partitioner.midpoint(range.left, range.right);
-            logger_.debug("Used midpoint to assign token " + token);
-        }
-        else
-        {
-            token = keys.get(keys.size() / 2).token;
-            logger_.debug("Used key sample of size " + keys.size() + " to assign token " + token);
-        }
-        if (tokenMetadata_.isMember(tokenMetadata_.getEndpoint(token)))
-            throw new RuntimeException("Chose token " + token + " which is already in use by " + tokenMetadata_.getEndpoint(token) + " -- specify one manually with initial_token");
+        Token token = keys.size() < 3
+                    ? partitioner.midpoint(range.left, range.right)
+                    : keys.get(keys.size() / 2).token;
         // Hack to prevent giving nodes tokens with DELIMITER_STR in them (which is fine in a row key/token)
         if (token instanceof StringToken)
         {
