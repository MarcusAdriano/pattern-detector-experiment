diff --git a/lucene/dev/branches/branch_3x/lucene/core/src/test/org/apache/lucene/index/TestFilterIndexReader.java b/lucene/dev/branches/branch_3x/lucene/core/src/test/org/apache/lucene/index/TestFilterIndexReader.java
index 58fb5c6e..6a243037 100644
--- a/lucene/dev/branches/branch_3x/lucene/core/src/test/org/apache/lucene/index/TestFilterIndexReader.java
+++ b/lucene/dev/branches/branch_3x/lucene/core/src/test/org/apache/lucene/index/TestFilterIndexReader.java
@@ -148,6 +148,22 @@ public void testFilterIndexReader() throws Exception {
     directory.close();
   }
 
+  private void checkOverrideMethods(Class<?> clazz) throws Exception {
+    boolean fail = false;
+    for (Method m : clazz.getMethods()) {
+      int mods = m.getModifiers();
+      if (Modifier.isStatic(mods) || Modifier.isFinal(mods) || m.isSynthetic()) {
+        continue;
+      }
+      Class<?> declaringClass = m.getDeclaringClass();
+      if (declaringClass != clazz && declaringClass != Object.class) {
+        System.err.println("method is not overridden by "+clazz.getName()+": " + m.toGenericString());
+        fail = true;
+      }
+    }
+    assertFalse(clazz.getName()+" does not override some methods; see log above", fail);
+  }
+
   public void testOverrideMethods() throws Exception {
     HashSet<String> methodsThatShouldNotBeOverridden = new HashSet<String>();
     methodsThatShouldNotBeOverridden.add("reopen");
@@ -156,10 +172,10 @@ public void testOverrideMethods() throws Exception {
     boolean fail = false;
     for (Method m : FilterIndexReader.class.getMethods()) {
       int mods = m.getModifiers();
-      if (Modifier.isStatic(mods) || Modifier.isFinal(mods)) {
+      if (Modifier.isStatic(mods) || Modifier.isFinal(mods) || m.isSynthetic()) {
         continue;
       }
-      Class< ? > declaringClass = m.getDeclaringClass();
+      Class<?> declaringClass = m.getDeclaringClass();
       String name = m.getName();
       if (declaringClass != FilterIndexReader.class && declaringClass != Object.class && !methodsThatShouldNotBeOverridden.contains(name)) {
         System.err.println("method is not overridden by FilterIndexReader: " + name);
@@ -170,6 +186,13 @@ public void testOverrideMethods() throws Exception {
       }
     }
     assertFalse("FilterIndexReader overrides (or not) some problematic methods; see log above", fail);
+    
+    // some more inner classes:
+    checkOverrideMethods(FilterIndexReader.FilterTermEnum.class);
+    checkOverrideMethods(FilterIndexReader.FilterTermDocs.class);
+    // TODO: FilterTermPositions should extend correctly, this is borken,
+    // but for backwards compatibility we let it be:
+    // checkOverrideMethods(FilterIndexReader.FilterTermPositions.class);
   }
 
 }
