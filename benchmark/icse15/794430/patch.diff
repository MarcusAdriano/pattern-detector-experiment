diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/CassandraServer.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/CassandraServer.java
index 3af824df..4f3db3fe 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/CassandraServer.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/CassandraServer.java
@@ -211,10 +211,18 @@ public int get_column_count(String table, String key, ColumnParent column_parent
     throws InvalidRequestException
     {
         logger.debug("get_column_count");
-        ThriftValidation.validateColumnParent(table, column_parent);
+        // validateColumnParent assumes we require simple columns; g_c_c is the only
+        // one of the columnParent-taking apis that can also work at the SC level.
+        // so we roll a one-off validator here.
+        String cfType = ThriftValidation.validateColumnFamily(table, column_parent.column_family);
+        if (cfType.equals("Standard") && column_parent.super_column != null)
+        {
+            throw new InvalidRequestException("columnfamily alone is required for standard CF " + column_parent.column_family);
+        }
 
         ColumnFamily cfamily;
-        if (DatabaseDescriptor.isNameSortingEnabled(table, column_parent.column_family))
+        if (DatabaseDescriptor.isNameSortingEnabled(table, column_parent.column_family)
+            && column_parent.super_column == null)
         {
             cfamily = readColumnFamily(new SliceFromReadCommand(table, key, column_parent, "", "", true, 0, Integer.MAX_VALUE));
         }
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/ThriftValidation.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/ThriftValidation.java
index 97143e7d..aaa4d109 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/ThriftValidation.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/ThriftValidation.java
@@ -66,6 +66,14 @@ static void validateColumnPath(String tablename, ColumnPath column_path) throws
                 throw new InvalidRequestException("supercolumn parameter is invalid for standard CF " + column_path.column_family);
             }
         }
+        else if (column_path.super_column == null)
+        {
+            throw new InvalidRequestException("column parameter is not optional for super CF " + column_path.column_family);
+        }
+        if (column_path.column == null)
+        {
+            throw new InvalidRequestException("column parameter is not optional");
+        }
     }
 
     static void validateColumnParent(String tablename, ColumnParent column_parent) throws InvalidRequestException
