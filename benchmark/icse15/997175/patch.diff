diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageService.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageService.java
index 4b24803c..6ef85c76 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageService.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageService.java
@@ -1014,12 +1014,24 @@ public void forceTableCleanup() throws IOException
         }
     }
 
+    public void forceTableCleanup(String tableName) throws IOException
+    {
+        Table table = getValidTable(tableName);
+        table.forceCleanup();
+    }
+    
     public void forceTableCompaction() throws IOException
     {
         for (Table table : Table.all())
             table.forceCompaction();
     }
 
+    public void forceTableCompaction(String tableName) throws IOException
+    {
+        Table table = getValidTable(tableName);
+        table.forceCompaction();
+    }
+
     /**
      * Takes the snapshot for a given table.
      *
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageServiceMBean.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageServiceMBean.java
index dfc6f33a..1410c6ff 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageServiceMBean.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageServiceMBean.java
@@ -95,11 +95,21 @@
      */
     public void forceTableCompaction() throws IOException;
 
+    /**
+     * Forces major compaction of a single keyspace
+     */
+    public void forceTableCompaction(String tableName) throws IOException;
+
     /**
      * Trigger a cleanup of keys on all tables.
      */
     public void forceTableCleanup() throws IOException;
 
+    /**
+     * Trigger a cleanup of keys on a single keyspace
+     */
+    public void forceTableCleanup(String tableName) throws IOException;
+
     /**
      * Takes the snapshot for a given table.
      * 
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/tools/NodeCmd.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/tools/NodeCmd.java
index e5dba827..b9d1fc66 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/tools/NodeCmd.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/tools/NodeCmd.java
@@ -433,10 +433,16 @@ else if (cmdName.equals("info"))
         }
         else if (cmdName.equals("cleanup"))
         {
+            if (arguments.length > 1)
+                probe.forceTableCleanup(arguments[1]);
+            else
             probe.forceTableCleanup();
         }
         else if (cmdName.equals("compact"))
         {
+            if (arguments.length > 1)
+                probe.forceTableCompaction(arguments[1]);
+            else
             probe.forceTableCompaction();
         }
         else if (cmdName.equals("cfstats"))
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/tools/NodeProbe.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/tools/NodeProbe.java
index a41ecd27..94068c9d 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/tools/NodeProbe.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/tools/NodeProbe.java
@@ -131,11 +131,21 @@ public void forceTableCleanup() throws IOException
         ssProxy.forceTableCleanup();
     }
     
+    public void forceTableCleanup(String tableName) throws IOException
+    {
+        ssProxy.forceTableCleanup(tableName);
+    }
+
     public void forceTableCompaction() throws IOException
     {
         ssProxy.forceTableCompaction();
     }
 
+    public void forceTableCompaction(String tableName) throws IOException
+    {
+        ssProxy.forceTableCompaction(tableName);
+    }
+
     public void forceTableFlush(String tableName, String... columnFamilies) throws IOException
     {
         ssProxy.forceTableFlush(tableName, columnFamilies);
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
index 435f69a5..f29c3297 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
@@ -1120,12 +1120,24 @@ public void forceTableCleanup() throws IOException
         }
     }
 
+    public void forceTableCleanup(String tableName) throws IOException
+    {
+        Table table = getValidTable(tableName);
+        table.forceCleanup();
+    }
+    
     public void forceTableCompaction() throws IOException
     {
         for (Table table : Table.all())
             table.forceCompaction();
     }
 
+    public void forceTableCompaction(String tableName) throws IOException
+    {
+        Table table = getValidTable(tableName);
+        table.forceCompaction();
+    }
+
     /**
      * Takes the snapshot for a given table.
      *
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageServiceMBean.java b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageServiceMBean.java
index 3b584c7c..f276ca8e 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageServiceMBean.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageServiceMBean.java
@@ -134,11 +134,21 @@
      */
     public void forceTableCompaction() throws IOException;
 
+    /**
+     * Forces major compaction of a single keyspace
+     */
+    public void forceTableCompaction(String tableName) throws IOException;
+
     /**
      * Trigger a cleanup of keys on all tables.
      */
     public void forceTableCleanup() throws IOException;
 
+    /**
+     * Trigger a cleanup of keys on a single keyspace
+     */
+    public void forceTableCleanup(String tableName) throws IOException;
+
     /**
      * Takes the snapshot for a given table.
      * 
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeCmd.java b/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeCmd.java
index b2936126..6ef6178d 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeCmd.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeCmd.java
@@ -421,10 +421,16 @@ else if (cmdName.equals("info"))
         }
         else if (cmdName.equals("cleanup"))
         {
+            if (arguments.length > 1)
+                probe.forceTableCleanup(arguments[1]);
+            else
             probe.forceTableCleanup();
         }
         else if (cmdName.equals("compact"))
         {
+            if (arguments.length > 1)
+                probe.forceTableCompaction(arguments[1]);
+            else
             probe.forceTableCompaction();
         }
         else if (cmdName.equals("cfstats"))
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeProbe.java b/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeProbe.java
index fea80952..b6d20c55 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeProbe.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/tools/NodeProbe.java
@@ -133,11 +133,21 @@ public void forceTableCleanup() throws IOException
         ssProxy.forceTableCleanup();
     }
     
+    public void forceTableCleanup(String tableName) throws IOException
+    {
+        ssProxy.forceTableCleanup(tableName);
+    }
+
     public void forceTableCompaction() throws IOException
     {
         ssProxy.forceTableCompaction();
     }
 
+    public void forceTableCompaction(String tableName) throws IOException
+    {
+        ssProxy.forceTableCompaction(tableName);
+    }
+
     public void forceTableFlush(String tableName, String... columnFamilies) throws IOException
     {
         ssProxy.forceTableFlush(tableName, columnFamilies);
