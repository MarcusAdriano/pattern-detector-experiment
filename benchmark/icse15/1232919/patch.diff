diff --git a/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/response/CSVResponseWriter.java b/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/response/CSVResponseWriter.java
index c6dda92e..5e1bb131 100644
--- a/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/response/CSVResponseWriter.java
+++ b/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/response/CSVResponseWriter.java
@@ -241,6 +241,7 @@ public void writeResponse() throws IOException {
     Collection<String> fields = returnFields;
 
     Object responseObj = rsp.getValues().get("response");
+    boolean returnOnlyStored = false;
     if (needListOfFields) {
       if (responseObj instanceof SolrDocumentList) {
         // get the list of fields from the SolrDocumentList
@@ -257,6 +258,7 @@ public void writeResponse() throws IOException {
       } else {
         fields.remove("score");
       }
+      returnOnlyStored = true;
     }
 
     CSVSharedBufPrinter csvPrinterMV = new CSVSharedBufPrinter(mvWriter, mvStrategy);
@@ -275,8 +277,8 @@ public void writeResponse() throws IOException {
         sf = new SchemaField(field, ft);
       }
 
-      // if we got the list of fields from the index, only list stored fields
-      if (returnFields==null && sf != null && !sf.stored()) {
+      // Return only stored fields, unless an explicit field list is specified
+      if (returnOnlyStored && sf != null && !sf.stored()) {
         continue;
       }
 
diff --git a/lucene/dev/branches/branch_3x/solr/core/src/test/org/apache/solr/response/TestCSVResponseWriter.java b/lucene/dev/branches/branch_3x/solr/core/src/test/org/apache/solr/response/TestCSVResponseWriter.java
index d4a19483..2d5bec85 100644
--- a/lucene/dev/branches/branch_3x/solr/core/src/test/org/apache/solr/response/TestCSVResponseWriter.java
+++ b/lucene/dev/branches/branch_3x/solr/core/src/test/org/apache/solr/response/TestCSVResponseWriter.java
@@ -36,7 +36,8 @@ public static void beforeClass() throws Exception {
 
   public static void createIndex() {
     assertU(adoc("id","1", "foo_i","-1", "foo_s","hi", "foo_l","12345678987654321", "foo_b","false", "foo_f","1.414","foo_d","-1.0E300","foo_dt","2000-01-02T03:04:05Z"));
-    assertU(adoc("id","2", "v_ss","hi",  "v_ss","there", "v2_ss","nice", "v2_ss","output"));
+    assertU(adoc("id","2", "v_ss","hi",  "v_ss","there", "v2_ss","nice", "v2_ss","output", "shouldbeunstored","foo"));
+    assertU(adoc("id","3", "shouldbeunstored","foo"));
     assertU(commit());
   }
 
@@ -97,6 +98,10 @@ public void testCSVOutput() throws Exception {
     assertEquals("1,,hi\n2,\"hi,there\",\n"
     , h.query(req("q","id:[1 TO 2]", "wt","csv", "csv.header","false", "fl","id,v_ss,foo_s")));
 
+    // test SOLR-2970 not returning non-stored fields by default
+    assertEquals("v_ss,foo_b,v2_ss,foo_f,foo_i,foo_d,foo_s,foo_dt,id,foo_l\n"
+        , h.query(req("q","id:3", "wt","csv", "csv.header","true", "fl","*", "rows","0")));
+
 
     // now test SolrDocumentList
     SolrDocument d = new SolrDocument();
@@ -119,6 +124,7 @@ public void testCSVOutput() throws Exception {
     d.addField("v2_ss","nice");
     d.addField("v2_ss","output");
     d.addField("score", "89.83");
+    d.addField("shouldbeunstored","foo");
 
     SolrDocumentList sdl = new SolrDocumentList();
     sdl.add(d1);
