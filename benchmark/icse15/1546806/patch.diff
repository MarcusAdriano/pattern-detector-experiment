diff --git a/mahout/trunk/integration/src/main/java/org/apache/mahout/text/wikipedia/WikipediaXmlSplitter.java b/mahout/trunk/integration/src/main/java/org/apache/mahout/text/wikipedia/WikipediaXmlSplitter.java
index 925337da..740dbec9 100644
--- a/mahout/trunk/integration/src/main/java/org/apache/mahout/text/wikipedia/WikipediaXmlSplitter.java
+++ b/mahout/trunk/integration/src/main/java/org/apache/mahout/text/wikipedia/WikipediaXmlSplitter.java
@@ -183,6 +183,13 @@ public static void main(String[] args) throws IOException {
     content.append(header);
     NumberFormat decimalFormatter = new DecimalFormat("0000");
     File dumpFile = new File(dumpFilePath);
+
+    // If the specified path for the input file is incorrect, return immediately
+    if (!dumpFile.exists()) {
+      log.error("Input file path {} doesn't exist", dumpFilePath);
+      return;
+    }
+
     FileLineIterator it;
     if (dumpFilePath.endsWith(".bz2")) {
       // default compression format from http://download.wikimedia.org
@@ -192,7 +199,7 @@ public static void main(String[] args) throws IOException {
       // assume the user has previously de-compressed the dump file
       it = new FileLineIterator(dumpFile);
     }
-    int filenumber = 0;
+    int fileNumber = 0;
     while (it.hasNext()) {
       String thisLine = it.next();
       if (thisLine.trim().startsWith("<page>")) {
@@ -210,8 +217,8 @@ public static void main(String[] args) throws IOException {
         
         if (content.length() > chunkSize || end) {
           content.append("</mediawiki>");
-          filenumber++;
-          String filename = outputDirPath + "/chunk-" + decimalFormatter.format(filenumber) + ".xml";
+          fileNumber++;
+          String filename = outputDirPath + "/chunk-" + decimalFormatter.format(fileNumber) + ".xml";
           BufferedWriter chunkWriter =
               new BufferedWriter(new OutputStreamWriter(fs.create(new Path(filename)), "UTF-8"));
           try {
@@ -219,7 +226,7 @@ public static void main(String[] args) throws IOException {
           } finally {
             Closeables.close(chunkWriter, false);
           }
-          if (filenumber >= numChunks) {
+          if (fileNumber >= numChunks) {
             break;
           }
           content = new StringBuilder();
