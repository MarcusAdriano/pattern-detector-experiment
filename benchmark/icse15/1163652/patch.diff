diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/CollationController.java b/cassandra/trunk/src/java/org/apache/cassandra/db/CollationController.java
index 525f6b6b..aca41752 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/CollationController.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/CollationController.java
@@ -116,13 +116,6 @@ private ColumnFamily collectTimeOrderedData()
                         container.addColumn(iter.next());
                 }
             }
-        }
-        finally
-        {
-            SSTableReader.releaseReferences(view.sstables);
-            for (IColumnIterator iter : iterators)
-                FileUtils.closeQuietly(iter);
-        }
 
         // we need to distinguish between "there is no data at all for this row" (BF will let us rebuild that efficiently)
         // and "there used to be data, but it's gone now" (we should cache the empty CF so we don't need to rebuild that slower)
@@ -156,6 +149,13 @@ public DecoratedKey getKey()
         // Caller is responsible for final removeDeletedCF.  This is important for cacheRow to work correctly:
         return returnCF;
     }
+        finally
+        {
+            SSTableReader.releaseReferences(view.sstables);
+            for (IColumnIterator iter : iterators)
+                FileUtils.closeQuietly(iter);
+        }
+    }
 
     /**
      * remove columns from @param filter where we already have data in @param returnCF newer than @param sstableTimestamp
@@ -210,13 +210,6 @@ private ColumnFamily collectAllData()
                     sstablesIterated++;
                 }
             }
-        }
-        finally
-        {
-            SSTableReader.releaseReferences(view.sstables);
-            for (IColumnIterator iter : iterators)
-                FileUtils.closeQuietly(iter);
-        }
 
         // we need to distinguish between "there is no data at all for this row" (BF will let us rebuild that efficiently)
         // and "there used to be data, but it's gone now" (we should cache the empty CF so we don't need to rebuild that slower)
@@ -228,6 +221,13 @@ private ColumnFamily collectAllData()
         // Caller is responsible for final removeDeletedCF.  This is important for cacheRow to work correctly:
         return returnCF;
     }
+        finally
+        {
+            SSTableReader.releaseReferences(view.sstables);
+            for (IColumnIterator iter : iterators)
+                FileUtils.closeQuietly(iter);
+        }
+    }
 
     public int getSstablesIterated()
     {
