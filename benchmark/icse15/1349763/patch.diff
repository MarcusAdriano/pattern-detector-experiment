diff --git a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer.java b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer.java
index 33c83208..212e8e78 100644
--- a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer.java
+++ b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/java/org/apache/lucene/analysis/fa/PersianAnalyzer.java
@@ -139,7 +139,7 @@ protected TokenStreamComponents createComponents(String fieldName,
    * Wraps the Reader with {@link PersianCharFilter}
    */
   @Override
-  protected Reader initReader(Reader reader) {
+  protected Reader initReader(String fieldName, Reader reader) {
     return matchVersion.onOrAfter(Version.LUCENE_31) ? 
        new PersianCharFilter(CharReader.get(reader)) :
        reader;
diff --git a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java
index f7ce874e..aea71fa5 100644
--- a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java
+++ b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest.java
@@ -45,7 +45,7 @@ protected TokenStreamComponents createComponents(String fieldName, Reader reader
       }
 
       @Override
-      protected Reader initReader(Reader reader) {
+      protected Reader initReader(String fieldName, Reader reader) {
         return new HTMLStripCharFilter(CharReader.get(reader));
       }
     };
diff --git a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java
index 8db15cf3..4319e69a 100644
--- a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java
+++ b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter.java
@@ -192,7 +192,7 @@ protected TokenStreamComponents createComponents(String fieldName, Reader reader
       }
 
       @Override
-      protected Reader initReader(Reader reader) {
+      protected Reader initReader(String fieldName, Reader reader) {
         return new MappingCharFilter(normMap, CharReader.get(reader));
       }
     };
@@ -218,7 +218,7 @@ protected TokenStreamComponents createComponents(String fieldName, Reader reader
       }
 
       @Override
-      protected Reader initReader(Reader reader) {
+      protected Reader initReader(String fieldName, Reader reader) {
         return new MappingCharFilter(map, CharReader.get(reader));
       }
     };
@@ -240,7 +240,7 @@ protected TokenStreamComponents createComponents(String fieldName, Reader reader
         }
 
         @Override
-        protected Reader initReader(Reader reader) {
+        protected Reader initReader(String fieldName, Reader reader) {
           return new MappingCharFilter(map, CharReader.get(reader));
         }
       };
diff --git a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/cjk/TestCJKAnalyzer.java b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/cjk/TestCJKAnalyzer.java
index 1b2a8af4..bdd31c17 100644
--- a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/cjk/TestCJKAnalyzer.java
+++ b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/cjk/TestCJKAnalyzer.java
@@ -217,7 +217,7 @@ protected TokenStreamComponents createComponents(String fieldName, Reader reader
       }
 
       @Override
-      protected Reader initReader(Reader reader) {
+      protected Reader initReader(String fieldName, Reader reader) {
         return new MappingCharFilter(norm, CharReader.get(reader));
       }
     };
diff --git a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter.java b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter.java
index 52f79571..0b522b3a 100644
--- a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter.java
+++ b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter.java
@@ -326,7 +326,7 @@ protected TokenStreamComponents createComponents(String fieldName, Reader reader
       }
 
       @Override
-      protected Reader initReader(Reader reader) {
+      protected Reader initReader(String fieldName, Reader reader) {
         return new MappingCharFilter(normMap, CharReader.get(reader));
       }
     };
diff --git a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestBugInSomething.java b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestBugInSomething.java
index ad9234d0..179ff95d 100644
--- a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestBugInSomething.java
+++ b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestBugInSomething.java
@@ -56,7 +56,7 @@ protected TokenStreamComponents createComponents(String fieldName, Reader reader
       }
 
       @Override
-      protected Reader initReader(Reader reader) {
+      protected Reader initReader(String fieldName, Reader reader) {
         reader = new MockCharFilter(reader, 0);
         reader = new MappingCharFilter(map, reader);
         return reader;
diff --git a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.java b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.java
index e81b7ab9..f96e99f6 100644
--- a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.java
+++ b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.java
@@ -609,7 +609,7 @@ protected TokenStreamComponents createComponents(String fieldName, Reader reader
     }
 
     @Override
-    protected Reader initReader(Reader reader) {
+    protected Reader initReader(String fieldName, Reader reader) {
       Random random = new Random(seed);
       CharFilterSpec charfilterspec = newCharFilterChain(random, reader);
       return charfilterspec.reader;
diff --git a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPerFieldAnalzyerWrapper.java b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPerFieldAnalzyerWrapper.java
index eab86819..6d25e355 100644
--- a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPerFieldAnalzyerWrapper.java
+++ b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestPerFieldAnalzyerWrapper.java
@@ -1,12 +1,15 @@
 package org.apache.lucene.analysis.miscellaneous;
 
+import java.io.Reader;
 import java.io.StringReader;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.Map;
 
 import org.apache.lucene.analysis.*;
 import org.apache.lucene.analysis.core.SimpleAnalyzer;
 import org.apache.lucene.analysis.core.WhitespaceAnalyzer;
+import org.apache.lucene.analysis.core.WhitespaceTokenizer;
 import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
 
 /*
@@ -56,4 +59,32 @@ public void testPerField() throws Exception {
                  "qwerty",
                  termAtt.toString());
   }
+  
+  public void testCharFilters() throws Exception {
+    Analyzer a = new Analyzer() {
+      @Override
+      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {
+        return new TokenStreamComponents(new MockTokenizer(reader));
+      }
+
+      @Override
+      protected Reader initReader(String fieldName, Reader reader) {
+        return new MockCharFilter(CharReader.get(reader), 7);
+      }
+    };
+    assertAnalyzesTo(a, "ab",
+        new String[] { "aab" },
+        new int[] { 0 },
+        new int[] { 2 }
+    );
+    
+    // now wrap in PFAW
+    PerFieldAnalyzerWrapper p = new PerFieldAnalyzerWrapper(a, Collections.<String,Analyzer>emptyMap());
+    
+    assertAnalyzesTo(p, "ab",
+        new String[] { "aab" },
+        new int[] { 0 },
+        new int[] { 2 }
+    );
+  }
 }
diff --git a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternReplaceCharFilter.java b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternReplaceCharFilter.java
index e63428f8..7501c5e6 100644
--- a/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternReplaceCharFilter.java
+++ b/lucene/dev/branches/branch_4x/lucene/analysis/common/src/test/org/apache/lucene/analysis/pattern/TestPatternReplaceCharFilter.java
@@ -314,7 +314,7 @@ protected TokenStreamComponents createComponents(String fieldName, Reader reader
         }
 
         @Override
-        protected Reader initReader(Reader reader) {
+        protected Reader initReader(String fieldName, Reader reader) {
           return new PatternReplaceCharFilter(p, replacement, CharReader.get(reader));
         }
       };
diff --git a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/analysis/Analyzer.java b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/analysis/Analyzer.java
index 33e5beb5..9c634704 100644
--- a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/analysis/Analyzer.java
+++ b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/analysis/Analyzer.java
@@ -78,7 +78,7 @@ protected abstract TokenStreamComponents createComponents(String fieldName,
   public final TokenStream tokenStream(final String fieldName,
                                        final Reader reader) throws IOException {
     TokenStreamComponents components = reuseStrategy.getReusableComponents(fieldName);
-    final Reader r = initReader(reader);
+    final Reader r = initReader(fieldName, reader);
     if (components == null) {
       components = createComponents(fieldName, r);
       reuseStrategy.setReusableComponents(fieldName, components);
@@ -91,7 +91,7 @@ public final TokenStream tokenStream(final String fieldName,
   /**
    * Override this if you want to add a CharFilter chain.
    */
-  protected Reader initReader(Reader reader) {
+  protected Reader initReader(String fieldName, Reader reader) {
     return reader;
   }
 
diff --git a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/analysis/AnalyzerWrapper.java b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/analysis/AnalyzerWrapper.java
index d9b766ac..a7256e95 100644
--- a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/analysis/AnalyzerWrapper.java
+++ b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/analysis/AnalyzerWrapper.java
@@ -86,4 +86,9 @@ public final int getPositionIncrementGap(String fieldName) {
   public final int getOffsetGap(IndexableField field) {
     return getWrappedAnalyzer(field.name()).getOffsetGap(field);
   }
+
+  @Override
+  public final Reader initReader(String fieldName, Reader reader) {
+    return getWrappedAnalyzer(fieldName).initReader(fieldName, reader);
+  }
 }
diff --git a/lucene/dev/branches/branch_4x/lucene/core/src/test/org/apache/lucene/analysis/TestMockCharFilter.java b/lucene/dev/branches/branch_4x/lucene/core/src/test/org/apache/lucene/analysis/TestMockCharFilter.java
index 03a6ad5a..a59ec66a 100644
--- a/lucene/dev/branches/branch_4x/lucene/core/src/test/org/apache/lucene/analysis/TestMockCharFilter.java
+++ b/lucene/dev/branches/branch_4x/lucene/core/src/test/org/apache/lucene/analysis/TestMockCharFilter.java
@@ -34,7 +34,7 @@ protected TokenStreamComponents createComponents(String fieldName, Reader reader
       }
 
       @Override
-      protected Reader initReader(Reader reader) {
+      protected Reader initReader(String fieldName, Reader reader) {
         return new MockCharFilter(CharReader.get(reader), 7);
       }
     };
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/analysis/SolrAnalyzer.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/analysis/SolrAnalyzer.java
index 1421a32e..28c2bee2 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/analysis/SolrAnalyzer.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/analysis/SolrAnalyzer.java
@@ -44,7 +44,7 @@ public Reader charStream(Reader reader) {
   }
 
   @Override
-  protected Reader initReader(Reader reader) {
+  protected Reader initReader(String fieldName, Reader reader) {
     return charStream(reader);
   }
 }
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/analysis/TokenizerChain.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/analysis/TokenizerChain.java
index 140f830b..61884690 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/analysis/TokenizerChain.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/analysis/TokenizerChain.java
@@ -57,18 +57,19 @@ public SolrTokenStreamComponents(final Tokenizer source, final TokenStream resul
       super(source, result);
     }
 
+    // TODO: what is going on here?
     @Override
     protected void reset(Reader reader) throws IOException {
       // the tokenizers are currently reset by the indexing process, so only
       // the tokenizer needs to be reset.
-      Reader r = initReader(reader);
+      Reader r = initReader(null, reader);
       super.reset(r);
     }
   }
   
   
   @Override
-  public Reader initReader(Reader reader) {
+  public Reader initReader(String fieldName, Reader reader) {
     if (charFilters != null && charFilters.length > 0) {
       CharStream cs = CharReader.get( reader );
       for (CharFilterFactory charFilter : charFilters) {
@@ -81,7 +82,7 @@ public Reader initReader(Reader reader) {
 
   @Override
   protected TokenStreamComponents createComponents(String fieldName, Reader aReader) {
-    Tokenizer tk = tokenizer.create( initReader(aReader) );
+    Tokenizer tk = tokenizer.create( initReader(fieldName, aReader) );
     TokenStream ts = tk;
     for (TokenFilterFactory filter : filters) {
       ts = filter.create(ts);
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.java
index dbd4b7e0..ab5f9603 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.java
@@ -112,7 +112,7 @@ public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throw
       }
     }
 
-    TokenStream tokenStream = tfac.create(tokenizerChain.initReader(new StringReader(value)));
+    TokenStream tokenStream = tfac.create(tokenizerChain.initReader(null, new StringReader(value)));
     List<AttributeSource> tokens = analyzeTokenStream(tokenStream);
 
     namedList.add(tokenStream.getClass().getName(), convertTokensToNamedLists(tokens, context));
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest.java
index 7de264a9..68d2acec 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/analysis/LegacyHTMLStripCharFilterTest.java
@@ -267,7 +267,7 @@ protected TokenStreamComponents createComponents(String fieldName, Reader reader
       }
 
       @Override
-      protected Reader initReader(Reader reader) {
+      protected Reader initReader(String fieldName, Reader reader) {
         return new LegacyHTMLStripCharFilter(CharReader.get(new BufferedReader(reader)));
       }
     };
