diff --git a/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RawSubsystemResource.java b/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RawSubsystemResource.java
index 51589b49..8743d232 100644
--- a/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RawSubsystemResource.java
+++ b/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RawSubsystemResource.java
@@ -56,7 +56,7 @@
 import org.osgi.service.subsystem.SubsystemConstants;
 
 public class RawSubsystemResource implements Resource {
-	private static final Pattern PATTERN = Pattern.compile("([^@]+)(?:@(.+))?.esa");
+	private static final Pattern PATTERN = Pattern.compile("([^@/\\\\]+)(?:@(.+))?.esa");
 	
 	private static SubsystemManifest computeExistingSubsystemManifest(IDirectory directory) throws IOException {
 		Manifest manifest = ManifestProcessor.obtainManifestFromAppDir(directory, "OSGI-INF/SUBSYSTEM.MF");
@@ -101,24 +101,25 @@ private static String convertFileNameToLocation(String fileName) {
 	private final SubsystemManifest subsystemManifest;
 	
 	public RawSubsystemResource(String location, InputStream content) throws URISyntaxException, IOException, ResolutionException, ModellerException {
+		this(location, content == null ? null : FileSystem.getFSRoot(content));
+	}
+	
+	public RawSubsystemResource(String location, IDirectory content) throws URISyntaxException, IOException, ResolutionException, ModellerException {
 		this.location = new Location(location);
-		IDirectory idir;
 		if (content == null)
-			idir = this.location.open();
-		else
-			idir = FileSystem.getFSRoot(content);
+			content = this.location.open();
 		try {
-			resources = computeResources(idir);
+			resources = computeResources(content);
 			localRepository = computeLocalRepository();
-			SubsystemManifest manifest = computeSubsystemManifest(idir);
+			SubsystemManifest manifest = computeSubsystemManifest(content);
 			manifest = computeSubsystemManifestBeforeRequirements(manifest);
 			requirements = computeRequirements(manifest);
 			subsystemManifest = computeSubsystemManifestAfterRequirements(manifest);
 			capabilities = computeCapabilities();
-			deploymentManifest = computeDeploymentManifest(idir);
+			deploymentManifest = computeDeploymentManifest(content);
 		}
 		finally {
-			IOUtils.close(idir.toCloseable());
+			IOUtils.close(content.toCloseable());
 		}
 	}
 	
@@ -323,10 +324,16 @@ private RequireCapabilityHeader computeRequireCapabilityHeader() {
 		ArrayList<Resource> result = new ArrayList<Resource>(files.size());
 		for (IFile file : directory.listFiles()) {
 			String name = file.getName();
+			if (file.isFile()) {
 			if (name.endsWith(".jar"))
 				result.add(new BundleResource(file.toURL()));
 			else if (name.endsWith(".esa"))
 				result.add(new RawSubsystemResource(convertFileToLocation(file), file.open()));
+		}
+			else {
+				if (name.endsWith(".esa"))
+					result.add(new RawSubsystemResource(convertFileToLocation(file), file.convert()));
+			}
 		}
 		result.trimToSize();
 		return result;
diff --git a/aries/trunk/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/InstallTest.java b/aries/trunk/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/InstallTest.java
index aca27524..f297679b 100644
--- a/aries/trunk/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/InstallTest.java
+++ b/aries/trunk/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/InstallTest.java
@@ -23,7 +23,11 @@
 import static org.junit.Assert.fail;
 
 import java.io.File;
+import java.io.FileOutputStream;
 
+import org.apache.aries.subsystem.itests.util.Utils;
+import org.apache.aries.unittest.fixture.ArchiveFixture;
+import org.apache.aries.unittest.fixture.ArchiveFixture.ZipFixture;
 import org.apache.aries.util.filesystem.FileSystem;
 import org.apache.aries.util.filesystem.IDirectory;
 import org.apache.aries.util.io.IOUtils;
@@ -43,7 +47,26 @@ public static void createApplications() throws Exception {
 		if (createdApplications) {
 			return;
 		}
-		createApplication("emptySubsystem", new String[0]);
+		
+		ZipFixture feature = ArchiveFixture
+				.newZip()
+				.binary("OSGI-INF/SUBSYSTEM.MF",
+						SubsystemTest.class.getClassLoader().getResourceAsStream(
+								"compositeDir" + "/OSGI-INF/SUBSYSTEM.MF"))
+				.binary("applicationDir.esa/OSGI-INF/SUBSYSTEM.MF",
+						SubsystemTest.class.getClassLoader().getResourceAsStream(
+								"compositeDir" + "/applicationDir/OSGI-INF/SUBSYSTEM.MF"))
+				.binary("applicationDir.esa/featureDir.esa/OSGI-INF/SUBSYSTEM.MF",
+						SubsystemTest.class.getClassLoader().getResourceAsStream(
+								"compositeDir" + "/applicationDir/featureDir/OSGI-INF/SUBSYSTEM.MF"));
+		feature.end();
+		FileOutputStream fos = new FileOutputStream("compositeDir" + ".esa");
+		try {
+			feature.writeOut(fos);
+		} finally {
+			Utils.closeQuietly(fos);
+		}
+		
 		createApplication("feature3", new String[]{"tb3.jar"});
 		createApplication("feature2", new String[]{"tb3.jar", "tb2.jar"});
 		createdApplications = true;
@@ -53,9 +76,9 @@ public void setUp() throws Exception {
 		super.setUp();
 		File userDir = new File(System.getProperty("user.dir"));
     	IDirectory idir = FileSystem.getFSRoot(userDir);
-    	File emptySubsystem = new File(userDir, "emptySubsystem");
-    	emptySubsystem.mkdir();
-    	IOUtils.unpackZip(idir.getFile("emptySubsystem.esa"), emptySubsystem);
+    	File compositeDir = new File(userDir, "compositeDir");
+    	compositeDir.mkdir();
+    	IOUtils.unpackZip(idir.getFile("compositeDir.esa"), compositeDir);
 	}
 
 	@Test
@@ -76,11 +99,20 @@ public void testReturnExistingSubsystemWithSameLocation() throws Exception {
      */
     @Test
     public void testLocationAsDirectoryUrl() throws Exception {
-    	File file = new File("emptySubsystem");
+    	File file = new File("compositeDir");
     	try {
     		Subsystem subsystem = installSubsystem(getRootSubsystem(), file.toURI().toString(), null);
     		try {
-    			assertEmptySubsystem(subsystem);
+    			assertSymbolicName("org.apache.aries.subsystem.itests.composite.dir", subsystem);
+    			assertChildren(1, subsystem);
+    			Subsystem child = subsystem.getChildren().iterator().next();
+    			assertSymbolicName(
+    					"org.apache.aries.subsystem.itests.application.dir",
+    					child);
+    			assertChildren(1, child);
+    			assertSymbolicName(
+    					"org.apache.aries.subsystem.itests.feature.dir",
+    					child.getChildren().iterator().next());
     		}
     		finally {
     			uninstallSubsystemSilently(subsystem);
