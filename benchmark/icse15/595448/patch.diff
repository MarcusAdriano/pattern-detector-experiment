diff --git a/lucene/java/trunk/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/java/trunk/src/java/org/apache/lucene/index/IndexWriter.java
index cf0e2d78..f6c440d1 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/index/IndexWriter.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/index/IndexWriter.java
@@ -1220,11 +1220,6 @@ private void closeInternal(boolean waitForMerges) throws CorruptIndexException,
       if (infoStream != null)
         message("at close: " + segString());
 
-      if (writeLock != null) {
-        writeLock.release();                          // release write lock
-        writeLock = null;
-      }
-      closed = true;
       docWriter = null;
 
       synchronized(this) {
@@ -1233,6 +1228,13 @@ private void closeInternal(boolean waitForMerges) throws CorruptIndexException,
       
       if (closeDir)
         directory.close();
+
+      if (writeLock != null) {
+        writeLock.release();                          // release write lock
+        writeLock = null;
+      }
+      closed = true;
+
     } finally {
       synchronized(this) {
         if (!closed)
diff --git a/lucene/java/trunk/src/java/org/apache/lucene/store/Lock.java b/lucene/java/trunk/src/java/org/apache/lucene/store/Lock.java
index 79087c31..bd62d6e4 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/store/Lock.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/store/Lock.java
@@ -99,7 +99,7 @@ public boolean obtain(long lockWaitTimeout) throws LockObtainFailedException, IO
   }
 
   /** Releases exclusive access. */
-  public abstract void release();
+  public abstract void release() throws IOException;
 
   /** Returns true if the resource is currently locked.  Note that one must
    * still call {@link #obtain()} before using the resource. */
diff --git a/lucene/java/trunk/src/java/org/apache/lucene/store/LockReleaseFailedException.java b/lucene/java/trunk/src/java/org/apache/lucene/store/LockReleaseFailedException.java
index e69de29b..4f15b480 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/store/LockReleaseFailedException.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/store/LockReleaseFailedException.java
@@ -0,0 +1,31 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.lucene.store;
+
+import java.io.IOException;
+
+/**
+ * This exception is thrown when the <code>write.lock</code>
+ * could not be released.
+ * @see Lock#release().
+ */
+public class LockReleaseFailedException extends IOException {
+  public LockReleaseFailedException(String message) {
+    super(message);
+  }
+}
diff --git a/lucene/java/trunk/src/java/org/apache/lucene/store/NativeFSLockFactory.java b/lucene/java/trunk/src/java/org/apache/lucene/store/NativeFSLockFactory.java
index ac19cdd0..41442794 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/store/NativeFSLockFactory.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/store/NativeFSLockFactory.java
@@ -288,8 +288,7 @@ public synchronized boolean obtain() throws IOException {
     return isLocked();
   }
 
-  public synchronized void release() {
-    try {
+  public synchronized void release() throws IOException {
       if (isLocked()) {
         try {
           lock.release();
@@ -309,12 +308,8 @@ public synchronized void release() {
             }
           }
         }
-        path.delete();
-      }
-    } catch (IOException e) {
-      // Not sure how to better message/handle this without
-      // changing API?
-      throw new RuntimeException(e);
+      if (!path.delete())
+        throw new LockReleaseFailedException("failed to delete " + path);
     }
   }
 
diff --git a/lucene/java/trunk/src/java/org/apache/lucene/store/SimpleFSLockFactory.java b/lucene/java/trunk/src/java/org/apache/lucene/store/SimpleFSLockFactory.java
index 8c8fc775..68ef6a99 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/store/SimpleFSLockFactory.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/store/SimpleFSLockFactory.java
@@ -144,8 +144,9 @@ public boolean obtain() throws IOException {
     return lockFile.createNewFile();
   }
 
-  public void release() {
-    lockFile.delete();
+  public void release() throws LockReleaseFailedException {
+    if (!lockFile.delete())
+      throw new LockReleaseFailedException("failed to delete " + lockFile);
   }
 
   public boolean isLocked() {
diff --git a/lucene/java/trunk/src/java/org/apache/lucene/store/VerifyingLockFactory.java b/lucene/java/trunk/src/java/org/apache/lucene/store/VerifyingLockFactory.java
index ef674c2b..6f9f45ee 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/store/VerifyingLockFactory.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/store/VerifyingLockFactory.java
@@ -85,7 +85,7 @@ public synchronized boolean isLocked() {
       return lock.isLocked();
     }
 
-    public synchronized void release() {
+    public synchronized void release() throws IOException {
       if (isLocked()) {
         verify((byte) 0);
         lock.release();
diff --git a/lucene/java/trunk/src/test/org/apache/lucene/store/TestLockFactory.java b/lucene/java/trunk/src/test/org/apache/lucene/store/TestLockFactory.java
index 66b0136b..6d125bea 100644
--- a/lucene/java/trunk/src/test/org/apache/lucene/store/TestLockFactory.java
+++ b/lucene/java/trunk/src/test/org/apache/lucene/store/TestLockFactory.java
@@ -188,7 +188,12 @@ public void testFSDirectoryTwoCreates() throws IOException {
 
         writer.close();
         if (writer2 != null) {
+          try {
             writer2.close();
+            fail("writer2.close() should have hit LockReleaseFailedException");
+          } catch (LockReleaseFailedException e) {
+            // expected
+          }
         }
 
         // Cleanup
