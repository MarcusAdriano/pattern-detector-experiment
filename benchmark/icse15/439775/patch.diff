diff --git a/db/derby/code/trunk/java/client/org/apache/derby/jdbc/ClientBaseDataSource.java b/db/derby/code/trunk/java/client/org/apache/derby/jdbc/ClientBaseDataSource.java
index ba67eea9..55d0a2e5 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/jdbc/ClientBaseDataSource.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/jdbc/ClientBaseDataSource.java
@@ -277,10 +277,7 @@ public static short getSecurityMechanism(Properties properties) {
      * possibilities. USRIDPWD, EUSRIDPWD and USRSSBPWD require a password, USRIDONL
      * is the only security mechanism which does not require password.
      * 1. if password is not available, then security mechanism possible is USRIDONL
-     * 2. if password is available, if client supports EUSRIDPWD, then EUSRIDPWD is 
-     * returned
-     * 3. if password is available, if client does not support EUSRIDPWD, then
-     * USRIDPWD is returned.
+     * 2. if password is available,then USRIDPWD is returned.
      *
      * @param password password argument 
      * @return upgraded security mechanism if possible
@@ -291,14 +288,16 @@ public static short getUpgradedSecurityMechanism(String password) {
         if ( password == null )
             return propertyDefault_securityMechanism;
 
-        // if password is available, then a security mechanism is picked in
-        // following order if support is available.
-        // 1. EUSRIDPWD
-        // 2. USRIDPWD
         // when we have support for more security mechanisms on server 
         // and client, we should update this upgrade logic to pick 
         // secure security mechanisms before trying out the USRIDPWD
         
+        /*
+        // -----------------------
+        // PLEASE NOTE: 
+        // When DERBY-1517, DERBY-1755 is fixed, there might be a way to use EUSRIDPWD 
+        // when both client and server vm's have support for it. Hence the below
+        // if statement is commented out.
         if (SUPPORTS_EUSRIDPWD)
             return (short)NetConfiguration.SECMEC_EUSRIDPWD;
         else 
@@ -312,6 +311,8 @@ public static short getUpgradedSecurityMechanism(String password) {
             // exception, as described in DERBY-926).
             // 
             // return (short)NetConfiguration.SECMEC_USRSSBPWD;
+         // ----------------------
+         */
             return (short)NetConfiguration.SECMEC_USRIDPWD;
 
     }
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testSecMec.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testSecMec.java
index 51ac5510..75f9213f 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testSecMec.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testSecMec.java
@@ -506,8 +506,8 @@ public void getConnectionUsingDriverManager(String dbUrl, String msg)
      * then client will do an automatic switching (upgrade) of
      * security mechanism to use. The logic is as follows :
      * if password is available, and if the JVM in which the client is running 
-     * supports EUSRIDPWD mechanism, in that case the security mechanism is 
-     * upgraded to EUSRIDPWD.
+     * supports EUSRIDPWD mechanism, in that case also, USRIDPWD security mechanism is 
+     * used. 
      * if password is available, and if the JVM in which the client is running 
      * does not support EUSRIDPWD mechanism, in that case the client will then
      * default to USRIDPWD.
@@ -550,7 +550,7 @@ public void getConnectionUsingDriverManager(String dbUrl, String msg)
 	 b) Connection request specifies a password or not
 	 c) Connection request specifies securityMechanism or not. the valid
 	 values are 4(USRIDONL), 3(USRIDPWD), 9(EUSRIDPWD) and 8(USRSSBPWD).
-	 d) support eusridpwd means whether this jvm supports encrypted userid/
+	 d) support eusridpwd means whether this client jvm supports encrypted userid/
 	 password security mechanism or not.  A value of Y means it supports
 	 and N means no.
 	 The next three columns specify what the client sends to the server
@@ -572,9 +572,9 @@ public void getConnectionUsingDriverManager(String dbUrl, String msg)
 	 =================================================================
      |SecMec not specified on connection request                    
 	 =================================================================
-	 |Y    |Y     |-       |Y         |Y        Y       9            |
+	 |Y    |Y     |-       |Y         |Y        Y       3            |
 	 |----------------------------------------------------------------
-	 |     |Y     |-       |Y         |Y        Y       9            |
+	 |     |Y     |-       |Y         |Y        Y       3            |
 	 -----------------------------------------------------------------
 	 |Y    |      |-       |Y         |Y        N       4            |
 	 -----------------------------------------------------------------
