diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java
index 4a32918f..a05a62a9 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java
@@ -298,7 +298,7 @@ private void showFromZooKeeper(SolrQueryRequest req, SolrQueryResponse rsp,
 
         SimpleOrderedMap<Object> fileInfo = new SimpleOrderedMap<Object>();
         files.add(f, fileInfo);
-        List<String> fchildren = zkClient.getChildren(adminFile, null, true);
+        List<String> fchildren = zkClient.getChildren(adminFile + "/" + f, null, true);
         if (fchildren.size() > 0) {
           fileInfo.add("directory", true);
         } else {
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/TestModifyConfFiles.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/TestModifyConfFiles.java
index 56eaf583..8d7e766f 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/TestModifyConfFiles.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/TestModifyConfFiles.java
@@ -20,6 +20,8 @@
 import org.apache.solr.client.solrj.request.QueryRequest;
 import org.apache.solr.common.cloud.SolrZkClient;
 import org.apache.solr.common.params.ModifiableSolrParams;
+import org.apache.solr.common.util.NamedList;
+import org.apache.solr.common.util.SimpleOrderedMap;
 
 public class TestModifyConfFiles extends AbstractFullDistribZkTestBase {
 
@@ -91,6 +93,22 @@ public void doTest() throws Exception {
     contents = new String(zkClient.getData("/configs/conf1/velocity/test.vm", null, null, true), "UTF-8");
     assertTrue("Should have found new content in a velocity/test.vm.",
         contents.indexOf("Some bogus stuff for a test.") != -1);
+
+    params = new ModifiableSolrParams();
+    request = new QueryRequest(params);
+    request.setPath("/admin/file");
+    NamedList<Object> res = client.request(request);
+
+    NamedList files = (NamedList)res.get("files");
+    assertNotNull("Should have gotten files back", files);
+    SimpleOrderedMap schema = (SimpleOrderedMap)files.get("schema.xml");
+    assertNotNull("Should have a schema returned", schema);
+    assertNull("Schema.xml should not be a directory", schema.get("directory"));
+
+    SimpleOrderedMap velocity = (SimpleOrderedMap)files.get("velocity");
+    assertNotNull("Should have velocity dir returned", velocity);
+
+    assertTrue("Velocity should be a directory", Boolean.parseBoolean(velocity.get("directory").toString()));
   }
 
 }
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/schema/ModifyConfFileTest.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/schema/ModifyConfFileTest.java
index 84307ed3..7ca00f74 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/schema/ModifyConfFileTest.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/schema/ModifyConfFileTest.java
@@ -85,6 +85,8 @@
 import org.apache.solr.common.params.ModifiableSolrParams;
 import org.apache.solr.common.util.ContentStream;
 import org.apache.solr.common.util.ContentStreamBase;
+import org.apache.solr.common.util.NamedList;
+import org.apache.solr.common.util.SimpleOrderedMap;
 import org.apache.solr.core.CoreContainer;
 import org.apache.solr.core.SolrCore;
 import org.apache.solr.request.LocalSolrQueryRequest;
@@ -171,6 +173,24 @@ public void testConfigWrite() throws Exception {
           "conf/velocity/test.vm"));
       assertEquals("Schema contents should have changed!", "Some bogus stuff for a test.", contents);
 
+      streams.clear();
+      params = params();
+      locReq = new LocalSolrQueryRequest(core, params);
+      core.execute(handler, locReq, rsp);
+
+      NamedList<Object> res = rsp.getValues();
+
+      NamedList files = (NamedList)res.get("files");
+      assertNotNull("Should have gotten files back", files);
+      SimpleOrderedMap schema = (SimpleOrderedMap)files.get("schema.xml");
+      assertNotNull("Should have a schema returned", schema);
+      assertNull("Schema.xml should not be a directory", schema.get("directory"));
+
+      SimpleOrderedMap velocity = (SimpleOrderedMap)files.get("velocity");
+      assertNotNull("Should have velocity dir returned", velocity);
+
+      assertTrue("Velocity should be a directory", Boolean.parseBoolean(velocity.get("directory").toString()));
+
       core.close();
     } finally {
       cc.shutdown();
