diff --git a/lucene/dev/branches/branch_4x/solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager.java b/lucene/dev/branches/branch_4x/solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager.java
index 1f8c40b4..c119cdd3 100644
--- a/lucene/dev/branches/branch_4x/solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager.java
+++ b/lucene/dev/branches/branch_4x/solr/solrj/src/java/org/apache/solr/common/cloud/ConnectionManager.java
@@ -38,15 +38,13 @@
 
   private final ZkClientConnectionStrategy connectionStrategy;
   
-  private Object connectionUpdateLock = new Object();
+  private final String zkServerAddress;
 
-  private String zkServerAddress;
+  private final int zkClientTimeout;
 
-  private int zkClientTimeout;
+  private final SolrZkClient client;
 
-  private SolrZkClient client;
-
-  private OnReconnect onReconnect;
+  private final OnReconnect onReconnect;
 
   private volatile boolean isClosed = false;
 
@@ -92,14 +90,13 @@ public synchronized void process(WatchedEvent event) {
             new ZkClientConnectionStrategy.ZkUpdate() {
               @Override
               public void update(SolrZooKeeper keeper) {
-                // if keeper does not replace oldKeeper we must be sure to close it
-                synchronized (connectionUpdateLock) {
                   try {
                     waitForConnected(Long.MAX_VALUE);
                   } catch (Exception e1) {
                     closeKeeper(keeper);
                     throw new RuntimeException(e1);
                   }
+                
                   log.info("Connection with ZooKeeper reestablished.");
                   try {
                     client.updateKeeper(keeper);
@@ -108,7 +105,7 @@ public void update(SolrZooKeeper keeper) {
                     Thread.currentThread().interrupt();
                     // we must have been asked to stop
                     throw new RuntimeException(e);
-                  } catch(Throwable t) {
+                } catch (Throwable t) {
                     closeKeeper(keeper);
                     throw new RuntimeException(t);
                   }
@@ -116,13 +113,12 @@ public void update(SolrZooKeeper keeper) {
                   if (onReconnect != null) {
                     onReconnect.command();
                   }
+                
                   synchronized (ConnectionManager.this) {
                     ConnectionManager.this.connected = true;
                   }
-                }
                 
               }
-
             });
       } catch (Exception e) {
         SolrException.log(log, "", e);
