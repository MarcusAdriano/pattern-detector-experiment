diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/RuntimeInfoTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/RuntimeInfoTest.java
index 4b865acd..39cfe851 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/RuntimeInfoTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/RuntimeInfoTest.java
@@ -46,9 +46,11 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 public class RuntimeInfoTest extends BaseJDBCTestCase {
 
 	private static String[] RuntimeinfoCmd = new String[] {
+            "-Demma.verbosity.level=silent",
 			"org.apache.derby.drda.NetworkServerControl", "runtimeinfo",
 			"-p", String.valueOf(TestConfiguration.getCurrent().getPort()) };
 	private static String[] RuntimeinfoLocaleCmd = new String[] {
+            "-Demma.verbosity.level=silent",
 			"-Duser.language=err", "-Duser.country=DE",
 			"org.apache.derby.drda.NetworkServerControl", "runtimeinfo",
 			"-p", String.valueOf(TestConfiguration.getCurrent().getPort()) };
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/SecureServerTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/SecureServerTest.java
index bb1a370a..5f9296e3 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/SecureServerTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/SecureServerTest.java
@@ -330,7 +330,13 @@ public void testServerStartup()
 
         assertEquals( myName + ": serverCameUp = " + serverCameUp, _outcome.serverShouldComeUp(), serverCameUp );
         
-        assertTrue( myName + "\nExpected: " + _outcome.expectedServerOutput() + "\nBut saw: " + serverOutput , outputOK );
+        if (!runsWithEmma()) {
+            // With Emma we run without the security manager, so we can't
+            // assert on seeing it.
+            assertTrue( myName + "\nExpected: " +
+                        _outcome.expectedServerOutput() +
+                        "\nBut saw: " + serverOutput , outputOK );
+        }
 
         //
         // make sure that the default policy lets us connect to the server if the hostname was
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java
index 940194cd..c0dd4fcf 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java
@@ -646,6 +646,12 @@ public static final boolean isJava5() {
     public static final boolean isJava7() {
         return getSystemProperty("java.version").startsWith("1.7");
     }
+
+    public static final boolean runsWithEmma() {
+        return getSystemProperty("java.class.path").indexOf("emma.jar") != -1;
+    }
+
+
     /**
      * Returns the major version of the class specification version supported
      * by the running JVM.
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/NetworkServerTestSetup.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/NetworkServerTestSetup.java
index 21efed34..82dc61e8 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/NetworkServerTestSetup.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/NetworkServerTestSetup.java
@@ -255,12 +255,16 @@ private SpawnedProcess startSeparateProcess() throws Exception
         boolean         skipHostName = false;
 
         al.add( BaseTestCase.getJavaExecutableName() );
+        al.add( "-Demma.verbosity.level=silent" );
         al.add( "-classpath" );
         al.add( classpath );
         
-        // Loading from classes need to work-around the limitation
-        // of the default policy file doesn't work with classes.
-        if (!TestConfiguration.loadingFromJars())
+        // Loading from classes need to work-around the limitation of the
+        // default policy file doesn't work with classes.  Similarly, if we are
+        // running with Emma we don't run with the security manager, as the
+        // default server policy doesn't contain needed permissions and,
+        // additionally, Emma sources do not use doPrivileged blocks anyway.
+        if (!TestConfiguration.loadingFromJars() || BaseTestCase.runsWithEmma())
         {
             boolean setNoSecurityManager = true;
             for (int i = 0; i < systemProperties.length; i++)
