diff --git a/cassandra/trunk/src/java/org/apache/cassandra/avro/CassandraServer.java b/cassandra/trunk/src/java/org/apache/cassandra/avro/CassandraServer.java
index e1caf3fa..38d335d6 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/avro/CassandraServer.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/avro/CassandraServer.java
@@ -195,7 +195,7 @@ public ColumnOrSuperColumn get(ByteBuffer key, ColumnPath columnPath, Consistenc
         if (reverseOrder)
             Collections.reverse(avroColumns);
         
-        // FIXME: Teach GenericData.Array how to reverse so that this iteration isn't necessary.
+        // FIXME: update for AVRO-540 when upgrading to Avro 1.4.0
         GenericArray<ColumnOrSuperColumn> avroArray = new GenericData.Array<ColumnOrSuperColumn>(avroColumns.size(), Schema.createArray(ColumnOrSuperColumn.SCHEMA$));
         for (ColumnOrSuperColumn cosc : avroColumns)
             avroArray.add(cosc);
@@ -218,7 +218,7 @@ public ColumnOrSuperColumn get(ByteBuffer key, ColumnPath columnPath, Consistenc
         if (reverseOrder)
             Collections.reverse(avroSuperColumns);
         
-        // FIXME: Teach GenericData.Array how to reverse so that this iteration isn't necessary.
+        // FIXME: update for AVRO-540 when upgrading to Avro 1.4.0
         GenericArray<ColumnOrSuperColumn> avroArray = new GenericData.Array<ColumnOrSuperColumn>(avroSuperColumns.size(), Schema.createArray(ColumnOrSuperColumn.SCHEMA$));
         for (ColumnOrSuperColumn cosc : avroSuperColumns)
             avroArray.add(cosc);
