diff --git a/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/db/CommitLog.java b/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/db/CommitLog.java
index a28e1ed8..b7461efa 100644
--- a/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/db/CommitLog.java
+++ b/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/db/CommitLog.java
@@ -358,7 +358,7 @@ public void run()
                         {
                             try
                             {
-                                rm.apply(false);
+                                Table.open(rm.getTable()).apply(rm, null, false);
                             }
                             catch (IOException e)
                             {
@@ -453,7 +453,7 @@ public CommitLogContext call() throws Exception
      * of any problems. This way we can assume that the subsequent commit log
      * entry will override the garbage left over by the previous write.
     */
-    void add(RowMutation rowMutation, DataOutputBuffer serializedRow) throws IOException
+    void add(RowMutation rowMutation, Object serializedRow) throws IOException
     {
         Callable<CommitLogContext> task = new LogRecordAdder(rowMutation, serializedRow);
 
@@ -621,7 +621,7 @@ void sync() throws IOException
         final RowMutation rowMutation;
         final Object serializedRow;
 
-        LogRecordAdder(RowMutation rm, DataOutputBuffer serializedRow)
+        LogRecordAdder(RowMutation rm, Object serializedRow)
         {
             this.rowMutation = rm;
             this.serializedRow = serializedRow;
diff --git a/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/db/RowMutation.java b/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/db/RowMutation.java
index bec33221..72fcc1b1 100644
--- a/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/db/RowMutation.java
+++ b/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/db/RowMutation.java
@@ -200,12 +200,7 @@ else if (path.columnName == null)
     */
     public void apply() throws IOException
     {
-        apply(true);
-    }
-
-    public void apply(boolean writeCommitLog) throws IOException
-    {
-        Table.open(table_).apply(this, this.getSerializedBuffer(), writeCommitLog);
+        Table.open(table_).apply(this, getSerializedBuffer(), true);
     }
 
     /*
diff --git a/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/db/RowMutationVerbHandler.java b/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/db/RowMutationVerbHandler.java
index 05beff9f..8ca849d4 100644
--- a/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/db/RowMutationVerbHandler.java
+++ b/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/db/RowMutationVerbHandler.java
@@ -58,6 +58,7 @@ public void doVerb(Message message)
                 hintedMutation.apply();
             }
 
+            Table.open(rm.getTable()).apply(rm, bytes, true);
             rm.apply();
 
             WriteResponse response = new WriteResponse(rm.getTable(), rm.key(), true);
diff --git a/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/db/Table.java b/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/db/Table.java
index 6fa4c4e2..86ded011 100644
--- a/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/db/Table.java
+++ b/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/db/Table.java
@@ -428,7 +428,7 @@ public Row getRow(QueryFilter filter) throws IOException
      * Once this happens the data associated with the individual column families
      * is also written to the column family store's memtable.
     */
-    void apply(RowMutation mutation, DataOutputBuffer serializedMutation, boolean writeCommitLog) throws IOException
+    void apply(RowMutation mutation, Object serializedMutation, boolean writeCommitLog) throws IOException
     {
         HashMap<ColumnFamilyStore,Memtable> memtablesToFlush = new HashMap<ColumnFamilyStore, Memtable>(2);
 
