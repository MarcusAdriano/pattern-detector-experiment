diff --git a/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextManagerImpl.java b/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextManagerImpl.java
index 0d03d5c3..7cb202ba 100644
--- a/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextManagerImpl.java
+++ b/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextManagerImpl.java
@@ -70,7 +70,7 @@ public ApplicationContext getApplicationContext(AriesApplication app) throws Bun
     return result;
   }
 
-  public void remove(ApplicationContext app) throws BundleException
+  public void remove(ApplicationContext app)
   {
     Iterator<Map.Entry<AriesApplication, ApplicationContextImpl>> it = _appToContextMap.entrySet().iterator();
     
@@ -89,13 +89,25 @@ public void remove(ApplicationContext app) throws BundleException
     }
   }
 
-  protected void uninstall(ApplicationContextImpl app) throws BundleException
+  private void uninstall(ApplicationContextImpl app)
   {
       Set<Bundle> bundles = app.getApplicationContent();
       for (Bundle b : bundles) {
+      try {
         b.uninstall();
+      } catch (BundleException be) {
+        // TODO ignoring this feels wrong, but I'm not sure how to communicate to the caller multiple failures. 
+      }
       }
       app.setState(ApplicationState.UNINSTALLED);
+  }
+  
+  public void close()
+  {
+    for (ApplicationContextImpl ctx : _appToContextMap.values()) {
+      uninstall(ctx);
+    }
 
+    _appToContextMap.clear();
   }
 }
