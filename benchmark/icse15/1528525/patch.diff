diff --git a/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/BlueprintContainerTest.java b/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/BlueprintContainerTest.java
index e69de29b..3e41c6d7 100644
--- a/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/BlueprintContainerTest.java
+++ b/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/BlueprintContainerTest.java
@@ -0,0 +1,67 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+package org.apache.aries.blueprint;
+
+import org.apache.aries.blueprint.container.BlueprintContainerImpl;
+import org.apache.aries.blueprint.sample.Foo;
+import org.junit.Test;
+
+import java.net.URL;
+import java.util.Arrays;
+
+import static org.junit.Assert.*;
+
+public class BlueprintContainerTest {
+
+    @Test
+    public void testSimple() throws Exception {
+        URL url = getClass().getClassLoader().getResource("test.xml");
+        BlueprintContainerImpl container = new BlueprintContainerImpl(getClass().getClassLoader(), Arrays.asList(url));
+
+        Foo foo = (Foo) container.getComponentInstance("foo");
+        System.out.println(foo);
+        assertNotNull(foo);
+        assertEquals(5, foo.getA());
+        assertEquals(1, foo.getB());
+
+        container.destroy();
+    }
+
+    @Test
+    public void testPlaceholders() throws Exception {
+        URL url1 = getClass().getClassLoader().getResource("test.xml");
+        URL url2 = getClass().getClassLoader().getResource("test2.xml");
+        BlueprintContainerImpl container = new BlueprintContainerImpl(getClass().getClassLoader(), Arrays.asList(url1, url2));
+
+        Foo foo = (Foo) container.getComponentInstance("foo");
+        System.out.println(foo);
+        assertNotNull(foo);
+        assertEquals(5, foo.getA());
+        assertEquals(1, foo.getB());
+
+        container.destroy();
+    }
+
+    public static void main(String[] args) throws Exception {
+        URL url = BlueprintContainerTest.class.getClassLoader().getResource("test.xml");
+        BlueprintContainerImpl container = new BlueprintContainerImpl(BlueprintContainerTest.class.getClassLoader(), Arrays.asList(url));
+        System.out.println(container.getComponentInstance("foo"));
+        container.destroy();
+    }
+}
diff --git a/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/sample/Bar.java b/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/sample/Bar.java
index e69de29b..25f70cf0 100644
--- a/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/sample/Bar.java
+++ b/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/sample/Bar.java
@@ -0,0 +1,46 @@
+/**
+ *  Licensed to the Apache Software Foundation (ASF) under one or more
+ *  contributor license agreements.  See the NOTICE file distributed with
+ *  this work for additional information regarding copyright ownership.
+ *  The ASF licenses this file to You under the Apache License, Version 2.0
+ *  (the "License"); you may not use this file except in compliance with
+ *  the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+package org.apache.aries.blueprint.sample;
+
+import java.util.List;
+
+public class Bar {
+    
+    private String value;
+    private List list;
+
+    public String getValue() {
+        return value;
+    }
+
+    public void setValue(String s) {
+        value = s;
+    }
+
+    public List getList() {
+        return list;
+    }
+
+    public void setList(List l) {
+        list = l;
+    }
+
+    public String toString() {
+        return hashCode() + ": " + value + " " + list;
+    }
+
+}
diff --git a/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/sample/CurrencyTypeConverter.java b/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/sample/CurrencyTypeConverter.java
index e69de29b..986787a8 100644
--- a/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/sample/CurrencyTypeConverter.java
+++ b/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/sample/CurrencyTypeConverter.java
@@ -0,0 +1,34 @@
+/**
+ *  Licensed to the Apache Software Foundation (ASF) under one or more
+ *  contributor license agreements.  See the NOTICE file distributed with
+ *  this work for additional information regarding copyright ownership.
+ *  The ASF licenses this file to You under the Apache License, Version 2.0
+ *  (the "License"); you may not use this file except in compliance with
+ *  the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+package org.apache.aries.blueprint.sample;
+
+import org.osgi.service.blueprint.container.Converter;
+import org.osgi.service.blueprint.container.ReifiedType;
+
+import java.util.Currency;
+
+public class CurrencyTypeConverter implements Converter {
+
+    public boolean canConvert(Object fromValue, ReifiedType toType) {
+        return Currency.class.isAssignableFrom(toType.getRawClass());
+    }
+
+    public Object convert(Object source, ReifiedType toType) throws Exception {
+        return Currency.getInstance(source.toString());
+    }
+
+}
diff --git a/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/sample/DateTypeConverter.java b/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/sample/DateTypeConverter.java
index e69de29b..11e90147 100644
--- a/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/sample/DateTypeConverter.java
+++ b/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/sample/DateTypeConverter.java
@@ -0,0 +1,42 @@
+/**
+ *  Licensed to the Apache Software Foundation (ASF) under one or more
+ *  contributor license agreements.  See the NOTICE file distributed with
+ *  this work for additional information regarding copyright ownership.
+ *  The ASF licenses this file to You under the Apache License, Version 2.0
+ *  (the "License"); you may not use this file except in compliance with
+ *  the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+package org.apache.aries.blueprint.sample;
+
+import org.osgi.service.blueprint.container.Converter;
+import org.osgi.service.blueprint.container.ReifiedType;
+
+import java.text.DateFormat;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+
+public class DateTypeConverter implements Converter {
+
+    DateFormat dateFormat;
+    
+    public void setFormat(String format) {
+        dateFormat = new SimpleDateFormat(format);
+    }
+    
+    public Object convert(Object source, ReifiedType toType) throws Exception {
+        return dateFormat.parse(source.toString());
+    }
+
+    public boolean canConvert(Object fromValue, ReifiedType toType) {
+        return Date.class.isAssignableFrom(toType.getRawClass());
+    }
+
+}
diff --git a/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/sample/Foo.java b/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/sample/Foo.java
index e69de29b..7eedebd9 100644
--- a/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/sample/Foo.java
+++ b/aries/trunk/blueprint/blueprint-noosgi/src/test/java/org/apache/aries/blueprint/sample/Foo.java
@@ -0,0 +1,107 @@
+/**
+ *  Licensed to the Apache Software Foundation (ASF) under one or more
+ *  contributor license agreements.  See the NOTICE file distributed with
+ *  this work for additional information regarding copyright ownership.
+ *  The ASF licenses this file to You under the Apache License, Version 2.0
+ *  (the "License"); you may not use this file except in compliance with
+ *  the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ *  Unless required by applicable law or agreed to in writing, software
+ *  distributed under the License is distributed on an "AS IS" BASIS,
+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ *  See the License for the specific language governing permissions and
+ *  limitations under the License.
+ */
+package org.apache.aries.blueprint.sample;
+
+import java.io.Serializable;
+import java.util.Currency;
+import java.util.Date;
+import java.util.Map;
+
+public class Foo implements Serializable {
+    
+    private int a;
+    private int b;
+    private Bar bar;
+    private Currency currency;
+    private Date date;
+
+    public boolean initialized;
+    public boolean destroyed;
+    private Map<String, Object> props;
+
+    public int getA() {
+        return a;
+    }
+
+    public void setA(int i) {
+        a = i;
+    }
+
+    public int getB() {
+        return b;
+    }
+
+    public void setB(int i) {
+        b = i;
+    }
+
+    public Bar getBar() {
+        return bar;
+    }
+
+    public void setBar(Bar b) {
+        bar = b;
+    }
+
+    public Currency getCurrency() {
+        return currency;
+    }
+
+    public void setCurrency(Currency c) {
+        currency = c;
+    }
+
+    public Date getDate() {
+        return date;
+    }
+
+    public void setDate(Date d) {
+        date = d;
+    }
+
+    public String toString() {
+        return a + " " + b + " " + bar + " " + currency + " " + date;
+    }
+
+    public void init() {
+        System.out.println("======== Initializing Foo =========");
+        initialized = true;
+    }
+
+    public void destroy() {
+        System.out.println("======== Destroying Foo =========");
+        destroyed = true;
+    }
+
+    public boolean isInitialized() {
+        return initialized;
+    }
+
+    public boolean isDestroyed() {
+        return destroyed;
+    }
+
+    public void update(Map<String,Object> props) {
+        this.props = props;
+    }
+
+    public Map<String, Object> getProps() {
+        return props;
+    }
+
+}
+
