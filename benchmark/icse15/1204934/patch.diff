diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredCallableStatement40.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredCallableStatement40.java
index 1b7e00d7..b3b83ae5 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredCallableStatement40.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredCallableStatement40.java
@@ -282,17 +282,6 @@ public void setSQLXML(int parameterIndex, SQLXML xmlObject) throws SQLException{
         getPreparedStatement().setSQLXML(parameterIndex,xmlObject);
     }
     
-    /**
-     * Checks if the statement is closed.
-     *
-     * @return <code>true</code> if the statement is closed,
-     * <code>false</code> otherwise
-     * @exception SQLException if an error occurs
-     */
-    public final boolean isClosed() throws SQLException {
-        return getCallableStatement().isClosed();
-    }
-    
     /**
      * Returns <code>this</code> if this class implements the interface
      *
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredPreparedStatement40.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredPreparedStatement40.java
index 3c18b77b..81fb61e3 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredPreparedStatement40.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredPreparedStatement40.java
@@ -81,17 +81,6 @@ public void setSQLXML(int parameterIndex, SQLXML xmlObject) throws SQLException{
         getPreparedStatement().setSQLXML (parameterIndex, xmlObject);
     }    
     
-    /**
-     * Checks if the statement is closed.
-     *
-     * @return <code>true</code> if the statement is closed,
-     * <code>false</code> otherwise
-     * @exception SQLException if an error occurs
-     */
-    public final boolean isClosed() throws SQLException {
-        return getPreparedStatement().isClosed();
-    }
-    
     /**
      * Returns <code>this</code> if this class implements the interface
      *
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredStatement.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredStatement.java
index 88f13bda..d64bde97 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredStatement.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredStatement.java
@@ -21,12 +21,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 package org.apache.derby.iapi.jdbc;
 
-import org.apache.derby.iapi.reference.JDBC30Translation;
 import org.apache.derby.iapi.reference.SQLState;
 
-import org.apache.derby.iapi.error.StandardException;
-import org.apache.derby.iapi.error.PublicAPI;
-import org.apache.derby.iapi.services.info.JVMInfo;
 import org.apache.derby.impl.jdbc.Util;
 
 import java.sql.Connection;
@@ -35,8 +31,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import java.sql.SQLWarning;
 import java.sql.Statement;
 
-import java.lang.reflect.*;
-
 /**
 	A Statement implementation that forwards all of its requests to an underlying Statement.
  */
@@ -552,21 +546,14 @@ public boolean isWrapperFor(Class iface) throws SQLException {
     }
 
     /**
-     * Checks if the statement is closed. Not implemented for this
-     * class since <code>isClosed()</code> is a new method in JDBC
-     * 4.0. The JDBC 4.0 sub-classes should override this method.
+     * Checks if the statement is closed.
      *
      * @return <code>true</code> if the statement is closed,
      * <code>false</code> otherwise
-     * @exception SQLException not-implemented exception
+     * @exception SQLException if an error occurs
      */
-    protected boolean isClosed() throws SQLException {
-        // Not implemented since we cannot forward the call to a JDBC
-        // 4.0 method from this class. This dummy implementation is
-        // provided here so that checkIfClosed() can be implemented
-        // once in this class instead of once in each of the
-        // Brokered*Statement40 classes.
-        throw Util.notImplemented();
+    public final boolean isClosed() throws SQLException {
+        return ((EngineStatement) getStatement()).isClosed();
     }
 
     /**
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredStatement40.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredStatement40.java
index 6d990a8c..df45d889 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredStatement40.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredStatement40.java
@@ -40,17 +40,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
         super(control);
     }
     
-    /**
-     * Checks if the statement is closed.
-     *
-     * @return <code>true</code> if the statement is closed,
-     * <code>false</code> otherwise
-     * @exception SQLException if an error occurs
-     */
-    public final boolean isClosed() throws SQLException {
-        return getStatement().isClosed();
-    }
-    
     /**
      * Returns <code>this</code> if this class implements the interface
      *
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/EngineStatement.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/EngineStatement.java
index 50cd6d77..f27ad6bf 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/EngineStatement.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/EngineStatement.java
@@ -47,6 +47,11 @@ Licensed to the Apache Software Foundation (ASF) under one or more
      */ 
     public int getResultSetHoldability() throws SQLException;
     
+    /**
+     * Identical to the JDBC 4 isClosed() method.
+     */
+    public boolean isClosed() throws SQLException;
+    
     ////////////////////////////////////////////////////////////////////
     //
     // INTRODUCED BY JDBC 4.1 IN JAVA 7
