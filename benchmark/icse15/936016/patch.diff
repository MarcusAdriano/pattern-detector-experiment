diff --git a/cassandra/trunk/src/java/org/apache/cassandra/locator/AbstractRackAwareSnitch.java b/cassandra/trunk/src/java/org/apache/cassandra/locator/AbstractRackAwareSnitch.java
index 03dd0dd4..d8af2f7b 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/locator/AbstractRackAwareSnitch.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/locator/AbstractRackAwareSnitch.java
@@ -33,29 +33,20 @@
 public abstract class AbstractRackAwareSnitch implements IEndpointSnitch
 {
     /**
-     * Determines if 2 nodes are in the same rack in the data center.
-     * @param host a specified endpoint
-     * @param host2 another specified endpoint
-     * @return true if on the same rack false otherwise
+     * Return the rack for which an endpoint resides in
+     * @param endpoint a specified endpoint
+     * @return string of rack
      * @throws UnknownHostException
      */
-    abstract public boolean isOnSameRack(InetAddress host, InetAddress host2) throws UnknownHostException;
+    abstract public String getRack(InetAddress endpoint) throws UnknownHostException;
 
     /**
-     * Determines if 2 nodes are in the same data center.
-     * @param host a specified endpoint
-     * @param host2 another specified endpoint
-     * @return true if in the same data center false otherwise
+     * Return the data center for which an endpoint resides in
+     * @param endpoint a specified endpoint
+     * @return string of data center
      * @throws UnknownHostException
      */
-    abstract public boolean isInSameDataCenter(InetAddress host, InetAddress host2) throws UnknownHostException;
-
-    /**
-     * Determines the name of the datacenter this endpoint lives in.
-     * @param endpoint
-     * @return the name of the datacenter the endpoint lives in
-     */
-    abstract public String getLocation(InetAddress endpoint) throws UnknownHostException;
+    abstract public String getDatacenter(InetAddress endpoint) throws UnknownHostException;
 
     public List<InetAddress> getSortedListByProximity(final InetAddress address, Collection<InetAddress> unsortedAddress)
     {
@@ -76,14 +67,23 @@ public int compare(InetAddress a1, InetAddress a2)
                         return -1;
                     if (address.equals(a2) && !address.equals(a1))
                         return 1;
-                    if (isOnSameRack(address, a1) && !isOnSameRack(address, a2))
+
+                    String addressRack = getRack(address);
+                    String a1Rack = getRack(a1);
+                    String a2Rack = getRack(a2);
+                    if (addressRack.equals(a1Rack) && !addressRack.equals(a2Rack))
                         return -1;
-                    if (isOnSameRack(address, a2) && !isOnSameRack(address, a1))
+                    if (addressRack.equals(a2Rack) && !addressRack.equals(a1Rack))
                         return 1;
-                    if (isInSameDataCenter(address, a1) && !isInSameDataCenter(address, a2))
+
+                    String addressDatacenter = getDatacenter(address);
+                    String a1Datacenter = getDatacenter(a1);
+                    String a2Datacenter = getDatacenter(a2);
+                    if (addressDatacenter.equals(a1Datacenter) && !addressDatacenter.equals(a2Datacenter))
                         return -1;
-                    if (isInSameDataCenter(address, a2) && !isInSameDataCenter(address, a1))
+                    if (addressDatacenter.equals(a2Datacenter) && !addressDatacenter.equals(a1Datacenter))
                         return 1;
+
                     return 0;
                 }
                 catch (UnknownHostException e)
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/locator/DatacenterEndpointSnitch.java b/cassandra/trunk/src/java/org/apache/cassandra/locator/DatacenterEndpointSnitch.java
index 1ab6217b..6e507cc3 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/locator/DatacenterEndpointSnitch.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/locator/DatacenterEndpointSnitch.java
@@ -75,11 +75,19 @@ public DatacenterEndpointSnitch() throws IOException, ParserConfigurationExcepti
     /**
      * Return the rack for which an endpoint resides in
      */
-    public String getRackForEndpoint(InetAddress endpoint)
-            throws UnknownHostException
+    public String getRack(InetAddress endpoint) throws UnknownHostException
     {
-        byte[] ipQuads = getIPAddress(endpoint.getHostAddress());
-        return ipRAC.get(ipQuads[1]).get(ipQuads[2]);
+        byte[] ip = getIPAddress(endpoint.getHostAddress());
+        return ipRAC.get(ip[1]).get(ip[2]);
+    }
+
+    /**
+     * Return the datacenter for which an endpoint resides in
+     */
+    public String getDatacenter(InetAddress endpoint) throws UnknownHostException
+    {
+        byte[] ip = getIPAddress(endpoint.getHostAddress());
+        return ipDC.get(ip[1]).get(ip[2]);
     }
 
     /**
@@ -134,42 +142,6 @@ public void reloadConfiguration() throws IOException
         }
     }
 
-    /**
-     * This methood will return ture if the hosts are in the same RAC else
-     * false.
-     */
-    public boolean isOnSameRack(InetAddress host, InetAddress host2)
-            throws UnknownHostException
-    {
-        /*
-        * Look at the IP Address of the two hosts. Compare the 2nd and 3rd
-        * octet. If they are the same then the hosts are in the same rack else
-        * different racks.
-        */
-        byte[] ip = getIPAddress(host.getHostAddress());
-        byte[] ip2 = getIPAddress(host2.getHostAddress());
-
-        return ipRAC.get(ip[1]).get(ip[2])
-                .equals(ipRAC.get(ip2[1]).get(ip2[2]));
-    }
-
-    /**
-     * This methood will return ture if the hosts are in the same DC else false.
-     */
-    public boolean isInSameDataCenter(InetAddress host, InetAddress host2)
-            throws UnknownHostException
-    {
-        /*
-        * Look at the IP Address of the two hosts. Compare the 2nd and 3rd
-        * octet and get the DC Name. If they are the same then the hosts are in
-        * the same datacenter else different datacenter.
-        */
-        byte[] ip = getIPAddress(host.getHostAddress());
-        byte[] ip2 = getIPAddress(host2.getHostAddress());
-
-        return ipDC.get(ip[1]).get(ip[2]).equals(ipDC.get(ip2[1]).get(ip2[2]));
-    }
-
     /**
      * Returns a DC replication map, the key will be the dc name and the value
      * will be the replication factor of that Datacenter.
@@ -198,10 +170,4 @@ public static byte intToByte(int n)
     {
         return (byte) (n & 0x000000ff);
     }
-
-    public String getLocation(InetAddress endpoint) throws UnknownHostException
-    {
-        byte[] ipQuads = getIPAddress(endpoint.getHostAddress());
-        return ipDC.get(ipQuads[1]).get(ipQuads[2]);
-    }
 }
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/locator/DatacenterShardStategy.java b/cassandra/trunk/src/java/org/apache/cassandra/locator/DatacenterShardStategy.java
index 2d432395..e72da8df 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/locator/DatacenterShardStategy.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/locator/DatacenterShardStategy.java
@@ -68,12 +68,12 @@
     private synchronized void loadEndpoints(TokenMetadata metadata) throws IOException
     {
         this.tokens = new ArrayList<Token>(metadata.sortedTokens());
-        String localDC = ((DatacenterEndpointSnitch)snitch_).getLocation(InetAddress.getLocalHost());
+        String localDC = ((DatacenterEndpointSnitch)snitch_).getDatacenter(InetAddress.getLocalHost());
         dcMap = new HashMap<String, List<Token>>();
         for (Token token : this.tokens)
         {
             InetAddress endpoint = metadata.getEndpoint(token);
-            String dataCenter = ((DatacenterEndpointSnitch)snitch_).getLocation(endpoint);
+            String dataCenter = ((DatacenterEndpointSnitch)snitch_).getDatacenter(endpoint);
             if (dataCenter.equals(localDC))
             {
                 localEndpoints.add(endpoint);
@@ -168,7 +168,8 @@ public DatacenterShardStategy(TokenMetadata tokenMetadata, IEndpointSnitch snitc
                 // Now try to find one on a different rack
                 if (!bOtherRack)
                 {
-                    if (!((DatacenterEndpointSnitch)snitch_).isOnSameRack(primaryHost, endpointOfInterest))
+                    AbstractRackAwareSnitch snitch = (AbstractRackAwareSnitch)snitch_;
+                    if (!snitch.getRack(primaryHost).equals(snitch.getRack(endpointOfInterest)))
                     {
                         forloopReturn.add(metadata.getEndpoint(t));
                         bOtherRack = true;
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/locator/PropertyFileSnitch.java b/cassandra/trunk/src/java/org/apache/cassandra/locator/PropertyFileSnitch.java
index af8f2f09..f1ef16c2 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/locator/PropertyFileSnitch.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/locator/PropertyFileSnitch.java
@@ -53,11 +53,6 @@
      */
     private static String RACK_PROPERTY_FILENAME = "cassandra-rack.properties";
 
-    /**
-     * Whether to use the parent for detection of same node
-     */
-    private boolean runInBaseMode = false;
-
     /**
      * Reference to the logger.
      */
@@ -107,7 +102,7 @@ public PropertyFileSnitch() throws ConfigurationException
      * @param endpoint the endpoint to process
      * @return string of data center
      */
-    public String getDataCenterForEndpoint(InetAddress endpoint) {
+    public String getDatacenter(InetAddress endpoint) {
         return getEndpointInfo(endpoint)[0];
     }
 
@@ -118,34 +113,10 @@ public String getDataCenterForEndpoint(InetAddress endpoint) {
      * 
      * @return string of rack
      */
-    public String getRackForEndpoint(InetAddress endpoint) {
+    public String getRack(InetAddress endpoint) {
         return getEndpointInfo(endpoint)[1];
     }
 
-    @Override
-    public boolean isInSameDataCenter(InetAddress host, InetAddress host2)
-            throws UnknownHostException {
-        if (runInBaseMode)
-        {
-            return super.isInSameDataCenter(host, host2);
-        }
-        return getDataCenterForEndpoint(host).equals(getDataCenterForEndpoint(host2));
-    }
-
-    @Override
-    public boolean isOnSameRack(InetAddress host, InetAddress host2)
-            throws UnknownHostException {
-        if (runInBaseMode)
-        {
-            return super.isOnSameRack(host, host2);
-        }
-        if (!isInSameDataCenter(host, host2))
-        {
-            return false;
-        }
-        return getRackForEndpoint(host).equals(getRackForEndpoint(host2));
-    }
-
     public String displayConfiguration() {
         StringBuffer configurationString = new StringBuffer("Current rack configuration\n=================\n");
         for (Object key: hostProperties.keySet()) {
@@ -170,7 +141,6 @@ public void reloadConfiguration() throws ConfigurationException
             Properties localHostProperties = new Properties();
             localHostProperties.load(new FileReader(rackPropertyFilename));
             hostProperties = localHostProperties;
-            runInBaseMode = false;
         }
         catch (IOException ioe)
         {
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/locator/RackAwareStrategy.java b/cassandra/trunk/src/java/org/apache/cassandra/locator/RackAwareStrategy.java
index 991b1ab3..39ee0458 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/locator/RackAwareStrategy.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/locator/RackAwareStrategy.java
@@ -62,9 +62,11 @@ public RackAwareStrategy(TokenMetadata tokenMetadata, IEndpointSnitch snitch)
         {
             try
             {
+                AbstractRackAwareSnitch snitch = (AbstractRackAwareSnitch)snitch_;
+
                 // First try to find one in a different data center
                 Token t = iter.next();
-                if (!((AbstractRackAwareSnitch)snitch_).isInSameDataCenter(metadata.getEndpoint(primaryToken), metadata.getEndpoint(t)))
+                if (!snitch.getDatacenter(metadata.getEndpoint(primaryToken)).equals(snitch.getDatacenter(metadata.getEndpoint(t))))
                 {
                     // If we have already found something in a diff datacenter no need to find another
                     if (!bDataCenter)
@@ -75,8 +77,8 @@ public RackAwareStrategy(TokenMetadata tokenMetadata, IEndpointSnitch snitch)
                     continue;
                 }
                 // Now  try to find one on a different rack
-                if (!((AbstractRackAwareSnitch)snitch_).isOnSameRack(metadata.getEndpoint(primaryToken), metadata.getEndpoint(t)) &&
-                    ((AbstractRackAwareSnitch)snitch_).isInSameDataCenter(metadata.getEndpoint(primaryToken), metadata.getEndpoint(t)))
+                if (!snitch.getRack(metadata.getEndpoint(primaryToken)).equals(snitch.getRack(metadata.getEndpoint(t))) &&
+                    snitch.getDatacenter(metadata.getEndpoint(primaryToken)).equals(snitch.getDatacenter(metadata.getEndpoint(t))))
                 {
                     // If we have already found something in a diff rack no need to find another
                     if (!bOtherRack)
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/locator/RackInferringSnitch.java b/cassandra/trunk/src/java/org/apache/cassandra/locator/RackInferringSnitch.java
index ad2167d3..b849b758 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/locator/RackInferringSnitch.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/locator/RackInferringSnitch.java
@@ -24,39 +24,17 @@
 
 /**
  * A simple endpoint snitch implementation that assumes rack and dc information is encoded
- * in the ip address.
+ * in the 2nd and 3rd octets of the ip address, respectively.
  */
 public class RackInferringSnitch extends AbstractRackAwareSnitch
 {
-    public boolean isOnSameRack(InetAddress host, InetAddress host2) throws UnknownHostException
+    public String getRack(InetAddress endpoint) throws UnknownHostException
     {
-        /*
-         * Look at the IP Address of the two hosts. Compare
-         * the 3rd octet. If they are the same then the hosts
-         * are in the same rack else different racks.
-        */
-        byte[] ip = host.getAddress();
-        byte[] ip2 = host2.getAddress();
-
-        return ip[2] == ip2[2];
-    }
-
-    public boolean isInSameDataCenter(InetAddress host, InetAddress host2) throws UnknownHostException
-    {
-        /*
-         * Look at the IP Address of the two hosts. Compare
-         * the 2nd octet. If they are the same then the hosts
-         * are in the same datacenter else different datacenter.
-        */
-        byte[] ip = host.getAddress();
-        byte[] ip2 = host2.getAddress();
-
-        return ip[1] == ip2[1];
+        return Byte.toString(endpoint.getAddress()[2]);
     }
 
-    public String getLocation(InetAddress endpoint) throws UnknownHostException
+    public String getDatacenter(InetAddress endpoint) throws UnknownHostException
     {
-        throw new UnknownHostException("Not Supported");
+        return Byte.toString(endpoint.getAddress()[1]);
     }
-
 }
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/service/DatacenterSyncWriteResponseHandler.java b/cassandra/trunk/src/java/org/apache/cassandra/service/DatacenterSyncWriteResponseHandler.java
index 4aff1216..cc11877f 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/service/DatacenterSyncWriteResponseHandler.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/service/DatacenterSyncWriteResponseHandler.java
@@ -59,7 +59,7 @@ public synchronized void response(Message message)
     {
         try
         {
-            String dataCenter = endpointSnitch.getLocation(message.getFrom());
+            String dataCenter = endpointSnitch.getDatacenter(message.getFrom());
             Object blockFor = responseCounts.get(dataCenter);
             // If this DC needs to be blocked then do the below.
             if (blockFor != null)
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/service/DatacenterWriteResponseHandler.java b/cassandra/trunk/src/java/org/apache/cassandra/service/DatacenterWriteResponseHandler.java
index 040aaa5e..8fb77498 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/service/DatacenterWriteResponseHandler.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/service/DatacenterWriteResponseHandler.java
@@ -60,7 +60,7 @@ public void response(Message message)
         int b = -1;
         try
         {
-            if (endpointsnitch.isInSameDataCenter(localEndpoint, message.getFrom()))
+            if (endpointsnitch.getDatacenter(localEndpoint).equals(endpointsnitch.getDatacenter(message.getFrom())))
             {
                 b = blockFor.decrementAndGet();
             }
