diff --git a/lucene/java/trunk/src/java/org/apache/lucene/search/FieldCacheImpl.java b/lucene/java/trunk/src/java/org/apache/lucene/search/FieldCacheImpl.java
index 9e804f14..4eca1aac 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/search/FieldCacheImpl.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/search/FieldCacheImpl.java
@@ -154,16 +154,12 @@ Object store (IndexReader reader, String field, Object comparer, Object value) {
     Object ret = lookup (reader, field, parser);
     if (ret == null) {
       final int[] retArray = new int[reader.maxDoc()];
-      if (retArray.length > 0) {
         TermDocs termDocs = reader.termDocs();
         TermEnum termEnum = reader.terms (new Term (field, ""));
         try {
-          if (termEnum.term() == null) {
-            throw new RuntimeException ("no terms in field " + field);
-          }
           do {
             Term term = termEnum.term();
-            if (term.field() != field) break;
+          if (term==null || term.field() != field) break;
             int termval = parser.parseInt(term.text());
             termDocs.seek (termEnum);
             while (termDocs.next()) {
@@ -174,7 +170,6 @@ Object store (IndexReader reader, String field, Object comparer, Object value) {
           termDocs.close();
           termEnum.close();
         }
-      }
       store (reader, field, parser, retArray);
       return retArray;
     }
@@ -194,16 +189,12 @@ Object store (IndexReader reader, String field, Object comparer, Object value) {
     Object ret = lookup (reader, field, parser);
     if (ret == null) {
       final float[] retArray = new float[reader.maxDoc()];
-      if (retArray.length > 0) {
         TermDocs termDocs = reader.termDocs();
         TermEnum termEnum = reader.terms (new Term (field, ""));
         try {
-          if (termEnum.term() == null) {
-            throw new RuntimeException ("no terms in field " + field);
-          }
           do {
             Term term = termEnum.term();
-            if (term.field() != field) break;
+          if (term==null || term.field() != field) break;
             float termval = parser.parseFloat(term.text());
             termDocs.seek (termEnum);
             while (termDocs.next()) {
@@ -214,7 +205,6 @@ Object store (IndexReader reader, String field, Object comparer, Object value) {
           termDocs.close();
           termEnum.close();
         }
-      }
       store (reader, field, parser, retArray);
       return retArray;
     }
@@ -228,16 +218,12 @@ Object store (IndexReader reader, String field, Object comparer, Object value) {
     Object ret = lookup (reader, field, SortField.STRING);
     if (ret == null) {
       final String[] retArray = new String[reader.maxDoc()];
-      if (retArray.length > 0) {
         TermDocs termDocs = reader.termDocs();
         TermEnum termEnum = reader.terms (new Term (field, ""));
         try {
-          if (termEnum.term() == null) {
-            throw new RuntimeException ("no terms in field " + field);
-          }
           do {
             Term term = termEnum.term();
-            if (term.field() != field) break;
+          if (term==null || term.field() != field) break;
             String termval = term.text();
             termDocs.seek (termEnum);
             while (termDocs.next()) {
@@ -248,7 +234,6 @@ Object store (IndexReader reader, String field, Object comparer, Object value) {
           termDocs.close();
           termEnum.close();
         }
-      }
       store (reader, field, SortField.STRING, retArray);
       return retArray;
     }
@@ -263,7 +248,6 @@ public StringIndex getStringIndex (IndexReader reader, String field)
     if (ret == null) {
       final int[] retArray = new int[reader.maxDoc()];
       String[] mterms = new String[reader.maxDoc()+1];
-      if (retArray.length > 0) {
         TermDocs termDocs = reader.termDocs();
         TermEnum termEnum = reader.terms (new Term (field, ""));
         int t = 0;  // current term number
@@ -275,12 +259,9 @@ public StringIndex getStringIndex (IndexReader reader, String field)
         mterms[t++] = null;
 
         try {
-          if (termEnum.term() == null) {
-            throw new RuntimeException ("no terms in field " + field);
-          }
           do {
             Term term = termEnum.term();
-            if (term.field() != field) break;
+          if (term==null || term.field() != field) break;
 
             // store term text
             // we expect that there is at most one term per document
@@ -312,7 +293,7 @@ public StringIndex getStringIndex (IndexReader reader, String field)
           System.arraycopy (mterms, 0, terms, 0, t);
           mterms = terms;
         }
-      }
+
       StringIndex value = new StringIndex (retArray, mterms);
       store (reader, field, STRING_INDEX, value);
       return value;
@@ -389,16 +370,12 @@ else if (pFloats.matcher(termtext).matches())
     Object ret = lookup (reader, field, comparator);
     if (ret == null) {
       final Comparable[] retArray = new Comparable[reader.maxDoc()];
-      if (retArray.length > 0) {
         TermDocs termDocs = reader.termDocs();
         TermEnum termEnum = reader.terms (new Term (field, ""));
         try {
-          if (termEnum.term() == null) {
-            throw new RuntimeException ("no terms in field " + field);
-          }
           do {
             Term term = termEnum.term();
-            if (term.field() != field) break;
+          if (term==null || term.field() != field) break;
             Comparable termval = comparator.getComparable (term.text());
             termDocs.seek (termEnum);
             while (termDocs.next()) {
@@ -409,7 +386,6 @@ else if (pFloats.matcher(termtext).matches())
           termDocs.close();
           termEnum.close();
         }
-      }
       store (reader, field, comparator, retArray);
       return retArray;
     }
