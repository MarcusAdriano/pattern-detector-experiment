diff --git a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.java b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.java
index fd8000fd..62521c2a 100644
--- a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.java
+++ b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/BaseTestRangeFilter.java
@@ -67,7 +67,7 @@
   static TestIndex unsignedIndexDir;
   
   static int minId = 0;
-  static int maxId = atLeast(500);
+  static int maxId;
   
   static final int intLength = Integer.toString(Integer.MAX_VALUE).length();
   
@@ -93,6 +93,7 @@ public static String pad(int n) {
   
   @BeforeClass
   public static void beforeClassBaseTestRangeFilter() throws Exception {
+    maxId = atLeast(500);
     signedIndexDir = new TestIndex(random, Integer.MAX_VALUE, Integer.MIN_VALUE, true);
     unsignedIndexDir = new TestIndex(random, Integer.MAX_VALUE, 0, false);
     signedIndexReader = build(random, signedIndexDir);
diff --git a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestCustomSearcherSort.java b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestCustomSearcherSort.java
index f78f07e3..c65060dd 100644
--- a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestCustomSearcherSort.java
+++ b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestCustomSearcherSort.java
@@ -39,7 +39,7 @@
   private IndexReader reader;
   private Query query = null;
   // reduced from 20000 to 2000 to speed up test...
-  private final static int INDEX_SIZE = atLeast(2000);
+  private int INDEX_SIZE;
   
   /**
    * Create index and query for test cases.
@@ -47,6 +47,7 @@
   @Override
   public void setUp() throws Exception {
     super.setUp();
+    INDEX_SIZE = atLeast(2000);
     index = newDirectory();
     RandomIndexWriter writer = new RandomIndexWriter(random, index);
     RandomGen random = new RandomGen(this.random);
diff --git a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestFieldCache.java b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestFieldCache.java
index 1c433995..eec1de76 100644
--- a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestFieldCache.java
+++ b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestFieldCache.java
@@ -33,13 +33,14 @@
 
 public class TestFieldCache extends LuceneTestCase {
   protected IndexReader reader;
-  private static final int NUM_DOCS = atLeast(1000);
+  private int NUM_DOCS;
   private String[] unicodeStrings;
   private Directory directory;
 
   @Override
   public void setUp() throws Exception {
     super.setUp();
+    NUM_DOCS = atLeast(1000);
     directory = newDirectory();
     RandomIndexWriter writer= new RandomIndexWriter(random, directory, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));
     long theLong = Long.MAX_VALUE;
diff --git a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestNumericRangeQuery32.java b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestNumericRangeQuery32.java
index ca156318..40e49fc3 100644
--- a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestNumericRangeQuery32.java
+++ b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestNumericRangeQuery32.java
@@ -44,7 +44,7 @@
   // shift the starting of the values to the left, to also have negative values:
   private static final int startOffset = - 1 << 15;
   // number of docs to generate for testing
-  private static final int noDocs = atLeast(4096);
+  private static int noDocs;
   
   private static Directory directory = null;
   private static IndexReader reader = null;
@@ -52,6 +52,7 @@
   
   @BeforeClass
   public static void beforeClass() throws Exception {
+    noDocs = atLeast(4096);
     directory = newDirectory();
     RandomIndexWriter writer = new RandomIndexWriter(random, directory,
         newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))
diff --git a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestNumericRangeQuery64.java b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestNumericRangeQuery64.java
index 4fc1381e..d6551719 100644
--- a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestNumericRangeQuery64.java
+++ b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestNumericRangeQuery64.java
@@ -41,7 +41,7 @@
   // shift the starting of the values to the left, to also have negative values:
   private static final long startOffset = - 1L << 31;
   // number of docs to generate for testing
-  private static final int noDocs = atLeast(4096);
+  private static int noDocs;
   
   private static Directory directory = null;
   private static IndexReader reader = null;
@@ -49,6 +49,7 @@
   
   @BeforeClass
   public static void beforeClass() throws Exception {
+    noDocs = atLeast(4096);
     directory = newDirectory();
     RandomIndexWriter writer = new RandomIndexWriter(random, directory,
         newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))
diff --git a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestSort.java b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestSort.java
index 2c076e97..5adbc7bd 100644
--- a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestSort.java
+++ b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestSort.java
@@ -53,6 +53,7 @@
 import org.apache.lucene.util.DocIdBitSet;
 import org.apache.lucene.util.LuceneTestCase;
 import org.apache.lucene.util._TestUtil;
+import org.junit.BeforeClass;
 
 /**
  * Unit tests for sorting code.
@@ -65,7 +66,7 @@
 public class TestSort extends LuceneTestCase {
   // true if our codec supports docvalues: true unless codec is preflex (3.x)
   boolean supportsDocValues = CodecProvider.getDefault().getDefaultFieldCodec().equals("PreFlex") == false;
-  private static final int NUM_STRINGS = atLeast(6000);
+  private static int NUM_STRINGS;
   private IndexSearcher full;
   private IndexSearcher searchX;
   private IndexSearcher searchY;
@@ -78,6 +79,10 @@
   private Query queryM;
   private Sort sort;
 
+  @BeforeClass
+  public static void beforeClass() throws Exception {
+    NUM_STRINGS = atLeast(6000);
+  }
   // document data:
   // the tracer field is used to determine which document was hit
   // the contents field is used to search and sort by relevance
diff --git a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/cache/TestEntryCreators.java b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/cache/TestEntryCreators.java
index 4eed1d4a..71542af8 100644
--- a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/cache/TestEntryCreators.java
+++ b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/cache/TestEntryCreators.java
@@ -32,14 +32,20 @@
 import org.apache.lucene.store.Directory;
 import org.apache.lucene.util.LuceneTestCase;
 import org.apache.lucene.util.FixedBitSet;
+import org.junit.BeforeClass;
 
 import static org.hamcrest.CoreMatchers.*;
 
 public class TestEntryCreators extends LuceneTestCase {
   protected IndexReader reader;
-  private static final int NUM_DOCS = atLeast(500);
+  private static int NUM_DOCS;
   private Directory directory;
 
+  @BeforeClass
+  public static void beforeClass() throws Exception {
+    NUM_DOCS = atLeast(500);
+  }
+
   static class NumberTypeTester {
     String funcName;
     Class<? extends CachedArrayCreator> creator;
diff --git a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/util/TestIndexableBinaryStringTools.java b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/util/TestIndexableBinaryStringTools.java
index 059c339c..8ef5b911 100644
--- a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/util/TestIndexableBinaryStringTools.java
+++ b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/util/TestIndexableBinaryStringTools.java
@@ -1,5 +1,7 @@
 package org.apache.lucene.util;
 
+import org.junit.BeforeClass;
+
 /**
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
@@ -22,8 +24,14 @@
  */
 @Deprecated
 public class TestIndexableBinaryStringTools extends LuceneTestCase {
-  private static final int NUM_RANDOM_TESTS = atLeast(200);
-  private static final int MAX_RANDOM_BINARY_LENGTH = atLeast(300);
+  private static int NUM_RANDOM_TESTS;
+  private static int MAX_RANDOM_BINARY_LENGTH;
+  
+  @BeforeClass
+  public static void beforeClass() throws Exception {
+    NUM_RANDOM_TESTS = atLeast(200);
+    MAX_RANDOM_BINARY_LENGTH = atLeast(300);
+  }
   
   public void testSingleBinaryRoundTrip() {
     byte[] binary = new byte[] { (byte) 0x23, (byte) 0x98, (byte) 0x13,
