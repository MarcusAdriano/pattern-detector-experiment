diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/recommender/svd/SVDPlusPlusFactorizer.java b/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/recommender/svd/SVDPlusPlusFactorizer.java
index 3cc7d0e5..ab8a08f9 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/recommender/svd/SVDPlusPlusFactorizer.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/recommender/svd/SVDPlusPlusFactorizer.java
@@ -22,8 +22,6 @@
 import org.apache.mahout.cf.taste.impl.common.FastIDSet;
 import org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator;
 import org.apache.mahout.common.RandomUtils;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 import org.apache.mahout.cf.taste.common.TasteException;
 import org.apache.mahout.cf.taste.model.DataModel;
@@ -41,7 +39,6 @@
  */
 public final class SVDPlusPlusFactorizer extends RatingSGDFactorizer {
 
-  private static final Logger log = LoggerFactory.getLogger(SVDPlusPlusFactorizer.class);
   private double[][] p;
   private double[][] y;
   private Map<Integer, List<Integer>> itemsByUser;
@@ -110,7 +107,7 @@ public Factorization factorize() throws TasteException {
           userVectors[userIndex][feature] += y[itemIndex][feature];
         }
       }
-      double denominator = Math.sqrt(itemsByUser.size());
+      double denominator = Math.sqrt(itemsByUser.get(userIndex).size());
       for (int feature = 0; feature < userVectors[userIndex].length; feature++) {
         userVectors[userIndex][feature] =
             (float) (userVectors[userIndex][feature] / denominator + p[userIndex][feature]);
@@ -135,7 +132,7 @@ protected void updateParameters(long userID, long itemID, float rating, double c
           pPlusY[f] += y[i2][f];
         }
     }
-    double denominator = Math.sqrt(itemsByUser.size());
+    double denominator = Math.sqrt(itemsByUser.get(userIndex).size());
     for (int feature = 0; feature < pPlusY.length; feature++) {
       pPlusY[feature] = (float) (pPlusY[feature] / denominator + p[userIndex][feature]);
     }
