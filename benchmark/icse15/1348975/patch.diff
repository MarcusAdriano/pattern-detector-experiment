diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/schema/FieldTypePluginLoader.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/schema/FieldTypePluginLoader.java
index 0d1d7a1f..2af4ada1 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/schema/FieldTypePluginLoader.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/schema/FieldTypePluginLoader.java
@@ -141,10 +141,10 @@ protected FieldType register(String name,
     return fieldTypes.put( name, plugin );
   }
 
-  // The point here is that, if no multitermanalyzer was specified in the schema file, do one of several things:
+  // The point here is that, if no multiterm analyzer was specified in the schema file, do one of several things:
   // 1> If legacyMultiTerm == false, assemble a new analyzer composed of all of the charfilters,
   //    lowercase filters and asciifoldingfilter.
-  // 2> If letacyMultiTerm == true just construct the analyzer from a KeywordTokenizer. That should mimic current behavior.
+  // 2> If legacyMultiTerm == true just construct the analyzer from a KeywordTokenizer. That should mimic current behavior.
   //    Do the same if they've specified that the old behavior is required (legacyMultiTerm="true")
 
   private Analyzer constructMultiTermAnalyzer(Analyzer queryAnalyzer) {
