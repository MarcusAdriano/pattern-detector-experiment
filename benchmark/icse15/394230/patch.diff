diff --git a/db/derby/code/branches/10.1/java/client/org/apache/derby/client/net/NetXAResource.java b/db/derby/code/branches/10.1/java/client/org/apache/derby/client/net/NetXAResource.java
index cadf0330..f0a7bd4f 100644
--- a/db/derby/code/branches/10.1/java/client/org/apache/derby/client/net/NetXAResource.java
+++ b/db/derby/code/branches/10.1/java/client/org/apache/derby/client/net/NetXAResource.java
@@ -552,6 +552,17 @@ public synchronized void start(Xid xid, int flags) throws XAException {
             connectionClosedFailure();
         }
 
+        // DERBY-1025 - Flow an auto-commit if in auto-commit mode before 
+        // entering a global transaction
+        try {
+        	if(conn_.autoCommit_)
+        		conn_.flowAutoCommit();
+        } catch (SqlException sqle) {
+        	rc = XAException.XAER_RMERR;
+            exceptionsOnXA = org.apache.derby.client.am.Utils.accumulateSQLException
+                    (sqle, exceptionsOnXA);
+        } 
+
         // update the XACallInfo
         NetXACallInfo callInfo = callInfoArray_[conn_.currXACallInfoOffset_];
         callInfo.xaFlags_ = flags;
diff --git a/db/derby/code/branches/10.1/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/XATest.java b/db/derby/code/branches/10.1/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/XATest.java
index a515529a..64439191 100644
--- a/db/derby/code/branches/10.1/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/XATest.java
+++ b/db/derby/code/branches/10.1/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/XATest.java
@@ -900,16 +900,15 @@ private static void derby966(XADataSource xads)
             rs.next(); System.out.println("BGBC " + rs.getInt(1));
             conn.commit();
             rs.next(); System.out.println("BGAC " + rs.getInt(1));
+            rs.close();
+           
+            // ensure a transaction is active to test DERBY-1025
+            rs = sdh.executeQuery("SELECT * FROM APP.FOO");
             
             // This switch to global is ok because conn
             // is in auto-commit mode, thus the start performs
             // an implicit commit to complete the local transaction.
             
-            // DERBY-1025 Client only bug
-            if (TestUtil.isDerbyNetClientFramework()) {
-                System.out.println("DERBY-1025 Call conn.commit to avoid exception with client");
-                conn.commit();
-            }
             System.out.println("START GLOBAL TRANSACTION");
             // start a global xact and test those statements.
             xar.start(xid, XAResource.TMNOFLAGS);
