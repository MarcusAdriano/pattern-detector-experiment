diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
index 2f83653e..bc2e3cb9 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
@@ -187,7 +187,8 @@
             }
             sstables.add(sstable);
         }
-        ssTables_ = new SSTableTracker(sstables);
+        ssTables_ = new SSTableTracker();
+        ssTables_.add(sstables);
 
         double v = DatabaseDescriptor.getRowsCachedFraction(table, columnFamilyName);
         int cacheSize;
@@ -554,7 +555,7 @@ void onMemtableFlush(CommitLog.CommitLogContext cLogCtx) throws IOException
      */
     public void addSSTable(SSTableReader sstable)
     {
-        ssTables_.add(sstable);
+        ssTables_.add(Arrays.asList(sstable));
         CompactionManager.instance.submitMinorIfNeeded(this);
     }
 
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/SSTableTracker.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/SSTableTracker.java
index 7154e2fd..4e209805 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/SSTableTracker.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/SSTableTracker.java
@@ -32,9 +32,9 @@
     private final AtomicLong liveSize = new AtomicLong();
     private final AtomicLong totalSize = new AtomicLong();
 
-    public SSTableTracker(Collection<SSTableReader> sstables)
+    public SSTableTracker()
     {
-        this.sstables = Collections.unmodifiableSet(new HashSet<SSTableReader>(sstables));
+        this.sstables = Collections.<SSTableReader>emptySet();
     }
 
     public synchronized void replace(Collection<SSTableReader> oldSSTables, Iterable<SSTableReader> replacements) throws IOException
@@ -53,7 +53,8 @@ public synchronized void replace(Collection<SSTableReader> oldSSTables, Iterable
 
         for (SSTableReader sstable : oldSSTables)
         {
-            sstablesNew.remove(sstable);
+            boolean removed = sstablesNew.remove(sstable);
+            assert removed;
             sstable.markCompacted();
             liveSize.addAndGet(-sstable.bytesOnDisk());
         }
@@ -61,12 +62,12 @@ public synchronized void replace(Collection<SSTableReader> oldSSTables, Iterable
         sstables = Collections.unmodifiableSet(sstablesNew);
     }
 
-    public synchronized void add(SSTableReader sstable)
+    public synchronized void add(Iterable<SSTableReader> sstables)
     {
-        assert sstable != null;
+        assert sstables != null;
         try
         {
-            replace(Collections.<SSTableReader>emptyList(), Arrays.asList(sstable));
+            replace(Collections.<SSTableReader>emptyList(), sstables);
         }
         catch (IOException e)
         {
