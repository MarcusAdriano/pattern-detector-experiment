diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/db/filter/SSTableNamesIterator.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/db/filter/SSTableNamesIterator.java
index baedce3a..00cab449 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/db/filter/SSTableNamesIterator.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/db/filter/SSTableNamesIterator.java
@@ -94,7 +94,8 @@ public SSTableNamesIterator(SSTableReader ssTable, String key, SortedSet<byte[]>
             for (IndexHelper.IndexInfo indexInfo : ranges)
             {
                 file.reset();
-                assert file.skipBytes((int)indexInfo.offset) == indexInfo.offset;
+                long curOffsert = file.skipBytes((int)indexInfo.offset);
+                assert curOffsert == indexInfo.offset;
                 // TODO only completely deserialize columns we are interested in
                 while (file.bytesPastMark() < indexInfo.offset + indexInfo.width)
                 {
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/db/filter/SSTableSliceIterator.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/db/filter/SSTableSliceIterator.java
index 7c1bf9d6..d7d9ca83 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/db/filter/SSTableSliceIterator.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/db/filter/SSTableSliceIterator.java
@@ -186,7 +186,8 @@ public boolean getNextBlock() throws IOException
             boolean outOfBounds = false;
 
             file.reset();
-            assert file.skipBytes((int)curColPosition.offset) == curColPosition.offset;
+            long curOffset = file.skipBytes((int) curColPosition.offset); 
+            assert curOffset == curColPosition.offset;
             while (file.bytesPastMark() < curColPosition.offset + curColPosition.width && !outOfBounds)
             {
                 IColumn column = emptyColumnFamily.getColumnSerializer().deserialize(file);
