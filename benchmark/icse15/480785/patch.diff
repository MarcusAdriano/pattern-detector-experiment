diff --git a/lucene/java/trunk/src/java/org/apache/lucene/store/FSDirectory.java b/lucene/java/trunk/src/java/org/apache/lucene/store/FSDirectory.java
index 62345015..21c41a7e 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/store/FSDirectory.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/store/FSDirectory.java
@@ -504,11 +504,17 @@ public Descriptor(File file, String mode) throws IOException {
   }
 
   private Descriptor file = null;
+  
+  // remember if the file is open, so that we don't try to close it
+  // more than once
+  private boolean isOpen;       
+  
   boolean isClone;
   private long length;
 
   public FSIndexInput(File path) throws IOException {
     file = new Descriptor(path, "r");
+    isOpen = true;
     length = file.length();
   }
 
@@ -533,8 +539,12 @@ protected void readInternal(byte[] b, int offset, int len)
   }
 
   public void close() throws IOException {
-    if (!isClone)
+    // only close the file if this is not a clone and the
+    // file has not been closed yet
+    if (!isClone && isOpen) {
       file.close();
+      isOpen = false;
+    }
   }
 
   protected void seekInternal(long position) {
@@ -566,8 +576,13 @@ boolean isFDValid() throws IOException {
 class FSIndexOutput extends BufferedIndexOutput {
   RandomAccessFile file = null;
 
+  // remember if the file is open, so that we don't try to close it
+  // more than once
+  private boolean isOpen;
+
   public FSIndexOutput(File path) throws IOException {
     file = new RandomAccessFile(path, "rw");
+    isOpen = true;
   }
 
   /** output methods: */
@@ -575,8 +590,12 @@ public void flushBuffer(byte[] b, int size) throws IOException {
     file.write(b, 0, size);
   }
   public void close() throws IOException {
+    // only close the file if it has not been closed yet
+    if (isOpen) {
     super.close();
     file.close();
+      isOpen = false;
+    }
   }
 
   /** Random-access methods */
@@ -589,7 +608,7 @@ public long length() throws IOException {
   }
 
   protected void finalize() throws IOException {
-    file.close();          // close the file
+    close();          // close the file
   }
 
 }
