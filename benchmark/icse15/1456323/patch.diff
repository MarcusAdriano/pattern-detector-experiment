diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.java
index b208479e..97312e97 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.java
@@ -439,6 +439,7 @@ public SolrInputDocument readDoc(XMLStreamReader parser) throws XMLStreamExcepti
           }
           boost = 1.0f;
           update = null;
+          isNull = false;
           String attrVal = "";
           for (int i = 0; i < parser.getAttributeCount(); i++) {
             attrName = parser.getAttributeLocalName(i);
diff --git a/lucene/dev/branches/branch_4x/solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java b/lucene/dev/branches/branch_4x/solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
index dd823e8f..b9254e56 100644
--- a/lucene/dev/branches/branch_4x/solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
+++ b/lucene/dev/branches/branch_4x/solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
@@ -1440,6 +1440,29 @@ public void testSetNullUpdates() throws Exception {
     assertNull("Null update failed. Value still exists in document", response.getResults().get(0).getFieldValue("multi_ss"));
   }
   
+  public void testSetNullUpdateOrder() throws Exception {
+    SolrServer solrServer = getSolrServer();
+    SolrInputDocument doc = new SolrInputDocument();
+    doc.addField("id", "testSetNullUpdateOrder");
+    doc.addField("single_s", "test-value");
+    doc.addField("multi_ss", Arrays.asList("first", "second"));
+    solrServer.add(doc);
+    solrServer.commit(true, true);
+
+    Map<String, Object> map = Maps.newHashMap();
+    map.put("set", null);
+    doc = new SolrInputDocument();
+    doc.addField("multi_ss", map);
+    doc.addField("id", "testSetNullUpdateOrder");
+    doc.addField("single_s", "test-value2");
+    solrServer.add(doc);
+    solrServer.commit();
+
+    QueryResponse response = solrServer.query(new SolrQuery("id:testSetNullUpdateOrder"));
+    assertEquals("Field included after set null=true not updated via atomic update", "test-value2",
+        response.getResults().get(0).getFieldValue("single_s"));
+  }
+  
   @Test
   public void testQueryWithParams() throws SolrServerException {
     SolrServer server = getSolrServer();
