diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangHarnessJavaTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangHarnessJavaTest.java
index 1080abf9..ae0fd1d5 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangHarnessJavaTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/LangHarnessJavaTest.java
@@ -98,6 +98,16 @@ protected String getArea() {
         return "lang";
     }
     
+    /**
+     * Run a set of language tests (.java files).
+     *
+     * @param args names of the tests to run (the .java suffix should not be
+     * included in the name of a test)
+     */
+    public static void main(String[] args) {
+        junit.textui.TestRunner.run(baseSuite("main()", args));
+    }
+    
     public static Test suite()
     {
         TestSuite suite = new TestSuite("jdbcapi: old harness java tests");
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/deadlockMode.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/deadlockMode.java
index 80787f53..291eca26 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/deadlockMode.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/deadlockMode.java
@@ -50,6 +50,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 	private static boolean passed = false;
 	private Object syncObject = new Object();
 	private int doneCount;
+	private int startedCount;
 	private deadlockMode() {}
 
 	public static void main(String[] args) {
@@ -134,6 +135,16 @@ private void startnew()
 			conn = ij.startJBMS();
 			System.out.println("Starting thread");
 
+			// Don't start until all threads are up and running. Otherwise, the
+			// output may come out in the wrong order (DERBY-2799).
+			synchronized (syncObject) {
+				startedCount++;
+				syncObject.notifyAll();
+				while (startedCount < THREAD_COUNT) {
+					syncObject.wait();
+				}
+			}
+
 			Statement stmt = conn.createStatement();
 			// execute a query to load cache
 			stmt.executeUpdate("update t set i = 456 where i = 456");
