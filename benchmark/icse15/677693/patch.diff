diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/recommender/slopeone/MemoryDiffStorage.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/recommender/slopeone/MemoryDiffStorage.java
index 3e6d5bb3..d6d95c46 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/recommender/slopeone/MemoryDiffStorage.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/recommender/slopeone/MemoryDiffStorage.java
@@ -200,6 +200,7 @@ private void buildAverageDiffs() throws TasteException {
     log.info("Building average diffs...");
     try {
       buildAverageDiffsLock.writeLock().lock();
+      averageDiffs.clear();
       long averageCount = 0L;
       for (User user : dataModel.getUsers()) {
         averageCount = processOneUser(averageCount, user);
diff --git a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/GenericItemBasedRecommenderTest.java b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/GenericItemBasedRecommenderTest.java
index 3dc81e09..82540b43 100644
--- a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/GenericItemBasedRecommenderTest.java
+++ b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/GenericItemBasedRecommenderTest.java
@@ -46,6 +46,9 @@ public void testRecommender() throws Exception {
     RecommendedItem firstRecommended = recommended.get(0);
     assertEquals(new GenericItem<String>("2"), firstRecommended.getItem());
     assertEquals(0.1, firstRecommended.getValue(), EPSILON);
+    recommender.refresh();
+    assertEquals(new GenericItem<String>("2"), firstRecommended.getItem());
+    assertEquals(0.1, firstRecommended.getValue(), EPSILON);
   }
 
   public void testHowMany() throws Exception {
@@ -73,6 +76,10 @@ public void testHowMany() throws Exception {
     for (int i = 0; i < fewRecommended.size(); i++) {
       assertEquals(fewRecommended.get(i).getItem(), moreRecommended.get(i).getItem());
     }
+    recommender.refresh();
+    for (int i = 0; i < fewRecommended.size(); i++) {
+      assertEquals(fewRecommended.get(i).getItem(), moreRecommended.get(i).getItem());
+    }
   }
 
   public void testRescorer() throws Exception {
diff --git a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/GenericUserBasedRecommenderTest.java b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/GenericUserBasedRecommenderTest.java
index 8c69167c..ff6de39d 100644
--- a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/GenericUserBasedRecommenderTest.java
+++ b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/GenericUserBasedRecommenderTest.java
@@ -48,6 +48,9 @@ public void testRecommender() throws Exception {
     RecommendedItem firstRecommended = recommended.get(0);
     assertEquals(new GenericItem<String>("2"), firstRecommended.getItem());
     assertEquals(0.3, firstRecommended.getValue());
+    recommender.refresh();
+    assertEquals(new GenericItem<String>("2"), firstRecommended.getItem());
+    assertEquals(0.3, firstRecommended.getValue());
   }
 
   public void testHowMany() throws Exception {
@@ -66,6 +69,10 @@ public void testHowMany() throws Exception {
     for (int i = 0; i < fewRecommended.size(); i++) {
       assertEquals(fewRecommended.get(i).getItem(), moreRecommended.get(i).getItem());
     }
+    recommender.refresh();
+    for (int i = 0; i < fewRecommended.size(); i++) {
+      assertEquals(fewRecommended.get(i).getItem(), moreRecommended.get(i).getItem());
+    }
   }
 
   public void testRescorer() throws Exception {
diff --git a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommenderTest.java b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommenderTest.java
index 07a97f21..a13d3bbc 100644
--- a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommenderTest.java
+++ b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/TreeClusteringRecommenderTest.java
@@ -48,6 +48,9 @@ public void testNoRecommendations() throws Exception {
     List<RecommendedItem> recommended = recommender.recommend("test1", 1);
     assertNotNull(recommended);
     assertEquals(0, recommended.size());
+    recommender.refresh();
+    assertNotNull(recommended);
+    assertEquals(0, recommended.size());
   }
 
   public void testHowMany() throws Exception {
@@ -66,6 +69,10 @@ public void testHowMany() throws Exception {
     for (int i = 0; i < fewRecommended.size(); i++) {
       assertEquals(fewRecommended.get(i).getItem(), moreRecommended.get(i).getItem());
     }
+    recommender.refresh();
+    for (int i = 0; i < fewRecommended.size(); i++) {
+      assertEquals(fewRecommended.get(i).getItem(), moreRecommended.get(i).getItem());
+    }
   }
 
   public void testRescorer() throws Exception {
diff --git a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/slopeone/SlopeOneRecommenderTest.java b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/slopeone/SlopeOneRecommenderTest.java
index e4e67100..f4a34f17 100644
--- a/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/slopeone/SlopeOneRecommenderTest.java
+++ b/lucene/mahout/trunk/core/src/test/java/org/apache/mahout/cf/taste/impl/recommender/slopeone/SlopeOneRecommenderTest.java
@@ -44,6 +44,9 @@ public void testRecommender() throws Exception {
     RecommendedItem firstRecommended = recommended.get(0);
     assertEquals(new GenericItem<String>("2"), firstRecommended.getItem());
     assertEquals(0.34803885284992736, firstRecommended.getValue(), EPSILON);
+    recommender.refresh();
+    assertEquals(new GenericItem<String>("2"), firstRecommended.getItem());
+    assertEquals(0.34803885284992736, firstRecommended.getValue(), EPSILON);
   }
 
   public void testHowMany() throws Exception {
@@ -60,6 +63,10 @@ public void testHowMany() throws Exception {
     for (int i = 0; i < fewRecommended.size(); i++) {
       assertEquals(fewRecommended.get(i).getItem(), moreRecommended.get(i).getItem());
     }
+    recommender.refresh();
+    for (int i = 0; i < fewRecommended.size(); i++) {
+      assertEquals(fewRecommended.get(i).getItem(), moreRecommended.get(i).getItem());
+    }
   }
 
   public void testRescorer() throws Exception {
