diff --git a/lucene/dev/branches/solrcloud/solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer.java b/lucene/dev/branches/solrcloud/solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer.java
index 0a171ac4..6a228c81 100644
--- a/lucene/dev/branches/solrcloud/solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer.java
+++ b/lucene/dev/branches/solrcloud/solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrServer.java
@@ -95,7 +95,7 @@ public void connect() {
         if (zkStateReader == null) {
           try {
             ZkStateReader zk = new ZkStateReader(zkHost, zkConnectTimeout,
-                zkClientTimeout, true);
+                zkClientTimeout);
             zk.createClusterStateWatchersAndUpdate();
             zkStateReader = zk;
           } catch (InterruptedException e) {
diff --git a/lucene/dev/branches/solrcloud/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java b/lucene/dev/branches/solrcloud/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java
index bc010a00..bbfff4de 100644
--- a/lucene/dev/branches/solrcloud/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java
+++ b/lucene/dev/branches/solrcloud/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java
@@ -75,19 +75,11 @@ public Thread newThread(Runnable r) {
   
   private boolean closeClient = false;
 
-  private boolean debugLog;
-  
   public ZkStateReader(SolrZkClient zkClient) {
     this.zkClient = zkClient;
   }
   
   public ZkStateReader(String zkServerAddress, int zkClientTimeout, int zkClientConnectTimeout) throws InterruptedException, TimeoutException, IOException {
-    this(zkServerAddress, zkClientTimeout, zkClientConnectTimeout, false);
-  }
-  
-  public ZkStateReader(String zkServerAddress, int zkClientTimeout, int zkClientConnectTimeout, boolean debugLog) throws InterruptedException, TimeoutException, IOException {
-    this.debugLog = debugLog;
-    if (debugLog) System.out.println("NEW ZKREADER");
     closeClient = true;
     zkClient = new SolrZkClient(zkServerAddress, zkClientTimeout, zkClientConnectTimeout,
         // on reconnect, reload cloud info
@@ -149,7 +141,6 @@ public synchronized void createClusterStateWatchersAndUpdate() throws KeeperExce
       
       @Override
       public void process(WatchedEvent event) {
-        if (debugLog) System.out.println("cluster change triggered");
         log.info("A cluster state change has occurred");
         try {
           
@@ -160,7 +151,6 @@ public void process(WatchedEvent event) {
             byte[] data = zkClient.getData(CLUSTER_STATE, this, null);
             CloudState clusterState = CloudState.load(data,
                 ZkStateReader.this.cloudState.getLiveNodes());
-            if (debugLog) System.out.println("update cluster:" + clusterState.getCollections());
             // update volatile
             cloudState = clusterState;
           }
@@ -226,7 +216,6 @@ public void process(WatchedEvent event) {
       Set<String> liveNodeSet = new HashSet<String>();
       liveNodeSet.addAll(liveNodes);
       CloudState clusterState = CloudState.load(zkClient, liveNodeSet);
-      if (debugLog) System.out.println("make cluster:" + clusterState.getCollections());
       this.cloudState = clusterState;
     }
   }
