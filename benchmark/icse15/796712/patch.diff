diff --git a/db/derby/code/branches/10.4/java/client/org/apache/derby/client/am/Lob.java b/db/derby/code/branches/10.4/java/client/org/apache/derby/client/am/Lob.java
index 8fbe6500..17fcbe66 100644
--- a/db/derby/code/branches/10.4/java/client/org/apache/derby/client/am/Lob.java
+++ b/db/derby/code/branches/10.4/java/client/org/apache/derby/client/am/Lob.java
@@ -404,7 +404,8 @@ protected void checkValidity() throws SQLException{
             throw se.getSQLException();
         }
 
-        if(!isValid_ || transactionID_ != agent_.connection_.getTransactionID())
+        if(!isValid_ || (isLocator()  && 
+        		(transactionID_ != agent_.connection_.getTransactionID())))
             throw new SqlException(null,new ClientMessageId(SQLState.LOB_OBJECT_INVALID))
                                                   .getSQLException();
     }
diff --git a/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java b/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java
index 569d37fd..136cca9f 100644
--- a/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java
+++ b/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java
@@ -111,6 +111,8 @@ public void testUnconsumedParameter() throws SQLException
         
         PreparedStatement ps = prepareStatement( sql);
         ps.setBinaryStream( 1, is,data.length);
+        //DERBY-4312 Make sure commit() doesn't interfere here
+        commit();
         ps.executeUpdate();          
         // Make sure things still work ok when we have a parameter that does get consumed.
         // insert a matching row.
@@ -208,6 +210,8 @@ public void testSetCharacterStream() throws Exception {
         Reader streamReader = new LoopingAlphabetReader(
                 clobLength, CharAlphabet.tamil());
         ps.setCharacterStream(1, streamReader, clobLength);
+        //DERBY-4312 make sure commit() doesn't interfere
+        commit();
         ps.executeUpdate();
         streamReader.close();
         ps.close();
@@ -1301,6 +1305,8 @@ public void testLockingWithLongRowClob() throws Exception
         InputStream streamIn = new LoopingAlphabetStream(10000);
         ps.setAsciiStream(5, streamIn, 10000);
         ps.setInt(6, 1);
+        // DERBY-4312 make sure commit() doesn't interfere here.
+        commit();
         ps.executeUpdate();
         streamIn.close();
         ps.close();
