diff --git a/db/derby/code/branches/10.7/java/engine/org/apache/derby/impl/sql/compile/CreateTriggerNode.java b/db/derby/code/branches/10.7/java/engine/org/apache/derby/impl/sql/compile/CreateTriggerNode.java
index 949b3097..77893997 100644
--- a/db/derby/code/branches/10.7/java/engine/org/apache/derby/impl/sql/compile/CreateTriggerNode.java
+++ b/db/derby/code/branches/10.7/java/engine/org/apache/derby/impl/sql/compile/CreateTriggerNode.java
@@ -514,10 +514,9 @@ private boolean bindReferencesClause(DataDictionary dd) throws StandardException
 			ResultColumn rc;
 			ColumnDescriptor cd;
 			//This is the most interesting case for us. If we are here, 
-			//then it means that the trigger is defined at the row level
-			//and a set of trigger columns are specified in the CREATE
-			//TRIGGER statement. This can only happen for an UPDATE
-			//trigger.
+			//then it means that a set of trigger columns are specified
+			//in the CREATE TRIGGER statement. This can only happen for
+			//an UPDATE trigger.
 			//eg
 			//CREATE TRIGGER tr1 AFTER UPDATE OF c12 ON table1 
 			//    REFERENCING OLD AS oldt NEW AS newt
@@ -577,8 +576,6 @@ private boolean bindReferencesClause(DataDictionary dd) throws StandardException
 		else
 		{
 			//This is a table level trigger	        
-			//Total Number of columns in the trigger table
-			int numberOfColsInTriggerTable = triggerTableDescriptor.getNumberOfColumns();
 			StringBuffer newText = new StringBuffer();
 			/*
 			** For a statement trigger, we find all FromBaseTable nodes.  If
@@ -623,12 +620,6 @@ private boolean bindReferencesClause(DataDictionary dd) throws StandardException
 					newText.append(baseTableName).append(" ");
 				}
 				start=tokEndOffset-actionOffset+1;
-				//If we are dealing with statement trigger, then we will read 
-				//all the columns from the trigger table since trigger will be
-				//fired for any of the columns in the trigger table.
-				referencedColInts= new int[numberOfColsInTriggerTable];
-				for (int j=0; j < numberOfColsInTriggerTable; j++)
-					referencedColInts[j]=j+1;
 			}
 			if (start < originalActionText.length())
 			{
