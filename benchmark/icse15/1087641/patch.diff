diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/types/SynonymAliasInfo.java b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/types/SynonymAliasInfo.java
index 91b9e369..08a74f73 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/types/SynonymAliasInfo.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/types/SynonymAliasInfo.java
@@ -23,6 +23,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 import org.apache.derby.iapi.services.io.Formatable;
 import org.apache.derby.iapi.services.io.StoredFormatIds;
+import org.apache.derby.iapi.util.IdUtil;
 import org.apache.derby.catalog.AliasInfo;
 import java.io.IOException;
 import java.io.ObjectInput;
@@ -99,7 +100,7 @@ public void writeExternal( ObjectOutput out )
 	public	int	getTypeFormatId()	{ return StoredFormatIds.SYNONYM_INFO_V01_ID; }
 
 	public String toString() {
-		return "\"" + schemaName + "\".\"" + tableName + "\"";
+        return IdUtil.mkQualifiedName(schemaName, tableName);
 	}
 
 	public String getMethodName()
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SynonymTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SynonymTest.java
index 8f245c32..485de204 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SynonymTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SynonymTest.java
@@ -28,6 +28,7 @@
 
 import org.apache.derbyTesting.junit.BaseJDBCTestCase;
 import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
+import org.apache.derbyTesting.junit.JDBC;
 
 /**
  * Synonym testing using junit
@@ -92,4 +93,26 @@ public void testSynonymsInSearchedDeleteDERBY4110()
         st.executeUpdate("drop schema test2 restrict");
         st.executeUpdate("drop schema test1 restrict");
     }
+
+    /**
+     * Verify the fix for DERBY-5168. SynonymAliasInfo.toString() used to
+     * return a value with incorrect syntax if the synonym referred to a
+     * table that had a double quote character either in its name or in the
+     * schema name.
+     */
+    public void testSynonymsForTablesWithDoubleQuotes() throws SQLException {
+        setAutoCommit(false);
+        Statement s = createStatement();
+        s.execute("create schema \"\"\"\"");
+        s.execute("create table \"\"\"\".\"\"\"\" (x int)");
+        s.execute("create synonym derby_5168_synonym for \"\"\"\".\"\"\"\"");
+
+        // We can exercise SynonymAliasInfo.toString() by reading the ALIASINFO
+        // column in SYS.SYSALIASES. This assert used to fail before the fix.
+        JDBC.assertSingleValueResultSet(
+            s.executeQuery(
+                "select aliasinfo from sys.sysaliases " +
+                "where alias = 'DERBY_5168_SYNONYM'"),
+            "\"\"\"\".\"\"\"\"");
+    }
 }
