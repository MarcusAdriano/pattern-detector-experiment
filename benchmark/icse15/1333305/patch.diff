diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/LogicalConnection.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/LogicalConnection.java
index 701d4e7c..fbe5d5d5 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/LogicalConnection.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/LogicalConnection.java
@@ -197,7 +197,7 @@ synchronized public PreparedStatement preparePositionedUpdateStatement(String sq
 		}
     }
 
-    public String nativeSQL(String sql) throws SQLException {
+    synchronized public String nativeSQL(String sql) throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
 	        return physicalConnection_.nativeSQL(sql);
@@ -217,7 +217,7 @@ synchronized public void setAutoCommit(boolean autoCommit) throws SQLException {
 		}
     }
 
-    public boolean getAutoCommit() throws SQLException {
+    synchronized public boolean getAutoCommit() throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
 	        return physicalConnection_.getAutoCommit();
@@ -257,7 +257,7 @@ synchronized public void setTransactionIsolation(int level) throws SQLException
 		}
     }
 
-    public int getTransactionIsolation() throws SQLException {
+    synchronized public int getTransactionIsolation() throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
 	        return physicalConnection_.getTransactionIsolation();
@@ -267,7 +267,7 @@ public int getTransactionIsolation() throws SQLException {
 		}
     }
 
-    public java.sql.SQLWarning getWarnings() throws SQLException {
+    synchronized public java.sql.SQLWarning getWarnings() throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
 	        return physicalConnection_.getWarnings();
@@ -363,7 +363,7 @@ synchronized public void setReadOnly(boolean readOnly) throws SQLException {
 		}
     }
 
-    public boolean isReadOnly() throws SQLException {
+    synchronized public boolean isReadOnly() throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
 	        return physicalConnection_.isReadOnly();
@@ -383,7 +383,7 @@ synchronized public void setCatalog(String catalog) throws SQLException {
 		}
     }
 
-    public String getCatalog() throws SQLException {
+    synchronized public String getCatalog() throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
 	        return physicalConnection_.getCatalog();
@@ -428,7 +428,7 @@ public String getCatalog() throws SQLException {
 		}
     }
 
-    public java.util.Map getTypeMap() throws SQLException {
+    synchronized public java.util.Map getTypeMap() throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
 	        return physicalConnection_.getTypeMap();
@@ -448,7 +448,7 @@ synchronized public void setTypeMap(java.util.Map map) throws SQLException {
 		}
     }
 
-    public java.sql.Statement createStatement(int resultSetType, int resultSetConcurrency,
+    synchronized public java.sql.Statement createStatement(int resultSetType, int resultSetConcurrency,
                                               int resultSetHoldability) throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
@@ -459,7 +459,7 @@ synchronized public void setTypeMap(java.util.Map map) throws SQLException {
 		}
     }
 
-    public java.sql.CallableStatement prepareCall(String sql, int resultSetType,
+    synchronized public java.sql.CallableStatement prepareCall(String sql, int resultSetType,
                                                   int resultSetConcurrency,
                                                   int resultSetHoldability) throws SQLException {
 		try {
@@ -471,7 +471,7 @@ synchronized public void setTypeMap(java.util.Map map) throws SQLException {
 		}
     }
 
-    public java.sql.PreparedStatement prepareStatement(String sql, int resultSetType,
+    synchronized public java.sql.PreparedStatement prepareStatement(String sql, int resultSetType,
                                                        int resultSetConcurrency, int resultSetHoldability)
             throws SQLException {
 		try {
@@ -484,7 +484,7 @@ synchronized public void setTypeMap(java.util.Map map) throws SQLException {
 		}
     }
 
-    public java.sql.PreparedStatement prepareStatement(String sql, int autoGeneratedKeys)
+    synchronized public java.sql.PreparedStatement prepareStatement(String sql, int autoGeneratedKeys)
             throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
@@ -495,7 +495,7 @@ synchronized public void setTypeMap(java.util.Map map) throws SQLException {
 		}
     }
 
-    public java.sql.PreparedStatement prepareStatement(String sql, int columnIndexes[])
+    synchronized public java.sql.PreparedStatement prepareStatement(String sql, int columnIndexes[])
             throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
@@ -506,7 +506,7 @@ synchronized public void setTypeMap(java.util.Map map) throws SQLException {
 		}
     }
 
-    public java.sql.PreparedStatement prepareStatement(String sql, String columnNames[])
+    synchronized public java.sql.PreparedStatement prepareStatement(String sql, String columnNames[])
             throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
@@ -517,7 +517,7 @@ synchronized public void setTypeMap(java.util.Map map) throws SQLException {
 		}
     }
 
-    public void setHoldability(int holdability) throws SQLException {
+    synchronized public void setHoldability(int holdability) throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
 	        physicalConnection_.setHoldability(holdability);
@@ -527,7 +527,7 @@ public void setHoldability(int holdability) throws SQLException {
 		}
     }
 
-    public int getHoldability() throws SQLException {
+    synchronized public int getHoldability() throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
 	        return physicalConnection_.getHoldability();
@@ -537,7 +537,7 @@ public int getHoldability() throws SQLException {
 		}
     }
 
-    public java.sql.Savepoint setSavepoint() throws SQLException {
+    synchronized public java.sql.Savepoint setSavepoint() throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
 	        return physicalConnection_.setSavepoint();
@@ -547,7 +547,7 @@ public int getHoldability() throws SQLException {
 		}
     }
 
-    public java.sql.Savepoint setSavepoint(String name) throws SQLException {
+    synchronized public java.sql.Savepoint setSavepoint(String name) throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
 	        return physicalConnection_.setSavepoint(name);
@@ -557,7 +557,7 @@ public int getHoldability() throws SQLException {
 		}
     }
 
-    public void rollback(java.sql.Savepoint savepoint) throws SQLException {
+    synchronized public void rollback(java.sql.Savepoint savepoint) throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
 	        physicalConnection_.rollback(savepoint);
@@ -567,7 +567,7 @@ public void rollback(java.sql.Savepoint savepoint) throws SQLException {
 		}
     }
 
-    public void releaseSavepoint(java.sql.Savepoint savepoint) throws SQLException {
+    synchronized public void releaseSavepoint(java.sql.Savepoint savepoint) throws SQLException {
 		try {
 	        checkForNullPhysicalConnection();
 	        physicalConnection_.releaseSavepoint(savepoint);
@@ -610,7 +610,7 @@ public int getServerVersion() {
     /**
      * Get the name of the current schema.
      */
-    public String   getSchema() throws SQLException
+    synchronized public String   getSchema() throws SQLException
 	{
 		try {
 	        checkForNullPhysicalConnection();
@@ -624,7 +624,7 @@ public String   getSchema() throws SQLException
     /**
      * Set the default schema for the Connection.
      */
-    public void   setSchema(  String schemaName ) throws SQLException
+    synchronized public void   setSchema(  String schemaName ) throws SQLException
 	{
 		try {
 	        checkForNullPhysicalConnection();
