diff --git a/lucene/solr/trunk/src/webapp/src/org/apache/solr/servlet/SolrRequestParsers.java b/lucene/solr/trunk/src/webapp/src/org/apache/solr/servlet/SolrRequestParsers.java
index 3615aa43..6420ae7a 100644
--- a/lucene/solr/trunk/src/webapp/src/org/apache/solr/servlet/SolrRequestParsers.java
+++ b/lucene/solr/trunk/src/webapp/src/org/apache/solr/servlet/SolrRequestParsers.java
@@ -20,6 +20,8 @@
 import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.Reader;
 import java.io.UnsupportedEncodingException;
 import java.net.URL;
 import java.net.URLDecoder;
@@ -231,20 +233,16 @@ public SolrParams parseParamsAndFillStreams(
     // Rather than return req.getReader(), this uses the default ContentStreamBase method
     // that checks for charset definitions in the ContentType.
     
-    streams.add( new ContentStreamBase() {
-      @Override
+    streams.add( new ContentStream() {
       public String getContentType() {
         return req.getContentType();
       }
-      @Override
       public String getName() {
         return null; // Is there any meaningful name?
       }
-      @Override
       public String getSourceInfo() {
         return null; // Is there any meaningful source?
       }
-      @Override
       public Long getSize() { 
         String v = req.getHeader( "Content-Length" );
         if( v != null ) {
@@ -255,6 +253,12 @@ public Long getSize() {
       public InputStream getStream() throws IOException {
         return req.getInputStream();
       }
+      public Reader getReader() throws IOException {
+        String charset = ContentStreamBase.getCharsetFromContentType( req.getContentType() );
+        return charset == null 
+          ? new InputStreamReader( getStream() )
+          : new InputStreamReader( getStream(), charset );
+      }
     });
     return SolrRequestParsers.parseQueryString( req.getQueryString() );
   }
