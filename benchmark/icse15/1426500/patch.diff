diff --git a/aries/trunk/versioning/versioning-checker/src/main/java/org/apache/aries/versioning/check/BundleCompatibility.java b/aries/trunk/versioning/versioning-checker/src/main/java/org/apache/aries/versioning/check/BundleCompatibility.java
index eeefcd64..1aefd9bf 100644
--- a/aries/trunk/versioning/versioning-checker/src/main/java/org/apache/aries/versioning/check/BundleCompatibility.java
+++ b/aries/trunk/versioning/versioning-checker/src/main/java/org/apache/aries/versioning/check/BundleCompatibility.java
@@ -46,6 +46,7 @@
 import org.apache.aries.versioning.utils.MethodDeclaration;
 import org.apache.aries.versioning.utils.SemanticVersioningClassVisitor;
 import org.apache.aries.versioning.utils.SemanticVersioningUtils;
+import org.apache.aries.versioning.utils.SerialVersionClassVisitor;
 import org.objectweb.asm.ClassReader;
 import org.osgi.framework.Constants;
 import org.osgi.framework.Version;
@@ -533,7 +534,9 @@ private String readXsdFile(InputStream is) {
   }
 
   private SemanticVersioningClassVisitor getVisitor(IFile file, URLClassLoader loader) {
-    SemanticVersioningClassVisitor oldcv = new SemanticVersioningClassVisitor(loader);
+   
+    SerialVersionClassVisitor sv = new SerialVersionClassVisitor(null);
+    SemanticVersioningClassVisitor oldcv = new SemanticVersioningClassVisitor(loader, sv);
     try {
       ClassReader cr = new ClassReader(file.open());
       cr.accept(oldcv, 0);
diff --git a/aries/trunk/versioning/versioning-checker/src/main/java/org/apache/aries/versioning/utils/ClassDeclaration.java b/aries/trunk/versioning/versioning-checker/src/main/java/org/apache/aries/versioning/utils/ClassDeclaration.java
index 7d5c01b7..c17b444c 100644
--- a/aries/trunk/versioning/versioning-checker/src/main/java/org/apache/aries/versioning/utils/ClassDeclaration.java
+++ b/aries/trunk/versioning/versioning-checker/src/main/java/org/apache/aries/versioning/utils/ClassDeclaration.java
@@ -405,17 +405,20 @@ private void getSerializableBackCompatable(ClassDeclaration old, List<String> re
 
     }
 
-    private Long getSerialVersionUID(ClassDeclaration cd) {
+    private long getSerialVersionUID(ClassDeclaration cd) {
         FieldDeclaration serialID = cd.getAllFields().get(SemanticVersioningUtils.SERIAL_VERSION_UTD);
         if (serialID != null) {
             if (serialID.isFinal() && serialID.isStatic() && Type.LONG_TYPE.equals(Type.getType(serialID.getDesc()))) {
                 if (serialID.getValue() != null) {
-                    return (Long) (serialID.getValue());
+            return (Long)serialID.getValue();
+
+          } else {
+            return 0;
                 }
             }
         }
         // get the generated value
-        return cd.getSerialVisitor() == null? null: cd.getSerialVisitor().getComputeSerialVersionUID();
+        return cd.getSerialVisitor().getComputeSerialVersionUID();
     }
 
     private boolean isFieldTypeSame(FieldDeclaration bef_fd, FieldDeclaration cur_fd) {
