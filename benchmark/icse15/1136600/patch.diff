diff --git a/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/memory/TriggerTests.java b/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/memory/TriggerTests.java
index 1c3829a2..7b72dcc5 100644
--- a/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/memory/TriggerTests.java
+++ b/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/functionTests/tests/memory/TriggerTests.java
@@ -241,19 +241,11 @@ public static Test suite() {
 	 * @throws SQLException
 	 */
 	public void basicSetup() throws SQLException{
-        Statement s = createStatement();
-		try {
-			s.execute("drop table table1");
-		} catch (SQLException sqle) {}
-
-		try {
-			s.execute("drop table table2");
-		} catch (SQLException sqle) {}
-
-		try {
-			s.execute("drop table table3");
-		} catch (SQLException sqle) {}
+        dropTable("TABLE1");
+        dropTable("TABLE2");
+        dropTable("TABLE3");
 
+        Statement s = createStatement();
 		try {
 			s.execute("drop trigger trigger1");
 		} catch (SQLException sqle) {}
diff --git a/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java b/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java
index 881de42e..806f2919 100644
--- a/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java
+++ b/db/derby/code/branches/10.3/java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java
@@ -780,6 +780,42 @@ private void assertEscapedTableRowCount(String escapedTableName, int rowCount)
         s.close();
     }
 
+    /**
+     * Execute a DROP TABLE command using the passed in tableName as-is
+     * and the default connection.
+     * If the DROP TABLE fails because the table does not exist then
+     * the exception is ignored.
+     * @param tableName Table to be dropped.
+     * @throws SQLException
+     */
+    public final void dropTable(String tableName) throws SQLException
+    {
+       dropTable(getConnection(), tableName);
+    }
+
+    /**
+     * Execute a DROP TABLE command using the passed in tableName as-is.
+     * If the DROP TABLE fails because the table does not exist then
+     * the exception is ignored.
+     * @param conn Connection to execute the DROP TABLE
+     * @param tableName Table to be dropped.
+     * @throws SQLException
+     */
+    public static void dropTable(Connection conn, String tableName) throws SQLException
+    {
+        Statement statement = conn.createStatement();
+        String dropSQL = "DROP TABLE "  + tableName;
+        try {
+
+            statement.executeUpdate(dropSQL);
+        } catch (SQLException e) {
+            assertSQLState("42Y55", e);
+        }
+        finally {
+            statement.close();
+        }
+    }
+    
     /**
      * Assert that the query fails (either in compilation,
      * execution, or retrieval of results--doesn't matter)
