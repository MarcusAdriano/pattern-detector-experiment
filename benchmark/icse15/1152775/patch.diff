diff --git a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestPayloads.java b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestPayloads.java
index b32236ea..d04044f8 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestPayloads.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/test/org/apache/lucene/index/TestPayloads.java
@@ -21,7 +21,6 @@
 import java.io.IOException;
 import java.io.Reader;
 import java.io.UnsupportedEncodingException;
-import java.nio.charset.Charset;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
@@ -40,7 +39,6 @@
 import org.apache.lucene.index.IndexWriterConfig.OpenMode;
 import org.apache.lucene.store.Directory;
 import org.apache.lucene.util.LuceneTestCase;
-import org.apache.lucene.util.UnicodeUtil;
 import org.apache.lucene.util._TestUtil;
 
 
@@ -342,10 +340,16 @@ private void performTest(Directory dir) throws Exception {
     }
     
     private void generateRandomData(byte[] data) {
-      // this test needs the random data to be valid unicode: historically it hasn't done a great job
-      for (int i = 0; i < data.length; i++) {
-        data[i] = (byte) _TestUtil.nextInt(random, 'a', 'z');
+      // this test needs the random data to be valid unicode
+      String s = _TestUtil.randomFixedByteLengthUnicodeString(random, data.length);
+      byte b[];
+      try {
+        b = s.getBytes("UTF-8");
+      } catch (UnsupportedEncodingException e) {
+        throw new RuntimeException(e);
       }
+      assert b.length == data.length;
+      System.arraycopy(b, 0, data, 0, b.length);
     }
 
     private byte[] generateRandomData(int n) {
diff --git a/lucene/dev/branches/branch_3x/lucene/src/test-framework/org/apache/lucene/util/_TestUtil.java b/lucene/dev/branches/branch_3x/lucene/src/test-framework/org/apache/lucene/util/_TestUtil.java
index 15a0376c..c657dc0b 100644
--- a/lucene/dev/branches/branch_3x/lucene/src/test-framework/org/apache/lucene/util/_TestUtil.java
+++ b/lucene/dev/branches/branch_3x/lucene/src/test-framework/org/apache/lucene/util/_TestUtil.java
@@ -240,7 +240,7 @@ public static void randomFixedLengthUnicodeString(Random random, char[] chars, i
       } else if (t <= 1) {
         chars[i++] = (char) random.nextInt(0x80);
       } else if (2 == t) {
-        chars[i++] = (char) nextInt(random, 0x80, 0x800);
+        chars[i++] = (char) nextInt(random, 0x80, 0x7ff);
       } else if (3 == t) {
         chars[i++] = (char) nextInt(random, 0x800, 0xd7ff);
       } else if (4 == t) {
@@ -348,7 +348,7 @@ public static String randomFixedByteLengthUnicodeString(Random r, int length) {
         buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);
         bytes -= 3;
       } else if (3 == t) {
-        buffer[i] = (char) nextInt(r, 0xe000, 0xffff);
+        buffer[i] = (char) nextInt(r, 0xe000, 0xfffe);
         bytes -= 3;
       } else if (4 == t) {
         // Make a surrogate pair
