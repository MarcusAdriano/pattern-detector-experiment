diff --git a/lucene/java/trunk/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java b/lucene/java/trunk/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java
index 3c77b7a6..cab122fd 100644
--- a/lucene/java/trunk/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java
+++ b/lucene/java/trunk/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java
@@ -72,7 +72,6 @@
   private float bStart = 2.0f;
   private float bEnd = 1.0f;
 
-  private IndexReader reader;
   private IndexSearcher searcher;
 
   // minimum score for hits generated by the spell checker query
@@ -284,11 +283,12 @@ private static void add(BooleanQuery q, String name, String value) {
    * @throws IOException
    */
   public void clearIndex() throws IOException {
-    if (IndexReader.isLocked(spellIndex)){
-      IndexReader.unlock(spellIndex);
-    }
     IndexWriter writer = new IndexWriter(spellIndex, null, true);
     writer.close();
+    
+    //close the old searcher
+    searcher.close();
+    searcher = new IndexSearcher(this.spellIndex);
   }
 
   /**
@@ -298,10 +298,7 @@ public void clearIndex() throws IOException {
    * @return true iff the word exists in the index
    */
   public boolean exist(String word) throws IOException {
-    if (reader == null) {
-      reader = IndexReader.open(spellIndex);
-    }
-    return reader.docFreq(new Term(F_WORD, word)) > 0;
+    return searcher.docFreq(new Term(F_WORD, word)) > 0;
   }
 
   /**
@@ -310,11 +307,7 @@ public boolean exist(String word) throws IOException {
    * @throws IOException
    */
   public void indexDictionary(Dictionary dict) throws IOException {
-    if (IndexReader.isLocked(spellIndex)){
-      IndexReader.unlock(spellIndex);
-    }
-    IndexWriter writer = new IndexWriter(spellIndex, new WhitespaceAnalyzer(),
-        !IndexReader.indexExists(spellIndex));
+    IndexWriter writer = new IndexWriter(spellIndex, true, new WhitespaceAnalyzer());
     writer.setMergeFactor(300);
     writer.setMaxBufferedDocs(150);
 
@@ -338,12 +331,6 @@ public void indexDictionary(Dictionary dict) throws IOException {
     // close writer
     writer.optimize();
     writer.close();
-    // close reader so it will be re-opened (and see the new content) when exist()
-    // is called the next time:
-    if (reader != null) {
-      reader.close();
-      reader = null;
-    }
     // also re-open the spell index to see our own changes when the next suggestion
     // is fetched:
     searcher.close();
@@ -395,17 +382,4 @@ private static void addGram(String text, Document doc, int ng1, int ng2) {
       }
     }
   }
-
-  /**
-   * Closes the internal IndexReader.
-   */
-  protected void finalize() throws Throwable {
-    try {
-      if (reader != null) {
-        reader.close();
-      }
-    } finally {
-      super.finalize();
-    }
-  }
 }
