diff --git a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/io/sstable/SSTableLoader.java b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/io/sstable/SSTableLoader.java
index 6297f8f9..ea0a0cf0 100644
--- a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/io/sstable/SSTableLoader.java
+++ b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/io/sstable/SSTableLoader.java
@@ -101,7 +101,7 @@ public LoaderFuture stream() throws IOException
 
     public LoaderFuture stream(Set<InetAddress> toIgnore) throws IOException
     {
-        client.init();
+        client.init(keyspace);
 
         Collection<SSTableReader> sstables = openSSTables();
         if (sstables.isEmpty())
@@ -234,7 +234,7 @@ public void run()
          * This method is guaranted to be called before any other method of a
          * client.
          */
-        public abstract void init();
+        public abstract void init(String keyspace);
 
         /**
          * Stop the client.
diff --git a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/StorageService.java b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/StorageService.java
index 31f96437..a5f7a096 100644
--- a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/StorageService.java
+++ b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/service/StorageService.java
@@ -2472,7 +2472,15 @@ public void bulkLoad(String directory)
 
         SSTableLoader.Client client = new SSTableLoader.Client()
         {
-            public void init() {}
+            public void init(String keyspace)
+            {
+                for (Map.Entry<Range, List<InetAddress>> entry : StorageService.instance.getRangeToAddressMap(keyspace).entrySet())
+                {
+                    Range range = entry.getKey();
+                    for (InetAddress endpoint : entry.getValue())
+                        addRangeForEndpoint(range, endpoint);
+                }
+            }
 
             public boolean validateColumnFamily(String keyspace, String cfName)
             {
diff --git a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/tools/BulkLoader.java b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/tools/BulkLoader.java
index 82a6d6d0..63c1a8db 100644
--- a/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/tools/BulkLoader.java
+++ b/cassandra/branches/cassandra-0.8/src/java/org/apache/cassandra/tools/BulkLoader.java
@@ -57,7 +57,7 @@ public static void main(String args[]) throws IOException
         LoaderOptions options = LoaderOptions.parseArgs(args);
         try
         {
-            SSTableLoader loader = new SSTableLoader(options.directory, new ExternalClient(options.directory.getName(), options), options);
+            SSTableLoader loader = new SSTableLoader(options.directory, new ExternalClient(options), options);
             SSTableLoader.LoaderFuture future = loader.stream(options.ignores);
 
             if (options.noProgress)
@@ -164,18 +164,16 @@ private int mbPerSec(long bytes, long timeInMs)
 
     static class ExternalClient extends SSTableLoader.Client
     {
-        private final String keyspace;
-        private final Map<String, Set<String>> knownCfs = new HashMap<String, Set<String>>();
+        private final Map<String, Map<String, CFMetaData>> knownCfs = new HashMap<String, Map<String, CFMetaData>>();
         private final SSTableLoader.OutputHandler outputHandler;
 
-        public ExternalClient(String keyspace, SSTableLoader.OutputHandler outputHandler)
+        public ExternalClient(SSTableLoader.OutputHandler outputHandler)
         {
             super();
-            this.keyspace = keyspace;
             this.outputHandler = outputHandler;
         }
 
-        public void init()
+        public void init(String keyspace)
         {
             outputHandler.output(String.format("Starting client (and waiting %d seconds for gossip) ...", StorageService.RING_DELAY / 1000));
             try
