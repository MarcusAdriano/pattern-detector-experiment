diff --git a/db/derby/code/branches/10.6/java/engine/org/apache/derby/impl/sql/compile/FromSubquery.java b/db/derby/code/branches/10.6/java/engine/org/apache/derby/impl/sql/compile/FromSubquery.java
index 5321118e..95ca1a0a 100644
--- a/db/derby/code/branches/10.6/java/engine/org/apache/derby/impl/sql/compile/FromSubquery.java
+++ b/db/derby/code/branches/10.6/java/engine/org/apache/derby/impl/sql/compile/FromSubquery.java
@@ -148,7 +148,19 @@ public ResultSetNode getSubquery()
 	protected FromTable getFromTableByName(String name, String schemaName, boolean exactMatch)
 		throws StandardException
 	{
-		return super.getFromTableByName(name, schemaName, exactMatch);
+        if (schemaName != null && origTableName != null) {
+            // View can have schema
+            if (!schemaName.equals(origTableName.schemaName)) {
+                return null;
+            }
+            // So far, so good, now go on to compare table name
+        }
+
+        if (getExposedName().equals(name)) {
+            return this;
+        }
+
+        return null;
 	}
 
 	/**
diff --git a/db/derby/code/branches/10.6/java/engine/org/apache/derby/impl/sql/compile/OrderByList.java b/db/derby/code/branches/10.6/java/engine/org/apache/derby/impl/sql/compile/OrderByList.java
index 7dfa00d9..b96f298a 100644
--- a/db/derby/code/branches/10.6/java/engine/org/apache/derby/impl/sql/compile/OrderByList.java
+++ b/db/derby/code/branches/10.6/java/engine/org/apache/derby/impl/sql/compile/OrderByList.java
@@ -114,7 +114,7 @@ public OrderByColumn getOrderByColumn(int position) {
 
 	/**
 	 *	Bind the update columns by their names to the target resultset of the
-	 * cursor specification. This variant is used by InsertNode.
+     * cursor specification.
 	 *
 	 * 	@param target	The underlying result set
 	 *	@exception StandardException		Thrown on error
diff --git a/db/derby/code/branches/10.6/java/testing/org/apache/derbyTesting/functionTests/tests/lang/Derby5005Test.java b/db/derby/code/branches/10.6/java/testing/org/apache/derbyTesting/functionTests/tests/lang/Derby5005Test.java
index e69de29b..72aa834e 100644
--- a/db/derby/code/branches/10.6/java/testing/org/apache/derbyTesting/functionTests/tests/lang/Derby5005Test.java
+++ b/db/derby/code/branches/10.6/java/testing/org/apache/derbyTesting/functionTests/tests/lang/Derby5005Test.java
@@ -0,0 +1,97 @@
+/*
+ * Class org.apache.derbyTesting.functionTests.tests.lang.Derby5005Test
+ *
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *   http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package org.apache.derbyTesting.functionTests.tests.lang;
+
+import java.sql.SQLException;
+import java.sql.Statement;
+import junit.framework.Test;
+import junit.framework.TestSuite;
+import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
+import org.apache.derbyTesting.junit.BaseJDBCTestCase;
+import org.apache.derbyTesting.junit.JDBC;
+import org.apache.derbyTesting.junit.TestConfiguration;
+
+public class Derby5005Test extends BaseJDBCTestCase {
+
+    public Derby5005Test(String name) {
+        super(name);
+    }
+
+    /**
+     * Construct top level suite in this JUnit test
+     *
+     * @return A suite containing embedded and client suites.
+     */
+    public static Test suite()
+    {
+        TestSuite suite = new TestSuite("Derby5005Test");
+
+        suite.addTest(makeSuite());
+        // suite.addTest(
+        //      TestConfiguration.clientServerDecorator(makeSuite()));
+
+        return suite;
+    }
+
+    /**
+     * Construct suite of tests
+     *
+     * @return A suite containing the test cases.
+     */
+    private static Test makeSuite()
+    {
+        return new CleanDatabaseTestSetup(
+            new TestSuite(Derby5005Test.class)) {
+                protected void decorateSQL(Statement s)
+                        throws SQLException {
+                    getConnection().setAutoCommit(false);
+
+                    s.execute("create table app.a (a integer)");
+                    s.execute("create view app.v as select * from app.a");
+                    s.execute("insert into app.a (a) values(1)");
+
+                    getConnection().commit();
+                }
+            };
+    }
+
+    public void testInsertSelectOrderBy5005() throws SQLException {
+
+        Statement s = createStatement();
+
+        JDBC.assertFullResultSet(
+            s.executeQuery("select app.a.a from app.a where app.a.a <> 2 " +
+                           "order by app.a.a asc"),
+            new String[][]{{"1"}});
+
+        JDBC.assertFullResultSet(
+            s.executeQuery("select app.v.a from app.v where app.v.a <> 2 " +
+                           "order by v.a asc"),
+            new String[][]{{"1"}});
+
+        // Next query fails in DERBY-5005:
+        JDBC.assertFullResultSet(
+            s.executeQuery("select v.a from app.v where v.a <> 2 " +
+                           "order by app.v.a asc"),
+            new String[][]{{"1"}});
+    }
+}
diff --git a/db/derby/code/branches/10.6/java/testing/org/apache/derbyTesting/functionTests/tests/lang/_Suite.java b/db/derby/code/branches/10.6/java/testing/org/apache/derbyTesting/functionTests/tests/lang/_Suite.java
index d2553bd8..e1439d4f 100644
--- a/db/derby/code/branches/10.6/java/testing/org/apache/derbyTesting/functionTests/tests/lang/_Suite.java
+++ b/db/derby/code/branches/10.6/java/testing/org/apache/derbyTesting/functionTests/tests/lang/_Suite.java
@@ -215,6 +215,7 @@ public static Test suite() {
         suite.addTest(SequenceGeneratorTest.suite());
         suite.addTest(OLAPTest.suite());
         suite.addTest(OrderByAndOffsetFetchInSubqueries.suite());
+        suite.addTest(Derby5005Test.suite());
         suite.addTest(AutoIncrementTest.suite());
         return suite;
 	}
