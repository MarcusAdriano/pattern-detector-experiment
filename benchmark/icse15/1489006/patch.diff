diff --git a/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/AbstractServiceReferenceRecipe.java b/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/AbstractServiceReferenceRecipe.java
index 5c155da7..5ea9e7e2 100644
--- a/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/AbstractServiceReferenceRecipe.java
+++ b/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/AbstractServiceReferenceRecipe.java
@@ -35,7 +35,6 @@
 import java.util.Map;
 import java.util.Set;
 import java.util.concurrent.Callable;
-import java.util.concurrent.RejectedExecutionException;
 import java.util.concurrent.atomic.AtomicBoolean;
 
 import org.apache.aries.blueprint.BlueprintConstants;
@@ -307,12 +306,9 @@ protected Object createProxy(final Callable<Object> dispatcher, Set<Class<?>> in
         }
     }
 
-    public void serviceChanged(final ServiceEvent event) {
-        final int eventType = event.getType();
-        final ServiceReference ref = event.getServiceReference();
-        try {
-            blueprintContainer.getExecutors().submit(new Runnable() {
-                public void run() {
+    public void serviceChanged(ServiceEvent event) {
+      int eventType = event.getType();
+      ServiceReference ref = event.getServiceReference();
                     switch (eventType) {
                         case ServiceEvent.REGISTERED:
                             serviceAdded(ref);
@@ -325,12 +321,7 @@ public void run() {
                             break;
                     }
                 }
-            });
-        } catch (RejectedExecutionException e) {
-            // The job has been rejected because the executor is shut down
-            // so ignore the exception
-        }
-    }
+
 
     private void serviceAdded(ServiceReference ref) {
         LOGGER.debug("Tracking reference {} for OSGi service {}", ref, getOsgiFilter());
