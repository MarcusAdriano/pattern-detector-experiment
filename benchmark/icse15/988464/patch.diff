diff --git a/incubator/aries/trunk/application/application-management/src/main/java/org/apache/aries/application/management/impl/AriesApplicationManagerImpl.java b/incubator/aries/trunk/application/application-management/src/main/java/org/apache/aries/application/management/impl/AriesApplicationManagerImpl.java
index a7192982..758a71ef 100644
--- a/incubator/aries/trunk/application/application-management/src/main/java/org/apache/aries/application/management/impl/AriesApplicationManagerImpl.java
+++ b/incubator/aries/trunk/application/application-management/src/main/java/org/apache/aries/application/management/impl/AriesApplicationManagerImpl.java
@@ -285,7 +285,7 @@ public AriesApplicationContext install(AriesApplication app) throws BundleExcept
     Dictionary dict = new Hashtable();
     dict.put(ApplicationRepository.REPOSITORY_SCOPE, app.getApplicationMetadata().getApplicationScope());
     _bundleContext.registerService(BundleRepository.class.getName(), 
-        new ApplicationRepository(_resolver), 
+        new ApplicationRepository(app), 
         dict);
     
     AriesApplicationContext result = _applicationContextManager.getApplicationContext(app);
diff --git a/incubator/aries/trunk/application/application-management/src/main/java/org/apache/aries/application/management/repository/ApplicationRepository.java b/incubator/aries/trunk/application/application-management/src/main/java/org/apache/aries/application/management/repository/ApplicationRepository.java
index 551325c9..55448ebf 100644
--- a/incubator/aries/trunk/application/application-management/src/main/java/org/apache/aries/application/management/repository/ApplicationRepository.java
+++ b/incubator/aries/trunk/application/application-management/src/main/java/org/apache/aries/application/management/repository/ApplicationRepository.java
@@ -18,9 +18,9 @@
  */
 package org.apache.aries.application.management.repository;
 
+import java.util.Collections;
 import java.util.Set;
 
-import org.apache.aries.application.ApplicationMetadata;
 import org.apache.aries.application.Content;
 import org.apache.aries.application.DeploymentContent;
 import org.apache.aries.application.management.AriesApplication;
@@ -36,12 +36,12 @@
 {
   private static final int REPOSITORY_COST = 0;
   public static final String REPOSITORY_SCOPE = "repositoryScope";
-  
+  private AriesApplication app;
   AriesApplicationResolver resolver;
 
-  public ApplicationRepository(AriesApplicationResolver resolver)
+  public ApplicationRepository(AriesApplication app)
   {
-    this.resolver = resolver;
+    this.app = app;
   }
   
   public int getCost()
@@ -56,11 +56,18 @@ public BundleSuggestion suggestBundleToUse(DeploymentContent content)
 
   private class BundleSuggestionImpl implements BundleSuggestion
   {
-    private BundleInfo bundleInfo;
+    private BundleInfo bundleInfo = null;
     
     BundleSuggestionImpl(DeploymentContent content)
     {
-      this.bundleInfo = resolver.getBundleInfo(content.getContentName(), content.getExactVersion());
+      if ((app.getBundleInfo() != null) && (!app.getBundleInfo().isEmpty())) {
+        for (BundleInfo bi : app.getBundleInfo()) {
+          if (bi.getSymbolicName().equals(content.getContentName()) && (bi.getVersion().equals(content.getVersion().getExactVersion()))) {
+            bundleInfo = bi;
+            break;
+          }
+        }
+      }
     }
     
     public int getCost()
@@ -70,22 +77,40 @@ public int getCost()
 
     public Set<Content> getExportPackage()
     {
+      if (bundleInfo != null) {
       return bundleInfo.getExportPackage();
+      } else {
+        return null;
+      }
     }
 
     public Set<Content> getImportPackage()
     {
+      if (bundleInfo != null) {
       return bundleInfo.getImportPackage();
+        } else {
+          return null;
+        }
+      
     }
 
     public Version getVersion()
     {
+      if (bundleInfo != null) {
       return bundleInfo.getVersion();
+        } else {        	
+          return null;
+        }
+      
     }
 
     public Bundle install(BundleContext ctx, AriesApplication app) throws BundleException
     {
+      if (bundleInfo != null ) {
       return ctx.installBundle(bundleInfo.getLocation());
+      } else {
+        throw new BundleException("Unable to install the bundle, as the BundleInfo is null.");
+      }
     }
     
   }
