diff --git a/lucene/dev/branches/lucene_solr_4_2/lucene/core/src/java/org/apache/lucene/store/TrackingDirectoryWrapper.java b/lucene/dev/branches/lucene_solr_4_2/lucene/core/src/java/org/apache/lucene/store/TrackingDirectoryWrapper.java
index fe804183..dcfeba13 100644
--- a/lucene/dev/branches/lucene_solr_4_2/lucene/core/src/java/org/apache/lucene/store/TrackingDirectoryWrapper.java
+++ b/lucene/dev/branches/lucene_solr_4_2/lucene/core/src/java/org/apache/lucene/store/TrackingDirectoryWrapper.java
@@ -159,4 +159,8 @@ public void copy(Directory to, String src, String dest, IOContext context) throw
   public Set<String> getCreatedFiles() {
     return createdFileNames;
   }
+
+  public Directory getDelegate() {
+    return other;
+  }
 }
diff --git a/lucene/dev/branches/lucene_solr_4_2/solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState.java b/lucene/dev/branches/lucene_solr_4_2/solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState.java
index 95e49d4e..432ebcec 100644
--- a/lucene/dev/branches/lucene_solr_4_2/solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState.java
+++ b/lucene/dev/branches/lucene_solr_4_2/solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState.java
@@ -186,7 +186,7 @@ public synchronized void newIndexWriter(SolrCore core, boolean rollback, boolean
 
   @Override
   public synchronized void rollbackIndexWriter(SolrCore core) throws IOException {
-    newIndexWriter(core, true, true);
+    newIndexWriter(core, true, false);
   }
   
   protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name, boolean forceNewDirectory) throws IOException {
diff --git a/lucene/dev/branches/lucene_solr_4_2/solr/core/src/test/org/apache/solr/BasicFunctionalityTest.java b/lucene/dev/branches/lucene_solr_4_2/solr/core/src/test/org/apache/solr/BasicFunctionalityTest.java
index b7b6897d..85bfca7d 100644
--- a/lucene/dev/branches/lucene_solr_4_2/solr/core/src/test/org/apache/solr/BasicFunctionalityTest.java
+++ b/lucene/dev/branches/lucene_solr_4_2/solr/core/src/test/org/apache/solr/BasicFunctionalityTest.java
@@ -256,6 +256,9 @@ public void testSomeStuff() throws Exception {
     assertQ(req("id:[100 TO 110]")
             ,"//*[@numFound='0']"
             );
+    
+    assertU(h.simpleTag("rollback"));
+    assertU(commit());
   }
 
 
diff --git a/lucene/dev/branches/lucene_solr_4_2/solr/test-framework/src/java/org/apache/solr/core/MockDirectoryFactory.java b/lucene/dev/branches/lucene_solr_4_2/solr/test-framework/src/java/org/apache/solr/core/MockDirectoryFactory.java
index 90e9fafb..42a55c2d 100644
--- a/lucene/dev/branches/lucene_solr_4_2/solr/test-framework/src/java/org/apache/solr/core/MockDirectoryFactory.java
+++ b/lucene/dev/branches/lucene_solr_4_2/solr/test-framework/src/java/org/apache/solr/core/MockDirectoryFactory.java
@@ -22,6 +22,9 @@
 
 import org.apache.lucene.store.Directory;
 import org.apache.lucene.store.MockDirectoryWrapper;
+import org.apache.lucene.store.NRTCachingDirectory;
+import org.apache.lucene.store.RateLimitedDirectoryWrapper;
+import org.apache.lucene.store.TrackingDirectoryWrapper;
 import org.apache.lucene.util.LuceneTestCase;
 
 /**
@@ -32,8 +35,13 @@
   @Override
   protected Directory create(String path, DirContext dirContext) throws IOException {
     Directory dir = LuceneTestCase.newDirectory();
-    if (dir instanceof MockDirectoryWrapper) {
-      MockDirectoryWrapper mockDirWrapper = (MockDirectoryWrapper) dir;
+    
+    Directory cdir = reduce(dir);
+    cdir = reduce(cdir);
+    cdir = reduce(cdir);
+    
+    if (cdir instanceof MockDirectoryWrapper) {
+      MockDirectoryWrapper mockDirWrapper = (MockDirectoryWrapper) cdir;
       
       // we can't currently do this check because of how
       // Solr has to reboot a new Directory sometimes when replicating
@@ -56,6 +64,20 @@ protected Directory create(String path, DirContext dirContext) throws IOExceptio
     return dir;
   }
   
+  private Directory reduce(Directory dir) {
+    Directory cdir = dir;
+    if (dir instanceof NRTCachingDirectory) {
+      cdir = ((NRTCachingDirectory)dir).getDelegate();
+    }
+    if (cdir instanceof RateLimitedDirectoryWrapper) {
+      cdir = ((RateLimitedDirectoryWrapper)dir).getDelegate();
+    }
+    if (cdir instanceof TrackingDirectoryWrapper) {
+      cdir = ((TrackingDirectoryWrapper)dir).getDelegate();
+    }
+    return cdir;
+  }
+  
   @Override
   public boolean isAbsolute(String path) {
     // TODO: kind of a hack - we don't know what the delegate is, so
diff --git a/lucene/dev/branches/lucene_solr_4_2/solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory.java b/lucene/dev/branches/lucene_solr_4_2/solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory.java
index f059bf8c..54c79ed4 100644
--- a/lucene/dev/branches/lucene_solr_4_2/solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory.java
+++ b/lucene/dev/branches/lucene_solr_4_2/solr/test-framework/src/java/org/apache/solr/core/MockFSDirectoryFactory.java
@@ -86,6 +86,9 @@
 
 import org.apache.lucene.store.Directory;
 import org.apache.lucene.store.MockDirectoryWrapper;
+import org.apache.lucene.store.NRTCachingDirectory;
+import org.apache.lucene.store.RateLimitedDirectoryWrapper;
+import org.apache.lucene.store.TrackingDirectoryWrapper;
 import org.apache.lucene.util.LuceneTestCase;
 
 /**
@@ -102,8 +105,14 @@ public Directory create(String path, DirContext dirContext) throws IOException {
     // test assumes it can open an IndexWriter when that happens - we
     // have a new Directory for the same dir and still an open IW at 
     // this point
-    if (dir instanceof MockDirectoryWrapper) {
-      ((MockDirectoryWrapper)dir).setAssertNoUnrefencedFilesOnClose(false);
+    
+    Directory cdir = reduce(dir);
+    cdir = reduce(cdir);
+    cdir = reduce(cdir);
+    
+    if (cdir instanceof MockDirectoryWrapper) {
+      ((MockDirectoryWrapper)cdir).setAssertNoUnrefencedFilesOnClose(false);
+      ((MockDirectoryWrapper)cdir).setPreventDoubleWrite(false);
     }
     return dir;
   }
@@ -114,4 +123,18 @@ public boolean isAbsolute(String path) {
     // we treat it as file based since this works on most ephem impls
     return new File(path).isAbsolute();
   }
+  
+  private Directory reduce(Directory dir) {
+    Directory cdir = dir;
+    if (dir instanceof NRTCachingDirectory) {
+      cdir = ((NRTCachingDirectory)dir).getDelegate();
+    }
+    if (cdir instanceof RateLimitedDirectoryWrapper) {
+      cdir = ((RateLimitedDirectoryWrapper)dir).getDelegate();
+    }
+    if (cdir instanceof TrackingDirectoryWrapper) {
+      cdir = ((TrackingDirectoryWrapper)dir).getDelegate();
+    }
+    return cdir;
+  }
 }
diff --git a/lucene/dev/branches/lucene_solr_4_2/solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness.java b/lucene/dev/branches/lucene_solr_4_2/solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness.java
index 74d7dc1e..0495c911 100644
--- a/lucene/dev/branches/lucene_solr_4_2/solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness.java
+++ b/lucene/dev/branches/lucene_solr_4_2/solr/test-framework/src/java/org/apache/solr/util/BaseTestHarness.java
@@ -178,7 +178,7 @@ public static String optimize(String... args) {
     return simpleTag("optimize", args);
   }
 
-  private static String simpleTag(String tag, String... args) {
+  public static String simpleTag(String tag, String... args) {
     try {
       StringWriter r = new StringWriter();
 
