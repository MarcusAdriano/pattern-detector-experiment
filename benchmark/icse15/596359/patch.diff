diff --git a/lucene/solr/trunk/src/java/org/apache/solr/search/SolrIndexSearcher.java b/lucene/solr/trunk/src/java/org/apache/solr/search/SolrIndexSearcher.java
index 64f74ee1..ceaf849d 100644
--- a/lucene/solr/trunk/src/java/org/apache/solr/search/SolrIndexSearcher.java
+++ b/lucene/solr/trunk/src/java/org/apache/solr/search/SolrIndexSearcher.java
@@ -37,7 +37,6 @@
 import java.util.*;
 import java.util.logging.Level;
 import java.util.logging.Logger;
-import org.apache.solr.core.SolrInfoMBean.Category;
 
 
 /**
@@ -707,8 +706,10 @@ public DocList getDocList(Query query, List<Query> filterList, Sort lsort, int o
    */
   private void getDocListC(DocListAndSet out, Query query, List<Query> filterList, DocSet filter, Sort lsort, int offset, int len, int flags) throws IOException {
     QueryResultKey key=null;
-    int maxDoc = offset + len;
-    int supersetMaxDoc=maxDoc;
+    int maxDocRequested = offset + len;
+    // check for overflow, and check for # docs in index
+    if (maxDocRequested < 0 || maxDocRequested > maxDoc()) maxDocRequested = maxDoc();
+    int supersetMaxDoc= maxDocRequested;
     DocList superset;
 
 
@@ -752,10 +753,11 @@ private void getDocListC(DocListAndSet out, Query query, List<Query> filterList,
         // next resultWindowSize for better caching.
 
         // handle 0 special case as well as avoid idiv in the common case.
-        if (maxDoc < queryResultWindowSize) {
+        if (maxDocRequested < queryResultWindowSize) {
           supersetMaxDoc=queryResultWindowSize;
         } else {
-          supersetMaxDoc = ((maxDoc-1)/queryResultWindowSize + 1)*queryResultWindowSize;
+          supersetMaxDoc = ((maxDocRequested -1)/queryResultWindowSize + 1)*queryResultWindowSize;
+          if (supersetMaxDoc < 0) supersetMaxDoc=maxDocRequested;
         }
     }
 
@@ -819,7 +821,9 @@ private void getDocListC(DocListAndSet out, Query query, List<Query> filterList,
 
 
   private DocList getDocListNC(Query query, DocSet filter, Sort lsort, int offset, int len, int flags) throws IOException {
-    final int lastDocRequested = offset+len;
+    int last = offset+len;
+    if (last < 0 || last > maxDoc()) last=maxDoc();
+    final int lastDocRequested = last;
     int nDocsReturned;
     int totalHits;
     float maxScore;
@@ -977,7 +981,9 @@ public BitSet bits(IndexReader reader)  {
   // the DocSet returned is for the query only, without any filtering... that way it may
   // be cached if desired.
   private DocSet getDocListAndSetNC(DocListAndSet out, Query query, DocSet filter, Sort lsort, int offset, int len, int flags) throws IOException {
-    final int lastDocRequested = offset+len;
+    int last = offset+len;
+    if (last < 0 || last > maxDoc()) last=maxDoc();
+    final int lastDocRequested = last;
     int nDocsReturned;
     int totalHits;
     float maxScore;
diff --git a/lucene/solr/trunk/src/test/org/apache/solr/BasicFunctionalityTest.java b/lucene/solr/trunk/src/test/org/apache/solr/BasicFunctionalityTest.java
index fb629a5a..6822dc21 100644
--- a/lucene/solr/trunk/src/test/org/apache/solr/BasicFunctionalityTest.java
+++ b/lucene/solr/trunk/src/test/org/apache/solr/BasicFunctionalityTest.java
@@ -145,6 +145,17 @@ public void testSomeStuff() throws Exception {
       assertU(a, a);
     }
     assertU(commit());
+
+    // test maxint
+    assertQ(req("q","id:[100 TO 110]", "rows","2147483647")
+            ,"//*[@numFound='4']"
+            );
+
+    // test big limit
+    assertQ(req("q","id:[100 TO 111]", "rows","1147483647")
+            ,"//*[@numFound='4']"
+            );
+
     assertQ(req("id:[100 TO 110]")
             ,"//*[@numFound='4']"
             );
