diff --git a/db/derby/code/trunk/java/build/org/apache/derbyBuild/propertyconfig.java b/db/derby/code/trunk/java/build/org/apache/derbyBuild/propertyconfig.java
index 34e61355..697996f8 100644
--- a/db/derby/code/trunk/java/build/org/apache/derbyBuild/propertyconfig.java
+++ b/db/derby/code/trunk/java/build/org/apache/derbyBuild/propertyconfig.java
@@ -313,7 +313,7 @@ private static void process(Properties moduleList, String config,
 		FileOutputStream os = new FileOutputStream(outputfile);
 		try
 		{
-			outputProp.save(os, 
+			outputProp.store(os,
 							header.
 							concat("# config is ").concat(config).
 							concat(footer));
diff --git a/db/derby/code/trunk/java/build/org/apache/derbyBuild/splitmessages.java b/db/derby/code/trunk/java/build/org/apache/derbyBuild/splitmessages.java
index b647e63a..12dcc02e 100644
--- a/db/derby/code/trunk/java/build/org/apache/derbyBuild/splitmessages.java
+++ b/db/derby/code/trunk/java/build/org/apache/derbyBuild/splitmessages.java
@@ -173,7 +173,7 @@ public static void main(String[] args) throws Exception {
 				new FileOutputStream(new File(dir, "m"+i+locale+".properties")), 16 * 1024);
 
             
-			c[i].save(fos, (String) null);
+			c[i].store(fos, (String) null);
 			fos.flush();
 			fos.close();
             
@@ -181,7 +181,7 @@ public static void main(String[] args) throws Exception {
 				// add duplicate english file as the base
 				fos = new BufferedOutputStream(
 					new FileOutputStream(new File(dir, "m"+i+".properties")), 16 * 1024);
-				c[i].save(fos, (String) null);
+				c[i].store(fos, (String) null);
 				fos.flush();
 				fos.close();
 			}
@@ -198,7 +198,7 @@ public static void main(String[] args) throws Exception {
             new FileOutputStream(new File(dir, clientPropsFileName)), 
             16 * 1024);
 
-        clientProps.save(clientOutStream, (String)null);
+        clientProps.store(clientOutStream, (String)null);
         clientOutStream.flush();
         clientOutStream.close();
         
@@ -209,7 +209,7 @@ public static void main(String[] args) throws Exception {
                 new FileOutputStream(new File(dir, "clientmessages.properties")), 
                 16 * 1024);
 
-            clientProps.save(clientOutStream, (String)null);
+            clientProps.store(clientOutStream, (String)null);
             clientOutStream.flush();
             clientOutStream.close();            
         }
diff --git a/db/derby/code/trunk/java/tools/org/apache/derby/iapi/tools/i18n/LocalizedResource.java b/db/derby/code/trunk/java/tools/org/apache/derby/iapi/tools/i18n/LocalizedResource.java
index bcb815ef..0e6ab7cc 100644
--- a/db/derby/code/trunk/java/tools/org/apache/derby/iapi/tools/i18n/LocalizedResource.java
+++ b/db/derby/code/trunk/java/tools/org/apache/derby/iapi/tools/i18n/LocalizedResource.java
@@ -340,8 +340,7 @@ else if (type == Types.REAL || 	type == Types.FLOAT ||
 				return getNumberAsString(rs.getDouble(columnNumber));
 			}
 			else if (SUPPORTS_BIG_DECIMAL_CALLS && (type == Types.NUMERIC || type == Types.DECIMAL)) {
-				return	getNumberAsString(rs.getBigDecimal(columnNumber,
-											rsm.getScale(columnNumber)));
+				return getNumberAsString(rs.getBigDecimal(columnNumber));
 			}
 			else if (type == Types.TIME ) {
 				return getTimeAsString(rs.getTime(columnNumber));
diff --git a/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/sysinfo/Main.java b/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/sysinfo/Main.java
index 2e6c6df2..5e819b33 100644
--- a/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/sysinfo/Main.java
+++ b/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/sysinfo/Main.java
@@ -1201,7 +1201,15 @@ public Object run()
      */
     private static String formatURL(URL loc)
     {
-        String filename = URLDecoder.decode(loc.toString());
+        String filename;
+        try {
+            // Should use UTF-8 according to
+            // http://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars
+            filename = URLDecoder.decode(loc.toString(), "UTF-8");
+        } catch (UnsupportedEncodingException e) {
+            // All JVMs are required to support UTF-8.
+            return null;
+        }
 
         if (filename.startsWith("jar:")) { filename = filename.substring(4); }
         if (filename.startsWith("file:")) { filename = filename.substring(5); }
