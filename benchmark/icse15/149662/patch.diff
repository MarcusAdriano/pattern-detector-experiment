diff --git a/lucene/java/trunk/src/test/org/apache/lucene/queryParser/TestQueryParser.java b/lucene/java/trunk/src/test/org/apache/lucene/queryParser/TestQueryParser.java
index 94959140..552a38e7 100644
--- a/lucene/java/trunk/src/test/org/apache/lucene/queryParser/TestQueryParser.java
+++ b/lucene/java/trunk/src/test/org/apache/lucene/queryParser/TestQueryParser.java
@@ -160,9 +160,9 @@ public void testSimple() throws Exception {
     assertQueryEquals("term AND \"phrase phrase\"", null, 
                       "+term +\"phrase phrase\"");
     assertQueryEquals("\"hello there\"", null, "\"hello there\"");
-    assert(getQuery("a AND b", null) instanceof BooleanQuery);
-    assert(getQuery("hello", null) instanceof TermQuery);
-    assert(getQuery("\"hello there\"", null) instanceof PhraseQuery);
+    assertTrue(getQuery("a AND b", null) instanceof BooleanQuery);
+    assertTrue(getQuery("hello", null) instanceof TermQuery);
+    assertTrue(getQuery("\"hello there\"", null) instanceof PhraseQuery);
 
     assertQueryEquals("germ term^2.0", null, "germ term^2.0");
     assertQueryEquals("term^2.0", null, "term^2.0");
@@ -207,10 +207,10 @@ public void testWildcard() throws Exception {
     assertQueryEquals("term*germ", null, "term*germ");
     assertQueryEquals("term*germ^3", null, "term*germ^3.0");
 
-    assert(getQuery("term*", null) instanceof PrefixQuery);
-    assert(getQuery("term*^2", null) instanceof PrefixQuery);
-    assert(getQuery("term~", null) instanceof FuzzyQuery);
-    assert(getQuery("term*germ", null) instanceof WildcardQuery);
+    assertTrue(getQuery("term*", null) instanceof PrefixQuery);
+    assertTrue(getQuery("term*^2", null) instanceof PrefixQuery);
+    assertTrue(getQuery("term~", null) instanceof FuzzyQuery);
+    assertTrue(getQuery("term*germ", null) instanceof WildcardQuery);
   }
 
   public void testQPA() throws Exception {
@@ -223,13 +223,13 @@ public void testQPA() throws Exception {
     assertQueryEquals("term AND NOT phrase term", qpAnalyzer, 
                       "+term -\"phrase1 phrase2\" term");
     assertQueryEquals("stop", qpAnalyzer, "");
-    assert(getQuery("term term term", qpAnalyzer) instanceof BooleanQuery);
-    assert(getQuery("term +stop", qpAnalyzer) instanceof TermQuery);
+    assertTrue(getQuery("term term term", qpAnalyzer) instanceof BooleanQuery);
+    assertTrue(getQuery("term +stop", qpAnalyzer) instanceof TermQuery);
   }
 
   public void testRange() throws Exception {
     assertQueryEquals("[ a z]", null, "[a-z]");
-    assert(getQuery("[ a z]", null) instanceof RangeQuery);
+    assertTrue(getQuery("[ a z]", null) instanceof RangeQuery);
     assertQueryEquals("[ a z ]", null, "[a-z]");
     assertQueryEquals("{ a z}", null, "{a-z}");
     assertQueryEquals("{ a z }", null, "{a-z}");
@@ -240,4 +240,3 @@ public void testRange() throws Exception {
     assertQueryEquals("gack ( bar blar { a z}) ", null, "gack (bar blar {a-z})");
   }
 }
-
diff --git a/lucene/java/trunk/src/test/org/apache/lucene/util/TestPriorityQueue.java b/lucene/java/trunk/src/test/org/apache/lucene/util/TestPriorityQueue.java
index fa857525..e4bea6a6 100644
--- a/lucene/java/trunk/src/test/org/apache/lucene/util/TestPriorityQueue.java
+++ b/lucene/java/trunk/src/test/org/apache/lucene/util/TestPriorityQueue.java
@@ -101,12 +101,12 @@ public static void testPQ(int count) {
     int last = Integer.MIN_VALUE;
     for (int i = 0; i < count; i++) {
       Integer next = (Integer)pq.pop();
-      assert(next.intValue() >= last);
+      assertTrue(next.intValue() >= last);
       last = next.intValue();
       sum2 += last;
     }
 
-    assert(sum == sum2); 
+    assertEquals(sum, sum2); 
 //      end = new Date();
 
 //      System.out.print(((float)(end.getTime()-start.getTime()) / count) * 1000);
