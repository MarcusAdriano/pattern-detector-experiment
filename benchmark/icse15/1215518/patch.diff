diff --git a/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent.java b/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent.java
index 3dcef4c6..6d58e483 100644
--- a/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent.java
+++ b/lucene/dev/branches/branch_3x/solr/core/src/java/org/apache/solr/handler/component/QueryElevationComponent.java
@@ -156,9 +156,9 @@ public void inform(SolrCore core)
     }
 
     SchemaField sf = core.getSchema().getUniqueKeyField();
-    if( sf == null || sf.getType().isTokenized() == true) {
+    if( sf == null) {
       throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, 
-          "QueryElevationComponent requires the schema to have a uniqueKeyField implemented using a non-tokenized field" );
+          "QueryElevationComponent requires the schema to have a uniqueKeyField." );
     }
     idSchemaFT = sf.getType();
     idField = StringHelper.intern(sf.getName());
diff --git a/lucene/dev/branches/branch_3x/solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest.java b/lucene/dev/branches/branch_3x/solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest.java
index 73a91368..0bc8ffc8 100644
--- a/lucene/dev/branches/branch_3x/solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest.java
+++ b/lucene/dev/branches/branch_3x/solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest.java
@@ -29,7 +29,6 @@
 
 import org.apache.lucene.index.IndexReader;
 
-import org.apache.lucene.util.BytesRef;
 import org.apache.solr.SolrTestCaseJ4;
 import org.apache.solr.common.params.CommonParams;
 import org.apache.solr.common.params.MapSolrParams;
@@ -57,6 +56,10 @@ public void setUp() throws Exception{
   }
 
   private void init(String schema) throws Exception {
+    init("solrconfig-elevate.xml", schema);
+  }
+
+  private void init(String config, String schema) throws Exception {
     //write out elevate-data.xml to the Data dir first by copying it from conf, which we know exists, this way we can test both conf and data configurations
     createTempDir();
     File parent = new File(TEST_HOME(), "conf");
@@ -64,7 +67,7 @@ private void init(String schema) throws Exception {
     File elevateDataFile = new File(dataDir, "elevate-data.xml");
     FileUtils.copyFile(elevateFile, elevateDataFile);
 
-    initCore("solrconfig-elevate.xml",schema);
+    initCore(config,schema);
     clearIndex();
     assertU(commit());
   }
@@ -103,6 +106,37 @@ public void testFieldType() throws Exception {
     }
   }
 
+  @Test
+  public void testTrieFieldType() throws Exception {
+    try {
+      init("schema.xml");
+      clearIndex();
+      assertU(commit());
+      assertU(adoc("id", "1", "text", "XXXX XXXX",           "str_s", "a" ));
+      assertU(adoc("id", "2", "text", "YYYY",      "str_s", "b" ));
+      assertU(adoc("id", "3", "text", "ZZZZ", "str_s", "c" ));
+
+      assertU(adoc("id", "4", "text", "XXXX XXXX",                 "str_s", "x" ));
+      assertU(adoc("id", "5", "text", "YYYY YYYY",         "str_s", "y" ));
+      assertU(adoc("id", "6", "text", "XXXX XXXX", "str_s", "z" ));
+      assertU(adoc("id", "7", "text", "AAAA", "str_s", "a" ));
+      assertU(adoc("id", "8", "text", "AAAA", "str_s", "a" ));
+      assertU(adoc("id", "9", "text", "AAAA AAAA", "str_s", "a" ));
+      assertU(commit());
+
+      assertQ("", req(CommonParams.Q, "AAAA", CommonParams.QT, "/elevate",
+          CommonParams.FL, "id, score, [elevated]")
+              ,"//*[@numFound='3']"
+              ,"//result/doc[1]/int[@name='id'][.='7']"
+              ,"//result/doc[2]/int[@name='id'][.='8']"
+              ,"//result/doc[3]/int[@name='id'][.='9']"
+              );
+    } finally{
+      delete();
+    }
+  }
+
+
   @Test
   public void testInterface() throws Exception
   {
@@ -160,6 +194,8 @@ public void testInterface() throws Exception
 
   }
 
+
+
   @Test
   public void testSorting() throws Exception
   {
