diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/SqlException.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/SqlException.java
index 7a50faac..e87d75b5 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/SqlException.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/SqlException.java
@@ -281,10 +281,10 @@ public SQLException getSQLException()
             getErrorCode());
 
         // If we're in a runtime that supports chained exceptions, set the cause 
-        // of the SQLException.
+        // of the SQLException to be this SqlException.
          if (JVMInfo.JDK_ID >= JVMInfo.J2SE_14 )
         {
-            sqle.initCause(getCause());
+            sqle.initCause(this);
         }
 
         // Set up the nextException chain
diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/SqlWarning.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/SqlWarning.java
index cc58fc09..e51c2244 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/SqlWarning.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/SqlWarning.java
@@ -97,10 +97,10 @@ public SQLWarning getSQLWarning()
             getErrorCode());
 
         // If we're in a runtime that supports chained exceptions, set the cause 
-        // of the SQLException.
+        // of the SQLWarning to be this SqlWarning.
          if (JVMInfo.JDK_ID >= JVMInfo.J2SE_14 )
         {
-            sqlw.initCause(getCause());
+            sqlw.initCause(this);
         }
 
         // Set up the nextException chain
