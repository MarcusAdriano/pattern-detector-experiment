diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/store/hdfs/HdfsLockFactory.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/store/hdfs/HdfsLockFactory.java
index ecf113ac..d4696551 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/store/hdfs/HdfsLockFactory.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/store/hdfs/HdfsLockFactory.java
@@ -21,14 +21,18 @@
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FSDataOutputStream;
+import org.apache.hadoop.fs.FileAlreadyExistsException;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
 import org.apache.lucene.store.Lock;
 import org.apache.lucene.store.LockFactory;
 import org.apache.lucene.store.LockReleaseFailedException;
 import org.apache.solr.util.IOUtils;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 public class HdfsLockFactory extends LockFactory {
+  public static Logger log = LoggerFactory.getLogger(HdfsLockFactory.class);
   
   private Path lockPath;
   private Configuration configuration;
@@ -98,9 +102,14 @@ public boolean obtain() throws IOException {
       FileSystem fs = null;
       try {
         fs = FileSystem.newInstance(lockPath.toUri(), conf);
-        
+        if (!fs.exists(lockPath)) {
+          fs.mkdirs(lockPath);
+        }
         file = fs.create(new Path(lockPath, lockName), false);
-      } catch (IOException e) {
+      } catch (FileAlreadyExistsException e) { 
+        return false;
+      }catch (IOException e) {
+        log.error("Error creating lock file", e);
         return false;
       } finally {
         IOUtils.closeQuietly(file);
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/store/hdfs/HdfsLockFactoryTest.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/store/hdfs/HdfsLockFactoryTest.java
index 86388445..72165400 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/store/hdfs/HdfsLockFactoryTest.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/store/hdfs/HdfsLockFactoryTest.java
@@ -69,7 +69,7 @@ public void tearDown() throws Exception {
   @Test
   public void testBasic() throws IOException {
     URI uri = dfsCluster.getURI();
-    Path lockPath = new Path(uri.toString(), "/lock");
+    Path lockPath = new Path(uri.toString(), "/basedir/lock");
     HdfsLockFactory lockFactory = new HdfsLockFactory(lockPath, new Configuration());
     Lock lock = lockFactory.makeLock("testlock");
     boolean success = lock.obtain();
