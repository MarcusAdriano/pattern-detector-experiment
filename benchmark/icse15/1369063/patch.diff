diff --git a/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/StartAction.java b/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/StartAction.java
index e18309fc..b860b437 100644
--- a/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/StartAction.java
+++ b/aries/trunk/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/StartAction.java
@@ -121,6 +121,11 @@ private void resolve(AriesSubsystem subsystem) {
 			return;
 		subsystem.setState(State.RESOLVING);
 		try {
+			// The root subsystem should follow the same event pattern for
+			// state transitions as other subsystems. However, an unresolvable
+			// root subsystem should have no effect, so there's no point in
+			// actually doing the resolution work.
+			if (!subsystem.isRoot()) {
 			for (Subsystem child : Activator.getInstance().getSubsystems().getChildren(subsystem))
 				resolve((AriesSubsystem)child);
 			// TODO I think this is insufficient. Do we need both
@@ -135,6 +140,7 @@ private void resolve(AriesSubsystem subsystem) {
 				throw new SubsystemException("Framework could not resolve the bundles");
 			}
 			setExportIsolationPolicy(subsystem);
+			}
 			// TODO Could avoid calling setState (and notifyAll) here and
 			// avoid the need for a lock.
 			subsystem.setState(State.RESOLVED);
