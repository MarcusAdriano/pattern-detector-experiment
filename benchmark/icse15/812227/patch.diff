diff --git a/incubator/cassandra/branches/cassandra-0.4/src/java/org/apache/cassandra/concurrent/DebuggableScheduledThreadPoolExecutor.java b/incubator/cassandra/branches/cassandra-0.4/src/java/org/apache/cassandra/concurrent/DebuggableScheduledThreadPoolExecutor.java
index 870f469e..6085063e 100644
--- a/incubator/cassandra/branches/cassandra-0.4/src/java/org/apache/cassandra/concurrent/DebuggableScheduledThreadPoolExecutor.java
+++ b/incubator/cassandra/branches/cassandra-0.4/src/java/org/apache/cassandra/concurrent/DebuggableScheduledThreadPoolExecutor.java
@@ -46,29 +46,11 @@ public DebuggableScheduledThreadPoolExecutor(int threads,
     public void afterExecute(Runnable r, Throwable t)
     {
         super.afterExecute(r,t);
-        if ( t != null )
-        {  
-            Context ctx = ThreadLocalContext.get();
-            if ( ctx != null )
-            {
-                Object object = ctx.get(r.getClass().getName());
                 
-                if ( object != null )
+        DebuggableThreadPoolExecutor.logFutureExceptions(r);
+        if (t != null)
                 {
-                    logger_.info("**** In afterExecute() " + t.getClass().getName() + " occured while working with " + object + " ****");
-                }
-                else
-                {
-                    logger_.info("**** In afterExecute() " + t.getClass().getName() + " occured ****");
-                }
-            }
-            
-            Throwable cause = t.getCause();
-            if ( cause != null )
-            {
-                logger_.info( LogUtil.throwableToString(cause) );
-            }
-            logger_.info( LogUtil.throwableToString(t) );
+            logger_.error("Error in ThreadPoolExecutor", t);
         }
     }
 }
diff --git a/incubator/cassandra/branches/cassandra-0.4/src/java/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutor.java b/incubator/cassandra/branches/cassandra-0.4/src/java/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutor.java
index 0565fce2..33b703f7 100644
--- a/incubator/cassandra/branches/cassandra-0.4/src/java/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutor.java
+++ b/incubator/cassandra/branches/cassandra-0.4/src/java/org/apache/cassandra/concurrent/DebuggableThreadPoolExecutor.java
@@ -79,35 +79,29 @@ public void afterExecute(Runnable r, Throwable t)
     {
         super.afterExecute(r,t);
 
-        if (r instanceof FutureTask) {
-            assert t == null;
+        logFutureExceptions(r);
+        if (t != null)
+        {
+            logger_.error("Error in ThreadPoolExecutor", t);
+        }
+    }
+
+    public static void logFutureExceptions(Runnable r)
+    {
+        if (r instanceof FutureTask)
+        {
             try
             {
                 ((FutureTask)r).get();
             }
             catch (InterruptedException e)
             {
-                throw new RuntimeException(e);
+                throw new AssertionError(e);
             }
             catch (ExecutionException e)
             {
-                t = e;
-            }
+                logger_.error("Error in executor futuretask", e);
         }
-
-        if ( t != null )
-        {  
-            Context ctx = ThreadLocalContext.get();
-            if ( ctx != null )
-            {
-                Object object = ctx.get(r.getClass().getName());
-                
-                if ( object != null )
-                {
-                    logger_.error("In afterExecute() " + t.getClass().getName() + " occured while working with " + object);
-                }
-            }
-            logger_.error("Error in ThreadPoolExecutor", t);
         }
     }
 }
