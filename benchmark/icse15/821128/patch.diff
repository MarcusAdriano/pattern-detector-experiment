diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
index e831aa23..6a5be184 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
@@ -1011,7 +1011,6 @@ private Memtable getMemtableThreadSafe()
         }
     }
 
-    /** not threadsafe.  caller must have lock_ acquired. */
     public Collection<SSTableReader> getSSTables()
     {
         return ssTables_.getSSTables();
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java
index e8ebcb72..b5487127 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java
@@ -228,4 +228,10 @@ public void setMaximumCompactionThreshold(int threshold)
     {
         maximumCompactionThreshold = threshold;
     }
+
+    public void disableCompactions()
+    {
+        minimumCompactionThreshold_ = 0;
+        maximumCompactionThreshold = 0;
+    }
 }
diff --git a/incubator/cassandra/trunk/test/unit/org/apache/cassandra/db/RecoveryManager2Test.java b/incubator/cassandra/trunk/test/unit/org/apache/cassandra/db/RecoveryManager2Test.java
index 6a5d43a0..7b8e8af6 100644
--- a/incubator/cassandra/trunk/test/unit/org/apache/cassandra/db/RecoveryManager2Test.java
+++ b/incubator/cassandra/trunk/test/unit/org/apache/cassandra/db/RecoveryManager2Test.java
@@ -38,21 +38,22 @@
     @Test
     public void testWithFlush() throws IOException, ExecutionException, InterruptedException
     {
-        Table table1 = Table.open("Keyspace1");
-        Set<String> keys = new HashSet<String>();
+        CompactionManager.instance().disableCompactions();
 
         for (int i = 0; i < 100; i++)
         {
             String key = "key" + i;
             insertRow(key);
-            keys.add(key);
         }
-        table1.getColumnFamilyStore("Standard1").forceBlockingFlush();
 
-        table1.getColumnFamilyStore("Standard1").clearUnsafe();
+        Table table1 = Table.open("Keyspace1");
+        ColumnFamilyStore cfs = table1.getColumnFamilyStore("Standard1");
+        cfs.forceBlockingFlush();
+
+        cfs.clearUnsafe();
         RecoveryManager.doRecovery(); // this is a no-op. is testing this useful?
 
-        Set<String> foundKeys = new HashSet<String>(table1.getColumnFamilyStore("Standard1").getKeyRange("", "", 1000).keys);
+        Set<String> foundKeys = new HashSet<String>(cfs.getKeyRange("", "", 1000).keys);
         assert foundKeys.equals(Collections.emptySet());
     }
 
