diff --git a/lucene/java/trunk/src/java/org/apache/lucene/search/DisjunctionMaxQuery.java b/lucene/java/trunk/src/java/org/apache/lucene/search/DisjunctionMaxQuery.java
index 4f8c0a29..4a279ab6 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/search/DisjunctionMaxQuery.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/search/DisjunctionMaxQuery.java
@@ -22,6 +22,7 @@
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.Collection;
+import java.util.Set;
 
 /**
  * A query that generates the union of the documents produced by its subqueries, and that scores each document as the maximum
@@ -193,6 +194,15 @@ public Object clone() {
     return clone;
   }
 
+
+  // inherit javadoc
+  public void extractTerms(Set terms) {
+      for (int i = 0; i < disjuncts.size(); i++) {
+          ((Query)disjuncts.get(i)).extractTerms(terms);
+      }
+  }
+
+
   /** Prettyprint us.
    * @param field the field to which we are applied
    * @return a string that shows what we do, of the form "(disjunct1 | disjunct2 | ... | disjunctn)^boost"
