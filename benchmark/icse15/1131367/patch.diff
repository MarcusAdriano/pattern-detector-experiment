diff --git a/lucene/dev/branches/docvalues/lucene/src/java/org/apache/lucene/index/values/VarStraightBytesImpl.java b/lucene/dev/branches/docvalues/lucene/src/java/org/apache/lucene/index/values/VarStraightBytesImpl.java
index 7d71643f..14cd5b3b 100644
--- a/lucene/dev/branches/docvalues/lucene/src/java/org/apache/lucene/index/values/VarStraightBytesImpl.java
+++ b/lucene/dev/branches/docvalues/lucene/src/java/org/apache/lucene/index/values/VarStraightBytesImpl.java
@@ -147,6 +147,20 @@ public BytesRef getBytes(int docID, BytesRef bytesRef) {
         return data.fillSlice(bytesRef, address, length);
       }
 
+      @Override
+      public ValuesEnum getEnum(AttributeSource attrSource) throws IOException {
+        return new SourceEnum(attrSource, type(), this, maxDoc()) {
+          @Override
+          public int advance(int target) throws IOException {
+            if (target >= numDocs) {
+              return pos = NO_MORE_DOCS;
+            }
+            source.getBytes(target, bytesRef);
+            return pos = target;
+          }
+        };
+      }
+
       @Override
       public int getValueCount() {
         throw new UnsupportedOperationException();
diff --git a/lucene/dev/branches/docvalues/lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing.java b/lucene/dev/branches/docvalues/lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing.java
index 20ffa085..7200424f 100644
--- a/lucene/dev/branches/docvalues/lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing.java
+++ b/lucene/dev/branches/docvalues/lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing.java
@@ -207,6 +207,13 @@ public void testAddIndexes() throws IOException {
     case INTS:  
       assertEquals(msg, valuesPerIndex-1, vE_2_merged.advance(valuesPerIndex-1));
     }
+//    switch (first) { // these variants don't advance over missing values
+//  case BYTES_FIXED_STRAIGHT:
+//  case FLOAT_32:
+//  case FLOAT_64:
+//  case INTS:  
+//    assertEquals(msg, valuesPerIndex-1, vE_1_merged.advance(valuesPerIndex-1));
+//  }
     
     for (int i = 0; i < valuesPerIndex; i++) {
       assertEquals(msg, i, vE_1.nextDoc());
@@ -385,17 +392,9 @@ public void runTestIndexBytes(IndexWriterConfig cfg, boolean withDeletions)
           assertEquals(0, br.length);
           // make sure we advance at least until base
           ValuesEnum bytesEnum = getValuesEnum(bytesReader);
-          try {
-          
-          final int advancedTo = bytesEnum.advance(0);
-          assertTrue(byteIndexValue.name() + " advanced failed base:" + base
-              + " advancedTo: " + advancedTo, base <= advancedTo);
-          }catch(Throwable e) {
             final int advancedTo = bytesEnum.advance(0);
             assertTrue(byteIndexValue.name() + " advanced failed base:" + base
                 + " advancedTo: " + advancedTo, base <= advancedTo);
-
-          }
         }
       }
 
