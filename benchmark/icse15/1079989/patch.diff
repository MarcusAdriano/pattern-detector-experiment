diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/commitlog/CommitLog.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/commitlog/CommitLog.java
index 3d5ad19e..54981533 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/commitlog/CommitLog.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/commitlog/CommitLog.java
@@ -190,11 +190,14 @@ public static void recover(File[] clogs) throws IOException
                     logger.info(headerPath + " incomplete, missing or corrupt.  Everything is ok, don't panic.  CommitLog will be replayed from the beginning");
                     logger.debug("exception was", ioe);
                 }
-                if (replayPosition < 0)
+                if (replayPosition < 0 || replayPosition > reader.length())
                 {
+                    // replayPosition > reader.length() can happen if some data gets flushed before it is written to the commitlog
+                    // (see https://issues.apache.org/jira/browse/CASSANDRA-2285)
                     logger.debug("skipping replay of fully-flushed {}", file);
                     continue;
                 }
+
                 reader.seek(replayPosition);
 
                 if (logger.isDebugEnabled())
diff --git a/cassandra/branches/cassandra-0.7/test/unit/org/apache/cassandra/db/CommitLogTest.java b/cassandra/branches/cassandra-0.7/test/unit/org/apache/cassandra/db/CommitLogTest.java
index dc9a2b2f..12b8c344 100644
--- a/cassandra/branches/cassandra-0.7/test/unit/org/apache/cassandra/db/CommitLogTest.java
+++ b/cassandra/branches/cassandra-0.7/test/unit/org/apache/cassandra/db/CommitLogTest.java
@@ -108,6 +108,30 @@ public void testRecoveryWithNegativeSizeArgument() throws Exception
         testRecoveryWithBadSizeArgument(-10, 10); // negative size, but no EOF
     }
 
+    @Test
+    public void testRecoveryWithHeaderPositionGreaterThanLogLength() throws Exception
+    {
+        // Note: this can actually happen (in periodic mode) when data is flushed
+        // before it had time to hit the commitlog (since the header is flushed by the system)
+        // see https://issues.apache.org/jira/browse/CASSANDRA-2285
+        ByteArrayOutputStream out = new ByteArrayOutputStream();
+        DataOutputStream dos = new DataOutputStream(out);
+        Checksum checksum = new CRC32();
+
+        // write the first checksum after the fixed-size part, so we won't read garbage lastFlushedAt data.
+        dos.writeInt(1);
+        checksum.update(1);
+        dos.writeLong(checksum.getValue());
+        dos.writeInt(0);
+        checksum.update(0);
+        dos.writeInt(200);
+        checksum.update(200);
+        dos.writeLong(checksum.getValue());
+        dos.close();
+
+        testRecovery(out.toByteArray(), new byte[0]);
+    }
+
     protected void testRecoveryWithBadSizeArgument(int size, int dataSize) throws Exception
     {
         Checksum checksum = new CRC32();
