diff --git a/lucene/dev/branches/lucene3969/modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter.java b/lucene/dev/branches/lucene3969/modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter.java
index 50e7ab59..d0b8e055 100644
--- a/lucene/dev/branches/lucene3969/modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter.java
+++ b/lucene/dev/branches/lucene3969/modules/analysis/common/src/java/org/apache/lucene/analysis/shingle/ShingleFilter.java
@@ -439,6 +439,8 @@ public void reset() throws IOException {
     super.reset();
     gramSize.reset();
     inputWindow.clear();
+    nextInputStreamToken = null;
+    isNextInputStreamToken = false;
     numFillerTokensToInsert = 0;
     isOutputHere = false;
     noShingleOutput = true;
diff --git a/lucene/dev/branches/lucene3969/modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.java b/lucene/dev/branches/lucene3969/modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.java
index 4bdd65b9..777f7e7b 100644
--- a/lucene/dev/branches/lucene3969/modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.java
+++ b/lucene/dev/branches/lucene3969/modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.java
@@ -130,17 +130,17 @@ public static void beforeClass() throws Exception {
       if (
         // don't waste time with abstract classes or deprecated known-buggy ones
         Modifier.isAbstract(modifiers) || !Modifier.isPublic(modifiers)
-        || c.isAnnotationPresent(Deprecated.class)
         || c.isSynthetic() || c.isAnonymousClass() || c.isMemberClass() || c.isInterface()
-        || !(Tokenizer.class.isAssignableFrom(c) || TokenFilter.class.isAssignableFrom(c) || CharStream.class.isAssignableFrom(c))
         || brokenComponents.contains(c)
+        || c.isAnnotationPresent(Deprecated.class)
+        || !(Tokenizer.class.isAssignableFrom(c) || TokenFilter.class.isAssignableFrom(c) || CharStream.class.isAssignableFrom(c))
       ) {
         continue;
       }
 
       for (final Constructor<?> ctor : c.getConstructors()) {
-        // don't test deprecated ctors, they likely have known bugs:
-        if (ctor.isAnnotationPresent(Deprecated.class) || ctor.isSynthetic()) {
+        // don't test synthetic or deprecated ctors, they likely have known bugs:
+        if (ctor.isSynthetic() || ctor.isAnnotationPresent(Deprecated.class)) {
           continue;
         }
         if (Tokenizer.class.isAssignableFrom(c)) {
@@ -258,9 +258,8 @@ private static void getClassesForPackage(String pckgname, List<Class<?>> classes
     });
     put(byte.class, new ArgProducer() {
       @Override public Object create(Random random) {
-        byte bytes[] = new byte[1];
-        random.nextBytes(bytes);
-        return Byte.valueOf(bytes[0]);
+        // this wraps to negative when casting to byte
+        return Byte.valueOf((byte) random.nextInt(256));
       }
     });
     put(byte[].class, new ArgProducer() {
@@ -671,7 +670,7 @@ private TokenFilterSpec newFilterChain(Random random, Tokenizer tokenizer) {
   }
   
   static final class CheckThatYouDidntReadAnythingReaderWrapper extends CharFilter {
-    boolean readSomething;
+    boolean readSomething = false;
     
     CheckThatYouDidntReadAnythingReaderWrapper(Reader in) {
       super(CharReader.get(in));
