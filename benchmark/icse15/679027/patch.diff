diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportBinaryDataTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportBinaryDataTest.java
index 3721c6d6..e2b9f6d6 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportBinaryDataTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportBinaryDataTest.java
@@ -194,6 +194,7 @@ public void testImportExportInvalideDelimiters()
     {
         try {
             doExportTable("APP", "BIN_TAB", fileName, null, "9" , null);
+            fail();
         } catch (SQLException e) {
             assertSQLState("XIE0J", e);
         }
@@ -201,12 +202,14 @@ public void testImportExportInvalideDelimiters()
         try {
             doExportQuery("select * from BIN_TAB", fileName,
                           "|", "f", null);
+            fail();
         } catch (SQLException e) {
             assertSQLState("XIE0J", e);
         }
 	SupportFilesSetup.deleteFile(fileName);
         try {
             doExportTable("APP", "BIN_TAB", fileName, "B", null , null);
+            fail();
         } catch (SQLException e) {
             assertSQLState("XIE0J", e);
         }
@@ -215,6 +218,7 @@ public void testImportExportInvalideDelimiters()
 
         try {
             doImportTable("APP", "BIN_TAB_IMP", fileName, "2", null, null, 0);
+            fail();
         } catch (SQLException e) {
              assertSQLState("XIE0J", e);
         }
@@ -222,6 +226,7 @@ public void testImportExportInvalideDelimiters()
         try {
             doImportData(null, "BIN_TAB_IMP", null, 
                          null,  fileName, null, "c", null, 1);
+            fail();
         } catch (SQLException e) {
             assertSQLState("XIE0J", e);
         }
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java
index e309a6fa..e0bae3fe 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportLobTest.java
@@ -395,6 +395,7 @@ public void testImportExportInvalideDelimiters()
         try {
             doExportTableLobsToExtFile("APP", "BOOKS", fileName, 
                                        null, "9" , null, lobsFileName);
+            fail();
         } catch (SQLException e) {
             assertSQLState("XIE0J", e);
         }
@@ -406,6 +407,7 @@ public void testImportExportInvalideDelimiters()
         try {
             doExportQueryLobsToExtFile("select * from BOOKS", fileName,
                                        "|", "f", null, lobsFileName);
+            fail();
         } catch (SQLException e) {
             assertSQLState("XIE0J", e);
         }
@@ -420,6 +422,7 @@ public void testImportExportInvalideDelimiters()
         try {
             doImportTableLobsFromExtFile("APP", "BOOKS_IMP", fileName, "2", 
                                          null, null, 0);
+            fail();
         } catch (SQLException e) {
              assertSQLState("XIE0J", e);
         }
@@ -427,6 +430,7 @@ public void testImportExportInvalideDelimiters()
         try {
             doImportDataLobsFromExtFile(null, "BOOKS_IMP", null, 
                                       null,  fileName, null, "c", null, 1);
+            fail();
         } catch (SQLException e) {
             assertSQLState("XIE0J", e);
         }
@@ -449,6 +453,7 @@ public void testImportTableExportWithInvalidLobFileName()
             doExportTableLobsToExtFile("APP", "BOOKS", fileName, 
                                        null, null , null, 
                                        null);
+            fail();
         }catch (SQLException e) {
             assertSQLState("XIE0Q", e);
         }
@@ -467,6 +472,7 @@ public void testImportTableExportWithInvalidLobFileName()
             // missing lob file, refered by the main import file.
             doImportTableLobsFromExtFile("APP", "BOOKS_IMP", fileName, 
                                          null, null, null, 0);
+            fail();
         }catch (SQLException e) {
             assertSQLState("XIE0P", e);
         }
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportTest.java
index 20df8940..b4dd6f06 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/tools/ImportExportTest.java
@@ -90,6 +90,7 @@ public void testImportFromNonExistantFile() {
 		try {
 			Connection c = getConnection();
 			doImport(c, "Z" , "T1" , null , null , null, 0);
+            fail();
 		} catch (SQLException e) {
 			assertSQLState("XIE04", e);
 		}
@@ -99,6 +100,7 @@ public void testNullDataFile() {
 		try {
 			Connection c = getConnection();
 			doImport(c, null, "T1" , null , null, null, 0);
+            fail();
 		} catch (SQLException e) {
 			assertSQLState("XIE05", e);
 		}
@@ -154,6 +156,7 @@ public void testInvalidEncoding() throws Exception {
 		resetTables();
 		try {
 		    doImportAndExport(c, "T1", "^", "#", "INAVALID ENCODING");
+            fail();
 		} catch (SQLException e) {
 			assertSQLState("XIE0I", e);
 		}
@@ -163,6 +166,7 @@ public void testEarlyEndOfFile() throws Exception {
 		Connection c = getConnection();
 		try {
 			doImportFromFile(c, "extin/EndOfFile.txt" , "T4" , null , null , "US-ASCII", 0);
+            fail();
 		} catch (SQLException e) {
 			assertSQLState("XIE0E", e);
 		}
