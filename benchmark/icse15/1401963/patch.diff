diff --git a/lucene/dev/trunk/lucene/analysis/phonetic/src/java/org/apache/lucene/analysis/phonetic/PhoneticFilterFactory.java b/lucene/dev/trunk/lucene/analysis/phonetic/src/java/org/apache/lucene/analysis/phonetic/PhoneticFilterFactory.java
index 0e8a94bc..658cfac9 100644
--- a/lucene/dev/trunk/lucene/analysis/phonetic/src/java/org/apache/lucene/analysis/phonetic/PhoneticFilterFactory.java
+++ b/lucene/dev/trunk/lucene/analysis/phonetic/src/java/org/apache/lucene/analysis/phonetic/PhoneticFilterFactory.java
@@ -41,12 +41,12 @@
  * <p>
  * This takes one required argument, "encoder", and the rest are optional:
  * <dl>
- *  <dt>encoder<dd> required, one of "DoubleMetaphone", "Metaphone", "Soundex", "RefinedSoundex", "Caverphone" (v2.0),
+ *  <dt>encoder</dt><dd> required, one of "DoubleMetaphone", "Metaphone", "Soundex", "RefinedSoundex", "Caverphone" (v2.0),
  *  or "ColognePhonetic" (case insensitive). If encoder isn't one of these, it'll be resolved as a class name either by
- *  itself if it already contains a '.' or otherwise as in the same package as these others.
- *  <dt>inject<dd> (default=true) add tokens to the stream with the offset=0
- *  <dt>maxCodeLength<dd>The maximum length of the phonetic codes, as defined by the encoder. If an encoder doesn't
- *  support this then specifying this is an error.
+ *  itself if it already contains a '.' or otherwise as in the same package as these others.</dd>
+ *  <dt>inject</dt><dd> (default=true) add tokens to the stream with the offset=0</dd>
+ *  <dt>maxCodeLength</dt><dd>The maximum length of the phonetic codes, as defined by the encoder. If an encoder doesn't
+ *  support this then specifying this is an error.</dd>
  * </dl>
  *
  * <pre class="prettyprint" >
diff --git a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/DocIdSet.java b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/DocIdSet.java
index cccd1f4a..a326c8ef 100644
--- a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/DocIdSet.java
+++ b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/DocIdSet.java
@@ -83,7 +83,7 @@ public Bits bits() throws IOException {
    * should be cached without copying it into a BitSet. The default is to return
    * <code>false</code>. If you have an own <code>DocIdSet</code> implementation
    * that does its iteration very effective and fast without doing disk I/O,
-   * override this method and return <code>true</here>.
+   * override this method and return <code>true</code>.
    */
   public boolean isCacheable() {
     return false;
diff --git a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/SearcherLifetimeManager.java b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/SearcherLifetimeManager.java
index ce546767..deb0ce70 100644
--- a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/SearcherLifetimeManager.java
+++ b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/SearcherLifetimeManager.java
@@ -289,7 +289,7 @@ public synchronized void prune(Pruner pruner) throws IOException {
    *  should still call {@link #release} after they are
    *  done.
    *
-   *  <p><b>NOTE: you must ensure no other threads are
+   *  <p><b>NOTE</b>: you must ensure no other threads are
    *  calling {@link #record} while you call close();
    *  otherwise it's possible not all searcher references
    *  will be freed. */
diff --git a/lucene/dev/trunk/lucene/facet/src/java/org/apache/lucene/util/encoding/ChunksIntEncoder.java b/lucene/dev/trunk/lucene/facet/src/java/org/apache/lucene/util/encoding/ChunksIntEncoder.java
index a9c10d92..c640c53b 100644
--- a/lucene/dev/trunk/lucene/facet/src/java/org/apache/lucene/util/encoding/ChunksIntEncoder.java
+++ b/lucene/dev/trunk/lucene/facet/src/java/org/apache/lucene/util/encoding/ChunksIntEncoder.java
@@ -47,7 +47,7 @@
  * manner: <code><pre class="prettyprint">
  * IntEncoder fourFlags = 
  *         new SortingEncoderFilter(new UniqueValuesIntEncoder(new DGapIntEncoder(new FlagsIntEncoderImpl())));
- * </code></pre>
+ * </pre></code>
  * 
  * @lucene.experimental
  */
diff --git a/lucene/dev/trunk/lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java b/lucene/dev/trunk/lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java
index 4461b208..f803dd79 100644
--- a/lucene/dev/trunk/lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java
+++ b/lucene/dev/trunk/lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java
@@ -98,6 +98,7 @@
  *
  *   <li> Lookups with the empty string return no results
  *        instead of all results.
+ * </ul>
  * 
  * @lucene.experimental
  */
diff --git a/lucene/dev/trunk/solr/core/src/java/org/apache/solr/analysis/ReversedWildcardFilter.java b/lucene/dev/trunk/solr/core/src/java/org/apache/solr/analysis/ReversedWildcardFilter.java
index c1a97941..79620d2f 100644
--- a/lucene/dev/trunk/solr/core/src/java/org/apache/solr/analysis/ReversedWildcardFilter.java
+++ b/lucene/dev/trunk/solr/core/src/java/org/apache/solr/analysis/ReversedWildcardFilter.java
@@ -27,7 +27,7 @@
  * This class produces a special form of reversed tokens, suitable for
  * better handling of leading wildcards. Tokens from the input TokenStream
  * are reversed and prepended with a special "reversed" marker character.
- * If <code>withOriginal<code> argument is <code>true</code> then first the
+ * If <code>withOriginal</code> argument is <code>true</code> then first the
  * original token is returned, and then the reversed token (with
  * <code>positionIncrement == 0</code>) is returned. Otherwise only reversed
  * tokens are returned.
diff --git a/lucene/dev/trunk/solr/core/src/java/org/apache/solr/core/RequestHandlers.java b/lucene/dev/trunk/solr/core/src/java/org/apache/solr/core/RequestHandlers.java
index 1246ef09..96b5fa8b 100644
--- a/lucene/dev/trunk/solr/core/src/java/org/apache/solr/core/RequestHandlers.java
+++ b/lucene/dev/trunk/solr/core/src/java/org/apache/solr/core/RequestHandlers.java
@@ -189,8 +189,8 @@ void initHandlersFromConfig(SolrConfig config ){
     
 
   /**
-   * The <code>LazyRequestHandlerWrapper</core> wraps any {@link SolrRequestHandler}.  
-   * Rather then instanciate and initalize the handler on startup, this wrapper waits
+   * The <code>LazyRequestHandlerWrapper</code> wraps any {@link SolrRequestHandler}.  
+   * Rather then instantiate and initialize the handler on startup, this wrapper waits
    * until it is actually called.  This should only be used for handlers that are
    * unlikely to be used in the normal lifecycle.
    * 
