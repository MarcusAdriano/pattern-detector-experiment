diff --git a/incubator/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageService.java b/incubator/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageService.java
index ee846026..07bcc91f 100644
--- a/incubator/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageService.java
+++ b/incubator/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageService.java
@@ -603,15 +603,18 @@ private void handleStateLeft(InetAddress endPoint, String moveValue)
             // let's make sure that we're not removing ourselves. This can happen when a node
             // enters ring as a replacement for a removed node. removeToken for the old node is
             // still in gossip, so we will see it.
-            if (endPointThatLeft.equals(FBUtilities.getLocalAddress()))
+            if (FBUtilities.getLocalAddress().equals(endPointThatLeft))
             {
                 logger_.info("Received removeToken gossip about myself. Is this node a replacement for a removed one?");
                 return;
             }
             if (logger_.isDebugEnabled())
                 logger_.debug("Token " + token + " removed manually (endpoint was " + ((endPointThatLeft == null) ? "unknown" : endPointThatLeft) + ")");
+            if (endPointThatLeft != null)
+            {
             removeEndPointLocally(endPointThatLeft);
         }
+        }
 
         // remove token from bootstrap tokens just in case it is still there
         tokenMetadata_.removeBootstrapToken(token);
