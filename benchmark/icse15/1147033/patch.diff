diff --git a/lucene/dev/branches/branch_3x/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl.java b/lucene/dev/branches/branch_3x/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl.java
index bd726835..b7dbc6ee 100644
--- a/lucene/dev/branches/branch_3x/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl.java
+++ b/lucene/dev/branches/branch_3x/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ContextImpl.java
@@ -34,7 +34,7 @@
  * @since solr 1.3
  */
 public class ContextImpl extends Context {
-  private DataConfig.Entity entity;
+  protected DataConfig.Entity entity;
 
   private ContextImpl parent;
 
diff --git a/lucene/dev/branches/branch_3x/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ThreadedContext.java b/lucene/dev/branches/branch_3x/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ThreadedContext.java
index cf550ffb..59d3a0bb 100644
--- a/lucene/dev/branches/branch_3x/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ThreadedContext.java
+++ b/lucene/dev/branches/branch_3x/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/ThreadedContext.java
@@ -75,7 +75,7 @@ private void checkLimited() {
   @Override
   public String getResolvedEntityAttribute(String name) {
     checkLimited();
-    return super.getResolvedEntityAttribute(name);
+    return entity == null ? null : getVariableResolver().replaceTokens(entity.allAttributes.get(name));
   }
 
   @Override
diff --git a/lucene/dev/branches/branch_3x/solr/contrib/dataimporthandler-extras/src/test/org/apache/solr/handler/dataimport/TestTikaEntityProcessor.java b/lucene/dev/branches/branch_3x/solr/contrib/dataimporthandler-extras/src/test/org/apache/solr/handler/dataimport/TestTikaEntityProcessor.java
index 019fa85a..9b6fd85f 100644
--- a/lucene/dev/branches/branch_3x/solr/contrib/dataimporthandler-extras/src/test/org/apache/solr/handler/dataimport/TestTikaEntityProcessor.java
+++ b/lucene/dev/branches/branch_3x/solr/contrib/dataimporthandler-extras/src/test/org/apache/solr/handler/dataimport/TestTikaEntityProcessor.java
@@ -18,20 +18,25 @@
 
 import org.junit.BeforeClass;
 import org.junit.Test;
+import org.w3c.dom.Document;
+import org.w3c.dom.Element;
+import org.xml.sax.InputSource;
+
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
+import javax.xml.transform.Transformer;
+import javax.xml.transform.TransformerFactory;
+import javax.xml.transform.dom.DOMSource;
+import javax.xml.transform.stream.StreamResult;
+import java.io.StringReader;
+import java.io.StringWriter;
 
 /**Testcase for TikaEntityProcessor
- * @version $Id$
- * @since solr 1.5 
+ *
+ * @since solr 3.1
  */
 public class TestTikaEntityProcessor extends AbstractDataImportHandlerTestCase {
-  @BeforeClass
-  public static void beforeClass() throws Exception {
-    initCore("dataimport-solrconfig.xml", "dataimport-schema-no-unique-key.xml", getFile("solr-dihextras").getAbsolutePath());
-  }
-
-  @Test
-  public void testIndexingWithTikaEntityProcessor() throws Exception {
-    String conf =
+  private String conf =
             "<dataConfig>" +
                     "  <dataSource type=\"BinFileDataSource\"/>" +
                     "  <document>" +
@@ -42,12 +47,37 @@ public void testIndexingWithTikaEntityProcessor() throws Exception {
                     "     </entity>" +
                     "  </document>" +
                     "</dataConfig>";
-    runFullImport(conf);
-    assertQ(req("*:*")
-            ,"//*[@numFound='1']"
+
+  private String[] tests = {
+      "//*[@numFound='1']"
             ,"//str[@name='author'][.='Grant Ingersoll']"
             ,"//str[@name='title'][.='solr-word']"
             ,"//str[@name='text']"
-            );
+  };
+
+
+  @BeforeClass
+  public static void beforeClass() throws Exception {
+    initCore("dataimport-solrconfig.xml", "dataimport-schema-no-unique-key.xml", getFile("solr-dihextras").getAbsolutePath());
   }
+
+  @Test
+  public void testIndexingWithTikaEntityProcessor() throws Exception {
+    runFullImport(conf);
+    assertQ(req("*:*"), tests );
+  }
+
+  @Test
+  public void testIndexingWithTikaEntityProcessorThreaded() throws Exception {
+    DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
+    Document doc = builder.parse(new InputSource(new StringReader(conf)));
+    ((Element) doc.getElementsByTagName("entity").item(0)).setAttribute("threads", "1");
+    Transformer trans = TransformerFactory.newInstance().newTransformer();
+    StringWriter writer = new StringWriter();
+    trans.transform(new DOMSource(doc), new StreamResult(writer));
+
+    runFullImport(writer.toString());
+    assertQ(req("*:*"), tests );
+  }
+
 }
