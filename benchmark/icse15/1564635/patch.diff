diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/store/LockTableVtiTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/store/LockTableVtiTest.java
index 3b6f8092..8571b945 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/store/LockTableVtiTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/store/LockTableVtiTest.java
@@ -44,7 +44,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import org.apache.derbyTesting.junit.TestConfiguration;
 
 /**
- * Tests the LOCK TABLE in various modes.
+ * Tests the printing of the WAIT state in the LOCK TABLE.
  */
 public class LockTableVtiTest extends BaseJDBCTestCase {
 
@@ -59,7 +59,7 @@ public LockTableVtiTest(String name) {
 
     /**
      * Construct top level suite in this JUnit test
-     * The suite is wrapped in a DatabasePropertyTestSetup set
+     * The suite is wrapped in a DatabasePropertyTestSetup to set
      * the lock wait timeout.
      *
      * @return A suite containing embedded fixtures
@@ -133,9 +133,9 @@ protected void tearDown() throws Exception {
      * Tests to make sure that WAIT state is displayed in lock
      * table output
      * 
-     * @exception SQLException
+     * @exception Exception
      */
-    public void testDisplayWaitState() throws Throwable {
+    public void testDisplayWaitState() throws Exception {
         Statement s = createStatement();
         setAutoCommit(false);
         // setting to -1 (wait for ever) to improve timing control
@@ -208,11 +208,11 @@ public void doWork(Connection conn) throws Exception {
     }
     
     /**
-     * Get the number of locks in the lock table
-     * @return number of locks
+     * See if there is a 'WAIT' lock
+     * @return true if there was a WAIT lock, false if not
      * @throws SQLException
      */
-    private boolean getWaitState() throws Exception {
+    private boolean getWaitState() throws SQLException {
         Statement s = createStatement();
         ResultSet rs = s.executeQuery(
                 "SELECT state from syscs_diag.lock_table " +
