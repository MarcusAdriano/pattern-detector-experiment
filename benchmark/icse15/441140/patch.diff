diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/GrantNode.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/GrantNode.java
index 6c21c663..071c04ec 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/GrantNode.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/GrantNode.java
@@ -33,7 +33,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 /**
  * This class represents a GRANT statement.
  */
-public class GrantNode extends MiscellaneousStatementNode
+public class GrantNode extends DDLStatementNode
 {
 	private PrivilegeNode privileges;
 	private List grantees;
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/RevokeNode.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/RevokeNode.java
index c6cac12d..cc18ab62 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/RevokeNode.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/RevokeNode.java
@@ -33,7 +33,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 /**
  * This class represents a REVOKE statement.
  */
-public class RevokeNode extends MiscellaneousStatementNode
+public class RevokeNode extends DDLStatementNode
 {
     private PrivilegeNode privileges;
     private List grantees;
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/util/ProcedureTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/util/ProcedureTest.java
index 43d5c6b3..1bd155ba 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/util/ProcedureTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/util/ProcedureTest.java
@@ -759,5 +759,23 @@ public static void LOTS_O_COLS_492(ResultSet [] rs)
 
 		rs[0] = st1.executeQuery(query.toString());
 	}
+
+	public static void grantSelect() throws SQLException
+	{
+		Connection conn = DriverManager.getConnection("jdbc:default:connection");
+		PreparedStatement ps = conn.prepareStatement("grant select on t1 to user2");
+		ps.execute();
+		ps.close();
+		conn.close();
+	}
+
+	public static void revokeSelect() throws SQLException
+	{
+		Connection conn = DriverManager.getConnection("jdbc:default:connection");
+		PreparedStatement ps = conn.prepareStatement("revoke select on t1 from user2");
+		ps.execute();
+		ps.close();
+		conn.close();
+	}
 }
 
