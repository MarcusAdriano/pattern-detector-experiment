diff --git a/lucene/dev/trunk/solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java b/lucene/dev/trunk/solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java
index 72e8099f..743deb5b 100644
--- a/lucene/dev/trunk/solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java
+++ b/lucene/dev/trunk/solr/core/src/java/org/apache/solr/handler/admin/ShowFileRequestHandler.java
@@ -423,7 +423,7 @@ private boolean testReloadSuccess(SolrQueryRequest req, SolrQueryResponse rsp, C
     File home = null;
     try {
       home = new File(FileUtils.getTempDirectory(), "SOLR_5459"); // Unlikely to name a core or collection this!
-      FileUtils.writeStringToFile(new File(home, "solr.xml"), "<solr></solr>"); // Use auto-discovery
+      FileUtils.writeStringToFile(new File(home, "solr.xml"), "<solr></solr>", "UTF-8"); // Use auto-discovery
       File coll = new File(home, "SOLR_5459");
 
       SolrCore core = req.getCore();
@@ -447,7 +447,7 @@ private boolean testReloadSuccess(SolrQueryRequest req, SolrQueryResponse rsp, C
             new File(coll, "conf"));
       }
 
-      FileUtils.writeStringToFile(new File(coll, "core.properties"), "name=SOLR_5459");
+      FileUtils.writeStringToFile(new File(coll, "core.properties"), "name=SOLR_5459", "UTF-8");
 
       FileUtils.copyInputStreamToFile(stream.getStream(),
           new File(new File(coll, "conf"), req.getParams().get("file", null)));
diff --git a/lucene/dev/trunk/solr/core/src/test/org/apache/solr/AnalysisAfterCoreReloadTest.java b/lucene/dev/trunk/solr/core/src/test/org/apache/solr/AnalysisAfterCoreReloadTest.java
index 0e1e7988..41a691f7 100644
--- a/lucene/dev/trunk/solr/core/src/test/org/apache/solr/AnalysisAfterCoreReloadTest.java
+++ b/lucene/dev/trunk/solr/core/src/test/org/apache/solr/AnalysisAfterCoreReloadTest.java
@@ -121,7 +121,7 @@ private void overwriteStopwords(String stopwords) throws IOException {
       String configDir = core.getResourceLoader().getConfigDir();
       FileUtils.moveFile(new File(configDir, "stopwords.txt"), new File(configDir, "stopwords.txt.bak"));
       File file = new File(configDir, "stopwords.txt");
-      FileUtils.writeStringToFile(file, stopwords);
+      FileUtils.writeStringToFile(file, stopwords, "UTF-8");
      
     } finally {
       core.close();
diff --git a/lucene/dev/trunk/solr/core/src/test/org/apache/solr/core/TestLazyCores.java b/lucene/dev/trunk/solr/core/src/test/org/apache/solr/core/TestLazyCores.java
index 6624a44e..53f414e3 100644
--- a/lucene/dev/trunk/solr/core/src/test/org/apache/solr/core/TestLazyCores.java
+++ b/lucene/dev/trunk/solr/core/src/test/org/apache/solr/core/TestLazyCores.java
@@ -579,7 +579,7 @@ private void writeCustomConfig(String coreName, String config, String schema, St
         System.getProperty("line.separator") + "transient=true" +
         System.getProperty("line.separator") + "loadOnStartup=true", Charsets.UTF_8.toString());
 
-    FileUtils.writeStringToFile(new File(subHome, "solrconfig.snippet.randomindexconfig.xml"), rand_snip);
+    FileUtils.writeStringToFile(new File(subHome, "solrconfig.snippet.randomindexconfig.xml"), rand_snip, Charsets.UTF_8.toString());
 
     FileUtils.writeStringToFile(new File(subHome, "solrconfig.xml"), config, Charsets.UTF_8.toString());
 
diff --git a/lucene/dev/trunk/solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest.java b/lucene/dev/trunk/solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest.java
index d06783fc..8cf4c02b 100644
--- a/lucene/dev/trunk/solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest.java
+++ b/lucene/dev/trunk/solr/core/src/test/org/apache/solr/handler/PingRequestHandlerTest.java
@@ -100,7 +100,7 @@ public void testEnablingServer() throws Exception {
     makeRequest(handler, req("action", "enable"));
 
     assertTrue(healthcheckFile.exists());
-    assertNotNull(FileUtils.readFileToString(healthcheckFile), "UTF-8");
+    assertNotNull(FileUtils.readFileToString(healthcheckFile, "UTF-8"));
 
     // now verify that the handler response with success
 
diff --git a/lucene/dev/trunk/solr/core/src/test/org/apache/solr/schema/ModifyConfFileTest.java b/lucene/dev/trunk/solr/core/src/test/org/apache/solr/schema/ModifyConfFileTest.java
index c6698b35..c763190b 100644
--- a/lucene/dev/trunk/solr/core/src/test/org/apache/solr/schema/ModifyConfFileTest.java
+++ b/lucene/dev/trunk/solr/core/src/test/org/apache/solr/schema/ModifyConfFileTest.java
@@ -94,7 +94,7 @@ public void testConfigWrite() throws Exception {
 
       assertTrue("Schema should have caused core reload to fail!",
           rsp.getException().getMessage().indexOf("SAXParseException") != -1);
-      String contents = FileUtils.readFileToString(new File(core.getCoreDescriptor().getInstanceDir(), "conf/schema.xml"));
+      String contents = FileUtils.readFileToString(new File(core.getCoreDescriptor().getInstanceDir(), "conf/schema.xml"), Charsets.UTF_8.toString());
       assertFalse("Schema contents should NOT have changed!", contents.contains("Testing rewrite of schema.xml file."));
 
       streams.add(new ContentStreamBase.StringStream("This should barf"));
@@ -110,7 +110,7 @@ public void testConfigWrite() throws Exception {
       locReq.setContentStreams(streams);
       core.execute(handler, locReq, rsp);
       contents = FileUtils.readFileToString(new File(core.getCoreDescriptor().getInstanceDir(),
-          "conf/velocity/test.vm"));
+          "conf/velocity/test.vm"), Charsets.UTF_8.toString());
       assertEquals("Schema contents should have changed!", "Some bogus stuff for a test.", contents);
 
       streams.clear();
diff --git a/lucene/dev/trunk/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java b/lucene/dev/trunk/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java
index f9a1890e..9c5dada5 100644
--- a/lucene/dev/trunk/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java
+++ b/lucene/dev/trunk/solr/solrj/src/java/org/apache/solr/common/cloud/SolrZkClient.java
@@ -481,8 +481,8 @@ public Stat setData(String path, File file, boolean retryOnConnLoss) throws IOEx
       log.info("Write to ZooKeepeer " + file.getAbsolutePath() + " to " + path);
     }
 
-    String data = FileUtils.readFileToString(file);
-    return setData(path, data.getBytes("UTF-8"), retryOnConnLoss);
+    byte[] data = FileUtils.readFileToByteArray(file);
+    return setData(path, data, retryOnConnLoss);
   }
 
   /**
