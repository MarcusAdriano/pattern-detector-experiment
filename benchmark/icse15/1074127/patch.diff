diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/PreparedStatement.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/PreparedStatement.java
index 86bd3719..d5327fed 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/PreparedStatement.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/PreparedStatement.java
@@ -497,7 +497,7 @@ public void setBoolean(int parameterIndex, boolean x) throws SQLException {
                 }
                 
                 parameterMetaData_.clientParamtertype_[parameterIndex - 1] = java.sql.Types.BIT;
-                setInput(parameterIndex, new Short((short) (x ? 1 : 0)));
+                setInput(parameterIndex, Boolean.valueOf(x));
             }
         }
         catch ( SqlException se )
diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/net/NetStatementRequest.java b/db/derby/code/trunk/java/client/org/apache/derby/client/net/NetStatementRequest.java
index c44ab443..9a58ac69 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/net/NetStatementRequest.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/net/NetStatementRequest.java
@@ -722,7 +722,7 @@ private void buildFDODTA(int numVars,
                         break;
 
                     case DRDAConstants.DRDA_TYPE_NBOOLEAN:
-                        write1Byte(((Short) inputs[i]).shortValue());
+                        writeBoolean(((Boolean) inputs[i]).booleanValue());
                         break;
                     case DRDAConstants.DRDA_TYPE_NINTEGER:
                         writeIntFdocaData(((Integer) inputs[i]).intValue());
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/BooleanValuesTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/BooleanValuesTest.java
index 48e356c7..cf8ed15e 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/BooleanValuesTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/BooleanValuesTest.java
@@ -1819,6 +1819,42 @@ public void test_4965() throws SQLException {
         }
     }
 
+    /**
+     * Verify fix for DERBY-5042, where updateBoolean() and updateObject()
+     * would fail on a BOOLEAN column when using the client driver.
+     */
+    public void test_5042_updateBoolean() throws SQLException {
+        setAutoCommit(false);
+
+        Statement s = createStatement(ResultSet.TYPE_FORWARD_ONLY,
+                                      ResultSet.CONCUR_UPDATABLE);
+        s.execute("create table derby5042(b boolean, i int, c char(10))");
+
+        ResultSet rs = s.executeQuery("select * from derby5042");
+
+        // Test updateBoolean() on various column types
+        rs.moveToInsertRow();
+        rs.updateBoolean("B", true); // Used to fail with client driver
+        rs.updateBoolean("I", true);
+        rs.updateBoolean("C", true);
+        rs.insertRow();
+
+        // Test updateObject() with a java.lang.Boolean on various column types
+        rs.moveToInsertRow();
+        rs.updateObject("B", Boolean.FALSE); // Used to fail with client driver
+        rs.updateObject("I", Boolean.FALSE);
+        rs.updateObject("C", Boolean.FALSE);
+        rs.insertRow();
+
+        rs.close();
+
+        JDBC.assertFullResultSet(
+                s.executeQuery("select * from derby5042 order by 1,2,3"),
+                new String[][]{
+                    {"false", "0", "false"},
+                    {"true", "1", "true"}});
+    }
+
     /**
      * Verify fix for DERBY-5063 - updateBytes() should fail when invoked
      * on boolean columns.
