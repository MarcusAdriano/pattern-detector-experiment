diff --git a/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/sql/compile/GroupByList.java b/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/sql/compile/GroupByList.java
index 8b96de9d..b7498211 100644
--- a/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/sql/compile/GroupByList.java
+++ b/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/sql/compile/GroupByList.java
@@ -220,6 +220,13 @@ public void bindGroupByColumns(SelectNode select,
 				*/
 				numColsAddedHere++;
 			}
+			if (groupingCol.getColumnExpression() instanceof JavaToSQLValueNode) 
+			{
+				// disallow any expression which involves native java computation. 
+				// Not possible to consider java expressions for equivalence.
+				throw StandardException.newException(					
+						SQLState.LANG_INVALID_GROUPED_SELECT_LIST);
+			}
 		}
 
 		/* Verify that no subqueries got added to the dummy list */
diff --git a/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/sql/compile/VerifyAggregateExpressionsVisitor.java b/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/sql/compile/VerifyAggregateExpressionsVisitor.java
index ec554364..4e623ad5 100644
--- a/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/sql/compile/VerifyAggregateExpressionsVisitor.java
+++ b/db/derby/code/branches/10.4/java/engine/org/apache/derby/impl/sql/compile/VerifyAggregateExpressionsVisitor.java
@@ -119,15 +119,7 @@ else if (node instanceof SubqueryNode)
 							SQLState.LANG_INVALID_NON_GROUPED_SELECT_LIST :
 							SQLState.LANG_INVALID_GROUPED_SELECT_LIST);
 			}
-		} else if (node instanceof JavaToSQLValueNode) 
-		{
-			// disallow any expression which involves native java computation. 
-		    	// Not possible to consider java expressions for equivalence.
-			throw StandardException.newException( (groupByList == null) ?
-					SQLState.LANG_INVALID_NON_GROUPED_SELECT_LIST :
-						SQLState.LANG_INVALID_GROUPED_SELECT_LIST);
 		}
-
 		return node;
 	}
 
diff --git a/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GroupByExpressionTest.java b/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GroupByExpressionTest.java
index 379713a1..9e12eaf9 100644
--- a/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GroupByExpressionTest.java
+++ b/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GroupByExpressionTest.java
@@ -479,6 +479,8 @@ public void testNegative()
         assertCompileError(
                 "42Y30", "select r(), count(*) from test group by r()");
 
+        assertCompileError(
+                "42Y30", "select count(*) from test group by r()");
         // invalid grouping expression.
         assertCompileError(
                 "42Y30", "select c1+1, count(*) from test group by c1+2");
diff --git a/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/RoutineTest.java b/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/RoutineTest.java
index fefa4e84..ac44e112 100644
--- a/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/RoutineTest.java
+++ b/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/RoutineTest.java
@@ -23,6 +23,7 @@ Licensed to the Apache Software Foundation (ASF) under one
 
 import java.io.UnsupportedEncodingException;
 import java.sql.PreparedStatement;
+import java.sql.ResultSet;
 import java.sql.SQLException;
 import java.sql.Statement;
 import java.sql.Time;
@@ -461,6 +462,23 @@ public void testFunctionNullHandling() throws SQLException, UnsupportedEncodingE
         s.close();
     }
     
+    /**
+     * Test function with an aggregate argument. DERBY-3649
+     * @throws SQLException
+     */
+    public void testAggregateArgument() throws SQLException
+    {
+    	Statement s = createStatement();
+    	s.executeUpdate("CREATE TABLE TEST (I INT)");
+    	s.executeUpdate("INSERT INTO TEST VALUES(1)");
+    	s.executeUpdate("INSERT INTO TEST VALUES(2)");
+    	s.executeUpdate("CREATE FUNCTION CheckCount(count integer) RETURNS INTEGER PARAMETER STYLE JAVA NO SQL LANGUAGE JAVA EXTERNAL NAME 'org.apache.derbyTesting.functionTests.tests.lang.RoutineTest.checkCount'");
+    	ResultSet rs = s.executeQuery("select checkCount(count(*)) from test");
+    	JDBC.assertSingleValueResultSet(rs, "2");
+    	
+    	
+    }
+    
     /*
     ** Routine implementations called from the tests but do
     *  not use DriverManager so that this test can be used on
@@ -492,5 +510,19 @@ public static Time nullAtNoon(Time t) {
         
         return t;
     }
+    
+
+    public static int checkCount(int count)
+               throws SQLException {
+           //   throws ZeroException {
+
+           if (count == 0) {
+               //throw new ZeroException();
+               throw new SQLException("No results found", "38777");
+           }
+
+           return count;
+       }
+
 }
 
