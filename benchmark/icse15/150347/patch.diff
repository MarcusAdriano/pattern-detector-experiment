diff --git a/lucene/java/trunk/src/java/org/apache/lucene/store/FSDirectory.java b/lucene/java/trunk/src/java/org/apache/lucene/store/FSDirectory.java
index f89b3796..e93cc0c6 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/store/FSDirectory.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/store/FSDirectory.java
@@ -54,7 +54,7 @@
    */
   public static final String LOCK_DIR =
     System.getProperty("org.apache.lucene.lockdir",
-      System.getProperty("java.io.tmpdir", "."));
+      System.getProperty("java.io.tmpdir"));
 
   private static MessageDigest DIGESTER;
 
@@ -118,17 +118,15 @@ public static FSDirectory getDirectory(File file, boolean create)
   private FSDirectory(File path, boolean create) throws IOException {
     directory = path;
 
-   lockDir = new File(LOCK_DIR);
-   if (!lockDir.isAbsolute()) {
-     lockDir = new File(directory, LOCK_DIR);
-   }
-   if (lockDir.exists() == false) {
-     if (lockDir.mkdirs() == false) {
-       throw new IOException("Cannot create lock directory: " + lockDir);
+    if (LOCK_DIR == null) {
+      lockDir = directory;
      }
+    else {
+      lockDir = new File(LOCK_DIR);
    }
-    if (create)
+    if (create) {
       create();
+    }
 
     if (!directory.isDirectory())
       throw new IOException(path + " not a directory");
@@ -137,7 +135,7 @@ private FSDirectory(File path, boolean create) throws IOException {
   private synchronized void create() throws IOException {
     if (!directory.exists())
       if (!directory.mkdirs())
-        throw new IOException("Cannot create lock directory: " + directory);
+        throw new IOException("Cannot create directory: " + directory);
 
     String[] files = directory.list();            // clear old files
     for (int i = 0; i < files.length; i++) {
@@ -299,6 +297,13 @@ public final Lock makeLock(String name) {
       public boolean obtain() throws IOException {
         if (DISABLE_LOCKS)
           return true;
+
+        if (!lockDir.exists()) {
+          if (!lockDir.mkdirs()) {
+            throw new IOException("Cannot create lock directory: " + lockDir);
+          }
+        }
+
         return lockFile.createNewFile();
       }
       public void release() {
