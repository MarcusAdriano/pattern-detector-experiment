diff --git a/lucene/dev/branches/branch_3x/lucene/contrib/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.java b/lucene/dev/branches/branch_3x/lucene/contrib/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.java
index e97ba8ea..547fe32e 100644
--- a/lucene/dev/branches/branch_3x/lucene/contrib/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.java
+++ b/lucene/dev/branches/branch_3x/lucene/contrib/facet/src/test/org/apache/lucene/facet/util/TestScoredDocIDsUtils.java
@@ -133,7 +133,7 @@ public boolean haveAlpha(int docNum) {
         numIteratedDocs++;
         int docNum = it.getDocID();
         assertFalse(
-            "Deleted docs must not appear in the allDocsScoredDocIds set",
+            "Deleted docs must not appear in the allDocsScoredDocIds set: " + docNum,
             docFactory.markedDeleted(docNum));
       }
 
@@ -222,9 +222,11 @@ public boolean haveAlpha(int docNum) {
   }
 
   static IndexReader createReaderWithNDocs(Random random, int nDocs, DocumentFactory docFactory, Directory dir) throws IOException {
-    // Create the index
-    RandomIndexWriter writer = new RandomIndexWriter(random, dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, 
-        new MockAnalyzer(random, MockTokenizer.KEYWORD, false)));
+    // Create the index - force log-merge policy since we rely on docs order.
+    RandomIndexWriter writer = new RandomIndexWriter(random, dir,
+        newIndexWriterConfig(random, TEST_VERSION_CURRENT,
+            new MockAnalyzer(random, MockTokenizer.KEYWORD, false))
+            .setMergePolicy(newLogMergePolicy()));
     for (int docNum = 0; docNum < nDocs; docNum++) {
       writer.addDocument(docFactory.getDoc(docNum));
     }
