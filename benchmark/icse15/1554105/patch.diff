diff --git a/lucene/dev/branches/lucene_solr_4_6/solr/core/src/java/org/apache/solr/cloud/DistributedQueue.java b/lucene/dev/branches/lucene_solr_4_6/solr/core/src/java/org/apache/solr/cloud/DistributedQueue.java
index bbb42dff..e0044776 100644
--- a/lucene/dev/branches/lucene_solr_4_6/solr/core/src/java/org/apache/solr/cloud/DistributedQueue.java
+++ b/lucene/dev/branches/lucene_solr_4_6/solr/core/src/java/org/apache/solr/cloud/DistributedQueue.java
@@ -56,7 +56,7 @@
   public DistributedQueue(SolrZkClient zookeeper, String dir, List<ACL> acl) {
     this.dir = dir;
     
-    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(30);
+    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());
     try {
       cmdExecutor.ensureExists(dir, zookeeper);
     } catch (KeeperException e) {
diff --git a/lucene/dev/branches/lucene_solr_4_6/solr/core/src/java/org/apache/solr/cloud/LeaderElector.java b/lucene/dev/branches/lucene_solr_4_6/solr/core/src/java/org/apache/solr/cloud/LeaderElector.java
index a2fd4c70..ff8f0013 100644
--- a/lucene/dev/branches/lucene_solr_4_6/solr/core/src/java/org/apache/solr/cloud/LeaderElector.java
+++ b/lucene/dev/branches/lucene_solr_4_6/solr/core/src/java/org/apache/solr/cloud/LeaderElector.java
@@ -66,7 +66,7 @@
   
   public LeaderElector(SolrZkClient zkClient) {
     this.zkClient = zkClient;
-    zkCmdExecutor = new ZkCmdExecutor((int) (zkClient.getZkClientTimeout()/1000.0 + 3000));
+    zkCmdExecutor = new ZkCmdExecutor(zkClient.getZkClientTimeout());
   }
   
   /**
diff --git a/lucene/dev/branches/lucene_solr_4_6/solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest.java b/lucene/dev/branches/lucene_solr_4_6/solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest.java
index 7457f28d..4dc9a018 100644
--- a/lucene/dev/branches/lucene_solr_4_6/solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest.java
+++ b/lucene/dev/branches/lucene_solr_4_6/solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest.java
@@ -220,6 +220,24 @@ public Object answer() throws Throwable {
       }).anyTimes();
       
     }
+    
+    solrZkClientMock.getZkClientTimeout();
+    expectLastCall().andAnswer(new IAnswer<Object>() {
+      @Override
+      public Object answer() throws Throwable {
+        return 30000;
+      }
+    }).anyTimes();
+    
+    clusterStateMock.hasCollection(anyObject(String.class));
+    expectLastCall().andAnswer(new IAnswer<Boolean>() {
+      @Override
+      public Boolean answer() throws Throwable {
+        String key = (String) getCurrentArguments()[0];
+        return collectionsSet.contains(key);
+      }
+    } ).anyTimes();
+
     clusterStateMock.getLiveNodes();
     expectLastCall().andAnswer(new IAnswer<Object>() {
       @Override
diff --git a/lucene/dev/branches/lucene_solr_4_6/solr/solrj/src/java/org/apache/solr/common/cloud/ZkCmdExecutor.java b/lucene/dev/branches/lucene_solr_4_6/solr/solrj/src/java/org/apache/solr/common/cloud/ZkCmdExecutor.java
index 7c2ebf34..1b4b1789 100644
--- a/lucene/dev/branches/lucene_solr_4_6/solr/solrj/src/java/org/apache/solr/common/cloud/ZkCmdExecutor.java
+++ b/lucene/dev/branches/lucene_solr_4_6/solr/solrj/src/java/org/apache/solr/common/cloud/ZkCmdExecutor.java
@@ -33,6 +33,14 @@
   private int retryCount;
   private List<ACL> acl = ZooDefs.Ids.OPEN_ACL_UNSAFE;
   
+  /**
+   * TODO: At this point, this should probably take a SolrZkClient in
+   * it's constructor.
+   * 
+   * @param timeoutms
+   *          the client timeout for the ZooKeeper clients that will be used
+   *          with this class.
+   */
   public ZkCmdExecutor(int timeoutms) {
     double timeouts = timeoutms / 1000.0;
     this.retryCount = Math.round(0.5f * ((float)Math.sqrt(8.0f * timeouts + 1.0f) - 1.0f));
