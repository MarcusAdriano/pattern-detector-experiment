diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource.java
index b2051812..fbc3ee9a 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource.java
@@ -219,14 +219,16 @@ protected void runTest(String[] args) throws Exception {
 			rs.next();
 			System.out.println("FAIL - ResultSet is open for a closed connection obtained from PooledConnection");
 		} catch (SQLException sqle) {
-			System.out.println("expected " + sqle.toString());
+			System.out.println("expected SQL Exception: (" + sqle.getSQLState()
+                              + ") " + sqle.getMessage());
 		}
 
 		try {
 			s.executeUpdate("update t set i = 1");
 			System.out.println("FAIL - Statement is open for a closed connection obtained from PooledConnection");
 		} catch (SQLException sqle) {
-			System.out.println("expected " + sqle.toString());
+			System.out.println("expected SQL Exception: (" + sqle.getSQLState()
+                              + ") " + sqle.getMessage());
 		}
 
 		pc.close();
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource30.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource30.java
index 24043478..23f0849e 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource30.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource30.java
@@ -93,7 +93,8 @@ public void checkConnection(String dsName, Connection conn) throws SQLException
 		} catch (SQLException sqle) {
 			// we expect savepoints exceptions because either
 			// it's a global transaction, or it's in auto commit mode.
-			System.out.println("JDBC 3.0 savepoint " + sqle.toString());
+			System.out.println("JDBC 3.0 savepoint SQL Exception: (" +
+                              sqle.getSQLState() + ") " + sqle.getMessage());
 		}
 
 
