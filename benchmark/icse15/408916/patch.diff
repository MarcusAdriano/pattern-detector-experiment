diff --git a/lucene/java/trunk/src/java/org/apache/lucene/store/RAMInputStream.java b/lucene/java/trunk/src/java/org/apache/lucene/store/RAMInputStream.java
index 7e6f2467..48bc187d 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/store/RAMInputStream.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/store/RAMInputStream.java
@@ -24,7 +24,7 @@
 
 class RAMInputStream extends BufferedIndexInput implements Cloneable {
   private RAMFile file;
-  private int pointer = 0;
+  private long pointer = 0;
   private long length;
 
   public RAMInputStream(RAMFile f) {
@@ -34,10 +34,10 @@ public RAMInputStream(RAMFile f) {
 
   public void readInternal(byte[] dest, int destOffset, int len) {
     int remainder = len;
-    int start = pointer;
+    long start = pointer;
     while (remainder != 0) {
-      int bufferNumber = start/BUFFER_SIZE;
-      int bufferOffset = start%BUFFER_SIZE;
+      int bufferNumber = (int)(start/BUFFER_SIZE);
+      int bufferOffset = (int)(start%BUFFER_SIZE);
       int bytesInBuffer = BUFFER_SIZE - bufferOffset;
       int bytesToCopy = bytesInBuffer >= remainder ? remainder : bytesInBuffer;
       byte[] buffer = (byte[])file.buffers.elementAt(bufferNumber);
@@ -53,7 +53,7 @@ public void close() {
   }
 
   public void seekInternal(long pos) {
-    pointer = (int)pos;
+    pointer = pos;
   }
 
   public long length() {
diff --git a/lucene/java/trunk/src/java/org/apache/lucene/store/RAMOutputStream.java b/lucene/java/trunk/src/java/org/apache/lucene/store/RAMOutputStream.java
index 970651a7..5d63fc7d 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/store/RAMOutputStream.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/store/RAMOutputStream.java
@@ -26,7 +26,7 @@
 
 public class RAMOutputStream extends BufferedIndexOutput {
   private RAMFile file;
-  private int pointer = 0;
+  private long pointer = 0;
 
   /** Construct an empty output buffer. */
   public RAMOutputStream() {
@@ -69,8 +69,8 @@ public void flushBuffer(byte[] src, int len) {
     byte[] buffer;
     int bufferPos = 0;
     while (bufferPos != len) {
-      int bufferNumber = pointer/BUFFER_SIZE;
-      int bufferOffset = pointer%BUFFER_SIZE;
+      int bufferNumber = (int)(pointer/BUFFER_SIZE);
+      int bufferOffset = (int)(pointer%BUFFER_SIZE);
       int bytesInBuffer = BUFFER_SIZE - bufferOffset;
       int remainInSrcBuffer = len - bufferPos;
       int bytesToCopy = bytesInBuffer >= remainInSrcBuffer ? remainInSrcBuffer : bytesInBuffer;
@@ -99,7 +99,7 @@ public void close() throws IOException {
 
   public void seek(long pos) throws IOException {
     super.seek(pos);
-    pointer = (int)pos;
+    pointer = pos;
   }
   public long length() {
     return file.length;
