diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java
index 44c5156e..8e10bd4b 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java
@@ -3341,6 +3341,52 @@ private void checkException(String SQLState, SQLException se)
     }
 
 
+    /**
+     * DERBY-3243 Fix ArrayIndexOutOfBounds Exception
+     * if we retrieve more than 32K lobs
+     * 
+     */
+    public void testRetrieveMoreThan32KLobs() throws SQLException
+    {
+        int numRows = 34000;
+        // Load the database
+        Connection conn = getConnection();
+        conn.setAutoCommit(false);
+        Statement s = createStatement();
+        
+        PreparedStatement ps = prepareStatement("INSERT INTO TESTCLOB VALUES(?,?,?)");
+        for (int i = 0 ; i < numRows;i++)
+        {
+            ps.setInt(1,i);
+            ps.setInt(2,i);
+            ps.setString(3,"" + i);
+            ps.executeUpdate();
+            if (i % 1000 == 0) {
+                commit();
+            }
+        }
+        commit();
+        
+        // retrieve the data
+        
+        ResultSet rs = s.executeQuery("SELECT * from TESTCLOB");
+        while (rs.next()) {
+            rs.getInt(1);
+            Clob c = rs.getClob(3);
+            c.getSubString(1,100);
+        }
+        rs.close();
+        
+        conn.commit();
+        
+        
+    }
+
+
+
+
+        
+    
     private static final String BLOB_BAD_POSITION = "XJ070";
     private static final String BLOB_NONPOSITIVE_LENGTH = "XJ071";
     private static final String BLOB_POSITION_TOO_LARGE = "XJ076";
