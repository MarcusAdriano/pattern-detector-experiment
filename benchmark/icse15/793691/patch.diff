diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
index f6e58590..97536034 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
@@ -95,16 +95,12 @@
      * high throughput on reads but at the cost of consistency.
     */
     private static boolean doConsistencyCheck_ = true;
-    /* Address of ZooKeeper cell */
-    private static String zkAddress_;
     /* Callout directories */
     private static String calloutLocation_;
     /* Job Jar Location */
     private static String jobJarFileLocation_;
     /* Address where to run the job tracker */
     private static String jobTrackerHost_;    
-    /* Zookeeper session timeout. */
-    private static int zkSessionTimeout_ = 30000;
     /* time to wait before garbage collecting tombstones (deletion markers) */
     private static int gcGraceInSeconds_ = 10 * 24 * 3600; // 10 days
 
@@ -128,9 +124,6 @@
             /* Ganglia servers contact list */
             gangliaServers_ = xmlUtils.getNodeValues("/Storage/GangliaServers/GangliaServer");
 
-            /* ZooKeeper's address */
-            zkAddress_ = xmlUtils.getNodeValue("/Storage/ZookeeperAddress");
-
             /* Hashing strategy */
             partitionerClass_ = xmlUtils.getNodeValue("/Storage/Partitioner");
             try
@@ -161,11 +154,6 @@
 
             initialToken_ = xmlUtils.getNodeValue("/Storage/InitialToken");
 
-            /* Zookeeper's session timeout */
-            String zkSessionTimeout = xmlUtils.getNodeValue("/Storage/ZookeeperSessionTimeout");
-            if ( zkSessionTimeout != null )
-                zkSessionTimeout_ = Integer.parseInt(zkSessionTimeout);
-
             /* Data replication factor */
             String replicationFactor = xmlUtils.getNodeValue("/Storage/ReplicationFactor");
             if ( replicationFactor != null )
@@ -480,11 +468,6 @@ public static String getPartitionerClass()
         return partitionerClass_;
     }
     
-    public static String getZkAddress()
-    {
-        return zkAddress_;
-    }
-    
     public static String getCalloutLocation()
     {
         return calloutLocation_;
@@ -495,11 +478,6 @@ public static String getJobTrackerAddress()
         return jobTrackerHost_;
     }
     
-    public static int getZkSessionTimeout()
-    {
-        return zkSessionTimeout_;
-    }
-
     public static int getColumnIndexSize()
     {
     	return columnIndexSizeInKB_ * 1024;
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
index 1bdc37a9..08d07881 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
@@ -43,7 +43,6 @@
 import org.apache.cassandra.utils.FileUtils;
 import org.apache.cassandra.utils.LogUtil;
 import org.apache.log4j.Logger;
-import org.apache.zookeeper.ZooKeeper;
 
 /*
  * This abstraction contains the token/identifier of this node
@@ -184,8 +183,6 @@ public static StorageService instance()
     private StorageLoadBalancer storageLoadBalancer_;
     /* We use this interface to determine where replicas need to be placed */
     private IReplicaPlacementStrategy nodePicker_;
-    /* Handle to a ZooKeeper instance */
-    private ZooKeeper zk_;
     
     /*
      * Registers with Management Server
@@ -244,11 +241,6 @@ public StorageService()
             nodePicker_ = new RackUnawareStrategy(tokenMetadata_, partitioner_, DatabaseDescriptor.getReplicationFactor(), DatabaseDescriptor.getStoragePort());
     }
 
-    protected ZooKeeper getZooKeeperHandle()
-    {
-        return zk_;
-    }
-
     static
     {
         try
