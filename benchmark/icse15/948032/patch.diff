diff --git a/cassandra/trunk/contrib/bmt_example/CassandraBulkLoader.java b/cassandra/trunk/contrib/bmt_example/CassandraBulkLoader.java
index 60234018..518441ec 100644
--- a/cassandra/trunk/contrib/bmt_example/CassandraBulkLoader.java
+++ b/cassandra/trunk/contrib/bmt_example/CassandraBulkLoader.java
@@ -66,6 +66,7 @@
 import org.apache.cassandra.net.Message;
 import org.apache.cassandra.net.MessagingService;
 import org.apache.cassandra.service.StorageService;
+import org.apache.cassandra.utils.FBUtilities;
 import org.apache.hadoop.filecache.DistributedCache;
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.io.Text;
@@ -232,28 +233,20 @@ public static Message createMessage(String Keyspace, byte[] Key, String CFName,
         Column column;
 
         /* Get the first column family from list, this is just to get past validation */
-        baseColumnFamily = new ColumnFamily(CFName,
-                                            ColumnFamilyType.Standard,
+        baseColumnFamily = new ColumnFamily(ColumnFamilyType.Standard,
                                             DatabaseDescriptor.getComparator(Keyspace, CFName),
                                             DatabaseDescriptor.getSubComparator(Keyspace, CFName),
                                             CFMetaData.getId(Keyspace, CFName));
         
         for(ColumnFamily cf : ColumnFamiles) {
             bufOut.reset();
-            try
-            {
                 ColumnFamily.serializer().serializeWithIndexes(cf, bufOut);
                 byte[] data = new byte[bufOut.getLength()];
                 System.arraycopy(bufOut.getData(), 0, data, 0, bufOut.getLength());
 
-                column = new Column(cf.name().getBytes("UTF-8"), data, 0);
+            column = new Column(FBUtilities.toByteArray(cf.id()), data, 0);
                 baseColumnFamily.addColumn(column);
             }
-            catch (IOException e)
-            {
-                throw new RuntimeException(e);
-            }
-        }
         rm = new RowMutation(Keyspace, Key);
         rm.add(baseColumnFamily);
 
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/Table.java b/cassandra/trunk/src/java/org/apache/cassandra/db/Table.java
index 43aa4188..724cd177 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/Table.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/Table.java
@@ -42,6 +42,7 @@
 
 import org.apache.cassandra.service.StorageService;
 import org.apache.cassandra.db.filter.*;
+import org.apache.cassandra.utils.FBUtilities;
 import org.cliffc.high_scale_lib.NonBlockingHashMap;
 
 import org.slf4j.Logger;
@@ -386,7 +387,7 @@ void load(RowMutation rowMutation) throws IOException
             Collection<IColumn> columns = columnFamily.getSortedColumns();
             for (IColumn column : columns)
             {
-                ColumnFamilyStore cfStore = getColumnFamilyStore(new String(column.name(), "UTF-8"));
+                ColumnFamilyStore cfStore = columnFamilyStores.get(FBUtilities.byteArrayToInt(column.name()));
                 cfStore.applyBinary(key, column.value());
             }
         }
