diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TableFunctionTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TableFunctionTest.java
index dc3b05b7..58df6bdf 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TableFunctionTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/TableFunctionTest.java
@@ -1591,7 +1591,6 @@ public void assertResults( String sql, String[] columnNames, String[][] rows, in
     {
         println( "\nExpecting good results from " + sql );
 
-        try {
             PreparedStatement    ps = prepareStatement( sql );
             ResultSet                   rs = ps.executeQuery();
 
@@ -1599,11 +1598,7 @@ public void assertResults( String sql, String[] columnNames, String[][] rows, in
             
             rs.close();
             ps.close();
-        }
-        catch (Exception e)
-        {
-            unexpectedThrowable( e );
-        }
+
     }
 
     /**
@@ -1618,19 +1613,15 @@ private void    expectError( String sqlState, String query )
 
     /**
      * Run good DDL.
+     * @throws SQLException 
      */
-    private void    goodStatement( String ddl )
+    private void    goodStatement( String ddl ) throws SQLException
     {
-        try {
             PreparedStatement    ps = chattyPrepare( ddl );
 
             ps.execute();
             ps.close();
-        }
-        catch (Exception e)
-        {
-            unexpectedThrowable( e );
-        }
+
     }
     
     /**
@@ -1646,32 +1637,17 @@ private PreparedStatement   chattyPrepare( String text )
     
     /**
      * Verify that the return type of function looks good.
+     * @throws SQLException 
      */
-    private void    verifyReturnType( String functionName, String expectedReturnType )
+    private void    verifyReturnType( String functionName, String expectedReturnType ) throws SQLException
     {
         println( functionName + " should have return type = " + expectedReturnType );
         
-        try {
             String                          ddl = "select aliasinfo from sys.sysaliases where alias=?";
-            PreparedStatement    ps = prepareStatement( ddl );
-
-            ps.setString( 1, functionName );
-            
-            ResultSet                   rs = ps.executeQuery();
-
-            rs.next();
-
-            String                          actualReturnType = rs.getString( 1 );
+        PreparedStatement ps = prepareStatement(ddl);
+        ps.setString(1, functionName);
 
-            assertTrue( expectedReturnType.equals( actualReturnType ) );
-            
-            rs.close();
-            ps.close();
-        }
-        catch (Exception e)
-        {
-            unexpectedThrowable( e );
-        }
+        JDBC.assertSingleValueResultSet(ps.executeQuery(), expectedReturnType);
     }
 
     /**
@@ -1685,7 +1661,7 @@ private void    verifyReturnType( String functionName, String expectedReturnType
         // JDBC4 metadata calls.
         if (  usingDerbyNet() ) { return; }
         
-        try {
+
             println( "\nExpecting correct function metadata from " + functionName );
             ResultSet                   rs = getFunctions(  null, "APP", functionName );
             JDBC.assertFullResultSet( rs, expectedGetFunctionsResult, false );
@@ -1697,11 +1673,6 @@ private void    verifyReturnType( String functionName, String expectedReturnType
             JDBC.assertFullResultSet( rs, expectedGetFunctionColumnsResult, false );
             rs.close();
         }
-        catch (Exception e)
-        {
-            unexpectedThrowable( e );
-        }
-    }
 
     /**
      * Call DatabaseMetaData.getFunctions(). We do this by reflection because
@@ -1984,15 +1955,6 @@ else if ( obj instanceof byte[] )
         else { return obj.toString(); }
     }
 
-    /**
-     * Fail the test for an unexpected exception
-     */
-    private void    unexpectedThrowable( Throwable t )
-    {
-        printStackTrace( t );
-        fail( "Unexpected exception: " + t );
-    }
-    
     /**
      * Make a VTI given its rows.
      */
