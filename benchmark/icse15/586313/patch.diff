diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/CallableStatement.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/CallableStatement.java
index 69d1537d..3ff199a3 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/CallableStatement.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/CallableStatement.java
@@ -406,6 +406,7 @@ public double getDouble(int parameterIndex) throws SQLException {
         }
     }
 
+    /** @deprecated */
     public java.math.BigDecimal getBigDecimal(int parameterIndex, int scale) throws SQLException, ArithmeticException {
         try
         {
diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/PreparedStatement.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/PreparedStatement.java
index afa2f686..10a5477b 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/PreparedStatement.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/PreparedStatement.java
@@ -1191,6 +1191,7 @@ private void checkTypeForSetClob(int parameterIndex)
      * value
      * @param length the number of bytes in the stream
      * @exception SQLException throws feature not implemented.
+     * @deprecated
      */
     public void setUnicodeStream(int parameterIndex,
                                  java.io.InputStream x,
diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/ResultSet.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/ResultSet.java
index 8e3da044..d2ba0b65 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/ResultSet.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/ResultSet.java
@@ -783,6 +783,7 @@ public double getDouble(int column) throws SQLException {
     }
 
     // Live life on the edge and run unsynchronized
+    /** @deprecated */
     public java.math.BigDecimal getBigDecimal(int column, int scale) throws SQLException {
         try
         {
@@ -1168,6 +1169,7 @@ public String getString(int column) throws SQLException {
      *
      * @param column the column to retrieve as a Unicode stream
      * @exception SQLException throws feature not implemented
+     * @deprecated
      */
     public java.io.InputStream getUnicodeStream(int column) throws SQLException {
         if (agent_.loggingEnabled()) {
@@ -1527,6 +1529,7 @@ public final double getDouble(String columnName) throws SQLException {
         }
     }
 
+    /** @deprecated */
     public final java.math.BigDecimal getBigDecimal(String columnName, int scale) throws SQLException {
         try
         {
@@ -1695,6 +1698,7 @@ public final String getString(String columnName) throws SQLException {
         }
     }
 
+    /** @deprecated */
     public final java.io.InputStream getUnicodeStream(String columnName) throws SQLException {
         try
         {
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredCallableStatement.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredCallableStatement.java
index 17cbe2eb..fcab4087 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredCallableStatement.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredCallableStatement.java
@@ -108,6 +108,7 @@ public final double getDouble(int parameterIndex)
         return getCallableStatement().getDouble( parameterIndex);
     }
 
+    /** @deprecated */
     public final BigDecimal getBigDecimal(int parameterIndex,
                                               int scale)
         throws SQLException
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredPreparedStatement.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredPreparedStatement.java
index 28f8c49d..abd602a9 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredPreparedStatement.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredPreparedStatement.java
@@ -303,6 +303,7 @@ public final void setAsciiStream(int parameterIndex, InputStream x, int length)
      * UNICODE parameter value 
      * @param length the number of bytes in the stream 
 	 * @exception SQLException thrown on failure.
+     * @deprecated
      */
     public final void setUnicodeStream(int parameterIndex, InputStream x, int length) throws SQLException
     {
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/db/BasicDatabase.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/db/BasicDatabase.java
index 3be3978d..5f29a0a7 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/db/BasicDatabase.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/db/BasicDatabase.java
@@ -459,6 +459,7 @@ public Locale getLocale() {
 
 	/**
 		Return the UUID of this database.
+        @deprecated
 	*/
 	public final UUID getId() {
 		return myUUID;
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedCallableStatement20.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedCallableStatement20.java
index d3aaa9f4..24db5764 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedCallableStatement20.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedCallableStatement20.java
@@ -1058,6 +1058,7 @@ public final void setBigDecimal(int parameterIndex, BigDecimal x) throws SQLExce
     /**
 	 * @see CallableStatement#getBigDecimal
      * @exception SQLException NoOutputParameters thrown.
+     * @deprecated
      */
     public final BigDecimal getBigDecimal(int parameterIndex, int scale) throws SQLException
 	{
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedPreparedStatement.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedPreparedStatement.java
index dcecb987..ca84aca5 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedPreparedStatement.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedPreparedStatement.java
@@ -609,6 +609,7 @@ public final void setAsciiStream(int parameterIndex, InputStream x, int length)
      * UNICODE parameter value
      * @param length the number of bytes in the stream
 	 * @exception SQLException thrown on failure.
+     * @deprecated
      */
     public void setUnicodeStream(int parameterIndex, InputStream x, int length)
 	    throws SQLException
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet20.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet20.java
index 3247caf6..aeb79fc9 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet20.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet20.java
@@ -93,6 +93,7 @@ public EmbedResultSet20(org.apache.derby.impl.jdbc.EmbedConnection conn,
 		 * @param scale the number of digits to the right of the decimal
 		 * @return the column value; if the value is SQL NULL, the result is null
 		 * @exception SQLException thrown on failure.
+         * @deprecated
 		 */
 		public final BigDecimal getBigDecimal(int columnIndex, int scale)
 			throws SQLException {
@@ -128,6 +129,7 @@ public final BigDecimal getBigDecimal(int columnIndex)
 		 * @param scale the number of digits to the right of the decimal
 		 * @return the column value; if the value is SQL NULL, the result is null
 		 * @exception SQLException thrown on failure.
+         * @deprecated
 		 */
 		public final BigDecimal getBigDecimal(String columnName, int scale)
 			throws SQLException {
@@ -141,6 +143,7 @@ public final BigDecimal getBigDecimal(String columnName, int scale)
      *
 		Deprecated in JDBC 2.0, not supported by JCC.
 	 * @exception SQLException thrown on failure.
+     * @deprecated
      */
     public final java.io.InputStream getUnicodeStream(int columnIndex) throws SQLException {
 		throw Util.notImplemented("getUnicodeStream");
@@ -148,6 +151,7 @@ public final BigDecimal getBigDecimal(String columnName, int scale)
     /**
 		Deprecated in JDBC 2.0, not supported by JCC.
 	 * @exception SQLException thrown on failure.
+     * @deprecated
      */
     public final java.io.InputStream getUnicodeStream(String columnName) throws SQLException {
 		throw Util.notImplemented("getUnicodeStream");
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/vti/UpdatableVTITemplate.java b/db/derby/code/trunk/java/engine/org/apache/derby/vti/UpdatableVTITemplate.java
index ca94f00a..252702fa 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/vti/UpdatableVTITemplate.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/vti/UpdatableVTITemplate.java
@@ -468,6 +468,7 @@ public void setAsciiStream(int parameterIndex, InputStream x, int length) throws
 	 * @see java.sql.PreparedStatement
 	 *
  	 * @exception SQLException on unexpected JDBC error
+     * @deprecated
 	 */
 	public void setUnicodeStream(int parameterIndex, InputStream x, int length) throws SQLException
 	{
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/vti/VTITemplate.java b/db/derby/code/trunk/java/engine/org/apache/derby/vti/VTITemplate.java
index ea13104b..f395785b 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/vti/VTITemplate.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/vti/VTITemplate.java
@@ -151,6 +151,7 @@ public double getDouble(int columnIndex) throws SQLException {
 	 * @see java.sql.ResultSet
 	 *
  	 * @exception SQLException on unexpected JDBC error
+     * @deprecated
 	 */
     public BigDecimal getBigDecimal(int columnIndex, int scale) throws SQLException {
         throw new SQLException("getBigDecimal");
@@ -205,6 +206,7 @@ public BigDecimal getBigDecimal(int columnIndex, int scale) throws SQLException
 	 * @see java.sql.ResultSet
 	 *
  	 * @exception SQLException on unexpected JDBC error
+     * @deprecated
 	 */
     public java.io.InputStream getUnicodeStream(int columnIndex) throws SQLException {
         throw new SQLException("getUnicodeStream");
@@ -296,6 +298,7 @@ public double getDouble(String columnName) throws SQLException {
 	 * @see java.sql.ResultSet
 	 *
  	 * @exception SQLException on unexpected JDBC error
+     * @deprecated
 	 */
     public BigDecimal getBigDecimal(String columnName, int scale) throws SQLException {
         return getBigDecimal(findColumn(columnName), scale);
@@ -350,6 +353,7 @@ public BigDecimal getBigDecimal(String columnName, int scale) throws SQLExceptio
 	 * @see java.sql.ResultSet
 	 *
  	 * @exception SQLException on unexpected JDBC error
+     * @deprecated
 	 */
     public java.io.InputStream getUnicodeStream(String columnName) throws SQLException {
         throw new SQLException("getUnicodeStream");
