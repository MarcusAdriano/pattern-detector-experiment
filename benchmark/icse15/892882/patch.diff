diff --git a/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/locator/DatacenterShardStategy.java b/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/locator/DatacenterShardStategy.java
index 7ec28ba7..c1f9f710 100644
--- a/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/locator/DatacenterShardStategy.java
+++ b/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/locator/DatacenterShardStategy.java
@@ -133,6 +133,10 @@ public DatacenterShardStategy(TokenMetadata tokenMetadata, IPartitioner<Token> p
     private ArrayList<InetAddress> getNaturalEndpointsInternal(Token searchToken, TokenMetadata metadata) throws IOException
     {
         ArrayList<InetAddress> endpoints = new ArrayList<InetAddress>();
+
+        if (metadata.sortedTokens().size() == 0)
+            return endpoints;
+
         if (null == tokens || tokens.size() != metadata.sortedTokens().size())
         {
             loadEndPoints(metadata);
diff --git a/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/locator/RackAwareStrategy.java b/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/locator/RackAwareStrategy.java
index d0ed5519..b6ed4519 100644
--- a/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/locator/RackAwareStrategy.java
+++ b/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/locator/RackAwareStrategy.java
@@ -52,6 +52,10 @@ public RackAwareStrategy(TokenMetadata tokenMetadata, IPartitioner partitioner,
         boolean bOtherRack = false;
         int foundCount = 0;
         List tokens = metadata.sortedTokens();
+
+        if (tokens.isEmpty())
+            return endpoints;
+
         int index = Collections.binarySearch(tokens, token);
         if(index < 0)
         {
diff --git a/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/locator/RackUnawareStrategy.java b/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/locator/RackUnawareStrategy.java
index 9cb7caa6..faf3f9bf 100644
--- a/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/locator/RackUnawareStrategy.java
+++ b/incubator/cassandra/branches/cassandra-0.5/src/java/org/apache/cassandra/locator/RackUnawareStrategy.java
@@ -45,6 +45,10 @@ public RackUnawareStrategy(TokenMetadata tokenMetadata, IPartitioner partitioner
         int startIndex;
         List<Token> tokenList = new ArrayList<Token>();
         List tokens = new ArrayList<Token>(metadata.sortedTokens());
+        ArrayList<InetAddress> endpoints = new ArrayList<InetAddress>(tokenList.size());
+
+        if (tokens.isEmpty())
+            return endpoints;
 
         int index = Collections.binarySearch(tokens, token);
         if (index < 0)
@@ -64,7 +68,6 @@ public RackUnawareStrategy(TokenMetadata tokenMetadata, IPartitioner partitioner
             assert !tokenList.contains(tokens.get(i));
             tokenList.add((Token) tokens.get(i));
         }
-        ArrayList<InetAddress> endpoints = new ArrayList<InetAddress>(tokenList.size());
         for (Token t : tokenList)
             endpoints.add(metadata.getEndPoint(t));
         return endpoints;
