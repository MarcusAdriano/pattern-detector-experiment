diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/schema/FieldProperties.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/schema/FieldProperties.java
index 3a2b987b..788c78ae 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/schema/FieldProperties.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/schema/FieldProperties.java
@@ -64,7 +64,7 @@
   static final Map<String,Integer> propertyMap = new HashMap<String,Integer>();
   static {
     for (String prop : propertyNames) {
-      propertyMap.put(prop, propertyNameToInt(prop));
+      propertyMap.put(prop, propertyNameToInt(prop, true));
     }
   }
 
@@ -74,14 +74,18 @@ static String getPropertyName(int property) {
     return propertyNames[ Integer.numberOfTrailingZeros(property) ];
   }
 
-  static int propertyNameToInt(String name) {
+  static int propertyNameToInt(String name, boolean failOnError) {
     for (int i=0; i<propertyNames.length; i++) {
       if (propertyNames[i].equals(name)) {
         return 1 << i;
       }
     }
+    if (failOnError && !"default".equals(name)) {
+      throw new IllegalArgumentException("Invalid field property: " + name);
+    } else {
     return 0;
   }
+  }
 
 
   static String propertiesToString(int properties) {
@@ -105,13 +109,13 @@ static boolean off(int bitfield, int props) {
     return (bitfield & props) == 0;
   }
 
-  static int parseProperties(Map<String,String> properties, boolean which) {
+  static int parseProperties(Map<String,String> properties, boolean which, boolean failOnError) {
     int props = 0;
     for (Map.Entry<String, String> entry : properties.entrySet()) {
       String val = entry.getValue();
       if(val == null) continue;
       if (Boolean.parseBoolean(val) == which) {
-        props |= propertyNameToInt(entry.getKey());
+        props |= propertyNameToInt(entry.getKey(), failOnError);
       }
     }
     return props;
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/schema/FieldType.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/schema/FieldType.java
index bd457d86..1d4aae65 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/schema/FieldType.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/schema/FieldType.java
@@ -153,8 +153,8 @@ protected void setArgs(IndexSchema schema, Map<String,String> args) {
     this.args = Collections.unmodifiableMap(args);
     Map<String,String> initArgs = new HashMap<String,String>(args);
 
-    trueProperties = FieldProperties.parseProperties(initArgs,true);
-    falseProperties = FieldProperties.parseProperties(initArgs,false);
+    trueProperties = FieldProperties.parseProperties(initArgs,true,false);
+    falseProperties = FieldProperties.parseProperties(initArgs,false,false);
 
     properties &= ~falseProperties;
     properties |= trueProperties;
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/schema/SchemaField.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/schema/SchemaField.java
index da1b4f6a..b45041cc 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/schema/SchemaField.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/schema/SchemaField.java
@@ -221,8 +221,8 @@ static SchemaField create(String name, FieldType ft, int props, String defValue)
   }
 
   static int calcProps(String name, FieldType ft, Map<String, String> props) {
-    int trueProps = parseProperties(props,true);
-    int falseProps = parseProperties(props,false);
+    int trueProps = parseProperties(props,true,true);
+    int falseProps = parseProperties(props,false,true);
 
     int p = ft.properties;
 
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/schema/BadIndexSchemaTest.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/schema/BadIndexSchemaTest.java
index cccdc733..11dca7de 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/schema/BadIndexSchemaTest.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/schema/BadIndexSchemaTest.java
@@ -24,7 +24,7 @@
 
   private void doTest(final String schema, final String errString) 
     throws Exception {
-    assertConfigs("solrconfig.xml", schema, errString);
+    assertConfigs("solrconfig-basic.xml", schema, errString);
   }
 
   public void testSevereErrorsForInvalidFieldOptions() throws Exception {
@@ -112,4 +112,8 @@ public void testSweetSpotSimBadConfig() throws Exception {
            "Overriding default lengthNorm");
   }
 
+  public void testBogusParameters() throws Exception {
+    doTest("bad-schema-bogus-field-parameters.xml", "Invalid field property");
+  }
+
 }
