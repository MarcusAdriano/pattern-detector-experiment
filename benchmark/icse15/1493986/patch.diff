diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/CoreContainer.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/CoreContainer.java
index 9b78a459..e149890f 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/CoreContainer.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/CoreContainer.java
@@ -1117,14 +1117,15 @@ public void persistFile(File file) {
     Map<String,String> rootSolrAttribs = new HashMap<String,String>();
 
     addAttrib(rootSolrAttribs, ConfigSolr.CfgProp.SOLR_SHAREDLIB, "sharedLib", this.libDir);
-    addAttrib(rootSolrAttribs, ConfigSolr.CfgProp.SOLR_PERSISTENT, "persistent", Boolean.toString(isPersistent()));
+    addAttrib(rootSolrAttribs, ConfigSolr.CfgProp.SOLR_PERSISTENT, "persistent",
+        Boolean.toString(isPersistent()), "false");
     addAttrib(rootSolrAttribs, ConfigSolr.CfgProp.SOLR_CORELOADTHREADS, "coreLoadThreads",
         Integer.toString(this.coreLoadThreads), Integer.toString(CORE_LOAD_THREADS));
     addAttrib(rootSolrAttribs, ConfigSolr.CfgProp.SOLR_ZKHOST, "zkHost", this.zkHost);
 
     // <solr attrib="value"> <cores attrib="value">
     Map<String,String> coresAttribs = new HashMap<String,String>();
-    addAttrib(coresAttribs, ConfigSolr.CfgProp.SOLR_ADMINPATH, "adminPath", this.adminPath);
+    addAttrib(coresAttribs, ConfigSolr.CfgProp.SOLR_ADMINPATH, "adminPath", this.adminPath, this.getAdminPath());
     addAttrib(coresAttribs, ConfigSolr.CfgProp.SOLR_ADMINHANDLER, "adminHandler", this.adminHandler);
     addAttrib(coresAttribs, ConfigSolr.CfgProp.SOLR_SHARESCHEMA, "shareSchema",
         Boolean.toString(this.shareSchema),
@@ -1150,9 +1151,9 @@ public void persistFile(File file) {
           Integer.toString(this.transientCacheSize), Integer.toString(Integer.MAX_VALUE));
     }
     addAttrib(coresAttribs, ConfigSolr.CfgProp.SOLR_DISTRIBUPDATECONNTIMEOUT, "distribUpdateConnTimeout",
-        Integer.toString(this.distribUpdateConnTimeout));
+        Integer.toString(this.distribUpdateConnTimeout), Integer.toString(this.distribUpdateConnTimeout));
     addAttrib(coresAttribs, ConfigSolr.CfgProp.SOLR_DISTRIBUPDATESOTIMEOUT, "distribUpdateSoTimeout",
-        Integer.toString(this.distribUpdateSoTimeout));
+        Integer.toString(this.distribUpdateSoTimeout), Integer.toString(this.distribUpdateSoTimeout));
     addAttrib(coresAttribs, ConfigSolr.CfgProp.SOLR_MANAGEMENTPATH, "managementPath",
         this.managementPath);
 
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/core/TestLazyCores.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/core/TestLazyCores.java
index 7c17bf7f..d4de5f13 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/core/TestLazyCores.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/core/TestLazyCores.java
@@ -285,8 +285,8 @@ private void tryCreateFail(CoreAdminHandler admin, String name, String dataDir,
           CoreAdminParams.CoreAdminAction.CREATE.toString(),
           CoreAdminParams.DATA_DIR, dataDir,
           CoreAdminParams.NAME, name,
-          "schema", "schema-tiny.xml",
-          "config", "solrconfig-minimal.xml");
+          "schema", "schema.xml",
+          "config", "solrconfig.xml");
 
       admin.handleRequestBody(request, resp);
       fail("Should have thrown an error");
@@ -347,29 +347,29 @@ public void testPersistence() throws Exception {
       CoreDescriptor d1 = new CoreDescriptor(cc, "core1", "./core1");
       d1.setTransient(true);
       d1.setLoadOnStartup(true);
-      d1.setSchemaName("schema-tiny.xml");
-      d1.setConfigName("solrconfig-minimal.xml");
+      d1.setSchemaName("schema.xml");
+      d1.setConfigName("solrconfig.xml");
       SolrCore core1 = cc.create(d1);
 
       CoreDescriptor d2 = new CoreDescriptor(cc, "core2", "./core2");
       d2.setTransient(true);
       d2.setLoadOnStartup(false);
-      d2.setSchemaName("schema-tiny.xml");
-      d2.setConfigName("solrconfig-minimal.xml");
+      d2.setSchemaName("schema.xml");
+      d2.setConfigName("solrconfig.xml");
       SolrCore core2 = cc.create(d2);
 
       CoreDescriptor d3 = new CoreDescriptor(cc, "core3", "./core3");
       d3.setTransient(false);
       d3.setLoadOnStartup(true);
-      d3.setSchemaName("schema-tiny.xml");
-      d3.setConfigName("solrconfig-minimal.xml");
+      d3.setSchemaName("schema.xml");
+      d3.setConfigName("solrconfig.xml");
       SolrCore core3 = cc.create(d3);
 
       CoreDescriptor d4 = new CoreDescriptor(cc, "core4", "./core4");
       d4.setTransient(false);
       d4.setLoadOnStartup(false);
-      d4.setSchemaName("schema-tiny.xml");
-      d4.setConfigName("solrconfig-minimal.xml");
+      d4.setSchemaName("schema.xml");
+      d4.setConfigName("solrconfig.xml");
       SolrCore core4 = cc.create(d4);
 
       final File oneXml = new File(solrHomeDirectory, "lazy1.solr.xml");
@@ -455,31 +455,23 @@ private LocalSolrQueryRequest makeReq(SolrCore core, String... q) {
 
   private final static String LOTS_SOLR_XML = " <solr persistent=\"false\"> " +
       "<cores adminPath=\"/admin/cores\" defaultCoreName=\"collectionLazy2\" transientCacheSize=\"4\">  " +
-      "<core name=\"collection1\" instanceDir=\"collection1\" config=\"solrconfig-minimal.xml\" schema=\"schema-tiny.xml\" /> " +
+      "<core name=\"collection1\" instanceDir=\"collection1\"  /> " +
 
-      "<core name=\"collectionLazy2\" instanceDir=\"collection2\" transient=\"true\" loadOnStartup=\"true\"  " +
-      " config=\"solrconfig-minimal.xml\" schema=\"schema-tiny.xml\" /> " +
+      "<core name=\"collectionLazy2\" instanceDir=\"collection2\" transient=\"true\" loadOnStartup=\"true\"   /> " +
 
-      "<core name=\"collectionLazy3\" instanceDir=\"collection3\" transient=\"on\" loadOnStartup=\"false\" " +
-      "config=\"solrconfig-minimal.xml\" schema=\"schema-tiny.xml\"  /> " +
+      "<core name=\"collectionLazy3\" instanceDir=\"collection3\" transient=\"on\" loadOnStartup=\"false\"    /> " +
 
-      "<core name=\"collectionLazy4\" instanceDir=\"collection4\" transient=\"false\" loadOnStartup=\"false\" " +
-      "config=\"solrconfig-minimal.xml\" schema=\"schema-tiny.xml\"  /> " +
+      "<core name=\"collectionLazy4\" instanceDir=\"collection4\" transient=\"false\" loadOnStartup=\"false\" /> " +
 
-      "<core name=\"collectionLazy5\" instanceDir=\"collection5\" transient=\"false\" loadOnStartup=\"true\" " +
-      "config=\"solrconfig-minimal.xml\" schema=\"schema-tiny.xml\"  /> " +
+      "<core name=\"collectionLazy5\" instanceDir=\"collection5\" transient=\"false\" loadOnStartup=\"true\" /> " +
 
-      "<core name=\"collectionLazy6\" instanceDir=\"collection6\" transient=\"true\" loadOnStartup=\"false\" " +
-      "config=\"solrconfig-minimal.xml\" schema=\"schema-tiny.xml\"  /> " +
+      "<core name=\"collectionLazy6\" instanceDir=\"collection6\" transient=\"true\" loadOnStartup=\"false\" /> " +
 
-      "<core name=\"collectionLazy7\" instanceDir=\"collection7\" transient=\"true\" loadOnStartup=\"false\" " +
-      "config=\"solrconfig-minimal.xml\" schema=\"schema-tiny.xml\"  /> " +
+      "<core name=\"collectionLazy7\" instanceDir=\"collection7\" transient=\"true\" loadOnStartup=\"false\" /> " +
 
-      "<core name=\"collectionLazy8\" instanceDir=\"collection8\" transient=\"true\" loadOnStartup=\"false\" " +
-      "config=\"solrconfig-minimal.xml\" schema=\"schema-tiny.xml\"  /> " +
+      "<core name=\"collectionLazy8\" instanceDir=\"collection8\" transient=\"true\" loadOnStartup=\"false\" /> " +
 
-      "<core name=\"collectionLazy9\" instanceDir=\"collection9\" transient=\"true\" loadOnStartup=\"false\" " +
-      "config=\"solrconfig-minimal.xml\" schema=\"schema-tiny.xml\"  /> " +
+      "<core name=\"collectionLazy9\" instanceDir=\"collection9\" transient=\"true\" loadOnStartup=\"false\" /> " +
 
       "</cores> " +
       "</solr>";
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence.java
index 3c9892e3..58cc2608 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence.java
@@ -87,8 +87,8 @@ private CoreContainer init(String solrXmlString, String... subDirs) throws Excep
   public void testSystemVars() throws Exception {
     //Set these system props in order to insure that we don't write out the values rather than the ${} syntax.
     System.setProperty("solr.zkclienttimeout", "93");
-    System.setProperty("solrconfig", "solrconfig-minimal.xml");
-    System.setProperty("schema", "schema-tiny.xml");
+    System.setProperty("solrconfig", "solrconfig.xml");
+    System.setProperty("schema", "schema.xml");
     System.setProperty("zkHostSet", "localhost:9983");
 
     CoreContainer cc = init(SOLR_XML_LOTS_SYSVARS, "SystemVars1", "SystemVars2");
@@ -182,6 +182,7 @@ private void doTestRename(String which) throws Exception {
       // Now the other way, If I replace the original name in the original XML file with "RenamedCore", does it match
       // what was persisted?
       persistList = getAllNodes(origXml);
+      expressions = new String[persistList.length];
       for (int idx = 0; idx < persistList.length; ++idx) {
         // /solr/cores/core[@name='SystemVars1' and @collection='${collection:collection1}']
         expressions[idx] = persistList[idx].replace("@name='" + which + "'", "@name='RenamedCore'");
@@ -243,6 +244,21 @@ private void doTestSwap(String from, String to) throws Exception {
     }
   }
 
+  @Test
+  public void testMinimalXml() throws Exception {
+    CoreContainer cc = init(SOLR_XML_MINIMAL, "SystemVars1");
+    try {
+      origMatchesPersist(cc, new File(solrHomeDirectory, "minimal.solr.xml"));
+    } finally {
+      cc.shutdown();
+      if (solrHomeDirectory.exists()) {
+        FileUtils.deleteDirectory(solrHomeDirectory);
+      }
+    }
+  }
+
+
+
   @Test
   public void testUnloadCreate() throws Exception {
     doTestUnloadCreate("SystemVars1");
@@ -269,8 +285,6 @@ private void doTestUnloadCreate(String which) throws Exception {
           (req(CoreAdminParams.ACTION,
               CoreAdminParams.CoreAdminAction.CREATE.toString(),
               CoreAdminParams.INSTANCE_DIR, instPath,
-              CoreAdminParams.CONFIG, "solrconfig-minimal.xml",
-              CoreAdminParams.SCHEMA, "schema-tiny.xml",
               CoreAdminParams.NAME, which),
               resp);
       assertNull("Exception on create", resp.getException());
@@ -287,10 +301,10 @@ private void doTestUnloadCreate(String which) throws Exception {
         String name = "@name='" + which + "'";
 
         if (persistList[idx].contains(name)) {
-          if (persistList[idx].contains("@schema='schema-tiny.xml'")) {
-            expressions[idx] = persistList[idx].replace("schema-tiny.xml", "${schema:schema-tiny.xml}");
-          } else if (persistList[idx].contains("@config='solrconfig-minimal.xml'")) {
-            expressions[idx] = persistList[idx].replace("solrconfig-minimal.xml", "${solrconfig:solrconfig-minimal.xml}");
+          if (persistList[idx].contains("@schema='schema.xml'")) {
+            expressions[idx] = persistList[idx].replace("schema.xml", "${schema:schema.xml}");
+          } else if (persistList[idx].contains("@config='solrconfig.xml'")) {
+            expressions[idx] = persistList[idx].replace("solrconfig.xml", "${solrconfig:solrconfig.xml}");
           } else if (persistList[idx].contains("@instanceDir=")) {
             expressions[idx] = persistList[idx].replaceFirst("instanceDir\\='.*?'", "instanceDir='" + which + "'");
           } else {
@@ -336,9 +350,7 @@ public void testCreatePersistCore() throws Exception {
               CoreAdminParams.TRANSIENT, "true",
               CoreAdminParams.LOAD_ON_STARTUP, "true",
               CoreAdminParams.PROPERTY_PREFIX + "prefix1", "valuep1",
-              CoreAdminParams.PROPERTY_PREFIX + "prefix2", "valueP2",
-              CoreAdminParams.CONFIG, "solrconfig-minimal.xml",
-              CoreAdminParams.SCHEMA, "schema-tiny.xml"),
+              CoreAdminParams.PROPERTY_PREFIX + "prefix2", "valueP2"),
               resp);
       assertNull("Exception on create", resp.getException());
 
@@ -350,17 +362,16 @@ public void testCreatePersistCore() throws Exception {
               CoreAdminParams.NAME, "props2",
               CoreAdminParams.PROPERTY_PREFIX + "prefix2_1", "valuep2_1",
               CoreAdminParams.PROPERTY_PREFIX + "prefix2_2", "valueP2_2",
-              CoreAdminParams.CONFIG, "solrconfig-minimal.xml",
+              CoreAdminParams.CONFIG, "solrconfig.xml",
               CoreAdminParams.DATA_DIR, "./dataDirTest",
-              CoreAdminParams.SCHEMA, "schema-tiny.xml"),
+              CoreAdminParams.SCHEMA, "schema.xml"),
               resp);
       assertNull("Exception on create", resp.getException());
 
       // Everything that was in the original XML file should be in the persisted one.
       final File persistXml = new File(solrHomeDirectory, "persist_create_core.solr.xml");
       cc.persistFile(persistXml);
-      String[] expressions = getAllNodes(new File(solrHomeDirectory, "solr.xml"));
-      assertXmlFile(persistXml, expressions);
+      assertXmlFile(persistXml, getAllNodes(new File(solrHomeDirectory, "solr.xml")));
 
 
       // And the params for the new core should be in the persisted file.
@@ -368,14 +379,12 @@ public void testCreatePersistCore() throws Exception {
           (persistXml
               , "/solr/cores/core[@name='props1']/property[@name='prefix1' and @value='valuep1']"
               , "/solr/cores/core[@name='props1']/property[@name='prefix2' and @value='valueP2']"
-              , "/solr/cores/core[@name='props1' and @config='solrconfig-minimal.xml']"
-              , "/solr/cores/core[@name='props1' and @schema='schema-tiny.xml']"
               , "/solr/cores/core[@name='props1' and @transient='true']"
               , "/solr/cores/core[@name='props1' and @loadOnStartup='true']"
               , "/solr/cores/core[@name='props2']/property[@name='prefix2_1' and @value='valuep2_1']"
               , "/solr/cores/core[@name='props2']/property[@name='prefix2_2' and @value='valueP2_2']"
-              , "/solr/cores/core[@name='props2' and @config='solrconfig-minimal.xml']"
-              , "/solr/cores/core[@name='props2' and @schema='schema-tiny.xml']"
+              , "/solr/cores/core[@name='props2' and @config='solrconfig.xml']"
+              , "/solr/cores/core[@name='props2' and @schema='schema.xml']"
               , "/solr/cores/core[@name='props2' and not(@loadOnStartup)]"
               , "/solr/cores/core[@name='props2' and not(@transient)]"
               , "/solr/cores/core[@name='props2' and @dataDir='./dataDirTest']"
@@ -493,21 +502,28 @@ private void gatherNodes(Node node, List<String> expressions, String path) {
           "       distribUpdateSoTimeout=\"${distribUpdateSoTimeout:120000}\" \n" +
           "       leaderVoteWait=\"${leadVoteWait:32}\" managementPath=\"${manpath:/var/lib/path}\" transientCacheSize=\"${tranSize:128}\"> \n" +
           "     <core name=\"SystemVars1\" instanceDir=\"SystemVars1\" shard=\"${shard:32}\" \n" +
-          "          collection=\"${collection:collection1}\" config=\"${solrconfig:solrconfig-minimal.xml}\" \n" +
-          "          schema=\"${schema:schema-tiny.xml}\" ulogDir=\"${ulog:./}\" roles=\"${myrole:boss}\" \n" +
+          "          collection=\"${collection:collection1}\" config=\"${solrconfig:solrconfig.xml}\" \n" +
+          "          schema=\"${schema:schema.xml}\" ulogDir=\"${ulog:./}\" roles=\"${myrole:boss}\" \n" +
           "          dataDir=\"${data:./}\" loadOnStartup=\"${onStart:true}\" transient=\"${tran:true}\" \n" +
           "          coreNodeName=\"${coreNode:utterlyridiculous}\" \n" +
           "       >\n" +
           "     </core>\n" +
           "     <core name=\"SystemVars2\" instanceDir=\"SystemVars2\" shard=\"${shard:32}\" \n" +
-          "          collection=\"${collection:collection2}\" config=\"${solrconfig:solrconfig-minimal.xml}\" \n" +
-          "          coreNodeName=\"${coreNodeName:}\" schema=\"${schema:schema-tiny.xml}\">\n" +
+          "          collection=\"${collection:collection2}\" config=\"${solrconfig:solrconfig.xml}\" \n" +
+          "          coreNodeName=\"${coreNodeName:}\" schema=\"${schema:schema.xml}\">\n" +
           "      <property name=\"collection\" value=\"{collection:collection2}\"/>\n" +
-          "      <property name=\"schema\" value=\"${schema:schema-tiny.xml}\"/>\n" +
+          "      <property name=\"schema\" value=\"${schema:schema.xml}\"/>\n" +
           "      <property name=\"coreNodeName\" value=\"EricksCore\"/>\n" +
           "     </core>\n" +
           "   </cores>\n" +
           "</solr>";
 
 
+  private static String SOLR_XML_MINIMAL =
+          "<solr >\n" +
+          "  <cores> \n" +
+          "     <core name=\"SystemVars1\" instanceDir=\"SystemVars1\" />\n" +
+          "   </cores>\n" +
+          "</solr>";
+
 }
diff --git a/lucene/dev/branches/branch_4x/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java b/lucene/dev/branches/branch_4x/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java
index 99f6ad10..48e3842c 100644
--- a/lucene/dev/branches/branch_4x/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java
+++ b/lucene/dev/branches/branch_4x/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java
@@ -1483,8 +1483,8 @@ public void copyMinConf(File dstRoot) throws IOException {
     File subHome = new File(dstRoot, "conf");
     assertTrue("Failed to make subdirectory ", dstRoot.mkdirs());
     String top = SolrTestCaseJ4.TEST_HOME() + "/collection1/conf";
-    FileUtils.copyFile(new File(top, "schema-tiny.xml"), new File(subHome, "schema-tiny.xml"));
-    FileUtils.copyFile(new File(top, "solrconfig-minimal.xml"), new File(subHome, "solrconfig-minimal.xml"));
+    FileUtils.copyFile(new File(top, "schema-tiny.xml"), new File(subHome, "schema.xml"));
+    FileUtils.copyFile(new File(top, "solrconfig-minimal.xml"), new File(subHome, "solrconfig.xml"));
   }
 
 }
