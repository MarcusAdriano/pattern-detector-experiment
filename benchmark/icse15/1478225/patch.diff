diff --git a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/NGramPhraseQuery.java b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/NGramPhraseQuery.java
index 54d396e8..734498ae 100644
--- a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/NGramPhraseQuery.java
+++ b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/search/NGramPhraseQuery.java
@@ -64,6 +64,7 @@ public Query rewrite(IndexReader reader) throws IOException {
 
     // now create the new optimized phrase query for n-gram
     PhraseQuery optimized = new PhraseQuery();
+    optimized.setBoost(getBoost());
     int pos = 0;
     final int lastPos = terms.length - 1;
     for(int i = 0; i < terms.length; i++){
diff --git a/lucene/dev/trunk/lucene/core/src/test/org/apache/lucene/search/TestNGramPhraseQuery.java b/lucene/dev/trunk/lucene/core/src/test/org/apache/lucene/search/TestNGramPhraseQuery.java
index 8eb50814..648b2a87 100644
--- a/lucene/dev/trunk/lucene/core/src/test/org/apache/lucene/search/TestNGramPhraseQuery.java
+++ b/lucene/dev/trunk/lucene/core/src/test/org/apache/lucene/search/TestNGramPhraseQuery.java
@@ -88,6 +88,17 @@ public void testRewrite() throws Exception {
     pq3 = (PhraseQuery)q;
     assertArrayEquals(new Term[]{new Term("f", "ABC"), new Term("f", "DEF"), new Term("f", "FGH")}, pq3.getTerms());
     assertArrayEquals(new int[]{0, 3, 5}, pq3.getPositions());
+    
+    // LUCENE-4970: boosting test
+    PhraseQuery pq4 = new NGramPhraseQuery(2);
+    pq4.add(new Term("f", "AB"));
+    pq4.add(new Term("f", "BC"));
+    pq4.add(new Term("f", "CD"));
+    pq4.setBoost(100.0F);
+    
+    q = pq4.rewrite(reader);
+    assertNotSame(pq4, q);
+    assertEquals(pq4.getBoost(), q.getBoost(), 0.1f);
   }
 
 }
