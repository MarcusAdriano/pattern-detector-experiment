diff --git a/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/utils/ReflectionUtils.java b/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/utils/ReflectionUtils.java
index 074c8c53..d47c64d2 100644
--- a/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/utils/ReflectionUtils.java
+++ b/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/utils/ReflectionUtils.java
@@ -414,20 +414,22 @@ private Object doInternalGet(ExtendedBlueprintContainer container, Object instan
         }
 
         protected void internalSet(final ExtendedBlueprintContainer container, final Object instance, final Object value) throws Exception {
-            if (useContainersPermission(container)) {
                 try {
-                    AccessController.doPrivileged(new PrivilegedExceptionAction<Object>() {
-                        public Object run() throws Exception {
+                Boolean wasSet = AccessController.doPrivileged(new PrivilegedExceptionAction<Boolean>() {
+                    public Boolean run() throws Exception {
+                      if (useContainersPermission(container)) {
                             doInternalSet(container, instance, value);
-                            return null;
+                        return Boolean.TRUE;
+                      }
+                      return Boolean.FALSE;
                         }                        
                     });
+                if(!!!wasSet) {
+                  doInternalSet(container, instance, value);
+                }
                 } catch (PrivilegedActionException pae) {
                     throw pae.getException();
                 }
-            } else {
-                doInternalSet(container, instance, value);
-            }
         }
         
         private void doInternalSet(ExtendedBlueprintContainer container, Object instance, Object value) throws Exception {
