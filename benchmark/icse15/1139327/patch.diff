diff --git a/aries/branches/0.2-incubating-RCx/application/application-obr-resolver/src/main/java/org/apache/aries/application/resolver/obr/generator/RepositoryDescriptorGenerator.java b/aries/branches/0.2-incubating-RCx/application/application-obr-resolver/src/main/java/org/apache/aries/application/resolver/obr/generator/RepositoryDescriptorGenerator.java
index 7708602e..a3daeb4f 100644
--- a/aries/branches/0.2-incubating-RCx/application/application-obr-resolver/src/main/java/org/apache/aries/application/resolver/obr/generator/RepositoryDescriptorGenerator.java
+++ b/aries/branches/0.2-incubating-RCx/application/application-obr-resolver/src/main/java/org/apache/aries/application/resolver/obr/generator/RepositoryDescriptorGenerator.java
@@ -76,7 +76,7 @@ private static void addBundleRequirement(Document doc, Element resource, BundleI
     
     requirement.setAttribute("extend", "false");
     requirement.setAttribute("multiple", "false");
-    requirement.setAttribute("optional", "false");
+    requirement.setAttribute("optional", getOptional(p));
     
     requirement.setAttribute("filter", ManifestHeaderProcessor.generateFilter("symbolicname", p.getContentName(), p.getAttributes()));
     
@@ -90,11 +90,7 @@ private static void addPackageRequirement(Document doc, Element resource, Bundle
     
     requirement.setAttribute("extend", "false");
     requirement.setAttribute("multiple", "false");
-    
-    String optional = p.getDirective("optional");
-    if (optional == null) optional = "false";
-    
-    requirement.setAttribute("optional", optional);
+    requirement.setAttribute("optional", getOptional(p));
     
     requirement.setAttribute("filter", ManifestHeaderProcessor.generateFilter("package", p.getContentName(), p.getAttributes()));
     
@@ -146,4 +142,13 @@ private static void addProperty(Document doc, Element capability, String name,
     if (type != null) p.setAttribute("t", type);
     capability.appendChild(p);
   }
+
+  private static String getOptional(Content p) {
+    String resolution = p.getDirective(Constants.RESOLUTION_DIRECTIVE);
+    if (Constants.RESOLUTION_OPTIONAL.equals(resolution)) {
+        return "true";
+    } else {
+        return "false";
+    }
+  }
 }
