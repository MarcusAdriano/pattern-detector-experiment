diff --git a/incubator/cassandra/trunk/src/org/apache/cassandra/db/Memtable.java b/incubator/cassandra/trunk/src/org/apache/cassandra/db/Memtable.java
index 140d55eb..09e1cbd3 100644
--- a/incubator/cassandra/trunk/src/org/apache/cassandra/db/Memtable.java
+++ b/incubator/cassandra/trunk/src/org/apache/cassandra/db/Memtable.java
@@ -315,7 +315,7 @@ ColumnFamily getLocalCopy(String key, String columnFamilyColumn, IFilter filter)
                 IColumn column = cFamily.getColumn(values[1]); // super or normal column
                 if (column != null )
                 {
-                    columnFamily = new ColumnFamily(cfName_, cFamily.type());
+                    columnFamily = cFamily.cloneMeShallow();
                     columnFamily.addColumn(column);
                 }
         	}
@@ -328,7 +328,7 @@ ColumnFamily getLocalCopy(String key, String columnFamilyColumn, IFilter filter)
                     IColumn subColumn = superColumn.getSubColumn(values[2]);
                     if (subColumn != null)
                     {
-                        columnFamily = new ColumnFamily(cfName_, cFamily.type());
+                        columnFamily = cFamily.cloneMeShallow();
                         columnFamily.addColumn(values[1] + ":" + values[2], subColumn.value(), subColumn.timestamp(), subColumn.isMarkedForDelete());
                     }
                 }
diff --git a/incubator/cassandra/trunk/test/org/apache/cassandra/db/ColumnFamilyStoreTest.java b/incubator/cassandra/trunk/test/org/apache/cassandra/db/ColumnFamilyStoreTest.java
index c3511c52..45cdec9e 100644
--- a/incubator/cassandra/trunk/test/org/apache/cassandra/db/ColumnFamilyStoreTest.java
+++ b/incubator/cassandra/trunk/test/org/apache/cassandra/db/ColumnFamilyStoreTest.java
@@ -272,6 +272,29 @@ public void testRemoveColumnFamily() throws IOException, ColumnFamilyNotDefinedE
         ColumnFamilyStore store = table.getColumnFamilyStore("Standard1");
         RowMutation rm;
 
+        // add data
+        rm = new RowMutation("Table1", "key1");
+        rm.add("Standard1:Column1", "asdf".getBytes(), 0);
+        rm.apply();
+
+        // remove
+        rm = new RowMutation("Table1", "key1");
+        rm.delete("Standard1", 1);
+        rm.apply();
+
+        ColumnFamily retrieved = store.getColumnFamily("key1", "Standard1:Column1", new IdentityFilter());
+        assert retrieved.isMarkedForDelete();
+        assertNull(retrieved.getColumn("Column1"));
+        assertNull(ColumnFamilyStore.removeDeleted(retrieved, Integer.MAX_VALUE));
+    }
+
+    @Test
+    public void testRemoveColumnFamilyWithFlush1() throws IOException, ColumnFamilyNotDefinedException, ExecutionException, InterruptedException
+    {
+        Table table = Table.open("Table1");
+        ColumnFamilyStore store = table.getColumnFamilyStore("Standard1");
+        RowMutation rm;
+
         // add data
         rm = new RowMutation("Table1", "key1");
         rm.add("Standard1:Column1", "asdf".getBytes(), 0);
@@ -286,7 +309,30 @@ public void testRemoveColumnFamily() throws IOException, ColumnFamilyNotDefinedE
 
         ColumnFamily retrieved = store.getColumnFamily("key1", "Standard1", new IdentityFilter());
         assert retrieved.isMarkedForDelete();
-        assertEquals(retrieved.getColumnCount(), 0);
+        assertNull(retrieved.getColumn("Column1"));
+        assertNull(ColumnFamilyStore.removeDeleted(retrieved, Integer.MAX_VALUE));
+    }
+
+    @Test
+    public void testRemoveColumnFamilyWithFlush2() throws IOException, ColumnFamilyNotDefinedException, ExecutionException, InterruptedException
+    {
+        Table table = Table.open("Table1");
+        ColumnFamilyStore store = table.getColumnFamilyStore("Standard1");
+        RowMutation rm;
+
+        // add data
+        rm = new RowMutation("Table1", "key1");
+        rm.add("Standard1:Column1", "asdf".getBytes(), 0);
+        rm.apply();
+        // remove
+        rm = new RowMutation("Table1", "key1");
+        rm.delete("Standard1", 1);
+        rm.apply();
+        store.forceBlockingFlush();
+
+        ColumnFamily retrieved = store.getColumnFamily("key1", "Standard1:Column1", new IdentityFilter());
+        assert retrieved.isMarkedForDelete();
+        assertNull(retrieved.getColumn("Column1"));
         assertNull(ColumnFamilyStore.removeDeleted(retrieved, Integer.MAX_VALUE));
     }
 
