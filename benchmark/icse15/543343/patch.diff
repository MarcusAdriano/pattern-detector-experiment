diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java
index f15fd3e0..1ca6d4d3 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java
@@ -35,6 +35,7 @@
 import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
 import org.apache.derbyTesting.junit.DatabasePropertyTestSetup;
 import org.apache.derbyTesting.junit.Decorator;
+import org.apache.derbyTesting.junit.JDBC;
 import org.apache.derbyTesting.junit.Utilities;
 
 import junit.framework.*;
@@ -2752,10 +2753,13 @@ public static Test suite() {
                 TestConfiguration.embeddedSuite(BlobClob4BlobTest.class));
         suite.addTest(
                 TestConfiguration.clientServerSuite(BlobClob4BlobTest.class));
-
+        // JSR169 does not have encryption support
+        if (JDBC.vmSupportsJDBC3())
+        {
         TestSuite encSuite = new TestSuite ("BlobClob4BlobTest:encrypted");
         encSuite.addTestSuite (BlobClob4BlobTest.class);
         suite.addTest(Decorator.encryptedDatabase (encSuite));
+        }
         return new CleanDatabaseTestSetup(
                 DatabasePropertyTestSetup.setLockTimeouts(suite, 2, 4));
     }
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/LobStreamsTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/LobStreamsTest.java
index 52d1e4ee..2457ed23 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/LobStreamsTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/LobStreamsTest.java
@@ -38,6 +38,7 @@
 import org.apache.derbyTesting.functionTests.util.streams.LoopingAlphabetStream;
 import org.apache.derbyTesting.junit.BaseJDBCTestCase;
 import org.apache.derbyTesting.junit.Decorator;
+import org.apache.derbyTesting.junit.JDBC;
 import org.apache.derbyTesting.junit.TestConfiguration;
 
 public class LobStreamsTest extends BaseJDBCTestCase {
@@ -446,9 +447,12 @@ public static Test suite() {
                 
         TestSuite ts  = new TestSuite ("LobStreamsTest");
         ts.addTest(TestConfiguration.defaultSuite (LobStreamsTest.class));
+        // JSR169 does not have support for encryption
+        if (JDBC.vmSupportsJDBC3()) {
         TestSuite encSuite = new TestSuite ("LobStreamsTest:encrypted");
         encSuite.addTestSuite (LobStreamsTest.class);
         ts.addTest(Decorator.encryptedDatabase (encSuite));
+        }
         return ts;
     }
     //method to ensure that buffer is filled if there is any data in stream
