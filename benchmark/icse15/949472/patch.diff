diff --git a/lucene/solr/branches/branch-1.4/src/java/org/apache/solr/analysis/BufferedTokenStream.java b/lucene/solr/branches/branch-1.4/src/java/org/apache/solr/analysis/BufferedTokenStream.java
index 1ac06c89..ea2a9500 100644
--- a/lucene/solr/branches/branch-1.4/src/java/org/apache/solr/analysis/BufferedTokenStream.java
+++ b/lucene/solr/branches/branch-1.4/src/java/org/apache/solr/analysis/BufferedTokenStream.java
@@ -46,12 +46,15 @@
  *   public MyTokenStream(TokenStream input) {super(input);}
  *   protected Token process(Token t) throws IOException {
  *     if ("A".equals(t.termText()) && "B".equals(peek(1).termText()))
- *       write(t);
+ *       write((Token)t.clone());
  *     return t;
  *   }
  * }
  * </pre>
  *
+ * NOTE: BufferedTokenStream does not clone() any Tokens. This is instead the 
+ * responsibility of the implementing subclass. In the "A" "B" => "A" "A" "B"
+ * example above, the subclass must clone the additional "A" it creates.
  *
  * @version $Id$
  */
diff --git a/lucene/solr/branches/branch-1.4/src/test/org/apache/solr/analysis/TestBufferedTokenStream.java b/lucene/solr/branches/branch-1.4/src/test/org/apache/solr/analysis/TestBufferedTokenStream.java
index 0c44a708..5d88ba99 100644
--- a/lucene/solr/branches/branch-1.4/src/test/org/apache/solr/analysis/TestBufferedTokenStream.java
+++ b/lucene/solr/branches/branch-1.4/src/test/org/apache/solr/analysis/TestBufferedTokenStream.java
@@ -50,7 +50,7 @@ protected Token process(Token t) throws IOException {
     protected Token process(Token t) throws IOException {
       if ("A".equals(new String(t.termBuffer(), 0, t.termLength())) && 
           "B".equals(new String(peek(1).termBuffer(), 0, peek(1).termLength())))
-        write(t);
+        write((Token)t.clone());
       return t;
     }
   }
