diff --git a/lucene/dev/branches/lucene_solr_4_3/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java b/lucene/dev/branches/lucene_solr_4_3/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java
index a8c64911..756c7254 100644
--- a/lucene/dev/branches/lucene_solr_4_3/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java
+++ b/lucene/dev/branches/lucene_solr_4_3/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java
@@ -935,7 +935,8 @@ public void doDeleteByQuery(DeleteUpdateCommand cmd) throws IOException {
     DistribPhase phase = 
     DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));
 
-    DocCollection coll = zkController.getClusterState().getCollection(collection);
+    DocCollection coll = zkEnabled 
+      ? zkController.getClusterState().getCollection(collection) : null;
 
     if (zkEnabled && DistribPhase.NONE == phase) {
       boolean leaderForAnyShard = false;  // start off by assuming we are not a leader for any shard
@@ -1050,10 +1051,10 @@ public void doDeleteByQuery(DeleteUpdateCommand cmd) throws IOException {
       vinfo.unblockUpdates();
     }
 
+    // forward to all replicas
+    if (leaderLogic && zkEnabled) {
     List<Node> subShardLeaders = getSubShardLeaders(coll, cloudDesc.getShardId(), null, null);
 
-    // forward to all replicas
-    if (leaderLogic) {
       ModifiableSolrParams params = new ModifiableSolrParams(filterParams(req.getParams()));
       params.set(VERSION_FIELD, Long.toString(cmd.getVersion()));
       params.set(DISTRIB_UPDATE_PARAM, DistribPhase.FROMLEADER.toString());
