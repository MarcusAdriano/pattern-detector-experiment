diff --git a/db/derby/code/branches/10.4/java/client/org/apache/derby/client/am/Connection.java b/db/derby/code/branches/10.4/java/client/org/apache/derby/client/am/Connection.java
index 90a84e5e..2b522cca 100644
--- a/db/derby/code/branches/10.4/java/client/org/apache/derby/client/am/Connection.java
+++ b/db/derby/code/branches/10.4/java/client/org/apache/derby/client/am/Connection.java
@@ -983,6 +983,10 @@ private void setTransactionIsolationX(int level)
 
     /**
      * Checks whether the server supports locators for large objects.
+     * Note that even though the server supports LOB locators, the database
+     * that is accessed through the server may not have the necessary stored
+     * procedures to support LOB locators (e.g., because the database is
+     * soft upgraded from an earlier version).
      *
      * @return {@code true} if LOB locators are supported.
      */
diff --git a/db/derby/code/branches/10.4/java/client/org/apache/derby/client/am/Cursor.java b/db/derby/code/branches/10.4/java/client/org/apache/derby/client/am/Cursor.java
index 414c68ec..5b2661ee 100644
--- a/db/derby/code/branches/10.4/java/client/org/apache/derby/client/am/Cursor.java
+++ b/db/derby/code/branches/10.4/java/client/org/apache/derby/client/am/Cursor.java
@@ -676,7 +676,12 @@ CallableLocatorProcedures getLocatorProcedures() {
     }
 
     /**
-     * Obtains the locator for the specified LOB column.
+     * Returns the locator for the specified LOB column, or {@link
+     * Lob#INVALID_LOCATOR} if the LOB was not sent as a locator. The server
+     * may send the LOB value instead of a locator if it is running an old
+     * version which doesn't support locators, or if the database it accesses
+     * is soft upgraded from a version that doesn't have the necessary
+     * stored procedures for locator support.
      * <p>
      * Note that this method cannot be invoked on a LOB column that is NULL.
      *
