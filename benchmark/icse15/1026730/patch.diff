diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/Converter.java b/cassandra/trunk/src/java/org/apache/cassandra/config/Converter.java
index f65012f7..d21e10fd 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/Converter.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/Converter.java
@@ -54,7 +54,6 @@
 
     private static List<RawKeyspace> readTablesFromXml(XMLUtils xmlUtils) throws ConfigurationException
     {
-
         List<RawKeyspace> keyspaces = new ArrayList<RawKeyspace>();
         /* Read the table related stuff from config */
         try
@@ -185,7 +184,6 @@ else if (endPointSnitchClassName.equals("org.apache.cassandra.locator.PropertyFi
         }
     }
 
-    
     private static void loadPreviousConfig(String config) throws ConfigurationException
     {
         try {
@@ -266,14 +264,9 @@ private static void loadPreviousConfig(String config) throws ConfigurationExcept
             String framedRaw = xmlUtils.getNodeValue("/Storage/ThriftFramedTransport");
             if (framedRaw != null && !Boolean.valueOf(framedRaw))
             {
-                conf.thrift_framed_transport_size_in_mb = 0;
-                System.out.println("WARN : Thrift uses framed Transport by default in 0.7! Setting TFramedTransportSize to 0MB (disabled).");
+                System.out.println("WARN : Cassandra uses a Thrift framed Transport by default in 0.7! Clients will need to match.");
             }
-            else
-            {
                 conf.thrift_framed_transport_size_in_mb = 15;
-                System.out.println("TFramedTransport will have a maximum frame size of 15MB");
-            }
             
             String sbc = xmlUtils.getNodeValue("/Storage/SnapshotBeforeCompaction");
             if (sbc != null)
