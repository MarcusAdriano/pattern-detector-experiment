diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamIn.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamIn.java
index f7b0b63d..5ff3e06e 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamIn.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamIn.java
@@ -44,7 +44,6 @@ public static void requestRanges(InetAddress source, String tableName, Collectio
     {
         if (logger.isDebugEnabled())
             logger.debug("Requesting from " + source + " ranges " + StringUtils.join(ranges, ", "));
-        StreamInManager.waitingForAnticompaction.put(source, tableName);
         StreamRequestMetadata streamRequestMetadata = new StreamRequestMetadata(FBUtilities.getLocalAddress(), ranges, tableName);
         Message message = StreamRequestMessage.makeStreamRequestMessage(new StreamRequestMessage(streamRequestMetadata));
         MessagingService.instance.sendOneWay(message, source);
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInManager.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInManager.java
index 66324604..71b0f6e2 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInManager.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInManager.java
@@ -41,9 +41,6 @@
 
     public static final Multimap<InetAddress, PendingFile> activeStreams = Multimaps.synchronizedMultimap(HashMultimap.<InetAddress, PendingFile>create());
     
-    /** keep track of which hosts this node has sent requests for ranges to. */
-    public static final Multimap<InetAddress, String> waitingForAnticompaction = Multimaps.synchronizedMultimap(HashMultimap.<InetAddress, String>create());
-
     public synchronized static PendingFile getStreamContext(InetAddress key)
     {        
         List<PendingFile> context = ctxBag_.get(key);
@@ -72,7 +69,6 @@ public synchronized static CompletedFileStatus getStreamStatus(InetAddress key)
         HashSet<InetAddress> set = new HashSet<InetAddress>();
         set.addAll(ctxBag_.keySet());
         set.addAll(activeStreams.keySet());
-        set.addAll(waitingForAnticompaction.keySet());
         return set;
     }
 
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInitiateVerbHandler.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInitiateVerbHandler.java
index 1a2f208c..c3bdc122 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInitiateVerbHandler.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamInitiateVerbHandler.java
@@ -70,7 +70,6 @@ public void doVerb(Message message)
                     logger.debug("no data needed from " + message.getFrom());
                 if (StorageService.instance.isBootstrapMode())
                     StorageService.instance.removeBootstrapSource(message.getFrom(), new String(message.getHeader(StreamOut.TABLE_NAME)));
-                StreamInManager.waitingForAnticompaction.removeAll(message.getFrom());
                 return;
             }
 
@@ -92,7 +91,6 @@ public void doVerb(Message message)
                   logger.debug("Received Data from  : " + message.getFrom() + " " + pendingFile.getTargetFile() + " " + file);
                 pendingFile.setTargetFile(file);
                 addStreamContext(message.getFrom(), pendingFile, streamStatus);
-                StreamInManager.waitingForAnticompaction.remove(message.getFrom(), pendingFile.getTable());
             }
 
             StreamInManager.registerStreamCompletionHandler(message.getFrom(), new StreamCompletionHandler());
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamOut.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamOut.java
index 37b03953..7d052ab7 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamOut.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/streaming/StreamOut.java
@@ -66,9 +66,6 @@ public static void transferRanges(InetAddress target, String tableName, Collecti
     {
         assert ranges.size() > 0;
         
-        // this is so that this target shows up as a destination while anticompaction is happening.
-        StreamOutManager.pendingDestinations.add(target);        
-
         logger.debug("Beginning transfer process to " + target + " for ranges " + StringUtils.join(ranges, ", "));
 
         /*
