diff --git a/db/derby/code/branches/10.5/java/engine/org/apache/derby/impl/sql/compile/JoinNode.java b/db/derby/code/branches/10.5/java/engine/org/apache/derby/impl/sql/compile/JoinNode.java
index 001b1e4a..474a5a4d 100644
--- a/db/derby/code/branches/10.5/java/engine/org/apache/derby/impl/sql/compile/JoinNode.java
+++ b/db/derby/code/branches/10.5/java/engine/org/apache/derby/impl/sql/compile/JoinNode.java
@@ -1468,6 +1468,13 @@ public FromTable transformOuterJoins(ValueNode predicateTree, int numTables)
 		/* Can't flatten if no predicates in where clause. */
 		if (predicateTree == null)
 		{
+            // DERBY-4712. Make sure any nested outer joins know we are non
+            // flattenable, too, since they inform their left and right sides
+            // which, is they are inner joins, a priori think they are
+            // flattenable. If left/right result sets are not outer joins,
+            // these next two calls are no-ops.
+            ((FromTable) leftResultSet).transformOuterJoins(null, numTables);
+            ((FromTable) rightResultSet).transformOuterJoins(null, numTables);
 			return this;
 		}
 
