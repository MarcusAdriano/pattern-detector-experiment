diff --git a/lucene/dev/trunk/modules/join/src/java/org/apache/lucene/search/join/BlockJoinQuery.java b/lucene/dev/trunk/modules/join/src/java/org/apache/lucene/search/join/BlockJoinQuery.java
index 96f620b8..37dc1f92 100644
--- a/lucene/dev/trunk/modules/join/src/java/org/apache/lucene/search/join/BlockJoinQuery.java
+++ b/lucene/dev/trunk/modules/join/src/java/org/apache/lucene/search/join/BlockJoinQuery.java
@@ -138,12 +138,12 @@ public Query getQuery() {
 
     @Override
     public float getValueForNormalization() throws IOException {
-      return childWeight.getValueForNormalization();
+      return childWeight.getValueForNormalization() * joinQuery.getBoost() * joinQuery.getBoost();
     }
 
     @Override
     public void normalize(float norm, float topLevelBoost) {
-      childWeight.normalize(norm, topLevelBoost);
+      childWeight.normalize(norm, topLevelBoost * joinQuery.getBoost());
     }
 
     @Override
@@ -356,10 +356,12 @@ public void extractTerms(Set<Term> terms) {
   public Query rewrite(IndexReader reader) throws IOException {
     final Query childRewrite = childQuery.rewrite(reader);
     if (childRewrite != childQuery) {
-      return new BlockJoinQuery(childQuery,
+      Query rewritten = new BlockJoinQuery(childQuery,
                                 childRewrite,
                                 parentsFilter,
                                 scoreMode);
+      rewritten.setBoost(getBoost());
+      return rewritten;
     } else {
       return this;
     }
@@ -370,16 +372,6 @@ public String toString(String field) {
     return "BlockJoinQuery ("+childQuery.toString()+")";
   }
 
-  @Override
-  public void setBoost(float boost) {
-    throw new UnsupportedOperationException("this query cannot support boosting; please use childQuery.setBoost instead");
-  }
-
-  @Override
-  public float getBoost() {
-    throw new UnsupportedOperationException("this query cannot support boosting; please use childQuery.getBoost instead");
-  }
-
   @Override
   public boolean equals(Object _other) {
     if (_other instanceof BlockJoinQuery) {
diff --git a/lucene/dev/trunk/modules/join/src/test/org/apache/lucene/search/TestBlockJoin.java b/lucene/dev/trunk/modules/join/src/test/org/apache/lucene/search/TestBlockJoin.java
index 1229eecd..a8072fd9 100644
--- a/lucene/dev/trunk/modules/join/src/test/org/apache/lucene/search/TestBlockJoin.java
+++ b/lucene/dev/trunk/modules/join/src/test/org/apache/lucene/search/TestBlockJoin.java
@@ -123,6 +123,24 @@ public void testSimple() throws Exception {
     dir.close();
   }
 
+  public void testBoostBug() throws Exception {
+    final Directory dir = newDirectory();
+    final RandomIndexWriter w = new RandomIndexWriter(random, dir);
+    IndexReader r = w.getReader();
+    w.close();
+    IndexSearcher s = newSearcher(r);
+    
+    BlockJoinQuery q = new BlockJoinQuery(new MatchAllDocsQuery(), new QueryWrapperFilter(new MatchAllDocsQuery()), BlockJoinQuery.ScoreMode.Avg);
+    s.search(q, 10);
+    BooleanQuery bq = new BooleanQuery();
+    bq.setBoost(2f); // we boost the BQ
+    bq.add(q, BooleanClause.Occur.MUST);
+    s.search(bq, 10);
+    s.close();
+    r.close();
+    dir.close();
+  }
+
   private String[][] getRandomFields(int maxUniqueValues) {
 
     final String[][] fields = new String[_TestUtil.nextInt(random, 2, 4)][];
