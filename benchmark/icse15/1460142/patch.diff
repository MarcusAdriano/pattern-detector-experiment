diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/request/SimpleFacets.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/request/SimpleFacets.java
index 88043d5f..0bfdad58 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/request/SimpleFacets.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/request/SimpleFacets.java
@@ -315,7 +315,7 @@ public int getGroupedFacetQueryCount(Query facetQuery) throws IOException {
     }
     
     TermAllGroupsCollector collector = new TermAllGroupsCollector(groupField);
-    Filter mainQueryFilter = docsOrig.getTopFilter(); // This returns a filter that only matches documents matching with q param and fq params
+    Filter mainQueryFilter = docs.getTopFilter(); // This returns a filter that only matches documents matching with q param and fq params
     searcher.search(facetQuery, mainQueryFilter, collector);
     return collector.getGroupCount();
   }
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/request/SimpleFacetsTest.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/request/SimpleFacetsTest.java
index 9cdb1723..2a72696e 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/request/SimpleFacetsTest.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/request/SimpleFacetsTest.java
@@ -165,6 +165,20 @@ public void testSimpleGroupedQueryRangeFacets() throws Exception {
         ),
         "//lst[@name='facet_queries']/int[@name='airport_s1:ams'][.='2']"
     );
+    /* Testing facet.query using tagged filter query and exclusion */
+    assertQ(
+        req(
+            "q", "*:*",
+            "fq", "id:[2000 TO 2004]",
+            "fq", "{!tag=dus}airport_s1:dus",
+            "group", "true",
+            "group.facet", "true",
+            "group.field", "hotel_s1",
+            "facet", "true",
+            "facet.query", "{!ex=dus}airport_s1:ams"
+        ),
+        "//lst[@name='facet_queries']/int[@name='{!ex=dus}airport_s1:ams'][.='2']"
+    );
     assertQ(
         req(
             "q", "*:*",
@@ -185,6 +199,28 @@ public void testSimpleGroupedQueryRangeFacets() throws Exception {
         "//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']",
         "//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']"
     );
+    /* Testing facet.range using tagged filter query and exclusion */
+    assertQ(
+        req(
+            "q", "*:*",
+            "fq", "id:[2000 TO 2004]",
+            "fq", "{!tag=dus}airport_s1:dus",
+            "group", "true",
+            "group.facet", "true",
+            "group.field", "hotel_s1",
+            "facet", "true",
+            "facet.range", "{!ex=dus}duration_i1",
+            "facet.range.start", "5",
+            "facet.range.end", "11",
+            "facet.range.gap", "1"
+        ),
+        "//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='5'][.='2']",
+        "//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='6'][.='0']",
+        "//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='7'][.='0']",
+        "//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='8'][.='0']",
+        "//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='9'][.='0']",
+        "//lst[@name='facet_ranges']/lst[@name='duration_i1']/lst[@name='counts']/int[@name='10'][.='2']"
+    );
   }
 
   @Test
