diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLBlob.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLBlob.java
index 20794244..a5ae6465 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLBlob.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/types/SQLBlob.java
@@ -44,6 +44,7 @@
 import java.io.ObjectOutput;
 import java.io.ObjectInput;
 import java.io.IOException;
+import java.sql.Blob;
 import java.sql.ResultSet;
 import java.sql.SQLException;
 import java.sql.PreparedStatement;
@@ -196,6 +197,22 @@ public void setInto(PreparedStatement ps, int position)
 		// This may cause problems for streaming blobs, by materializing the whole blob.
 		ps.setBytes(position, getBytes());
     }
+    
+    /**
+     * Set the value from an non-null object.
+     */
+    final void setObject(Object theValue)
+        throws StandardException
+    {
+        Blob vb = (Blob) theValue;
+        try {
+            stream = vb.getBinaryStream();
+        } catch (SQLException e) {
+            throw dataTypeConversion("DAN-438-tmp");
+       }
+        streamLength = -1; // unknown
+        dataValue = null;
+    }
 }
 
 
