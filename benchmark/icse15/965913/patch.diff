diff --git a/cassandra/trunk/src/java/org/apache/cassandra/net/MessagingService.java b/cassandra/trunk/src/java/org/apache/cassandra/net/MessagingService.java
index 2a0261e8..3d91659f 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/net/MessagingService.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/net/MessagingService.java
@@ -55,7 +55,7 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
-public class MessagingService implements IFailureDetectionEventListener
+public class MessagingService
 {
     private static int version_ = 1;
     //TODO: make this parameter dynamic somehow.  Not sure if config is appropriate.
@@ -142,7 +142,7 @@ public void run()
         return result;
     }
 
-    /** called by failure detection code to notify that housekeeping should be performed on downed sockets. */
+    /** called from gossiper when it notices a node is not responding. */
     public void convict(InetAddress ep)
     {
         logger_.trace("Resetting pool for " + ep);
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/net/OutboundTcpConnection.java b/cassandra/trunk/src/java/org/apache/cassandra/net/OutboundTcpConnection.java
index 1d0e8f35..2afd0d0c 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/net/OutboundTcpConnection.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/net/OutboundTcpConnection.java
@@ -67,7 +67,7 @@ public void write(ByteBuffer buffer)
         }
     }
 
-    public void closeSocket()
+    void closeSocket()
     {
         queue.clear();
         write(CLOSE_SENTINEL);
@@ -85,6 +85,9 @@ public void run()
             }
             if (socket != null || connect())
                 writeConnected(bb);
+            else
+                // clear out the queue, else gossip messages back up.
+                queue.clear();
         }
     }
 
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
index 2e332e55..592be67b 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
@@ -944,7 +944,10 @@ public void onAlive(InetAddress endpoint, EndpointState state)
             deliverHints(endpoint);
     }
 
-    public void onDead(InetAddress endpoint, EndpointState state) {}
+    public void onDead(InetAddress endpoint, EndpointState state) 
+    {
+        MessagingService.instance.convict(endpoint);
+    }
 
     /** raw load value */
     public double getLoad()
