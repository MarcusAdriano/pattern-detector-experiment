diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/math/VectorWritable.java b/mahout/trunk/core/src/main/java/org/apache/mahout/math/VectorWritable.java
index ae2f5bf0..858da343 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/math/VectorWritable.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/math/VectorWritable.java
@@ -157,7 +157,7 @@ public static void writeVector(DataOutput out, Vector vector, boolean laxPrecisi
         }
       }
     } else {
-      Varint.writeUnsignedVarInt(vector.getNumNondefaultElements(), out);
+      Varint.writeUnsignedVarInt(vector.getNumNonZeroElements(), out);
       Iterator<Element> iter = vector.nonZeroes().iterator();
       if (sequential) {
         int lastIndex = 0;
diff --git a/mahout/trunk/core/src/test/java/org/apache/mahout/math/VectorWritableTest.java b/mahout/trunk/core/src/test/java/org/apache/mahout/math/VectorWritableTest.java
index 2ce6a04b..a68c14b0 100644
--- a/mahout/trunk/core/src/test/java/org/apache/mahout/math/VectorWritableTest.java
+++ b/mahout/trunk/core/src/test/java/org/apache/mahout/math/VectorWritableTest.java
@@ -29,6 +29,15 @@
 
 public final class VectorWritableTest extends MahoutTestCase {
 
+  @Test
+  public void testViewSequentialAccessSparseVectorWritable() throws Exception {
+    Vector v = new SequentialAccessSparseVector(5);
+    v.set(1, 3.0);
+    v.set(3, 5.0);
+    Vector view = new VectorView(v,0,v.size());
+    doTestVectorWritableEquals(view);
+  }
+
   @Test
   public void testSequentialAccessSparseVectorWritable() throws Exception {
     Vector v = new SequentialAccessSparseVector(5);
