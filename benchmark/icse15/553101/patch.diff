diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/conn/LanguageConnectionContext.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/conn/LanguageConnectionContext.java
index 6038f694..67627e7d 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/conn/LanguageConnectionContext.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/sql/conn/LanguageConnectionContext.java
@@ -1053,4 +1053,9 @@ public void autoincrementCreateCounter(String s, String t, String c,
 	 * @return True if SQL standard permissions are being used
 	 */
 	public boolean usesSqlAuthorization();
+
+	/**
+	 * Close any unused activations in this connection context.
+	 */
+	public void closeUnusedActivations() throws StandardException;
 }
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/GenericPreparedStatement.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/GenericPreparedStatement.java
index 00a3efd3..9aae8ff9 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/GenericPreparedStatement.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/GenericPreparedStatement.java
@@ -218,8 +218,12 @@ public void rePrepare(LanguageConnectionContext lcc)
 	 *
 	 * @exception StandardException thrown if finished.
 	 */
-	public synchronized Activation	getActivation(LanguageConnectionContext lcc, boolean scrollable) throws StandardException 
+	public Activation getActivation(LanguageConnectionContext lcc,
+									boolean scrollable)
+		throws StandardException
 	{
+		Activation ac;
+		synchronized (this) {
 		GeneratedClass gc = getActivationClass();
 
 		if (gc == null) {
@@ -227,9 +231,14 @@ public synchronized Activation	getActivation(LanguageConnectionContext lcc, bool
 			gc = getActivationClass();
 		}
 
-		Activation ac = new GenericActivationHolder(lcc, gc, this, scrollable);
+			ac = new GenericActivationHolder(lcc, gc, this, scrollable);
 
 		inUseCount++;
+		}
+		// DERBY-2689. Close unused activations-- this method should be called
+		// when I'm not holding a lock on a prepared statement to avoid
+		// deadlock.
+		lcc.closeUnusedActivations();
 
 		return ac;
 	}
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java
index f8256bd6..c19534a4 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java
@@ -414,7 +414,11 @@ public void addActivation(Activation a)
 		if (acts.size() > maxActsSize) {
 			maxActsSize = acts.size();
 		}
+	}
 
+	public void closeUnusedActivations()
+			throws StandardException
+	{
 		// DERBY-418. Activations which are marked unused,
 		// are closed here. Activations Vector is iterated 
 		// to identify and close unused activations, only if 
@@ -422,6 +426,7 @@ public void addActivation(Activation a)
 		// size exceeds 20.
 		if( (unusedActs) && (acts.size() > 20) ) {
 			unusedActs = false;
+
 			for (int i = acts.size() - 1; i >= 0; i--) {
 
 				// it maybe the case that a Activation's reset() ends up
