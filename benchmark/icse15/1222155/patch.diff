diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/DerbyNetNewServerTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/DerbyNetNewServerTest.java
index b8a385dd..cfe5d2e0 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/DerbyNetNewServerTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/DerbyNetNewServerTest.java
@@ -59,6 +59,14 @@ public static Test suite() {
         }
     }
         
+    protected void setUp() throws Exception {
+        // The test cases in this test start a new network server. Wait until
+        // the network server in the previous test case has shut down
+        // completely and released the network port before attempting to start
+        // a new server.
+        NetworkServerTestSetup.waitForAvailablePort();
+    }
+
     public void testStartWithPrintWriter()
             throws UnknownHostException,
             Exception {
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java
index ad97a6eb..7a3a6fb4 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/NSSecurityMechanismTest.java
@@ -412,6 +412,10 @@ private boolean setSecurityMechanism(String derby_security_mechanism)
             }
         }
 
+        // Before attempting to start a new server, wait for the previous
+        // server to complete and release the server port.
+        NetworkServerTestSetup.waitForAvailablePort();
+
         setSystemProperty("derby.drda.securityMechanism",
                 derby_drda_securityMechanism);
         try {
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/ServerPropertiesTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/ServerPropertiesTest.java
index 2b70f024..ebd17175 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/ServerPropertiesTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/ServerPropertiesTest.java
@@ -393,6 +393,10 @@ public void ttestSetPortPriority()
         }
         NetworkServerTestSetup.setDefaultWaitTime();
 
+        // Wait until the server has shut down completely and released the
+        // port.
+        NetworkServerTestSetup.waitForAvailablePort();
+
         /* 
          * The port should be default, but it might not be, so the second argument
          * must be true to accommodate for every case.
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/NetworkServerTestSetup.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/NetworkServerTestSetup.java
index 5dcad522..12255493 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/NetworkServerTestSetup.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/NetworkServerTestSetup.java
@@ -26,6 +26,7 @@
 import java.io.IOException;
 import java.io.PrintWriter;
 import java.net.ServerSocket;
+import java.net.UnknownHostException;
 import java.security.AccessController;
 import java.security.PrivilegedAction;
 import java.security.PrivilegedActionException;
@@ -217,9 +218,14 @@ else if (asCommand)
      * by earlier test cases, or until the timeout specified by
      * {@link #getWaitTime()} has elapsed.
      *
-     * @throws Exception if the port didn't become available before the timeout
+     * @throws AssertionFailedError if the port didn't become available before
+     * the timeout
+     * @throws InterruptedException if the thread was interrupted while waiting
+     * for the port to become available
+     * @throws UnknownHostException if the host name couldn't be resolved
      */
-    private void waitForAvailablePort() throws Exception {
+    public static void waitForAvailablePort()
+            throws InterruptedException, UnknownHostException {
         TestConfiguration conf = TestConfiguration.getCurrent();
         InetAddress serverAddress = InetAddress.getByName(conf.getHostName());
         int port = conf.getPort();
@@ -248,7 +254,7 @@ private void waitForAvailablePort() throws Exception {
      * @param addr the address of the network interface
      * @throws IOException if a server socket couldn't be opened
      */
-    private void probeServerPort(final int port, final InetAddress addr)
+    private static void probeServerPort(final int port, final InetAddress addr)
             throws IOException {
         try {
             AccessController.doPrivileged(new PrivilegedExceptionAction() {
