diff --git a/lucene/java/trunk/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanFilterBuilder.java b/lucene/java/trunk/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanFilterBuilder.java
index 6c2c05e1..b19c31c6 100644
--- a/lucene/java/trunk/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanFilterBuilder.java
+++ b/lucene/java/trunk/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanFilterBuilder.java
@@ -11,6 +11,7 @@
 import org.apache.lucene.xmlparser.FilterBuilder;
 import org.apache.lucene.xmlparser.ParserException;
 import org.w3c.dom.Element;
+import org.w3c.dom.Node;
 import org.w3c.dom.NodeList;
 
 
@@ -28,16 +29,21 @@ public BooleanFilterBuilder(FilterBuilder factory)
 
 	public Filter getFilter(Element e) throws ParserException {
 		BooleanFilter bf=new BooleanFilter();
-		NodeList nl = e.getElementsByTagName("Clause");
+		NodeList nl = e.getChildNodes();
+		
 		for(int i=0;i<nl.getLength();i++)
 		{
-			Element clauseElem=(Element) nl.item(i);
+			Node node = nl.item(i);
+			if(node.getNodeName().equals("Clause"))
+			{
+				Element clauseElem=(Element) node;
 			BooleanClause.Occur occurs=BooleanQueryBuilder.getOccursValue(clauseElem);
 			
  			Element clauseFilter=DOMUtils.getFirstChildOrFail(clauseElem);
  			Filter f=factory.getFilter(clauseFilter);
  			bf.add(new FilterClause(f,occurs));			
 		}
+		}
 		
 		return bf;
 	}
diff --git a/lucene/java/trunk/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder.java b/lucene/java/trunk/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder.java
index 18d2c641..dcf110c9 100644
--- a/lucene/java/trunk/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder.java
+++ b/lucene/java/trunk/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/BooleanQueryBuilder.java
@@ -10,6 +10,7 @@
 import org.apache.lucene.xmlparser.ParserException;
 import org.apache.lucene.xmlparser.QueryBuilder;
 import org.w3c.dom.Element;
+import org.w3c.dom.Node;
 import org.w3c.dom.NodeList;
 
 
@@ -32,16 +33,21 @@ public Query getQuery(Element e) throws ParserException {
 		BooleanQuery bq=new BooleanQuery(DOMUtils.getAttribute(e,"disableCoord",false));
 		bq.setMinimumNumberShouldMatch(DOMUtils.getAttribute(e,"minimumNumberShouldMatch",0));
 		bq.setBoost(DOMUtils.getAttribute(e,"boost",1.0f));
-		NodeList nl = e.getElementsByTagName("Clause");
+		
+		NodeList nl = e.getChildNodes();
 		for(int i=0;i<nl.getLength();i++)
 		{
-			Element clauseElem=(Element) nl.item(i);
+			Node node = nl.item(i);
+			if(node.getNodeName().equals("Clause"))
+			{
+				Element clauseElem=(Element) node;
 			BooleanClause.Occur occurs=getOccursValue(clauseElem);
 			
  			Element clauseQuery=DOMUtils.getFirstChildOrFail(clauseElem);
  			Query q=factory.getQuery(clauseQuery);
  			bq.add(new BooleanClause(q,occurs));			
 		}
+		}
 		
 		return bq;
 	}
diff --git a/lucene/java/trunk/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser.java b/lucene/java/trunk/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser.java
index 403503cc..056f81b2 100644
--- a/lucene/java/trunk/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser.java
+++ b/lucene/java/trunk/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser.java
@@ -150,6 +150,11 @@ public void testBooleanFilterXML() throws ParserException, IOException
 			Query q=parse("BooleanFilter.xml");
 			dumpResults("Boolean filter", q, 5);
 	}
+	public void testNestedBooleanQuery() throws ParserException, IOException
+	{
+			Query q=parse("NestedBooleanQuery.xml");
+			dumpResults("Nested Boolean query", q, 5);
+	}
 	
 
 
