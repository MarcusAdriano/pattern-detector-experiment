diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
index d9d8c807..c09440ad 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
@@ -1325,5 +1325,6 @@ public void snapshot(String snapshotName) throws IOException
     void clearUnsafe()
     {
         memtable_.clearUnsafe();
+        ssTables_.clearUnsafe();
     }
 }
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/SSTableTracker.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/SSTableTracker.java
index dd4a7f0b..db8b79f6 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/SSTableTracker.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/SSTableTracker.java
@@ -50,4 +50,9 @@ public int size()
     {
         return sstables.iterator();
     }
+
+    public synchronized void clearUnsafe()
+    {
+        sstables = Collections.emptySet();
+    }
 }
diff --git a/incubator/cassandra/trunk/test/unit/org/apache/cassandra/db/RecoveryManager2Test.java b/incubator/cassandra/trunk/test/unit/org/apache/cassandra/db/RecoveryManager2Test.java
index 1648a7e1..6a5d43a0 100644
--- a/incubator/cassandra/trunk/test/unit/org/apache/cassandra/db/RecoveryManager2Test.java
+++ b/incubator/cassandra/trunk/test/unit/org/apache/cassandra/db/RecoveryManager2Test.java
@@ -26,6 +26,7 @@
 import java.util.Set;
 import java.util.HashSet;
 import java.util.Arrays;
+import java.util.Collections;
 
 import org.junit.Test;
 
@@ -43,19 +44,24 @@ public void testWithFlush() throws IOException, ExecutionException, InterruptedE
         for (int i = 0; i < 100; i++)
         {
             String key = "key" + i;
-            RowMutation rm = new RowMutation("Keyspace1", key);
-            ColumnFamily cf = ColumnFamily.create("Keyspace1", "Standard1");
-            cf.addColumn(column("col1", "val1", 1L));
-            rm.add(cf);
-            rm.apply();
+            insertRow(key);
             keys.add(key);
         }
         table1.getColumnFamilyStore("Standard1").forceBlockingFlush();
 
         table1.getColumnFamilyStore("Standard1").clearUnsafe();
-        RecoveryManager.doRecovery();
+        RecoveryManager.doRecovery(); // this is a no-op. is testing this useful?
 
         Set<String> foundKeys = new HashSet<String>(table1.getColumnFamilyStore("Standard1").getKeyRange("", "", 1000).keys);
-        assert keys.equals(foundKeys);
+        assert foundKeys.equals(Collections.emptySet());
+    }
+
+    private void insertRow(String key) throws IOException
+    {
+        RowMutation rm = new RowMutation("Keyspace1", key);
+        ColumnFamily cf = ColumnFamily.create("Keyspace1", "Standard1");
+        cf.addColumn(column("col1", "val1", 1L));
+        rm.add(cf);
+        rm.apply();
     }
 }
