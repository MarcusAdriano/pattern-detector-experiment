diff --git a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DRDAConnThread.java b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DRDAConnThread.java
index 6a45709b..a37852c8 100644
--- a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DRDAConnThread.java
+++ b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/DRDAConnThread.java
@@ -747,15 +747,11 @@ private void processCommands() throws DRDAProtocolException
 					catch (SQLException e)
 					{
 						writer.clearDSSesBackToMark(writerMark);
-						try {
-							// Try to cleanup if we hit an error.
-							if (ps != null)
-								ps.close();
+						// The fix for DERBY-1196 removed code 
+						// here to close the prepared statement 
+						// if OPNQRY failed.
 							writeOPNQFLRM(e);
 						}
-						catch (SQLException pse) {}
-						errorInChain(e);
-					}
 					break;
 				case CodePoint.RDBCMM:
 					try
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource.java
index e8b46a68..1cf84722 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/checkDataSource.java
@@ -89,11 +89,6 @@
 	private boolean canSetIsolationWithStatement = TestUtil.isEmbeddedFramework();
 	  
 	
-	// DERBY-1047  wiht client xa a PreparedStatement created before the global 
-	//transaction starts gives java.sql.SQLException: 'Statement' already closed.' 
-	// when used after  the global transaction ends
-	private static boolean canUseStatementAfterXa_end = TestUtil.isEmbeddedFramework();
-	 	
 	// DERBY-1025 client  XAResource.start() does not commit an active local transaction 
 	// when auto commit is true. Embedded XAResource.start() implementation commits 
 	// the active local transaction on the Connection associated with the XAResource.
@@ -467,7 +462,7 @@ protected void runTest(String[] args) throws Exception {
 		cs1 = xac.getConnection();
 
     
-		// ensure read locsk stay around until end-of transaction
+		// ensure read locks stay around until end-of transaction
 		cs1.setTransactionIsolation(Connection.TRANSACTION_REPEATABLE_READ);
 		cs1.setAutoCommit(false);
 
@@ -516,10 +511,7 @@ protected void runTest(String[] args) throws Exception {
 		showStatementState("LOCAL ", sruState);
 		showStatementState("PS LOCAL ", psruState);
 		showStatementState("CS LOCAL ", csruState);
-		if (canUseStatementAfterXa_end)
-		{
 			resultSetQuery("Params-local-2", psParams.executeQuery());
-		}
 		checkLocks(cs1);
 		cs1.commit();
 
