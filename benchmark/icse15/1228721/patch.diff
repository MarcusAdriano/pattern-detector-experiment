diff --git a/lucene/dev/branches/solrcloud/solr/core/src/java/org/apache/solr/cloud/ZkController.java b/lucene/dev/branches/solrcloud/solr/core/src/java/org/apache/solr/cloud/ZkController.java
index c01d4011..86476eb5 100644
--- a/lucene/dev/branches/solrcloud/solr/core/src/java/org/apache/solr/cloud/ZkController.java
+++ b/lucene/dev/branches/solrcloud/solr/core/src/java/org/apache/solr/cloud/ZkController.java
@@ -38,6 +38,7 @@
 import org.apache.solr.common.cloud.OnReconnect;
 import org.apache.solr.common.cloud.SolrZkClient;
 import org.apache.solr.common.cloud.ZkCmdExecutor;
+import org.apache.solr.common.cloud.ZkCoreNodeProps;
 import org.apache.solr.common.cloud.ZkNodeProps;
 import org.apache.solr.common.cloud.ZkOperation;
 import org.apache.solr.common.cloud.ZkStateReader;
@@ -488,7 +489,7 @@ public String register(String coreName, final CoreDescriptor desc, boolean recov
     SolrCore core = null;
     try {
       boolean doRecovery = true;
-      if (leaderUrl.equals(baseUrl)) {
+      if (leaderUrl.equals(ZkCoreNodeProps.getCoreUrl(baseUrl, coreName))) {
         doRecovery = false;
 
         // recover from local transaction log and wait for it to complete before
@@ -536,6 +537,7 @@ public String register(String coreName, final CoreDescriptor desc, boolean recov
       }
       
       if (doRecovery && !SKIP_AUTO_RECOVERY) {
+        log.info("Core needs to recover:" + core.getName());
         recoveryStrat.recover(core);
       }
     } finally {
diff --git a/lucene/dev/branches/solrcloud/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java b/lucene/dev/branches/solrcloud/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java
index b0531031..07a8d5c5 100644
--- a/lucene/dev/branches/solrcloud/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java
+++ b/lucene/dev/branches/solrcloud/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java
@@ -273,9 +273,11 @@ private void doFinish() {
       // TODO: do retries??
       // TODO: what if its is already recovering? Right now recoveries queue up -
       // should they?
+      String recoveryUrl = error.node.getBaseUrl();
       CommonsHttpSolrServer server;
+      log.info("try and ask " + recoveryUrl + " to recover");
       try {
-        server = new CommonsHttpSolrServer(error.node.getBaseUrl());
+        server = new CommonsHttpSolrServer(recoveryUrl);
         server.setSoTimeout(5000);
         server.setConnectionTimeout(5000);
         
diff --git a/lucene/dev/branches/solrcloud/solr/solrj/src/java/org/apache/solr/common/cloud/ZkCoreNodeProps.java b/lucene/dev/branches/solrcloud/solr/solrj/src/java/org/apache/solr/common/cloud/ZkCoreNodeProps.java
index fde6c053..64da5558 100644
--- a/lucene/dev/branches/solrcloud/solr/solrj/src/java/org/apache/solr/common/cloud/ZkCoreNodeProps.java
+++ b/lucene/dev/branches/solrcloud/solr/solrj/src/java/org/apache/solr/common/cloud/ZkCoreNodeProps.java
@@ -57,5 +57,10 @@ public static String getCoreUrl(String baseUrl, String coreName) {
     return sb.toString();
   }
 
+  @Override
+  public String toString() {
+    return nodeProps.toString();
+  }
+
 
 }
