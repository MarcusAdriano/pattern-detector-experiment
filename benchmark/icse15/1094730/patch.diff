diff --git a/db/derby/code/branches/10.8/java/engine/org/apache/derby/impl/store/raw/data/RAFContainer4.java b/db/derby/code/branches/10.8/java/engine/org/apache/derby/impl/store/raw/data/RAFContainer4.java
index b3475db5..43a54a4b 100644
--- a/db/derby/code/branches/10.8/java/engine/org/apache/derby/impl/store/raw/data/RAFContainer4.java
+++ b/db/derby/code/branches/10.8/java/engine/org/apache/derby/impl/store/raw/data/RAFContainer4.java
@@ -308,6 +308,8 @@ private void readPage(long pageNumber, byte[] pageData, long offset)
             synchronized (channelCleanupMonitor) {
 
                 // Gain entry
+                int retries = MAX_INTERRUPT_RETRIES;
+
                 while (restoreChannelInProgress) {
                     if (Thread.currentThread() == threadDoingRestore) {
                         // Reopening the container will do readEmbryonicPage
@@ -317,8 +319,13 @@ private void readPage(long pageNumber, byte[] pageData, long offset)
                         break;
                     }
 
+                    if (retries-- == 0) {
+                        throw StandardException.newException(
+                            SQLState.FILE_IO_INTERRUPTED);
+                    }
+
                     try {
-                        channelCleanupMonitor.wait();
+                        channelCleanupMonitor.wait(INTERRUPT_RETRY_SLEEP);
                     } catch (InterruptedException e) {
                         InterruptStatus.setInterrupted();
                     }
@@ -527,9 +534,16 @@ protected void writePage(long pageNumber, byte[] pageData, boolean syncPage)
             synchronized (channelCleanupMonitor) {
 
                 // Gain entry
+                int retries = MAX_INTERRUPT_RETRIES;
+
                 while (restoreChannelInProgress) {
+                    if (retries-- == 0) {
+                        throw StandardException.newException(
+                            SQLState.FILE_IO_INTERRUPTED);
+                    }
+
                     try {
-                        channelCleanupMonitor.wait();
+                        channelCleanupMonitor.wait(INTERRUPT_RETRY_SLEEP);
                     } catch (InterruptedException e) {
                         InterruptStatus.setInterrupted();
                     }
