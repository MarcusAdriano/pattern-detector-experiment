diff --git a/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SecurityPolicyReloadingTest.java b/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SecurityPolicyReloadingTest.java
index 2e476ced..b0cf3fe1 100644
--- a/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SecurityPolicyReloadingTest.java
+++ b/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/lang/SecurityPolicyReloadingTest.java
@@ -331,15 +331,6 @@ public  static   String readProperty( String propName )
         return (String) AccessController.doPrivileged( action );
     }
 
-    /**
-     * A handy method for debugging.
-     */
-    public static void sleep( long numberOfSeconds )
-        throws Exception
-    {
-        Thread.currentThread().sleep( numberOfSeconds * (1000L) );
-    }
-
     /**
      * Try to change the policy file.
      */
diff --git a/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/lang/UpdateStatisticsTest.java b/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/lang/UpdateStatisticsTest.java
index 956a381b..4fb41396 100644
--- a/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/lang/UpdateStatisticsTest.java
+++ b/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/lang/UpdateStatisticsTest.java
@@ -444,14 +444,10 @@ public void testDisposableStatsEagerness()
         IndexStatsUtil.IdxStats tbl_fk_pk_0 = stats.getStatsTable(tbl_fk)[0];
         stats.assertTableStats(tbl, 4);
         IndexStatsUtil.IdxStats[] tbl_stats_0 = stats.getStatsTable(tbl);
-        // Avoid timestamp comparison problems on super-fast machines...
-        try {
-            Thread.sleep(10);
-        } catch (InterruptedException ie) {
-            Thread.currentThread().interrupt();
-        }
 
         // Run the update statistics procedure.
+        // Sleep at least one tick to ensure the timestamps differ.
+        sleepAtLeastOneTick();
         ps = prepareStatement(
                 "call syscs_util.syscs_update_statistics('APP', ?, ?)");
         ps.setNull(2, Types.VARCHAR);
@@ -473,6 +469,7 @@ public void testDisposableStatsEagerness()
         }
 
         // Now make sure updating one index doesn't modify the others' stats.
+        sleepAtLeastOneTick();
         ps.setString(1, tbl);
         ps.setString(2, nuIdx);
         ps.execute();
diff --git a/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/memorydb/DropWhileConnectingTest.java b/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/memorydb/DropWhileConnectingTest.java
index 681ed4f7..10271ec6 100644
--- a/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/memorydb/DropWhileConnectingTest.java
+++ b/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/memorydb/DropWhileConnectingTest.java
@@ -103,21 +103,6 @@ public void testConcurrentAccessAndDrop()
         println(report.toString());
     }
 
-    /**
-     * Puts the current thread to sleep, but <em>does not</em> guarantee
-     * that the thread sleeps for the specified amount of time (interrupts are
-     * not handled).
-     *
-     * @param millis number of milliseconds to sleep
-     */
-    private static void sleep(long millis) {
-        try {
-            Thread.sleep(millis);
-        } catch (InterruptedException ie) {
-            alarm("sleep call interrupted");
-        }
-    }
-
     public static Test suite() {
        return new TestSuite(DropWhileConnectingTest.class);
     }
diff --git a/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java b/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java
index e8ad2562..8fe38f46 100644
--- a/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java
+++ b/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java
@@ -834,6 +834,24 @@ public static void fail(String msg, Throwable t)
         throw ae;
     }
 
+    /** Returns once the system timer has advanced at least one tick. */
+    public static void sleepAtLeastOneTick() {
+        long currentTime = System.currentTimeMillis(); 
+        while (System.currentTimeMillis() == currentTime) {
+            sleep(1);
+        }
+    }
+
+    /** Makes the current thread sleep up to {@code ms} milliseconds. */
+    public static void sleep(long ms) {
+        try {
+            Thread.sleep(ms);
+        } catch (InterruptedException ie) {
+            // For now we just print a warning if we are interrupted.
+            alarm("sleep interrupted");
+        }
+    }
+
     private static String traceClientType() {
        if (TestConfiguration.getCurrent().getJDBCClient().isEmbedded()) {
             return "(emb)";
