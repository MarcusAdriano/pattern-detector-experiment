diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/similarities/BasicModelBE.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/similarities/BasicModelBE.java
index 12514710..a8b218ef 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/similarities/BasicModelBE.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/search/similarities/BasicModelBE.java
@@ -24,6 +24,10 @@
  * slightly from the one in the original paper: {@code F} is increased by {@code tfn+1}
  * and {@code N} is increased by {@code F} 
  * @lucene.experimental
+ * NOTE: in some corner cases this model may give poor performance with Normalizations that
+ * return large values for {@code tfn} such as NormalizationH3. Consider using the 
+ * geometric approximation ({@link BasicModelG}) instead, which provides the same relevance
+ * but with less practical problems. 
  */
 public class BasicModelBE extends BasicModel {
   @Override
diff --git a/lucene/dev/trunk/lucene/src/test-framework/org/apache/lucene/search/RandomSimilarityProvider.java b/lucene/dev/trunk/lucene/src/test-framework/org/apache/lucene/search/RandomSimilarityProvider.java
index d7078a6c..e5e4458c 100644
--- a/lucene/dev/trunk/lucene/src/test-framework/org/apache/lucene/search/RandomSimilarityProvider.java
+++ b/lucene/dev/trunk/lucene/src/test-framework/org/apache/lucene/search/RandomSimilarityProvider.java
@@ -102,7 +102,7 @@ public synchronized Similarity get(String field) {
   // all the similarities that we rotate through
   /** The DFR basic models to test. */
   static BasicModel[] BASIC_MODELS = {
-    new BasicModelBE(), /* TODO: enable new BasicModelD(), */ new BasicModelG(),
+    /* TODO: enable new BasicModelBE(), */ /* TODO: enable new BasicModelD(), */ new BasicModelG(),
     new BasicModelIF(), new BasicModelIn(), new BasicModelIne(),
     /* TODO: enable new BasicModelP() */
   };
