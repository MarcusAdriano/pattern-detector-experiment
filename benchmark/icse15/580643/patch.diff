diff --git a/lucene/java/trunk/src/java/org/apache/lucene/index/TermVectorsWriter.java b/lucene/java/trunk/src/java/org/apache/lucene/index/TermVectorsWriter.java
index 9f9ebdb3..046bac36 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/index/TermVectorsWriter.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/index/TermVectorsWriter.java
@@ -155,7 +155,8 @@ public final void addAllDocVectors(TermFreqVector[] vectors)
         tvd.writeVLong(fieldPointer-lastFieldPointer);
         lastFieldPointer = fieldPointer;
       }
-    }
+    } else
+      tvd.writeVInt(0);
   }
   
   /** Close all streams. */
diff --git a/lucene/java/trunk/src/test/org/apache/lucene/index/TestIndexWriter.java b/lucene/java/trunk/src/test/org/apache/lucene/index/TestIndexWriter.java
index 5ab13ec4..7ee20b4f 100644
--- a/lucene/java/trunk/src/test/org/apache/lucene/index/TestIndexWriter.java
+++ b/lucene/java/trunk/src/test/org/apache/lucene/index/TestIndexWriter.java
@@ -1489,4 +1489,34 @@ public void testNoTermVectorAfterTermVector() throws IOException {
     iw.close();
     dir.close();
   }
+
+  // LUCENE-1010
+  public void testNoTermVectorAfterTermVectorMerge() throws IOException {
+    MockRAMDirectory dir = new MockRAMDirectory();
+    IndexWriter iw = new IndexWriter(dir, new StandardAnalyzer(), true);
+    Document document = new Document();
+    document.add(new Field("tvtest", "a b c", Field.Store.NO, Field.Index.TOKENIZED,
+        Field.TermVector.YES));
+    iw.addDocument(document);
+    iw.flush();
+
+    document = new Document();
+    document.add(new Field("tvtest", "x y z", Field.Store.NO, Field.Index.TOKENIZED,
+                           Field.TermVector.NO));
+    iw.addDocument(document);
+    // Make first segment
+    iw.flush();
+
+    iw.optimize();
+
+    document.add(new Field("tvtest", "a b c", Field.Store.NO, Field.Index.TOKENIZED,
+        Field.TermVector.YES));
+    iw.addDocument(document);
+    // Make 2nd segment
+    iw.flush();
+    iw.optimize();
+
+    iw.close();
+    dir.close();
+  }
 }
