diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/management/JDBCMBeanTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/management/JDBCMBeanTest.java
index be43fb20..780067a5 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/management/JDBCMBeanTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/management/JDBCMBeanTest.java
@@ -22,12 +22,15 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 package org.apache.derbyTesting.functionTests.tests.management;
 
 import java.io.BufferedReader;
+import java.sql.DatabaseMetaData;
 import java.sql.Driver;
 import java.util.Hashtable;
 import javax.management.ObjectName;
 import junit.framework.Test;
 import junit.framework.Test;
 import junit.framework.TestSuite;
+
+import org.apache.derby.iapi.services.info.JVMInfo;
 import org.apache.derbyTesting.junit.Utilities;
 
 
@@ -93,23 +96,19 @@ public void testAttributeCompliantDriver() throws Exception {
     }
     
     public void testAttributeDriverLevel() throws Exception {
-        String expected = "[Unable to get driver level from sysinfo]";
-        // Get the expected value from sysinfo
-        BufferedReader sysinfoOutput = Utilities.getSysinfoFromServer();
-        String line = null;
-        while ((line = sysinfoOutput.readLine()) != null) {
-            /* Looking for:
-             *--------- Derby Information --------
-             *JRE - JDBC: J2SE 5.0 - JDBC 3.0
-             *            ^^^^^^^^^^^^^^^^^^^
-             * (actual JRE/JDBC values may vary)*/
-            if (line.matches("^JRE - JDBC: .*")) {
-                expected = line.substring(line.indexOf(": ") + 2);
-            }
-        }
+        // get JDBC version from DatabaseMetaData for comparison
+        DatabaseMetaData dmd = getConnection().getMetaData();
+        String JDBCVersion = "" + dmd.getJDBCMajorVersion() + 
+            dmd.getJDBCMajorVersion() + "." +
+            dmd.getJDBCMinorVersion();
+        println("DatabaseMetaDataJDBCLevel = " + JDBCVersion);
+        ObjectName driverLevel = getJdbcMBeanObjectName();
+        String driverLevelString = driverLevel.toString();
+        println("MBean driverLevel  = " + driverLevelString);
+       
+        assert(driverLevelString.indexOf('?') == -1);
+        assert(driverLevelString.matches("^JRE - JDBC: " + JDBCVersion + ".*"));
         
-        // test the attribute value against the expected value
-        assertStringAttribute(expected,getJdbcMBeanObjectName(), "DriverLevel");
     }
     
     /**
diff --git a/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/xaHelper.java b/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/xaHelper.java
index 92321059..d167a37a 100644
--- a/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/xaHelper.java
+++ b/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/ij/xaHelper.java
@@ -510,11 +510,11 @@ private XADataSource getXADataSource() throws Exception
 		// if we new it directly, then it will the tools.jar file to bloat.
 		try
 		{
+		    
 			if (isJCC)
 				return (XADataSource) 
 					(Class.forName("com.ibm.db2.jcc.DB2XADataSource").newInstance());
 			else if (isNetClient){
-                            if (JVMInfo.JDK_ID >= JVMInfo.J2SE_16) {
                                 //running under jdk1.6 or higher 
                                 // try instantiating EmbeddedXADataSource40
                                 try {
@@ -524,15 +524,16 @@ else if (isNetClient){
                                 }
                                 catch (ClassNotFoundException e) {
                                     //probably it was not compiled with jdbc4.0
-                                    //support go ahead with EmbeddedXADataSource
+                    //support go ahead with ClientXADataSource
                                 }
+                catch (UnsupportedClassVersionError ue) { 
+                    // ClientXADataSource
                             }
                             return (XADataSource) (Class.forName(
                                     "org.apache.derby.jdbc.ClientXADataSource"
                                     ).newInstance());
                         }
 			else {
-                            if (JVMInfo.JDK_ID >= JVMInfo.J2SE_16) {
                                 //running under jdk1.6 or higher 
                                 // try instantiating EmbeddedXADataSource40
                                 try {
@@ -544,6 +545,9 @@ else if (isNetClient){
                                     //probably it was not compiled with jdbc4.0
                                     //support go ahead with EmbeddedXADataSource
                                 }
+                catch (UnsupportedClassVersionError ue) {
+                    // not jdk 16 or higher. Go ahead with
+                    // EmbeddedXADataSource
                             }
                             return (XADataSource)(Class.forName("org.apache.derby.jdbc.EmbeddedXADataSource").newInstance());
                         }
diff --git a/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/sysinfo/Main.java b/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/sysinfo/Main.java
index bbc29a58..896ff391 100644
--- a/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/sysinfo/Main.java
+++ b/db/derby/code/trunk/java/tools/org/apache/derby/impl/tools/sysinfo/Main.java
@@ -220,8 +220,6 @@ private static void pause () {
 
   private static void reportDerby (java.io.PrintWriter localAW) {
 
-	  localAW.println("JRE - JDBC: " + org.apache.derby.iapi.services.info.JVMInfo.derbyVMLevel());
-
 	  String classpath = null;
 
       try {
