diff --git a/lucene/solr/trunk/src/java/org/apache/solr/core/CoreContainer.java b/lucene/solr/trunk/src/java/org/apache/solr/core/CoreContainer.java
index 8cdb2e08..d2572676 100644
--- a/lucene/solr/trunk/src/java/org/apache/solr/core/CoreContainer.java
+++ b/lucene/solr/trunk/src/java/org/apache/solr/core/CoreContainer.java
@@ -457,6 +457,7 @@ public void setAdminCore(SolrCore core) {
   /**
    * Ensures there is a valid core to handle MultiCore admin taks and
    * increase its refcount.
+   * @see SolrCore#close() 
    * @return the acquired admin core, null if no core is available
    */               
   public SolrCore getAdminCore() {
diff --git a/lucene/solr/trunk/src/java/org/apache/solr/core/SolrCore.java b/lucene/solr/trunk/src/java/org/apache/solr/core/SolrCore.java
index 49b084bb..76ab4edb 100644
--- a/lucene/solr/trunk/src/java/org/apache/solr/core/SolrCore.java
+++ b/lucene/solr/trunk/src/java/org/apache/solr/core/SolrCore.java
@@ -586,20 +586,24 @@ final void open() {
   }
   
   /**
-   * Close all resources allocated by the core.
-   *  1. searcher
-   *  2. updateHandler
-   *  3. all CloseHooks will be notified
-   *  4. All MBeans will be unregistered from MBeanServer if JMX was enabled
+   * Close all resources allocated by the core...
+   * <ul>
+   *   <li>searcher</li>
+   *   <li>updateHandler</li>
+   *   <li>all CloseHooks will be notified</li>
+   *   <li>All MBeans will be unregistered from MBeanServer if JMX was enabled
+   *       </li>
+   * </ul>
    * <p>
-   * This should always be called when the core is obtained through:
-   * @see CoreContainer.getCore
-   * @see CoreContainer.getAdminCore
+   * This should always be called when the core is obtained through {@link CoreContainer#getCore} or {@link CoreContainer#getAdminCore}
    * </p>
+   * <p>
    * The actual close is performed if the core usage count is 1.
    * (A core is created with a usage count of 1).
    * If usage count is > 1, the usage count is decreased by 1.
-   * If usage count is &lt; 0, this is an error and a runtime exception is thrown.
+   * If usage count is &lt; 0, this is an error and a runtime exception 
+   * is thrown.
+   * </p>
    */
   public void close() {
     int count = refCount.decrementAndGet();
