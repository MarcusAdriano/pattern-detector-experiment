diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/eval/RecommenderIRStatsEvaluator.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/eval/RecommenderIRStatsEvaluator.java
index ec137aa9..696fe008 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/eval/RecommenderIRStatsEvaluator.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/eval/RecommenderIRStatsEvaluator.java
@@ -35,7 +35,7 @@
    * @param recommenderBuilder object that can build a
    * {@link org.apache.mahout.cf.taste.recommender.Recommender} to test
    * @param dataModel dataset to test on
-   * @param rescorer, if any, to use when computing recommendations
+   * @param rescorer if any, to use when computing recommendations
    * @param at as in, "precision at 5". The number of recommendations to consider when evaluating
    * precision, etc.
    * @param relevanceThreshold {@link Item}s whose preference value is at least
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/BayesClassifier.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/BayesClassifier.java
index 530d75f3..956d3fbe 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/BayesClassifier.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/BayesClassifier.java
@@ -101,7 +101,7 @@ public ClassifierResult classify(Model model, String[] document, String defaultC
    * @param label       The label to calculate the probability of
    * @param document    The document
    * @return The probability
-   * @see Model# featureWeight (String, String)
+   * @see Model#featureWeight(String, String)
    */
   @Override
   public double documentWeight(Model model, String label, String[] document) {
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesClassifier.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesClassifier.java
index b26bca5a..d2adea45 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesClassifier.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/cbayes/CBayesClassifier.java
@@ -99,7 +99,7 @@ public ClassifierResult classify(Model model, String[] document, String defaultC
    * @param label       The label to calculate the probability of
    * @param document    The document
    * @return The probability
-   * @see Model# featureWeight (String, String)
+   * @see Model#featureWeight(String, String)
    */
   @Override
   public double documentWeight(Model model, String label, String[] document) {
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/Canopy.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/Canopy.java
index f9105d9f..3434dd91 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/Canopy.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/canopy/Canopy.java
@@ -230,7 +230,6 @@ public static void emitPointToExistingCanopies(Vector point,
    * Format the canopy for output
    * 
    * @param canopy
-   * @return
    */
   public static String formatCanopy(Canopy canopy) {
     return "C" + canopy.canopyId + ": "
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansJob.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansJob.java
index 2799926c..1de4d436 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansJob.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/fuzzykmeans/FuzzyKMeansJob.java
@@ -73,8 +73,8 @@ private static void printMessage() {
    * @param convergenceDelta the convergence delta value
    * @param maxIterations the maximum number of iterations
    * @param numMapTasks the number of maptasks
-   * @doCanopy does canopy needed for initial clusters
-   * @m param needed to fuzzify the cluster membership values
+   * @param doCanopy does canopy needed for initial clusters
+   * @param m param needed to fuzzify the cluster membership values
    */
   public static void runJob(String input, String clustersIn, String output,
       String measureClass, double convergenceDelta, int maxIterations,
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/fuzzykmeans/SoftCluster.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/fuzzykmeans/SoftCluster.java
index ddc5e2f4..a7a35662 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/fuzzykmeans/SoftCluster.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/fuzzykmeans/SoftCluster.java
@@ -78,7 +78,6 @@
    * Format the SoftCluster for output
    * 
    * @param cluster the Cluster
-   * @return
    */
   public static String formatCluster(SoftCluster cluster) {
     return cluster.getIdentifier() + ": "
@@ -89,7 +88,6 @@ public static String formatCluster(SoftCluster cluster) {
    * Decodes and returns a SoftCluster from the formattedString
    * 
    * @param formattedString a String produced by formatCluster
-   * @return
    */
   public static SoftCluster decodeCluster(String formattedString) {
     int beginIndex = formattedString.indexOf('[');
@@ -214,7 +212,6 @@ public static void outputPointWithClusterProbabilities(String key,
    * 
    * @param clusterDistance
    * @param clusterDistanceList
-   * @return
    */
   public static double computeProbWeight(double clusterDistance,
       List<Double> clusterDistanceList) {
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/Cluster.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/Cluster.java
index 7a612a01..86569e65 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/Cluster.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/kmeans/Cluster.java
@@ -63,9 +63,7 @@
   /**
    * Format the cluster for output
    * 
-   * @param cluster
-   *            the Cluster
-   * @return
+   * @param cluster the Cluster
    */
   public static String formatCluster(Cluster cluster) {
     return cluster.getIdentifier() + ": "
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopy.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopy.java
index f129b281..f9b75bec 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopy.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopy.java
@@ -184,7 +184,6 @@ public static void mergeCanopy(MeanShiftCanopy aCanopy,
    * Format the canopy for output
    * 
    * @param canopy
-   * @return
    */
   public static String formatCanopy(MeanShiftCanopy canopy) {
     StringBuilder builder = new StringBuilder();
@@ -373,9 +372,7 @@ public String getIdentifier() {
   }
 
   /**
-   * Return the number of points under the Canopy
-   * 
-   * @return
+   * @return the number of points under the Canopy
    */
   public int getNumPoints() {
     return numPoints;
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/matrix/Matrix.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/matrix/Matrix.java
index 1094d3dc..b3a44490 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/matrix/Matrix.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/matrix/Matrix.java
@@ -190,7 +190,6 @@
    * 
    * @param rows the int number of rows
    * @param columns the int number of columns
-   * @return
    */
   Matrix like(int rows, int columns);
 
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/matrix/Vector.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/matrix/Vector.java
index 8b4c861c..36db0f9b 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/matrix/Vector.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/matrix/Vector.java
@@ -33,9 +33,7 @@
   WritableComparable<?> asWritableComparable();
 
   /**
-   * Return a formatted String suitable for output
-   *
-   * @return
+   * @return a formatted String suitable for output
    */
   String asFormatString();
 
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/ejb/RecommenderEJB.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/ejb/RecommenderEJB.java
index 894f6093..ab1e58e3 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/ejb/RecommenderEJB.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/ejb/RecommenderEJB.java
@@ -62,7 +62,7 @@ void setPreference(Object userID, Object itemID, double value)
   void removePreference(Object userID, Object itemID) throws TasteException, RemoteException;
 
   /**
-   * @see org.apache.mahout.cf.taste.recommender.Recommender#refresh(Collection<Refreshable>)
+   * @see org.apache.mahout.cf.taste.recommender.Recommender#refresh(java.util.Collection)
    */
   void refresh(Collection<Refreshable> alreadyRefreshed) throws RemoteException;
 
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/ejb/RecommenderEJBLocal.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/ejb/RecommenderEJBLocal.java
index f3b82074..27165cd0 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/ejb/RecommenderEJBLocal.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/cf/taste/ejb/RecommenderEJBLocal.java
@@ -60,7 +60,7 @@
   void removePreference(Object userID, Object itemID) throws TasteException;
 
   /**
-   * @see org.apache.mahout.cf.taste.recommender.Recommender#refresh(Collection<Refreshable>)
+   * @see org.apache.mahout.cf.taste.recommender.Recommender#refresh(Collection)
    */
   void refresh(Collection<Refreshable> alreadyRefreshed);
 
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/CDFitness.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/CDFitness.java
index d3d04cdf..1e2cbebb 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/CDFitness.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/CDFitness.java
@@ -105,7 +105,6 @@ public String toString() {
 
   /**
    * Calculates the fitness corresponding to this evaluation.
-   * @return
    */
   public double get() {
     double se = ((double) tp) / (tp + fn); // sensitivity
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/CDMutation.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/CDMutation.java
index f4d951de..241e0674 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/CDMutation.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/CDMutation.java
@@ -46,8 +46,7 @@
    * @param range max step-size for each variable
    * @param k mutation precision
    * 
-   * See
-   * {@see http://www.geatbx.com/docu/algindex-04.html#P659_42386 real valued mutation}
+   * See http://www.geatbx.com/docu/algindex-04.html#P659_42386 real valued mutation
    * for more information about the parameters
    */
   public CDMutation(double rate, double range, int k) {
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/DataSet.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/DataSet.java
index 179b684e..424aa8c3 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/DataSet.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/DataSet.java
@@ -106,7 +106,6 @@ public boolean isNumerical() {
   /**
    * Singleton DataSet
    * 
-   * @return
    * @throws RuntimeException if the dataset has not been initialized
    */
   public static DataSet getDataSet() {
@@ -125,16 +124,13 @@ public static void initialize(DataSet dataset) {
   }
 
   /**
-   * Number of non-ignored attributes.
-   * 
-   * @return
+   * @return number of non-ignored attributes.
    */
   public int getNbAttributes() {
     return attributes.size();
   }
 
   /**
-   * 
    * @return Indexes of the ignored attributes, if any.
    */
   public List<Integer> getIgnoredAttributes() {
@@ -142,9 +138,7 @@ public int getNbAttributes() {
   }
 
   /**
-   * zero-based position of the label in the dataset.
-   * 
-   * @return
+   * @return zero-based position of the label in the dataset.
    */
   public int getLabelIndex() {
     return labelIndex;
@@ -154,7 +148,6 @@ public int getLabelIndex() {
    * Maximum possible value for an attribute
    * 
    * @param index of the attribute
-   * @return
    * @throws RuntimeException if the attribute is nominal
    */
   public double getMax(int index) {
@@ -168,7 +161,6 @@ public double getMax(int index) {
    * Minimum possible value for an attribute
    * 
    * @param index of the attribute
-   * @return
    * @throws RuntimeException if the attribute is nominal
    */
   public double getMin(int index) {
@@ -182,7 +174,6 @@ public double getMin(int index) {
    * Number of values for a nominal attribute
    * 
    * @param index of the attribute
-   * @return
    * @throws RuntimeException if the attribute is numerical
    */
   public int getNbValues(int index) {
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/FileInfoParser.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/FileInfoParser.java
index 9e7ef375..5c078f3d 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/FileInfoParser.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/FileInfoParser.java
@@ -111,7 +111,6 @@ public static DataSet parseFile(FileSystem fs, Path inpath)
    * 
    * @param fs file system
    * @param inpath
-   * @return
    * @throws IOException
    */
   public static Path getInfoFile(FileSystem fs, Path inpath)
@@ -134,7 +133,6 @@ public static Path getInfoFile(FileSystem fs, Path inpath)
    * Parse a nominal attribute.
    * 
    * @param tokenizer
-   * @return
    */
   private static NominalAttr parseNominal(StringTokenizer tokenizer) {
     List<String> vlist = new ArrayList<String>();
@@ -151,7 +149,6 @@ private static NominalAttr parseNominal(StringTokenizer tokenizer) {
    * Parse a numerical attribute.
    * 
    * @param tokenizer
-   * @return
    */
   private static NumericalAttr parseNumerical(StringTokenizer tokenizer) {
     double min = nextDouble(tokenizer);
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/hadoop/CDMapper.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/hadoop/CDMapper.java
index cedefc39..2c62ece4 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/hadoop/CDMapper.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/hadoop/CDMapper.java
@@ -111,7 +111,6 @@ void map(LongWritable key, DataLine dl,
    * @param target expected label
    * @param prediction
    * @param label actual label
-   * @return
    */
   public static CDFitness evaluate(int target, int prediction, int label) {
     int tp = (label == target && prediction == 1) ? 1 : 0;
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/DescriptionUtils.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/DescriptionUtils.java
index 65f60173..ba4da48b 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/DescriptionUtils.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/DescriptionUtils.java
@@ -42,7 +42,6 @@ public Range(double min, double max) {
    * 
    * @param min
    * @param max
-   * @return
    */
   public static String createNumericalDescription(double min, double max) {
     return min + "," + max;
@@ -52,7 +51,6 @@ public static String createNumericalDescription(double min, double max) {
    * Create a nominal description from the possible values.
    * 
    * @param values
-   * @return
    */
   public static String createNominalDescription(Collection<String> values) {
     StringBuilder buffer = new StringBuilder();
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/ToolCombiner.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/ToolCombiner.java
index 6ce5e731..6f6334a4 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/ToolCombiner.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/ToolCombiner.java
@@ -40,7 +40,7 @@
  * found.</li>
  * </ul>
  * 
- * @see Descriptors, for more informations about the job parameter
+ * See Descriptors, for more informations about the job parameter
  */
 public class ToolCombiner extends MapReduceBase implements
     Reducer<LongWritable, Text, LongWritable, Text> {
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/ToolMapper.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/ToolMapper.java
index 6495c232..178b1cb1 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/ToolMapper.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/ToolMapper.java
@@ -45,7 +45,7 @@
  * <li> Text : attribute value </li>
  * </ul>
  * 
- * @see Descriptors, for more informations about the job parameter
+ * See Descriptors, for more informations about the job parameter
  */
 public class ToolMapper extends MapReduceBase implements
     Mapper<LongWritable, Text, LongWritable, Text> {
diff --git a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/ToolReducer.java b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/ToolReducer.java
index 02a6e703..1368eb07 100644
--- a/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/ToolReducer.java
+++ b/lucene/mahout/trunk/examples/src/main/java/org/apache/mahout/ga/watchmaker/cd/tool/ToolReducer.java
@@ -41,7 +41,7 @@
  * found.</li>
  * </ul>
  * 
- * @see Descriptors, for more informations about the job parameter
+ * See Descriptors, for more informations about the job parameter
  */
 public class ToolReducer extends MapReduceBase implements
     Reducer<LongWritable, Text, LongWritable, Text> {
