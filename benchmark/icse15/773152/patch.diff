diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Memtable.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Memtable.java
index 0da0c072..af78100a 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Memtable.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Memtable.java
@@ -399,9 +399,16 @@ public void run()
         }
     }
 
-    public Iterator<String> sortedKeyIterator()
+    public Iterator<String> sortedKeyIterator() throws ExecutionException, InterruptedException
     {
-        Set<String> keys = columnFamilies_.keySet();
+        Callable<Set<String>> callable = new Callable<Set<String>>()
+        {
+            public Set<String> call() throws Exception
+            {
+                return columnFamilies_.keySet();
+            }
+        };
+        Set<String> keys = executor_.submit(callable).get();
         if (keys.size() == 0)
         {
             // cannot create a PQ of size zero (wtf?)
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Table.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Table.java
index 97f1b45c..068acaa9 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Table.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Table.java
@@ -26,6 +26,7 @@
 import java.io.FileNotFoundException;
 import java.util.concurrent.locks.Lock;
 import java.util.concurrent.locks.ReentrantLock;
+import java.util.concurrent.ExecutionException;
 
 import org.apache.commons.collections.IteratorUtils;
 import org.apache.commons.collections.Predicate;
@@ -870,7 +871,7 @@ else if(column.timestamp() == 4)
      * @param maxResults
      * @return list of keys between startWith and stopAt
      */
-    public List<String> getKeyRange(final String startWith, final String stopAt, int maxResults) throws IOException
+    public List<String> getKeyRange(final String startWith, final String stopAt, int maxResults) throws IOException, ExecutionException, InterruptedException
     {
         // (OPP key decoration is a no-op so using the "decorated" comparator against raw keys is fine)
         final Comparator<String> comparator = StorageService.getPartitioner().getDecoratedKeyComparator();
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/RangeVerbHandler.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/RangeVerbHandler.java
index a5eb4e45..c0ac3b3b 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/RangeVerbHandler.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/RangeVerbHandler.java
@@ -22,7 +22,7 @@ public void doVerb(Message message)
             Table table = Table.open(command.table);
             keys = table.getKeyRange(command.startWith, command.stopAt, command.maxResults);
         }
-        catch (IOException e)
+        catch (Exception e)
         {
             throw new RuntimeException(e);
         }
