diff --git a/lucene/dev/branches/branch_4x/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer.java b/lucene/dev/branches/branch_4x/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer.java
index 952de316..74cdf0a7 100644
--- a/lucene/dev/branches/branch_4x/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer.java
+++ b/lucene/dev/branches/branch_4x/solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestScriptTransformer.java
@@ -54,9 +54,9 @@ public void testBasic() {
       EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null, null);
       sep.init(context);
       sep.applyTransformer(map);
-      assertEquals(map.get("name"), "Hello Scott");
+      assertEquals("Hello Scott", map.get("name").toString());
     } catch (DataImportHandlerException e) {    
-      assumeFalse("This JVM does not have Rhino installed.  Test Skipped.", e
+      assumeFalse("This JVM does not have JavaScript installed.  Test Skipped.", e
           .getMessage().startsWith("Cannot load Script Engine for language"));
       throw e;
     }
@@ -87,9 +87,9 @@ public void testOneparam() {
       EntityProcessorWrapper sep = new EntityProcessorWrapper(new SqlEntityProcessor(), null, null);
       sep.init(context);
       sep.applyTransformer(map);
-      assertEquals(map.get("name"), "Hello Scott");
+      assertEquals("Hello Scott", map.get("name").toString());
     } catch (DataImportHandlerException e) {   
-      assumeFalse("This JVM does not have Rhino installed.  Test Skipped.", e
+      assumeFalse("This JVM does not have JavaScript installed.  Test Skipped.", e
           .getMessage().startsWith("Cannot load Script Engine for language"));
       throw e;
     }
@@ -105,7 +105,7 @@ public void testReadScriptTag() throws Exception {
       DIHConfiguration dc = di.readFromXml(document);
       assertTrue(dc.getScript().getText().indexOf("checkNextToken") > -1);
     } catch (DataImportHandlerException e) {    
-      assumeFalse("This JVM does not have Rhino installed.  Test Skipped.", e
+      assumeFalse("This JVM does not have JavaScript installed.  Test Skipped.", e
           .getMessage().startsWith("Cannot load Script Engine for language"));
       throw e;
     }
@@ -132,7 +132,7 @@ public void testCheckScript() throws Exception {
       sep.applyTransformer(map);
       assertNull(map.get("$hasMore"));
     } catch (DataImportHandlerException e) {    
-      assumeFalse("This JVM does not have Rhino installed.  Test Skipped.", e
+      assumeFalse("This JVM does not have JavaScript installed.  Test Skipped.", e
           .getMessage().startsWith("Cannot load Script Engine for language"));
       throw e;
     }
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/update/processor/ScriptEngineTest.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/update/processor/ScriptEngineTest.java
index d186bd5b..4fb644cb 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/update/processor/ScriptEngineTest.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/update/processor/ScriptEngineTest.java
@@ -69,7 +69,7 @@ public void testEvalText() throws ScriptException, NoSuchMethodException {
     ScriptEngine engine = manager.getEngineByName("JavaScript");
     assertNotNull(engine);
     engine.eval("function add(a,b) { return a + b }");
-    Double result = (Double) ((Invocable)engine).invokeFunction("add", 1, 2);
+    Number result = (Number) ((Invocable)engine).invokeFunction("add", 1, 2);
     assertNotNull(result);
     assertEquals(3, result.intValue());
   }
@@ -79,7 +79,7 @@ public void testEvalReader() throws ScriptException, NoSuchMethodException {
     assertNotNull(engine);
     StringReader reader = new StringReader("function add(a,b) { return a + b }");
     engine.eval(reader);
-    Double result = (Double) ((Invocable)engine).invokeFunction("add", 1, 2);
+    Number result = (Number) ((Invocable)engine).invokeFunction("add", 1, 2);
     assertNotNull(result);
     assertEquals(3, result.intValue());
   }
@@ -90,7 +90,7 @@ public void testPut() throws ScriptException, NoSuchMethodException {
     engine.put("b", 2);
     assertNotNull(engine);
     engine.eval("function add() { return a + b }");
-    Double result = (Double) ((Invocable)engine).invokeFunction("add", 1, 2);
+    Number result = (Number) ((Invocable)engine).invokeFunction("add", 1, 2);
     assertNotNull(result);
     assertEquals(3, result.intValue());
   }
@@ -103,7 +103,7 @@ public void testJRuby() throws ScriptException, NoSuchMethodException {
 
    assertNotNull(engine);
    engine.eval("def add(a,b); a + b; end");
-   Long result = (Long) ((Invocable)engine).invokeFunction("add", 1, 2);
+   Number result = (Number) ((Invocable)engine).invokeFunction("add", 1, 2);
    assertNotNull(result);
    assertEquals(3, result.intValue());
  }
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest.java
index d5e8196b..9a0414f4 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/update/processor/StatelessScriptUpdateProcessorFactoryTest.java
@@ -82,7 +82,6 @@ public void testSingleScript() throws Exception {
     factory.setScriptEngineCustomizer(new ScriptEngineCustomizer() {
       @Override
       public void customize(ScriptEngine engine) {
-        engine.put("testCase", StatelessScriptUpdateProcessorFactoryTest.this);
         engine.put("functionMessages", functionMessages);
       }
     });
@@ -128,7 +127,6 @@ public void testMultipleScripts() throws Exception {
       ScriptEngineCustomizer customizer = new ScriptEngineCustomizer() {
           @Override
           public void customize(ScriptEngine engine) {
-            engine.put("testCase", StatelessScriptUpdateProcessorFactoryTest.this);
             engine.put("functionMessages", functionMessages);
           }
         };
