diff --git a/cassandra/branches/cassandra-0.8/test/distributed/org/apache/cassandra/CountersTest.java b/cassandra/branches/cassandra-0.8/test/distributed/org/apache/cassandra/CountersTest.java
index e2e59f14..71e635d3 100644
--- a/cassandra/branches/cassandra-0.8/test/distributed/org/apache/cassandra/CountersTest.java
+++ b/cassandra/branches/cassandra-0.8/test/distributed/org/apache/cassandra/CountersTest.java
@@ -72,7 +72,7 @@ public void tryPerformAction(ConsistencyLevel cl) throws Exception
         {
             ByteBuffer bname = ByteBuffer.wrap(name.getBytes());
             ColumnPath cpath = new ColumnPath(cf).setColumn(bname);
-            CounterColumn col = client.get_counter(key, cpath, cl).column;
+            CounterColumn col = client.get(key, cpath, cl).counter_column;
             assertEquals(bname, col.name);
             assertEquals(value.longValue(), col.value);
         }
diff --git a/cassandra/branches/cassandra-0.8/test/distributed/org/apache/cassandra/MovementTest.java b/cassandra/branches/cassandra-0.8/test/distributed/org/apache/cassandra/MovementTest.java
index 0fa3c5e7..79b456d6 100644
--- a/cassandra/branches/cassandra-0.8/test/distributed/org/apache/cassandra/MovementTest.java
+++ b/cassandra/branches/cassandra-0.8/test/distributed/org/apache/cassandra/MovementTest.java
@@ -29,6 +29,7 @@
 
 import org.apache.cassandra.thrift.*;
 import org.apache.cassandra.tools.NodeProbe;
+import org.apache.cassandra.utils.ByteBufferUtil;
 import org.apache.cassandra.utils.WrappedRunnable;
 
 import org.apache.cassandra.CassandraServiceController.Failure;
diff --git a/cassandra/branches/cassandra-0.8/test/distributed/org/apache/cassandra/MutationTest.java b/cassandra/branches/cassandra-0.8/test/distributed/org/apache/cassandra/MutationTest.java
index 04aa7e1a..7f04d09a 100644
--- a/cassandra/branches/cassandra-0.8/test/distributed/org/apache/cassandra/MutationTest.java
+++ b/cassandra/branches/cassandra-0.8/test/distributed/org/apache/cassandra/MutationTest.java
@@ -18,6 +18,7 @@
 
 package org.apache.cassandra;
 
+import java.io.IOException;
 import java.net.InetAddress;
 import java.nio.ByteBuffer;
 import java.util.*;
@@ -25,7 +26,11 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
+import org.apache.cassandra.client.RingCache;
+import org.apache.cassandra.dht.RandomPartitioner;
+import org.apache.cassandra.service.StorageService;
 import org.apache.cassandra.thrift.*;
+import org.apache.cassandra.utils.ByteBufferUtil;
 import org.apache.cassandra.utils.WrappedRunnable;
 import org.apache.thrift.TException;
 
diff --git a/cassandra/branches/cassandra-0.8/test/distributed/org/apache/cassandra/TestBase.java b/cassandra/branches/cassandra-0.8/test/distributed/org/apache/cassandra/TestBase.java
index f31a5573..5d99927f 100644
--- a/cassandra/branches/cassandra-0.8/test/distributed/org/apache/cassandra/TestBase.java
+++ b/cassandra/branches/cassandra-0.8/test/distributed/org/apache/cassandra/TestBase.java
@@ -82,13 +82,14 @@ public void create() throws Exception
         {
             List<InetAddress> hosts = controller.getHosts();
             Cassandra.Client client = controller.createClient(hosts.get(0));
-
+            Map<String,String> stratOptions = new HashMap<String,String>();
+            stratOptions.put("replication_factor", "" + rf);
             client.system_add_keyspace(
                 new KsDef(
                     name,
                     "org.apache.cassandra.locator.SimpleStrategy",
-                    rf,
-                    Arrays.asList(cfdef)));
+                    Arrays.asList(cfdef))
+                .setStrategy_options(stratOptions));
 
             // poll, until KS added
             for (InetAddress host : hosts)
diff --git a/cassandra/branches/cassandra-0.8/tools/stress/src/org/apache/cassandra/stress/Session.java b/cassandra/branches/cassandra-0.8/tools/stress/src/org/apache/cassandra/stress/Session.java
index 28989b5e..942ffdec 100644
--- a/cassandra/branches/cassandra-0.8/tools/stress/src/org/apache/cassandra/stress/Session.java
+++ b/cassandra/branches/cassandra-0.8/tools/stress/src/org/apache/cassandra/stress/Session.java
@@ -91,7 +91,6 @@
 
     private int progressInterval  = 10;
     private int keysPerCall       = 1000;
-    private int replicationFactor = 1;
     private boolean replicateOnWrite = true;
     private boolean ignoreErrors  = false;
 
@@ -231,7 +230,7 @@ public Session(String[] arguments) throws IllegalArgumentException
                 keysPerCall = Integer.parseInt(cmd.getOptionValue("g"));
 
             if (cmd.hasOption("l"))
-                replicationFactor = Integer.parseInt(cmd.getOptionValue("l"));
+                replicationStrategyOptions.put("replication_factor", String.valueOf(Integer.parseInt(cmd.getOptionValue("l"))));
 
             if (cmd.hasOption("e"))
                 consistencyLevel = ConsistencyLevel.valueOf(cmd.getOptionValue("e").toUpperCase());
@@ -414,9 +413,6 @@ public void createKeySpaces()
 
         keyspace.setName("Keyspace1");
         keyspace.setStrategy_class(replicationStrategy);
-        Map<String,String> options = new HashMap<String, String>();
-        options.put("replication_factor", String.valueOf(replicationFactor));
-        keyspace.setStrategy_options(options);
 
         if (!replicationStrategyOptions.isEmpty())
         {
