diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/SnapPuller.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/SnapPuller.java
index fbc9dcdc..71a43de5 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/SnapPuller.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/SnapPuller.java
@@ -1139,7 +1139,7 @@ FastInputStream getStream() throws IOException {
         params.set(FILE, fileName);
       }
       if (useInternal) {
-        params.set(COMPRESSION, "internal"); 
+        params.set(COMPRESSION, "true"); 
       }
       //use checksum
       if (this.includeChecksum) {
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java
index c1734e67..04f0bf73 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/handler/TestReplicationHandler.java
@@ -43,7 +43,6 @@
 import org.apache.lucene.util.LuceneTestCase.Slow;
 import org.apache.solr.BaseDistributedSearchTestCase;
 import org.apache.solr.SolrTestCaseJ4;
-import org.apache.solr.TestDistributedSearch;
 import org.apache.solr.client.solrj.SolrServer;
 import org.apache.solr.client.solrj.SolrServerException;
 import org.apache.solr.client.solrj.embedded.JettySolrRunner;
@@ -59,7 +58,6 @@
 import org.apache.solr.util.AbstractSolrTestCase;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
-import org.junit.Ignore;
 
 /**
  * Test for ReplicationHandler
@@ -930,13 +928,13 @@ public boolean accept(File dir, String name) {
 
   /* character copy of file using UTF-8 */
   private static void copyFile(File src, File dst) throws IOException {
-    copyFile(src, dst, null);
+    copyFile(src, dst, null, false);
   }
 
   /**
    * character copy of file using UTF-8. If port is non-null, will be substituted any time "TEST_PORT" is found.
    */
-  private static void copyFile(File src, File dst, Integer port) throws IOException {
+  private static void copyFile(File src, File dst, Integer port, boolean internalCompression) throws IOException {
     BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(src), "UTF-8"));
     Writer out = new OutputStreamWriter(new FileOutputStream(dst), "UTF-8");
 
@@ -944,6 +942,9 @@ private static void copyFile(File src, File dst, Integer port) throws IOExceptio
 
       if (null != port)
         line = line.replace("TEST_PORT", port.toString());
+      
+      line = line.replace("COMPRESSION", internalCompression?"internal":"false");
+
       out.write(line);
     }
     in.close();
@@ -1022,10 +1023,9 @@ public void tearDown() throws Exception {
 
     public void copyConfigFile(String srcFile, String destFile) 
       throws IOException {
-
       copyFile(getFile(srcFile), 
                new File(confDir, destFile),
-               testPort);
+               testPort, random().nextBoolean());
     }
 
   }
