diff --git a/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/CallableLocatorProcedures.java b/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/CallableLocatorProcedures.java
index 00acdaea..7d5a6bfa 100644
--- a/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/CallableLocatorProcedures.java
+++ b/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/CallableLocatorProcedures.java
@@ -112,6 +112,7 @@ int blobCreateLocator() throws SqlException
             return INVALID_LOCATOR;
         }
         
+        try {
         if (blobCreateLocatorCall == null) {
             blobCreateLocatorCall = connection.prepareCallX
                 ("? = CALL SYSIBM.BLOBCREATELOCATOR()",
@@ -123,8 +124,6 @@ int blobCreateLocator() throws SqlException
             // Make sure this statement does not commit user transaction
             blobCreateLocatorCall.isAutoCommittableStatement_ = false;
         }
-        
-        try {
             blobCreateLocatorCall.executeX();
         }
         catch(SqlException sqle) {
@@ -590,6 +589,7 @@ int clobCreateLocator() throws SqlException
             return INVALID_LOCATOR;
         }
         
+        try {
         if (clobCreateLocatorCall == null) {
             clobCreateLocatorCall = connection.prepareCallX
                 ("? = CALL SYSIBM.CLOBCREATELOCATOR()",
@@ -601,8 +601,6 @@ int clobCreateLocator() throws SqlException
             // Make sure this statement does not commit user transaction
             clobCreateLocatorCall.isAutoCommittableStatement_ = false;
         }
-
-        try {
             clobCreateLocatorCall.executeX();
         }
         catch(SqlException sqle) {
