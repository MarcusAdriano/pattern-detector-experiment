diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageProxy.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageProxy.java
index dcce631a..fc29f0c0 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageProxy.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageProxy.java
@@ -609,18 +609,6 @@ private static int determineBlockFor(int expandedTargets, ConsistencyLevel consi
      */
     private static Iterable<Pair<AbstractBounds, List<InetAddress>>> getRangeIterator(final List<Pair<AbstractBounds, List<InetAddress>>> ranges, Token start)
     {
-        // sort ranges in ring order
-        Comparator<Pair<AbstractBounds, List<InetAddress>>> comparator = new Comparator<Pair<AbstractBounds, List<InetAddress>>>()
-        {
-            public int compare(Pair<AbstractBounds, List<InetAddress>> o1, Pair<AbstractBounds, List<InetAddress>> o2)
-            {
-                // no restricted ranges will overlap so we don't need to worry about inclusive vs exclusive left,
-                // just sort by raw token position.
-                return o1.left.left.compareTo(o2.left.left);
-            }
-        };
-        Collections.sort(ranges, comparator);
-
         // find the one to start with
         int i;
         for (i = 0; i < ranges.size(); i++)
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/thrift/CassandraServer.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/thrift/CassandraServer.java
index f002dd6e..1f5f7e35 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/thrift/CassandraServer.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/thrift/CassandraServer.java
@@ -625,11 +625,12 @@ public String describe_version() throws TException
     public List<TokenRange> describe_ring(String keyspace)
     {
         List<TokenRange> ranges = new ArrayList<TokenRange>();
+        Token.TokenFactory tf = StorageService.getPartitioner().getTokenFactory();
         for (Map.Entry<Range, List<String>> entry : StorageService.instance.getRangeToEndPointMap(keyspace).entrySet())
         {
             Range range = entry.getKey();
             List<String> endpoints = entry.getValue();
-            ranges.add(new TokenRange(range.left.toString(), range.right.toString(), endpoints));
+            ranges.add(new TokenRange(tf.toString(range.left), tf.toString(range.right), endpoints));
         }
         return ranges;
     }
@@ -641,7 +642,7 @@ public String describe_version() throws TException
         List<String> splits = new ArrayList<String>(tokens.size());
         for (Token token : tokens)
         {
-            splits.add(token.toString());
+            splits.add(tf.toString(token));
         }
         return splits;
     }
