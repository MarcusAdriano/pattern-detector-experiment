diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java
index 58727010..024b7f5d 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java
@@ -4314,7 +4314,7 @@ public StorageRandomAccessFile getLogFileToSimulateCorruption(long filenum) thro
 	  out, only used when TEST_LOG_INCOMPLETE_LOG_WRITE is on.  Default is 1
 	  byte.
 	*/
-	public static final String TEST_LOG_PARTIAL_LOG_WRITE_NUM_BYTES = SanityManager.DEBUG ? "db2j.unittest.partialLogWrite" : null;
+	public static final String TEST_LOG_PARTIAL_LOG_WRITE_NUM_BYTES = SanityManager.DEBUG ? "derbyTesting.unittest.partialLogWrite" : null;
 
 	/**
 	  Set to true if we want to simulate a log full condition
@@ -4336,7 +4336,7 @@ public StorageRandomAccessFile getLogFileToSimulateCorruption(long filenum) thro
 	  simulated to be full.
 	*/
 	public static final String TEST_RECORD_TO_FILL_LOG = 
-        SanityManager.DEBUG ? "db2j.unittest.recordToFillLog" : null;
+        SanityManager.DEBUG ? "derbyTesting.unittest.recordToFillLog" : null;
 
 	/**
 	 * Set to true if we want to simulate max possible log file number is 
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/harness/jvm.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/harness/jvm.java
index 53c7c5e0..7a56a041 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/harness/jvm.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/harness/jvm.java
@@ -372,18 +372,20 @@ static Vector getSecurityProps(Vector D) throws ClassNotFoundException, IOExcept
 		D.addElement("java.security.manager");
 		D.addElement("java.security.policy=" + pf.getAbsolutePath());
 		
-		String codebaseType = isJar[0] ? "csinfo.codejar" : "csinfo.codeclasses";
-		String unusedType = isJar[0] ? "csinfo.codeclasses" : "csinfo.codejar";
+		String codebaseType = isJar[0] ? "derbyTesting.codejar" : "derbyTesting.codeclasses";
+		String unusedType = isJar[0] ? "derbyTesting.codeclasses" : "derbyTesting.codejar";
 
 		// URL of the codebase
 		D.addElement(codebaseType + "=" + cb.toURL());
 		// file path to the codebase
-		D.addElement("csinfo.codedir=" + cb.getAbsolutePath());
+		D.addElement("derbyTesting.codedir=" + cb.getAbsolutePath());
 		String hostName = (System.getProperty("hostName"));
 		if (hostName == null)
 			hostName="localhost";
-		D.addElement("csinfo.serverhost=" + hostName);
-		D.addElement("csinfo.trustedhost=" + hostName);	 
+		D.addElement("derbyTesting.serverhost=" + hostName);
+		// in the case of testing with a remote host, this is irrelevant, 
+		// when testing 'normal' it is also localhost:
+		D.addElement("derbyTesting.clienthost=" + hostName);	 
 		
 		// add an invalid path to the unused type 
 		D.addElement(unusedType + "=file://unused/");
