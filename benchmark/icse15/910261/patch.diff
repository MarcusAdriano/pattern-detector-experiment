diff --git a/incubator/aries/trunk/application/application-api/src/main/java/org/apache/aries/application/management/ApplicationContextManager.java b/incubator/aries/trunk/application/application-api/src/main/java/org/apache/aries/application/management/ApplicationContextManager.java
index b8d4809f..b13f1a69 100644
--- a/incubator/aries/trunk/application/application-api/src/main/java/org/apache/aries/application/management/ApplicationContextManager.java
+++ b/incubator/aries/trunk/application/application-api/src/main/java/org/apache/aries/application/management/ApplicationContextManager.java
@@ -21,6 +21,8 @@
 
 import java.util.Set;
 
+import org.osgi.framework.BundleException;
+
 /**
  * An ApplicationContextManager is responsible for managing Aries applications in the 
  * server's OSGi runtime. We expect that many projects consuming this code will provide
@@ -33,8 +35,10 @@
    * started via an ApplicationContext. 
    * @param app The applicaton for which to obtain an ApplicationContext. 
    * @return ApplicationContext
+   * @throws BundleException 
+   * @throws ManagementException 
    */
-  public ApplicationContext getApplicationContext(AriesApplication app);
+  public ApplicationContext getApplicationContext(AriesApplication app) throws BundleException, ManagementException;
 
   /**
    * @return The set of all ApplicationContexts.
diff --git a/incubator/aries/trunk/application/application-api/src/main/java/org/apache/aries/application/management/AriesApplicationManager.java b/incubator/aries/trunk/application/application-api/src/main/java/org/apache/aries/application/management/AriesApplicationManager.java
index 4da875c7..6b6311e3 100644
--- a/incubator/aries/trunk/application/application-api/src/main/java/org/apache/aries/application/management/AriesApplicationManager.java
+++ b/incubator/aries/trunk/application/application-api/src/main/java/org/apache/aries/application/management/AriesApplicationManager.java
@@ -53,8 +53,9 @@
    * @param app Application to install 
    * @return ApplicationContext, a handle to an application in the runtime
    * @throws BundleException
+   * @throws ManagementException 
    */
-  public ApplicationContext install(AriesApplication app) throws BundleException;
+  public ApplicationContext install(AriesApplication app) throws BundleException, ManagementException;
   
   /**
    * Uninstall an AriesApplication - i.e. unload its bundles from the runtime. 
diff --git a/incubator/aries/trunk/application/application-api/src/main/java/org/apache/aries/application/management/AriesApplicationResolver.java b/incubator/aries/trunk/application/application-api/src/main/java/org/apache/aries/application/management/AriesApplicationResolver.java
index 97ac9e17..2b776674 100644
--- a/incubator/aries/trunk/application/application-api/src/main/java/org/apache/aries/application/management/AriesApplicationResolver.java
+++ b/incubator/aries/trunk/application/application-api/src/main/java/org/apache/aries/application/management/AriesApplicationResolver.java
@@ -21,6 +21,8 @@
 
 import java.util.Set;
 
+import org.osgi.framework.Version;
+
 public interface AriesApplicationResolver {
 
   /** Resolve an AriesApplication 
@@ -31,4 +33,14 @@
    * @throws ResolverException if the application cannot be resolved.  
    */
   Set<BundleInfo> resolve (AriesApplication app) throws ResolverException ;
+
+  /** 
+   * Return the info for the requested bundle. If no matching bundle exists in the
+   * resolver runtime then null is returned.
+   * 
+   * @param bundleSymbolicName the bundle symbolic name.
+   * @param bundleVersion      the version of the bundle
+   * @return the BundleInfo for the requested bundle, or null if none could be found.
+   */
+  BundleInfo getBundleInfo(String bundleSymbolicName, Version bundleVersion);
 }
diff --git a/incubator/aries/trunk/application/application-management/src/main/java/org/apache/aries/application/management/impl/AriesApplicationManagerImpl.java b/incubator/aries/trunk/application/application-management/src/main/java/org/apache/aries/application/management/impl/AriesApplicationManagerImpl.java
index 6a811adb..011631e0 100644
--- a/incubator/aries/trunk/application/application-management/src/main/java/org/apache/aries/application/management/impl/AriesApplicationManagerImpl.java
+++ b/incubator/aries/trunk/application/application-management/src/main/java/org/apache/aries/application/management/impl/AriesApplicationManagerImpl.java
@@ -226,7 +226,7 @@ public AriesApplication resolve(AriesApplication originalApp,
     return null;
   } 
 
-  public ApplicationContext install(AriesApplication app) {
+  public ApplicationContext install(AriesApplication app) throws BundleException, ManagementException {
     ApplicationContext result = _applicationContextManager.getApplicationContext(app);
     return result;
   }
diff --git a/incubator/aries/trunk/application/application-management/src/test/java/org/apache/aries/application/management/impl/AriesApplicationManagerImplTest.java b/incubator/aries/trunk/application/application-management/src/test/java/org/apache/aries/application/management/impl/AriesApplicationManagerImplTest.java
index dccfb66c..0d500f69 100644
--- a/incubator/aries/trunk/application/application-management/src/test/java/org/apache/aries/application/management/impl/AriesApplicationManagerImplTest.java
+++ b/incubator/aries/trunk/application/application-management/src/test/java/org/apache/aries/application/management/impl/AriesApplicationManagerImplTest.java
@@ -74,6 +74,10 @@
     void setNextResult (Set<BundleInfo> r) { 
       nextResult = r;
     }
+    public BundleInfo getBundleInfo(String bundleSymbolicName, Version bundleVersion)
+    {
+      return null;
+    }
   }
   
   static class DummyLocalPlatform implements LocalPlatform {
diff --git a/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/defaults/NoOpResolver.java b/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/defaults/NoOpResolver.java
index 5da8699f..5f566221 100644
--- a/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/defaults/NoOpResolver.java
+++ b/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/defaults/NoOpResolver.java
@@ -23,6 +23,7 @@
 import org.apache.aries.application.management.AriesApplication;
 import org.apache.aries.application.management.AriesApplicationResolver;
 import org.apache.aries.application.management.BundleInfo;
+import org.osgi.framework.Version;
 
 /** AriesApplicationManager requires that there be at least one 
  * AriesApplicationResolver service present. This class provides a null 
@@ -36,4 +37,8 @@
     return app.getBundleInfo();
   }
 
+  public BundleInfo getBundleInfo(String bundleSymbolicName, Version bundleVersion)
+  {
+    return null;
+  }
 }
diff --git a/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextImpl.java b/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextImpl.java
index cf44f61e..c97a80ad 100644
--- a/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextImpl.java
+++ b/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextImpl.java
@@ -19,17 +19,26 @@
 
 package org.apache.aries.application.runtime.impl;
 
+import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.HashSet;
+import java.util.List;
 import java.util.Map;
 import java.util.Set;
 
+import org.apache.aries.application.DeploymentContent;
+import org.apache.aries.application.DeploymentMetadata;
 import org.apache.aries.application.management.ApplicationContext;
 import org.apache.aries.application.management.AriesApplication;
+import org.apache.aries.application.management.AriesApplicationResolver;
 import org.apache.aries.application.management.BundleInfo;
+import org.apache.aries.application.management.ManagementException;
 import org.osgi.framework.Bundle;
 import org.osgi.framework.BundleContext;
 import org.osgi.framework.BundleException;
+import org.osgi.framework.ServiceException;
+import org.osgi.framework.ServiceReference;
+import org.osgi.framework.Version;
 
 public class ApplicationContextImpl implements ApplicationContext {
   
@@ -38,10 +47,63 @@
   private ApplicationState _state;
   private BundleContext _bundleContext;
   
-  public ApplicationContextImpl (BundleContext b, AriesApplication app) { 
+  public ApplicationContextImpl (BundleContext b, AriesApplication app) throws BundleException, ManagementException { 
     _bundleContext = b;
     _application = app;
     _bundles = new HashMap<BundleInfo, Bundle>();
+    
+    DeploymentMetadata meta = _application.getDeploymentMetadata();
+    
+    AriesApplicationResolver resolver = null;
+    
+    ServiceReference ref = b.getServiceReference(AriesApplicationResolver.class.getName());
+
+    if (ref != null) resolver = (AriesApplicationResolver) b.getService(ref);
+    
+    if (resolver == null) {
+      throw new ManagementException(new ServiceException(AriesApplicationResolver.class.getName(), ServiceException.UNREGISTERED));
+    }
+    
+    try {
+      for (DeploymentContent content : meta.getApplicationDeploymentContents()) {
+        String bundleSymbolicName = content.getContentName();
+        Version bundleVersion = content.getExactVersion();
+        
+        BundleInfo bundleInfo = null;
+        
+        for (BundleInfo info : _application.getBundleInfo()) {
+          if (info.getSymbolicName().equals(bundleSymbolicName) &&
+              info.getVersion().equals(bundleVersion)) {
+            bundleInfo = info;
+            break;
+          }
+        }
+        
+        if (bundleInfo == null) {
+          // call out to the bundle repository.
+          bundleInfo = resolver.getBundleInfo(bundleSymbolicName, bundleVersion);
+        }
+        
+        if (bundleInfo == null) {
+          throw new ManagementException("Cound not find bundles: " + bundleSymbolicName + "_" + bundleVersion);
+        }
+        
+        Bundle bundle = _bundleContext.installBundle(bundleInfo.getLocation());
+        
+        _bundles.put(bundleInfo, bundle);
+      }
+    } catch (BundleException be) {
+      for (Bundle bundle : _bundles.values()) {
+        bundle.uninstall();
+      }
+      
+      _bundles.clear();
+      
+      throw be;
+    } finally {
+      if (resolver != null) b.ungetService(ref);
+    }
+    
     _state = ApplicationState.INSTALLED;
   }
 
@@ -61,20 +123,32 @@ public ApplicationState getApplicationState() {
     return _state;
   }
 
-  public void start() throws BundleException {
-    Set<BundleInfo> bundleInfo = _application.getBundleInfo();
-    for (BundleInfo bi : bundleInfo) { 
-      // TODO: proper synchronisation!
-      if (_bundles.containsKey(bi)) { 
-        Bundle b = _bundles.get(bi);
+  public void start() throws BundleException 
+  {
+    _state = ApplicationState.STARTING;
+    
+    List<Bundle> bundlesWeStarted = new ArrayList<Bundle>();
+    
+    try {
+      for (Bundle b : _bundles.values()) { 
         if (b.getState() != Bundle.ACTIVE) { 
-          b.start();
+          b.start(Bundle.START_ACTIVATION_POLICY);
+          bundlesWeStarted.add(b);
+        }
+      }
+    } catch (BundleException be) {
+      for (Bundle b : bundlesWeStarted) {
+        try {
+          b.stop();
+        } catch (BundleException be2) {
+          // we are doing tidyup here, so we don't want to replace the bundle exception
+          // that occurred during start with one from stop. We also want to try to stop
+          // all the bundles we started even if some bundles wouldn't stop.
         }
-      } else { 
-        Bundle b = _bundleContext.installBundle(bi.getLocation()); 
-        b.start();
-        _bundles.put(bi, b);
       }
+      
+      _state = ApplicationState.INSTALLED;
+      throw be;
     }
     _state = ApplicationState.ACTIVE;
   }
diff --git a/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextManagerImpl.java b/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextManagerImpl.java
index c670852e..3794cf54 100644
--- a/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextManagerImpl.java
+++ b/incubator/aries/trunk/application/application-runtime/src/main/java/org/apache/aries/application/runtime/impl/ApplicationContextManagerImpl.java
@@ -28,7 +28,9 @@
 import org.apache.aries.application.management.ApplicationContext;
 import org.apache.aries.application.management.ApplicationContextManager;
 import org.apache.aries.application.management.AriesApplication;
+import org.apache.aries.application.management.ManagementException;
 import org.osgi.framework.BundleContext;
+import org.osgi.framework.BundleException;
 
 public class ApplicationContextManagerImpl implements ApplicationContextManager {
 
@@ -43,7 +45,7 @@ public void setBundleContext (BundleContext b) {
     _bundleContext = b;
   }
   
-  public ApplicationContext getApplicationContext(AriesApplication app) {
+  public ApplicationContext getApplicationContext(AriesApplication app) throws BundleException, ManagementException {
     ApplicationContext result;
     if (_appToContextMap.containsKey(app)) { 
       result = _appToContextMap.get(app);
