diff --git a/db/derby/code/trunk/java/build/org/apache/derbyBuild/MessageBuilder.java b/db/derby/code/trunk/java/build/org/apache/derbyBuild/MessageBuilder.java
index 7bbf3623..62c3ab80 100644
--- a/db/derby/code/trunk/java/build/org/apache/derbyBuild/MessageBuilder.java
+++ b/db/derby/code/trunk/java/build/org/apache/derbyBuild/MessageBuilder.java
@@ -84,7 +84,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
     private static  final   String  REF_GUIDE_BOILERPLATE =
         "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n" +
         "<!DOCTYPE reference PUBLIC \"-//OASIS//DTD DITA Reference//EN\"\n" +
-        " \"../../derby/docs/trunk/src/dtd/reference.dtd\">\n";
+        " \"../dtd/reference.dtd\">\n";
 
     private static  final   String  REF_GUIDE_NOTES =
         "<!-- \n" +
@@ -107,7 +107,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
         "<!-- \n" +
         "NOTE: this file is generated by the MessageBuilder task as part of a\n" +
         "Derby build. Please do not hand-edit this file. Instead, please edit\n" +
-        "the corresponding text in MessageBuilder.\n" +
+        "the corresponding text in messages.xml and/or MessageBuilder.\n" +
         "-->\n";
     
     /////////////////////////////////////////////////////////////////////////
@@ -206,7 +206,10 @@ public void    writeEmptyTag( String tag, String attributes )
             if ( _vacuous ) { return; }
 
             indent( );
-            _pw.println( "<" + tag + " " + attributes + " />");
+            if ( attributes.length() >0)
+                _pw.println( "<" + tag + " " + attributes + "/>");
+            else
+                _pw.println( "<" + tag + "/>");
         }
 
         /**
@@ -233,7 +236,10 @@ public void    beginTag( String tag, String attributes )
             if ( _vacuous ) { return; }
 
             indent();
-            _pw.println( "<" + tag + " " + attributes + " >");
+            if (attributes.length() > 0)
+                _pw.println( "<" + tag + " " + attributes + ">");
+            else
+                _pw.println( "<" + tag + ">");
 
             _tagStack.add( tag );
         }
@@ -279,7 +285,10 @@ public void    writeTextElement( String tag, String attributes, String text )
             if ( _vacuous ) { return; }
 
             indent();
-            _pw.print( "<" + tag + " " + attributes + " >");
+            if ( attributes.length() > 0 )
+                _pw.print( "<" + tag + " " + attributes + ">");
+            else
+                _pw.print( "<" + tag + ">");
             _pw.print( text );
             _pw.println( "</" + tag + ">");
         }
