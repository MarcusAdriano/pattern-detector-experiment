diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java
index d124c037..da52afa2 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java
@@ -48,6 +48,7 @@
 import org.apache.derby.iapi.services.io.LimitReader;
 import org.apache.derby.iapi.error.ExceptionSeverity;
 import org.apache.derby.iapi.reference.JDBC20Translation;
+import org.apache.derby.iapi.reference.JDBC30Translation;
 import org.apache.derby.iapi.reference.SQLState;
 import org.apache.derby.iapi.util.StringUtil;
 
@@ -1557,6 +1558,26 @@ public ResultSetMetaData getMetaData() throws SQLException {
 	  }
 	}
 
+    /**
+     * JDBC 4.0
+     * 
+     * <p>
+     * Retrieves the holdability for this <code>ResultSet</code>
+     * object.
+     * 
+     * @return either <code>ResultSet.HOLD_CURSORS_OVER_COMMIT</code>
+     *         or <code>ResultSet.CLOSE_CURSORS_AT_COMMIT</code>
+     * @exception SQLException
+     *                if a database error occurs
+     */
+    public final int getHoldability() throws SQLException {
+        checkIfClosed("getHoldability");
+        if (theResults.getActivation().getResultSetHoldability()) {
+            return JDBC30Translation.HOLD_CURSORS_OVER_COMMIT;
+        }
+        return JDBC30Translation.CLOSE_CURSORS_AT_COMMIT;
+    }
+
     /**
      * <p>Get the value of a column in the current row as a Java object.
      *
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet40.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet40.java
index 00044130..8bbc69a6 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet40.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedResultSet40.java
@@ -60,29 +60,6 @@ public void updateRowId(String columnName, RowId x) throws SQLException {
         throw Util.notImplemented();
     }
     
-    /**
-     * Retrieves the holdability for this <code>ResultSet</code>
-     * object.
-     *
-     * @return either <code>ResultSet.HOLD_CURSORS_OVER_COMMIT</code>
-     * or <code>ResultSet.CLOSE_CURSORS_AT_COMMIT</code>
-     * @exception SQLException if a database error occurs
-     */
-    public final int getHoldability() throws SQLException {
-        checkIfClosed("getHoldability");
-        Statement statement = getStatement();
-        if (statement == null) {
-            // If statement is null, the result set is an internal
-            // result set created by getNewRowSet() or getOldRowSet()
-            // in InternalTriggerExecutionContext. These result sets
-            // are not exposed to the JDBC applications. Returning
-            // CLOSE_CURSORS_AT_COMMIT since the result set will be
-            // closed when the trigger has finished.
-            return CLOSE_CURSORS_AT_COMMIT;
-        }
-        return statement.getResultSetHoldability();
-    }
-    
     public void updateNString(int columnIndex, String nString) throws SQLException {
         throw Util.notImplemented();
     }
