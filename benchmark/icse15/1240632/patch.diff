diff --git a/aries/trunk/jndi/jndi-core/src/main/java/org/apache/aries/jndi/ContextHelper.java b/aries/trunk/jndi/jndi-core/src/main/java/org/apache/aries/jndi/ContextHelper.java
index 5d598441..cd788c3b 100644
--- a/aries/trunk/jndi/jndi-core/src/main/java/org/apache/aries/jndi/ContextHelper.java
+++ b/aries/trunk/jndi/jndi-core/src/main/java/org/apache/aries/jndi/ContextHelper.java
@@ -33,7 +33,9 @@
 import org.apache.aries.jndi.tracker.ServiceTrackerCustomizers;
 import org.apache.aries.jndi.urls.URLObjectFactoryFinder;
 import org.apache.aries.util.service.registry.ServicePair;
+import org.osgi.framework.Bundle;
 import org.osgi.framework.BundleContext;
+import org.osgi.framework.FrameworkUtil;
 import org.osgi.framework.ServiceReference;
 
 /**
@@ -115,6 +117,18 @@ public static ContextProvider createURLContext(final BundleContext context,
         
     public static Context getInitialContext(BundleContext context, Hashtable<?, ?> environment)
         throws NamingException {
+      
+      Bundle jndiBundle = FrameworkUtil.getBundle(ContextHelper.class);
+      // if we are outside OSGi (like in our unittests) then we would get Null back here, so just make sure we don't.
+      if (jndiBundle != null) {
+        BundleContext jndiBundleContext = jndiBundle.getBundleContext();
+        if (!!!jndiBundleContext.getClass().equals(context.getClass())){
+          //the context passed in must have come from a child framework
+          //use the parent context instead
+          context = jndiBundleContext;
+        }
+      }
+      
         ContextProvider provider = getContextProvider(context, environment);
         
         if (provider != null) {
