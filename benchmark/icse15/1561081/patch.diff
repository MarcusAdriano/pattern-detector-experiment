diff --git a/lucene/dev/branches/branch_4x/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java b/lucene/dev/branches/branch_4x/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java
index d432a0e1..9cddf0bb 100644
--- a/lucene/dev/branches/branch_4x/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java
+++ b/lucene/dev/branches/branch_4x/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java
@@ -349,6 +349,7 @@ protected void waitForCollection(ZkStateReader reader, String collection, int sl
           getClass().getName() + "-jetty" + cnt + "-" + System.currentTimeMillis());
       jettyDir.mkdirs();
       setupJettySolrHome(jettyDir);
+      log.info("create jetty " + i); 
       JettySolrRunner j = createJetty(jettyDir, useJettyDataDir ? getDataDir(testDir + "/jetty"
           + cnt) : null, null, "solrconfig.xml", null);
       jettys.add(j);
@@ -502,8 +503,11 @@ private File getRelativeSolrHomePath(File solrHome) {
     return solrHome;
   }
   
-  protected void updateMappingsFromZk(List<JettySolrRunner> jettys,
-      List<SolrServer> clients) throws Exception {
+  protected void updateMappingsFromZk(List<JettySolrRunner> jettys, List<SolrServer> clients) throws Exception {
+    updateMappingsFromZk(jettys, clients, false);
+  }
+  
+  protected void updateMappingsFromZk(List<JettySolrRunner> jettys, List<SolrServer> clients, boolean allowOverSharding) throws Exception {
     ZkStateReader zkStateReader = cloudClient.getZkStateReader();
     zkStateReader.updateClusterState(true);
     cloudJettys.clear();
@@ -522,7 +526,7 @@ protected void updateMappingsFromZk(List<JettySolrRunner> jettys,
           int port = new URI(((HttpSolrServer) client).getBaseURL())
               .getPort();
           
-          if (replica.getNodeName().contains(":" + port + "_")) {
+          if (replica.getStr(ZkStateReader.BASE_URL_PROP).contains(":" + port)) {
             CloudSolrServerClient csc = new CloudSolrServerClient();
             csc.solrClient = client;
             csc.port = port;
@@ -579,9 +583,13 @@ protected void updateMappingsFromZk(List<JettySolrRunner> jettys,
     for (Slice slice : coll.getSlices()) {
       // check that things look right
       List<CloudJettyRunner> jetties = shardToJetty.get(slice.getName());
-      assertNotNull("Test setup problem: We found no jetties for shard: " + slice.getName()
-          + " just:" + shardToJetty.keySet(), jetties);
-      assertEquals("slice:" + slice.getName(), slice.getReplicas().size(), jetties.size());
+      if (!allowOverSharding) {
+        assertNotNull("Test setup problem: We found no jetties for shard: "
+            + slice.getName() + " just:" + shardToJetty.keySet(), jetties);
+        
+        assertEquals("slice:" + slice.getName(), slice.getReplicas().size(),
+            jetties.size());
+      }
     }
   }
   
@@ -1137,7 +1145,7 @@ protected void checkShardConsistency() throws Exception {
   protected void checkShardConsistency(boolean checkVsControl, boolean verbose)
       throws Exception {
 
-    updateMappingsFromZk(jettys, clients);
+    updateMappingsFromZk(jettys, clients, true);
     
     Set<String> theShards = shardToJetty.keySet();
     String failMessage = null;
@@ -1202,6 +1210,17 @@ protected void checkShardConsistency(boolean checkVsControl, boolean verbose)
       String msg = "document count mismatch.  control=" + controlDocs + " sum(shards)="+ cnt + " cloudClient="+cloudClientDocs;
       log.error(msg);
 
+      compareResults(controlDocs, cloudClientDocs);
+
+      fail(msg);
+    }
+  }
+
+  protected void compareResults(long controlDocs, long cloudClientDocs)
+      throws SolrServerException {
+    SolrParams q;
+    SolrDocumentList controlDocList;
+    SolrDocumentList cloudDocList;
       // re-execute the query getting ids
       q = params("q","*:*","rows","100000", "fl","id", "tests","checkShardConsistency(vsControl)/getIds");    // add a tag to aid in debugging via logs
       controlDocList = controlClient.query(q).getResults();
@@ -1237,9 +1256,6 @@ protected void checkShardConsistency(boolean checkVsControl, boolean verbose)
         
         log.error("controlClient :" + a + "\n\tcloudClient :" + b);
       }
-
-      fail(msg);
-    }
   }
   
   protected SolrServer getClient(String nodeName) {
