diff --git a/lucene/java/branches/lucene_3_0_back_compat_tests/src/java/org/apache/lucene/store/RAMDirectory.java b/lucene/java/branches/lucene_3_0_back_compat_tests/src/java/org/apache/lucene/store/RAMDirectory.java
index 8edc43b2..a1dcb67f 100644
--- a/lucene/java/branches/lucene_3_0_back_compat_tests/src/java/org/apache/lucene/store/RAMDirectory.java
+++ b/lucene/java/branches/lucene_3_0_back_compat_tests/src/java/org/apache/lucene/store/RAMDirectory.java
@@ -22,6 +22,7 @@
 import java.io.Serializable;
 import java.util.HashMap;
 import java.util.Set;
+import java.util.concurrent.atomic.AtomicLong;
 import org.apache.lucene.util.ThreadInterruptedException;
 
 /**
@@ -34,7 +35,7 @@
   private static final long serialVersionUID = 1l;
 
   HashMap<String,RAMFile> fileMap = new HashMap<String,RAMFile>();
-  long sizeInBytes = 0;
+  final AtomicLong sizeInBytes = new AtomicLong();
   
   // *****
   // Lock acquisition sequence:  RAMDirectory, then RAMFile
@@ -153,7 +154,7 @@ public final long fileLength(String name) throws IOException {
    * RAMOutputStream.BUFFER_SIZE. */
   public synchronized final long sizeInBytes() {
     ensureOpen();
-    return sizeInBytes;
+    return sizeInBytes.get();
   }
   
   /** Removes an existing file in the directory.
@@ -166,7 +167,7 @@ public synchronized void deleteFile(String name) throws IOException {
     if (file!=null) {
         fileMap.remove(name);
         file.directory = null;
-        sizeInBytes -= file.sizeInBytes;       // updates to RAMFile.sizeInBytes synchronized on directory
+        sizeInBytes.addAndGet(-file.sizeInBytes);
     } else
       throw new FileNotFoundException(name);
   }
@@ -179,7 +180,7 @@ public IndexOutput createOutput(String name) throws IOException {
     synchronized (this) {
       RAMFile existing = fileMap.get(name);
       if (existing!=null) {
-        sizeInBytes -= existing.sizeInBytes;
+        sizeInBytes.addAndGet(existing.sizeInBytes);
         existing.directory = null;
       }
       fileMap.put(name, file);
diff --git a/lucene/java/branches/lucene_3_0_back_compat_tests/src/java/org/apache/lucene/store/RAMFile.java b/lucene/java/branches/lucene_3_0_back_compat_tests/src/java/org/apache/lucene/store/RAMFile.java
index 5e8a5b47..26d4b4ec 100644
--- a/lucene/java/branches/lucene_3_0_back_compat_tests/src/java/org/apache/lucene/store/RAMFile.java
+++ b/lucene/java/branches/lucene_3_0_back_compat_tests/src/java/org/apache/lucene/store/RAMFile.java
@@ -62,7 +62,7 @@ synchronized void setLastModified(long lastModified) {
     if (directory!=null)
       synchronized (directory) {             // Ensure addition of buffer and adjustment to directory size are atomic wrt directory
         buffers.add(buffer);
-        directory.sizeInBytes += size;
+        directory.sizeInBytes.getAndAdd(size);
         sizeInBytes += size;
       }
     else
diff --git a/lucene/java/branches/lucene_3_0_back_compat_tests/src/test/org/apache/lucene/store/MockRAMDirectory.java b/lucene/java/branches/lucene_3_0_back_compat_tests/src/test/org/apache/lucene/store/MockRAMDirectory.java
index eb7eaaef..d03bbd64 100644
--- a/lucene/java/branches/lucene_3_0_back_compat_tests/src/test/org/apache/lucene/store/MockRAMDirectory.java
+++ b/lucene/java/branches/lucene_3_0_back_compat_tests/src/test/org/apache/lucene/store/MockRAMDirectory.java
@@ -213,7 +213,7 @@ public synchronized IndexOutput createOutput(String name) throws IOException {
       throw new IOException("file " + name + " already exists");
     else {
       if (existing!=null) {
-        sizeInBytes -= existing.sizeInBytes;
+        sizeInBytes.getAndAdd(-existing.sizeInBytes);
         existing.directory = null;
       }
 
