diff --git a/lucene/java/trunk/src/java/org/apache/lucene/analysis/LowerCaseTokenizer.java b/lucene/java/trunk/src/java/org/apache/lucene/analysis/LowerCaseTokenizer.java
index 8d74e4e8..b50a28c7 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/analysis/LowerCaseTokenizer.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/analysis/LowerCaseTokenizer.java
@@ -56,15 +56,16 @@
 
 import java.io.Reader;
 
-/** LowerCaseTokenizer performs the function of LetterTokenizer
-  and LowerCaseFilter together.  It divides text at non-letters and converts
-  them to lower case.  While it is functionally equivalent to the combination
-  of LetterTokenizer and LowerCaseFilter, there is a performance advantage
-  to doing the two tasks at once, hence this (redundent) implementation.
-
-  Note: this does a decent job for most European languages, but does a terrible
-  job for some Asian languages, where words are not separated by spaces. */
-
+/**
+ * LowerCaseTokenizer performs the function of LetterTokenizer
+ * and LowerCaseFilter together.  It divides text at non-letters and converts
+ * them to lower case.  While it is functionally equivalent to the combination
+ * of LetterTokenizer and LowerCaseFilter, there is a performance advantage
+ * to doing the two tasks at once, hence this (redundant) implementation.
+ * <P>
+ * Note: this does a decent job for most European languages, but does a terrible
+ * job for some Asian languages, where words are not separated by spaces.
+ */
 public final class LowerCaseTokenizer extends LetterTokenizer {
   /** Construct a new LowerCaseTokenizer. */
   public LowerCaseTokenizer(Reader in) {
