diff --git a/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/compile/TernaryOperatorNode.java b/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/compile/TernaryOperatorNode.java
index 5edbfcc5..468ab112 100644
--- a/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/compile/TernaryOperatorNode.java
+++ b/db/derby/code/branches/10.3/java/engine/org/apache/derby/impl/sql/compile/TernaryOperatorNode.java
@@ -905,14 +905,25 @@ private void bindDateTimeArg( ValueNode arg, int argNumber) throws StandardExcep
         }
     } // end of bindDateTimeArg
 
+    /**
+     * This method gets called for non-character string types and hence no need 
+     * to set any collation info. Collation applies only to character string
+     * types.
+     *  
+     * @param arg Check if arg is a ? param and if yes, then set it's type to
+     *    jdbcType if arg doesn't have a type associated with it.
+     *    
+     * @param jdbcType Associate this type with arg if arg is a ? param with no
+     *    type associated with it
+     *    
+     * @return true if arg is a ? param with no type associated with it
+     * @throws StandardException
+     */
     private boolean bindParameter( ValueNode arg, int jdbcType) throws StandardException
     {
         if( arg.requiresTypeFromContext() && arg.getTypeId() == null)
         {
             arg.setType( new DataTypeDescriptor(TypeId.getBuiltInTypeId( jdbcType), true));
-			//collation of ? operand should be same as the compilation schema
-			arg.setCollationUsingCompilationSchema(
-					StringDataValue.COLLATION_DERIVATION_IMPLICIT);
             return true;
         }
         return false;
