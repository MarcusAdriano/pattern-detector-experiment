diff --git a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/services/monitor/PersistentService.java b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/services/monitor/PersistentService.java
index a2e2a1d1..b8da31c7 100644
--- a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/services/monitor/PersistentService.java
+++ b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/services/monitor/PersistentService.java
@@ -159,8 +159,11 @@ public String createServiceRoot(String name, boolean deleteExisting)
 	/**
 		Convert a service name into its canonical form. Returns null if the name
 		cannot be converted into a canonical form.
+		
+		@exception No canonical name, name probably invalid
 	*/
-	public String getCanonicalServiceName(String name);
+	public String getCanonicalServiceName(String name)
+		throws StandardException;
 
 	/**
 		Return the user form of a service name. This name is only valid within
diff --git a/incubator/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/PersistentServiceImpl.java b/incubator/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/PersistentServiceImpl.java
index c35e8d4c..d65ea94a 100644
--- a/incubator/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/PersistentServiceImpl.java
+++ b/incubator/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/PersistentServiceImpl.java
@@ -736,6 +736,7 @@ public Object run()
 	} // end of removeServiceRoot
 
 	public String getCanonicalServiceName(String name)
+		throws StandardException
     {
 		String protocolLeadIn = getType() + ":";
         int colon = name.indexOf( ':');
@@ -769,14 +770,7 @@ public Object run()
         }
 		catch (PrivilegedActionException pae)
         {
-            if( SanityManager.DEBUG)
-            {
-                Exception ex = pae.getException();
-                SanityManager.THROWASSERT( ex.getClass().getName()
-                                           + " thrown while getting the canonical name: "
-                                           + ex.getMessage());
-            }
-            return null;
+			throw Monitor.exceptionStartingModule(pae.getException());
         }
 	} // end of getCanonicalServiceName
 
@@ -800,8 +794,13 @@ public boolean isSameService(String serviceName1, String serviceName2)
     {
 		if (SanityManager.DEBUG)
         {
+			try {
             SanityManager.ASSERT(serviceName1.equals(getCanonicalServiceName(serviceName1)), serviceName1);
 			SanityManager.ASSERT(serviceName2.equals(getCanonicalServiceName(serviceName2)), serviceName2);
+			} catch (StandardException se)
+			{
+				return false;
+			}
 		}
 		return serviceName1.equals(serviceName2);
 	} // end of isSameService
diff --git a/incubator/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/TopService.java b/incubator/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/TopService.java
index 796d2d01..1088a96e 100644
--- a/incubator/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/TopService.java
+++ b/incubator/derby/code/trunk/java/engine/org/apache/derby/impl/services/monitor/TopService.java
@@ -137,7 +137,13 @@ protected boolean isPotentialService(ProtocolKey otherKey) {
 		if (serviceType == null)
 			otherCanonicalName = otherKey.getIdentifier();
 		else {
+			try
+			{
 			otherCanonicalName = serviceType.getCanonicalServiceName(otherKey.getIdentifier());
+			} catch (StandardException se)
+			{
+				return false;
+			}
 
 			// if the service name cannot be converted into a canonical name then it is not a service.
 			if (otherCanonicalName == null)
