diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/InternationalConnectSimpleDSTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/InternationalConnectSimpleDSTest.java
index 6270f04a..9d02bac0 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/InternationalConnectSimpleDSTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/InternationalConnectSimpleDSTest.java
@@ -27,6 +27,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import javax.sql.DataSource;
 
 import junit.framework.Test;
+import junit.framework.TestSuite;
 
 import org.apache.derbyTesting.junit.BaseJDBCTestCase;
 import org.apache.derbyTesting.junit.JDBCDataSource;
@@ -101,6 +102,14 @@ public void tearDown() {
     }
    
     public static Test suite() {
+        /*
+         * IBM's jvms on iseries have a bug that causes this fixture to fail
+         * and leave behind a hard-to-remove file, see DERBY-4149.
+         * Skip on that O.S.
+         */
+        if (getSystemProperty("os.name").startsWith("OS/400")) {
+            return(new TestSuite ("emtpy InternationalConnectSimpleDSTest"));
+        }
         return TestConfiguration.defaultSuite(InternationalConnectSimpleDSTest.class);
     }
     
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/InternationalConnectTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/InternationalConnectTest.java
index f4903558..2fb316c6 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/InternationalConnectTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/InternationalConnectTest.java
@@ -83,6 +83,15 @@ public void testBoundaries() throws SQLException, UnsupportedEncodingException {
             if (isSunJVM() && getSystemProperty("java.version").startsWith("1.4.2")) return;
         }
         
+        /*
+         * IBM's jvms on iseries have a bug that causes this fixture to fail
+         * and leave behind a hard-to-remove file, see DERBY-4149.
+         * Skip on that O.S.
+         */
+        if (getSystemProperty("os.name").startsWith("OS/400")) {
+            return;
+        }
+        
         // Maximum length in bytes is 255. We subtract 14 to account for
         // ;create=true and ;shutdown=true
         int maxNameLength = 255 - 14;
@@ -139,6 +148,15 @@ public void testBoundaries() throws SQLException, UnsupportedEncodingException {
      * @throws SQLException
      */
     public void testDriverManagerConnect() throws SQLException {
+        /*
+         * IBM's jvms on iseries have a bug that causes this fixture to fail
+         * and leave behind a hard-to-remove file, see DERBY-4149.
+         * Skip on that O.S.
+         */
+        if (getSystemProperty("os.name").startsWith("OS/400")) {
+            return;
+        }
+        
         //get a connection to load the driver
         getConnection();
         Connection conn = null;
@@ -180,6 +198,15 @@ public void testDriverManagerConnect() throws SQLException {
      * @throws SQLException
      */
     public void testXADSConnect() throws SQLException {
+        /*
+         * IBM's jvms on iseries have a bug that causes this fixture to fail
+         * and leave behind a hard-to-remove file, see DERBY-4149.
+         * Skip on that O.S.
+         */
+        if (getSystemProperty("os.name").startsWith("OS/400")) {
+            return;
+        }
+        
         // Test chinese database name.
         XADataSource ds = J2EEDataSource.getXADataSource();
         J2EEDataSource.setBeanProperty(ds, "databaseName", "\u4e10");
@@ -211,6 +238,15 @@ public void testXADSConnect() throws SQLException {
      * @throws SQLException
      */
     public void testCPDSConnect() throws SQLException {
+        /*
+         * IBM's jvms on iseries have a bug that causes this fixture to fail
+         * and leave behind a hard-to-remove file, see DERBY-4149.
+         * Skip on that O.S.
+         */
+        if (getSystemProperty("os.name").startsWith("OS/400")) {
+            return;
+        }
+        
         // Test chinese database name.
         ConnectionPoolDataSource ds = J2EEDataSource.getConnectionPoolDataSource();
         J2EEDataSource.setBeanProperty(ds, "databaseName", "\u4e10");
@@ -244,6 +280,7 @@ public void testCPDSConnect() throws SQLException {
      * least one non-ascii character.
      */
     public void testFailureOnNonExistentDatabase() throws SQLException {
+        
         String url = TestConfiguration.getCurrent().getJDBCUrl(
                 "abcdefghijklmnopq\u00E5");
         try {
