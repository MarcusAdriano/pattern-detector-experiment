diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/cache/Clock.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/cache/Clock.java
index 9c8dfaf2..3ed4af3c 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/cache/Clock.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/cache/Clock.java
@@ -862,8 +862,26 @@ protected CachedItem findFreeItem() throws StandardException {
 
 			synchronized (this) {
 
+				// 1) find out how many invalid items there are in the
+				//    cache
+				// 2) search for a free invalid item
+				// 3) stop searching when there are no more invalid
+				//    items to find
+
 				int invalidItems = holders.size() - validItemCount;
 
+				// Invalid items might occur in the cache when
+				//   a) a new item is created in growCache(), but it
+				//      is not in use yet, or
+				//   b) an item is deleted (usually when a table is
+				//      dropped)
+
+				// It is critical to break out of the loop as soon as
+				// possible since we are blocking others trying to
+				// access the page cache. New items are added to the
+				// end of the page cache, so the search for invalid
+				// items should start from the end.
+
 				for (int i = holders.size() - 1; (invalidItems > 0) && (i >= 0) ; i--) {
 					CachedItem item = (CachedItem) holders.get(i);
 
