diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesThetaNormalizerMapper.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesThetaNormalizerMapper.java
index 54878995..8c322fc1 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesThetaNormalizerMapper.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesThetaNormalizerMapper.java
@@ -86,8 +86,8 @@ public void configure(JobConf job) {
       String labelWeightSumString = mapStringifier.toString(labelWeightSumTemp);
       labelWeightSumString = job.get("cnaivebayes.sigma_k", labelWeightSumString);
       labelWeightSumTemp = mapStringifier.fromString(labelWeightSumString);
-      for (String key : labelWeightSumTemp.keySet()) {
-        this.labelWeightSum.put(key, labelWeightSumTemp.get(key));
+      for (Map.Entry<String, Double> stringDoubleEntry : labelWeightSumTemp.entrySet()) {
+        this.labelWeightSum.put(stringDoubleEntry.getKey(), stringDoubleEntry.getValue());
       }
       DefaultStringifier<Double> stringifier = new DefaultStringifier<Double>(job, GenericsUtil
           .getClass(sigmaJSigmaK));
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/cbayes/CBayesThetaNormalizerMapper.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/cbayes/CBayesThetaNormalizerMapper.java
index f97abaaa..1eb287a0 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/cbayes/CBayesThetaNormalizerMapper.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/cbayes/CBayesThetaNormalizerMapper.java
@@ -115,8 +115,8 @@ public void configure(JobConf job) {
       String labelWeightSumString = mapStringifier.toString(labelWeightSumTemp);
       labelWeightSumString = job.get("cnaivebayes.sigma_k", labelWeightSumString);
       labelWeightSumTemp = mapStringifier.fromString(labelWeightSumString);
-      for (String key : labelWeightSumTemp.keySet()) {
-        this.labelWeightSum.put(key, labelWeightSumTemp.get(key));
+      for (Map.Entry<String, Double> stringDoubleEntry : labelWeightSumTemp.entrySet()) {
+        this.labelWeightSum.put(stringDoubleEntry.getKey(), stringDoubleEntry.getValue());
       }
       
       DefaultStringifier<Double> stringifier = new DefaultStringifier<Double>(job, GenericsUtil
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/common/BayesTfIdfMapper.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/common/BayesTfIdfMapper.java
index aa4b1601..28ad8575 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/common/BayesTfIdfMapper.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/common/BayesTfIdfMapper.java
@@ -99,8 +99,8 @@ public void configure(JobConf job) {
       labelDocumentCountString = job.get("cnaivebayes.labelDocumentCounts", labelDocumentCountString);
       
       labelDocCountTemp = mapStringifier.fromString(labelDocumentCountString);
-      for (String key : labelDocCountTemp.keySet()) {
-        this.labelDocumentCounts.put(key, labelDocCountTemp.get(key));
+      for (Map.Entry<String, Double> stringDoubleEntry : labelDocCountTemp.entrySet()) {
+        this.labelDocumentCounts.put(stringDoubleEntry.getKey(), stringDoubleEntry.getValue());
       }
       
     } catch (IOException ex) {
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyClusterer.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyClusterer.java
index 313159a1..1e722137 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyClusterer.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyClusterer.java
@@ -15,7 +15,7 @@
   
   private double convergenceDelta = 0;
   // the next canopyId to be allocated
-  private int nextCanopyId = 0;
+  //private int nextCanopyId = 0;
   // the T1 distance threshold
   private double t1;
   // the T2 distance threshold
@@ -57,7 +57,7 @@ public void configure(JobConf job) {
     } catch (InstantiationException e) {
       throw new IllegalStateException(e);
     }
-    nextCanopyId = 0;
+    //nextCanopyId = 0; // never read?
     t1 = Double.parseDouble(job.get(MeanShiftCanopyConfigKeys.T1_KEY));
     t2 = Double.parseDouble(job.get(MeanShiftCanopyConfigKeys.T2_KEY));
     convergenceDelta = Double.parseDouble(job.get(MeanShiftCanopyConfigKeys.CLUSTER_CONVERGENCE_KEY));
@@ -70,7 +70,7 @@ public void configure(JobConf job) {
    *          the convergence criteria
    */
   public void config(DistanceMeasure aMeasure, double aT1, double aT2, double aDelta) {
-    nextCanopyId = 100; // so canopyIds will sort properly
+    //nextCanopyId = 100; // so canopyIds will sort properly  // never read?
     measure = aMeasure;
     t1 = aT1;
     t2 = aT2;
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/df/mapred/partial/PartialBuilder.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/df/mapred/partial/PartialBuilder.java
index 7771e155..eb362062 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/df/mapred/partial/PartialBuilder.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/df/mapred/partial/PartialBuilder.java
@@ -187,7 +187,7 @@ protected static void processOutput(JobConf job,
     }
     
     // make sure we got all the keys/values
-    if (index != keys.length) {
+    if (keys != null && index != keys.length) {
       throw new IllegalStateException();
     }
   }
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/df/mapred/partial/Step2Job.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/df/mapred/partial/Step2Job.java
index 3e5d9d09..a85d7b95 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/df/mapred/partial/Step2Job.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/df/mapred/partial/Step2Job.java
@@ -143,9 +143,10 @@ protected void parseOutput(JobConf job, PredictionCallback callback) throws IOEx
     int numTrees = Builder.getNbTrees(job);
     
     // compute the total number of output values
-    int total = 0;
+    //int total = 0;
     for (int partition = 0; partition < numMaps; partition++) {
-      total += Step2Mapper.nbConcerned(numMaps, numTrees, partition);
+      //total += Step2Mapper.nbConcerned(numMaps, numTrees, partition);
+      Step2Mapper.nbConcerned(numMaps, numTrees, partition);
     }
     
     int[] firstIds = Step0Output.extractFirstIds(partitions);
