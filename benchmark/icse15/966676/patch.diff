diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/config/DatabaseDescriptor.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
index 4ae33284..457036d1 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
@@ -29,7 +29,6 @@
 import org.apache.cassandra.locator.IEndPointSnitch;
 import org.apache.cassandra.locator.AbstractReplicationStrategy;
 import org.apache.cassandra.io.util.FileUtils;
-import org.apache.cassandra.locator.LocalStrategy;
 import org.apache.cassandra.utils.FBUtilities;
 import org.apache.cassandra.utils.XMLUtils;
 import org.apache.log4j.Logger;
@@ -501,7 +500,7 @@ else if (hintedHandOffStr.equalsIgnoreCase("false"))
                 throw new ConfigurationException("No keyspaces configured");
 
             // Hardcoded system tables
-            KSMetaData systemMeta = new KSMetaData(Table.SYSTEM_TABLE, LocalStrategy.class, 1, null);
+            KSMetaData systemMeta = new KSMetaData(Table.SYSTEM_TABLE, null, -1, null);
             tables.put(Table.SYSTEM_TABLE, systemMeta);
             systemMeta.cfMetaData.put(SystemTable.STATUS_CF, new CFMetaData(Table.SYSTEM_TABLE,
                                                                             SystemTable.STATUS_CF,
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/locator/LocalStrategy.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/locator/LocalStrategy.java
index 6e45fcd2..e69de29b 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/locator/LocalStrategy.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/locator/LocalStrategy.java
@@ -1,44 +0,0 @@
-/*
-* Licensed to the Apache Software Foundation (ASF) under one
-* or more contributor license agreements.  See the NOTICE file
-* distributed with this work for additional information
-* regarding copyright ownership.  The ASF licenses this file
-* to you under the Apache License, Version 2.0 (the
-* "License"); you may not use this file except in compliance
-* with the License.  You may obtain a copy of the License at
-*
-*    http://www.apache.org/licenses/LICENSE-2.0
-*
-* Unless required by applicable law or agreed to in writing,
-* software distributed under the License is distributed on an
-* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-* KIND, either express or implied.  See the License for the
-* specific language governing permissions and limitations
-* under the License.
-*/
-
-package org.apache.cassandra.locator;
-
-import java.net.InetAddress;
-import java.util.ArrayList;
-import java.util.HashSet;
-import java.util.Set;
-
-import org.apache.cassandra.utils.FBUtilities;
-import org.apache.cassandra.dht.Token;
-
-public class LocalStrategy extends AbstractReplicationStrategy
-{
-    public LocalStrategy(TokenMetadata tokenMetadata, IEndPointSnitch snitch)
-    {
-        super(tokenMetadata, snitch);
-    }
-
-    public ArrayList<InetAddress> getNaturalEndpoints(Token token, TokenMetadata metadata, String table)
-    {
-        ArrayList<InetAddress> endpoints = new ArrayList<InetAddress>(1);
-        InetAddress local = FBUtilities.getLocalAddress();
-        endpoints.add(local);
-        return endpoints;
-    }
-}
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageService.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageService.java
index b0f3db6f..a832ede2 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageService.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/service/StorageService.java
@@ -228,7 +228,7 @@ public StorageService()
         MessagingService.instance.registerVerbHandlers(Verb.GOSSIP_DIGEST_ACK2, new GossipDigestAck2VerbHandler());
 
         replicationStrategies = new HashMap<String, AbstractReplicationStrategy>();
-        for (String table : DatabaseDescriptor.getTables())
+        for (String table : DatabaseDescriptor.getNonSystemTables())
         {
             AbstractReplicationStrategy strat = getReplicationStrategy(tokenMetadata_, table);
             replicationStrategies.put(table, strat);
