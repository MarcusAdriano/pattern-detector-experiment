diff --git a/lucene/java/trunk/contrib/WordNet/src/java/org/apache/lucene/wordnet/SynExpand.java b/lucene/java/trunk/contrib/WordNet/src/java/org/apache/lucene/wordnet/SynExpand.java
index 319daec8..fa059296 100644
--- a/lucene/java/trunk/contrib/WordNet/src/java/org/apache/lucene/wordnet/SynExpand.java
+++ b/lucene/java/trunk/contrib/WordNet/src/java/org/apache/lucene/wordnet/SynExpand.java
@@ -12,7 +12,7 @@
 
 /**
  * Expand a query by looking up synonyms for every term.
- * You need to invoke {@see Syns2Index} first to build the synonym index.
+ * You need to invoke {@link Syns2Index} first to build the synonym index.
  *
  * @see Syns2Index
  */
@@ -58,9 +58,9 @@ public static void main(String[] args) throws IOException
 	 *
 	 * @param query users query that is assumed to not have any "special" query syntax, thus it should be just normal words, so "big dog" makes sense, but a query like "title:foo^1.2" doesn't as this should presumably be passed directly to the default query parser.
 	 *
-	 * @param syns a opened to the Lucene index you previously created with {@see Syns2Index}. The searcher is not closed or otherwise altered.
+	 * @param syns a opened to the Lucene index you previously created with {@link Syns2Index}. The searcher is not closed or otherwise altered.
 	 *
-	 * @param a optional analyzer used to parse the users query else {@see StandardAnalzyer} is used
+	 * @param a optional analyzer used to parse the users query else {@link StandardAnalyzer} is used
 	 *
 	 * @param field optional field name to search in or null if you want the default of "contents"
 	 *
diff --git a/lucene/java/trunk/contrib/WordNet/src/java/org/apache/lucene/wordnet/Syns2Index.java b/lucene/java/trunk/contrib/WordNet/src/java/org/apache/lucene/wordnet/Syns2Index.java
index 57c8c64f..56e3dfd6 100644
--- a/lucene/java/trunk/contrib/WordNet/src/java/org/apache/lucene/wordnet/Syns2Index.java
+++ b/lucene/java/trunk/contrib/WordNet/src/java/org/apache/lucene/wordnet/Syns2Index.java
@@ -24,18 +24,18 @@
 
 /**
  * Convert the prolog file wn_s.pl from the <a href="http://www.cogsci.princeton.edu/2.0/WNprolog-2.0.tar.gz">WordNet prolog download</a>
- * into a Lucene index suitable for looking up synonyms and performing query expansion ({@see SynExpand#expand SynExpand.expand(...)}).
+ * into a Lucene index suitable for looking up synonyms and performing query expansion ({@link SynExpand#expand SynExpand.expand(...)}).
  *
  * This has been tested with WordNet 2.0.
  *
- * The index has fields named "word" ({@see #F_WORD})
- * and "syn" ({@see #F_SYN}).
+ * The index has fields named "word" ({@link #F_WORD})
+ * and "syn" ({@link #F_SYN}).
  * <p>
  * The source word (such as 'big') can be looked up in the
  * "word" field, and if present there will be fields named "syn"
  * for every synonym. What's tricky here is that there could be <b>multiple</b>
  * fields with the same name, in the general case for words that have multiple synonyms.
- * That's not a problem with Lucene, you just use {@see org.apache.lucene.document.Document#getValues}
+ * That's not a problem with Lucene, you just use {@link org.apache.lucene.document.Document#getValues}
  * </p>
  * <p>
  * While the WordNet file distinguishes groups of synonyms with
diff --git a/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java b/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java
index 82c89318..dfaf9030 100644
--- a/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java
+++ b/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/cjk/CJKAnalyzer.java
@@ -74,7 +74,7 @@
 
   /**
    * An array containing some common English words that are not usually
-   * useful for searching. and some double-byte interpunctions.....
+   * useful for searching and some double-byte interpunctions.
    */
   public final static String[] STOP_WORDS = {
     "a", "and", "are", "as", "at", "be",
diff --git a/lucene/java/trunk/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java b/lucene/java/trunk/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java
index 31f64725..f451c64e 100644
--- a/lucene/java/trunk/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java
+++ b/lucene/java/trunk/contrib/spellchecker/src/java/org/apache/lucene/search/spell/SpellChecker.java
@@ -39,7 +39,7 @@
 /**
  *  <p>
  *	Spell Checker class  (Main class) <br/>
- * (initially inspired by the David Spencer code)
+ * (initially inspired by the David Spencer code).
  *  </p>
  *  
  *  <p>
