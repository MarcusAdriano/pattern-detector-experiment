diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/largedata/_Suite.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/largedata/_Suite.java
index b35a8933..ef1ba7c9 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/largedata/_Suite.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/largedata/_Suite.java
@@ -32,20 +32,24 @@ public _Suite(String name) {
     }
 
     /**
-     * Suite runs first the lite suite for both embedded and client with LobLimitsLiteTest
+     * Suite runs first the lite suite for both embedded and client with 
+     * LobLimitsLiteTest.
      * Then runs the full embeddded suite with LobLimitsTest 
      * Then runs the full client suite with LobLimitsClientTest.
      * The full suite may take a very long time.
      */
     public static Test suite() {
         TestSuite suite = new TestSuite("largedata suite");
-        suite.addTest(LobLimitsLiteTest.suite());
+
+        // DERBY-5624, currently this runs out of file descriptors on unix
+        // systems with 1024 limit per user.  Setting to run only on windows
+        // until solution for unix is found.
+        if (isWindowsPlatform())
         suite.addTest(Derby5624Test.suite());
+
+        suite.addTest(LobLimitsLiteTest.suite());
         suite.addTest(LobLimitsTest.suite());
         suite.addTest(LobLimitsClientTest.suite());
         return suite;
-        
     }
-    
-    
 }
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java
index 745ec509..7fc77603 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java
@@ -649,6 +649,39 @@ public static final boolean isPlatform(String osName)  {
         return getSystemProperty("os.name").equals(osName);
     }
     
+    /**
+     * Determine if platform is a Windows variant.
+     * <p>
+     * Return true if platform is a windows platform.  Just looks for
+     * os.name starting with "Windows".  The os.name property
+     * can have at least the following values (there are probably more):
+     *
+     * AIX
+     * Digital Unix
+     * FreeBSD
+     * HP UX
+     * Irix
+     * Linux
+     * Mac OS
+     * Mac OS X
+     * MPE/iX
+     * Netware 4.11
+     * OS/2
+     * Solaris
+     * Windows 2000
+     * Windows 95
+     * Windows 98
+     * Windows NT
+     * Windows Vista
+     * Windows XP
+     * <p>
+     *
+     * @return true if running on a Windows platform.
+     **/
+    public static final boolean isWindowsPlatform() {
+        return getSystemProperty("os.name").startsWith("Windows");
+    }
+    
     /**
      * Check if this is java 5
      * @return true if java.version system property starts with 1.5
