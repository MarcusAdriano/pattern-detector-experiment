diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/DocFieldProcessor.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/DocFieldProcessor.java
index 90e2802a..e014ba07 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/DocFieldProcessor.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/DocFieldProcessor.java
@@ -87,7 +87,7 @@ public void flush(SegmentWriteState state) throws IOException {
       consumers.finish(state.numDocs);
     };
     // close perDocConsumer during flush to ensure all files are flushed due to PerCodec CFS
-    IOUtils.closeSafely(true, perDocConsumers.values());
+    IOUtils.closeSafely(false, perDocConsumers.values());
   }
 
   @Override
diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/IndexWriter.java
index 77e3449c..38658c8a 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/IndexWriter.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/IndexWriter.java
@@ -2606,7 +2606,7 @@ private void copySegmentIntoCFS(SegmentInfo info, String segName, IOContext cont
         }
       }
     } finally {
-      IOUtils.closeSafely(true, cfsdir);
+      IOUtils.closeSafely(false, cfsdir);
     }
     
     info.dir = directory;
diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.java
index 1e93d773..910a401f 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/values/FixedStraightBytesImpl.java
@@ -123,7 +123,7 @@ protected void merge(MergeState state) throws IOException {
         try {
           datOut.copyBytes(cloneData, size * maxDocs);
         } finally {
-          IOUtils.closeSafely(true, cloneData);  
+            IOUtils.closeSafely(false, cloneData);  
         }
         
         lastDocID += maxDocs;
@@ -138,8 +138,6 @@ protected void merge(MergeState state) throws IOException {
       }
     }
     
-    
-
     @Override
     protected void mergeDoc(int docID) throws IOException {
       assert lastDocID < docID;
diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/values/VarStraightBytesImpl.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/values/VarStraightBytesImpl.java
index 5cb90ff4..61125aa2 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/values/VarStraightBytesImpl.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/index/values/VarStraightBytesImpl.java
@@ -128,13 +128,13 @@ protected void merge(MergeState state) throws IOException {
             address += numDataBytes; // this is the address after all addr pointers are updated
             iter.close();
           } finally {
-            IOUtils.closeSafely(true, cloneIdx);
+            IOUtils.closeSafely(false, cloneIdx);
           }
           final IndexInput cloneData = reader.cloneData();
           try {
             datOut.copyBytes(cloneData, numDataBytes);
           } finally {
-            IOUtils.closeSafely(true, cloneData);  
+            IOUtils.closeSafely(false, cloneData);  
           }
         } else {
           super.merge(state);
diff --git a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/store/CompoundFileDirectory.java b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/store/CompoundFileDirectory.java
index d2095231..678eae3b 100644
--- a/lucene/dev/trunk/lucene/src/java/org/apache/lucene/store/CompoundFileDirectory.java
+++ b/lucene/dev/trunk/lucene/src/java/org/apache/lucene/store/CompoundFileDirectory.java
@@ -95,10 +95,10 @@ public CompoundFileDirectory(Directory directory, String fileName, IOContext con
       if (firstInt == CompoundFileWriter.FORMAT_CURRENT) {
         IndexInput input = null;
         try {
-          input = dir.openInput(IndexFileNames.segmentFileName(
+          final String entriesFileName = IndexFileNames.segmentFileName(
               IndexFileNames.stripExtension(name), "",
-              IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION),
-              IOContext.READONCE);
+                                                IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);
+          input = dir.openInput(entriesFileName, IOContext.READONCE);
           final int readInt = input.readInt(); // unused right now
           assert readInt == CompoundFileWriter.ENTRY_FORMAT_CURRENT;
           final int numEntries = input.readVInt();
@@ -112,7 +112,7 @@ public CompoundFileDirectory(Directory directory, String fileName, IOContext con
           }
           return mapping;
         } finally {
-          IOUtils.closeSafely(true, input);
+          IOUtils.closeSafely(false, input);
         }
       } else {
         // TODO remove once 3.x is not supported anymore
diff --git a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/index/TestIndexWriterOnDiskFull.java b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/index/TestIndexWriterOnDiskFull.java
index 4334197f..5a16a27c 100644
--- a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/index/TestIndexWriterOnDiskFull.java
+++ b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/index/TestIndexWriterOnDiskFull.java
@@ -133,6 +133,12 @@ public void testAddDocumentOnDiskFull() throws IOException {
     }
   }
   
+  // TODO: make @Nightly variant that provokes more disk
+  // fulls
+
+  // TODO: have test fail if on any given top
+  // iter there was not a single IOE hit
+
   /*
   Test: make sure when we run out of disk space or hit
   random IOExceptions in any of the addIndexes(*) calls
diff --git a/lucene/dev/trunk/lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper.java b/lucene/dev/trunk/lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper.java
index 3310d8f1..d02f0f9a 100644
--- a/lucene/dev/trunk/lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper.java
+++ b/lucene/dev/trunk/lucene/src/test-framework/org/apache/lucene/store/MockDirectoryWrapper.java
@@ -153,7 +153,10 @@ public synchronized void sync(Collection<String> names) throws IOException {
   
   @Override
   public String toString() {
-    maybeYield();
+    // NOTE: do not maybeYield here, since it consumes
+    // randomness and can thus (unexpectedly during
+    // debugging) change the behavior of a seed
+    // maybeYield();
     return "MockDirWrapper(" + delegate + ")";
   }
 
