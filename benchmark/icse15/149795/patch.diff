diff --git a/lucene/java/trunk/src/java/org/apache/lucene/search/Query.java b/lucene/java/trunk/src/java/org/apache/lucene/search/Query.java
index 85c30912..5be1b6cf 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/search/Query.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/search/Query.java
@@ -63,16 +63,21 @@
   <p>Instantiable subclasses are:
   <ul>
   <li> {@link TermQuery}
+    <li> {@link MultiTermQuery}
   <li> {@link PhraseQuery}
   <li> {@link BooleanQuery}
+    <li> {@link WildcardQuery}
+    <li> {@link PrefixQuery}
+    <li> {@link FuzzyQuery}
+    <li> {@link RangeQuery}
   </ul>
   <p>A parser for queries is contained in:
   <ul>
-  <li>{@link org.apache.lucene.queryParser.QueryParser}
+    <li>{@link org.apache.lucene.queryParser.QueryParser QueryParser}
   </ul>
-  */
-abstract public class Query implements java.io.Serializable {
-
+*/
+abstract public class Query implements java.io.Serializable
+{
   // query boost factor
   protected float boost = 1.0f;
 
@@ -86,7 +91,8 @@
   void prepare(IndexReader reader) {}
 
   static Scorer scorer(Query query, Searcher searcher, IndexReader reader)
-    throws IOException {
+	throws IOException
+    {
     query.prepare(reader);
     float sum = query.sumOfSquaredWeights(searcher);
     float norm = 1.0f / (float)Math.sqrt(sum);
@@ -94,21 +100,27 @@ static Scorer scorer(Query query, Searcher searcher, IndexReader reader)
     return query.scorer(reader);
   }
 
-  /** Sets the boost for this term to <code>b</code>.  Documents containing
-    this term will (in addition to the normal weightings) have their score
-    multiplied by <code>b</code>. */
+    /**
+     * Sets the boost for this term to <code>b</code>.  Documents containing
+     * this term will (in addition to the normal weightings) have their score
+     * multiplied by <code>b</code>.
+     */
   public void setBoost(float b) { boost = b; }
 
-  /** Gets the boost for this term.  Documents containing
-    this term will (in addition to the normal weightings) have their score
-    multiplied by <code>b</code>.   The boost is 1.0 by default.  */
+    /**
+     * Gets the boost for this term.  Documents containing
+     * this term will (in addition to the normal weightings) have their score
+     * multiplied by <code>b</code>.   The boost is 1.0 by default.
+     */
   public float getBoost() { return boost; }
 
-  /** Prints a query to a string, with <code>field</code> as the default field
-    for terms.
-    <p>The representation used is one that is readable by
-    <a href="doc/lucene.queryParser.QueryParser.html">QueryParser</a>
-    (although, if the query was created by the parser, the printed
-    representation may not be exactly what was parsed). */
+    /**
+     * Prints a query to a string, with <code>field</code> as the default field
+     * for terms.
+     * <p>The representation used is one that is readable by
+     * {@link org.apache.lucene.queryParser.QueryParser QueryParser}
+     * (although, if the query was created by the parser, the printed
+     * representation may not be exactly what was parsed).
+     */
   abstract public String toString(String field);
 }
