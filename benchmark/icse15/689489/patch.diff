diff --git a/lucene/solr/trunk/client/java/solrj/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase.java b/lucene/solr/trunk/client/java/solrj/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase.java
index 2981b3a5..3d7c9739 100644
--- a/lucene/solr/trunk/client/java/solrj/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase.java
+++ b/lucene/solr/trunk/client/java/solrj/test/org/apache/solr/client/solrj/MultiCoreExampleTestBase.java
@@ -137,6 +137,20 @@ public void testMultiCore() throws Exception
     assertEquals( 1, getSolrCore1().query( new SolrQuery( "id:BBB" ) ).getResults().size() );
     assertEquals( 1, getSolrCore("corefoo").query( new SolrQuery( "id:BBB" ) ).getResults().size() );
 
+    // test that reload affects aliases
+    CoreAdminRequest.reloadCore("core1", coreadmin);
+
+    // this is only an effective test for embedded, where we have
+    // direct access to the core container.
+    SolrCore c1 = cores.getCore("core1");
+    SolrCore c2 = cores.getCore("corefoo");
+    assertTrue(c1 == c2);
+    if (c1 != null) c1.close();
+    if (c2 != null) c2.close();
+
+    // retest core query
+    assertEquals( 1, getSolrCore1().query( new SolrQuery( "id:BBB" ) ).getResults().size() );
+
     // test close
     CoreAdminRequest.unloadCore("corefoo",coreadmin);
     try {
diff --git a/lucene/solr/trunk/src/java/org/apache/solr/core/CoreContainer.java b/lucene/solr/trunk/src/java/org/apache/solr/core/CoreContainer.java
index 0ad5b7ac..c1900a0e 100644
--- a/lucene/solr/trunk/src/java/org/apache/solr/core/CoreContainer.java
+++ b/lucene/solr/trunk/src/java/org/apache/solr/core/CoreContainer.java
@@ -381,7 +381,17 @@ public void reload(String name) throws ParserConfigurationException, IOException
     if (core == null)
       throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, "No such core: " + name );
 
-    register(name, create(core.getCoreDescriptor()), false);
+    SolrCore newCore = create(core.getCoreDescriptor());
+
+    // point all aliases to the reloaded core
+    for (String alias : getCoreNames(core)) {
+      if (!name.equals(alias)) {
+        newCore.open();
+        register(alias, newCore, false);
+      }
+    }
+
+    register(name, newCore, false);
   }
     
   
