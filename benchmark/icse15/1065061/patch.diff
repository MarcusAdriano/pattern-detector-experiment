diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockMinion.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockMinion.java
index bf469f60..b05e1bdb 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockMinion.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockMinion.java
@@ -38,6 +38,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more
  */
 
 public class BootLockMinion {
+    private static int WAIT_FOR_DESTROY_MAX_MILLIS = BootLockTest.MINION_WAIT_MAX_MILLIS;
+    
     public static void main(String[] args) {
         String dbName = args[0];
         Connection con;
@@ -60,10 +62,13 @@ public static void main(String[] args) {
             File checkFile = new File(BootLockTest.minionCompleteFileName);
             checkFile.createNewFile();
             //infinite loop until we get killed by BootLockTest.java
-            for(;;)
+            int wait = WAIT_FOR_DESTROY_MAX_MILLIS;
+            while(wait > 0)
             {
-                Thread.sleep(30000);
+                Thread.sleep(10000);
+                wait -= 10000;
             }
+            System.err.println("BootLockMinion exceeded maximum wait for destroy");
         }
         catch (Exception e) {
             e.printStackTrace();
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockTest.java
index bd4faa03..48d1a580 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/store/BootLockTest.java
@@ -74,6 +74,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
     private final static String DATA_MULTIPLE_JBMS_ON_DB = "XSDB6";
     private final static String DATA_MULTIPLE_JBMS_FORCE_LOCK = "XSDB8";
+    // Ten minutes should hopefully be enough!
+    public static final int MINION_WAIT_MAX_MILLIS = 600000;
 
     /**
      * Constructor
@@ -130,7 +132,7 @@ public void testBootLock() throws Exception {
         Process p = null;
 
         p = execJavaCmd(cmd);
-        waitForMinionBoot(p,60000);
+        waitForMinionBoot(p,MINION_WAIT_MAX_MILLIS);
 
         // We now know minion has booted
 
@@ -174,6 +176,8 @@ public void testBootLock() throws Exception {
     }
 
     private void waitForMinionBoot(Process p, int waitmillis) throws InterruptedException {
+        boolean minionComplete;
+        int minionExitValue;
         StringBuffer failmsg = new StringBuffer();
         // boolean set to true once we find the  lock file
         File lockFile = new File(dbLockFile);
@@ -202,8 +206,22 @@ private void waitForMinionBoot(Process p, int waitmillis) throws InterruptedExce
         
         // If we got here, the database did not boot. Try to print the error.
         failmsg.append(
-                "Minion did not start or boot db in 60 seconds.\n" +
-                "----Minion's stderr:\n");
+                "Minion did not start or boot db in " +
+                (MINION_WAIT_MAX_MILLIS/1000) +
+                " seconds.\n");                
+        try {
+            minionExitValue = p.exitValue();
+            minionComplete =true;
+            failmsg.append("exitValue = " + minionExitValue);
+        }catch (IllegalThreadStateException e )
+        {
+            // got exception on exitValue.
+            // still running ..
+            minionComplete=false;
+        }
+        // If the process exited try to print why.
+        if (minionComplete) {
+            failmsg.append("----Process exited. Minion's stderr:\n");
         do {
             try {
                 minionErrLine = minionSysErr.readLine();
@@ -218,6 +236,8 @@ private void waitForMinionBoot(Process p, int waitmillis) throws InterruptedExce
         } while (minionErrLine != null);
 
         failmsg.append("\n----Minion's stderr ended");
+        }
+        
         p.destroy();
         p.waitFor();
         fail(failmsg.toString());
