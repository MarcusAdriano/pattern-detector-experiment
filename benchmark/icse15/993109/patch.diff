diff --git a/lucene/solr/branches/branch-1.4/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper.java b/lucene/solr/branches/branch-1.4/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper.java
index 3eb6f646..f85c37fc 100644
--- a/lucene/solr/branches/branch-1.4/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper.java
+++ b/lucene/solr/branches/branch-1.4/src/java/org/apache/solr/core/IndexDeletionPolicyWrapper.java
@@ -107,6 +107,7 @@ public synchronized void saveCommitPoint(Long indexCommitVersion) {
     AtomicInteger reserveCount = savedCommits.get(indexCommitVersion);
     if (reserveCount == null) reserveCount = new AtomicInteger();
     reserveCount.incrementAndGet();
+    savedCommits.put(indexCommitVersion, reserveCount);
   }
 
   /** Release a previously saved commit point */
@@ -167,7 +168,7 @@ public void delete() {
       Long version = delegate.getVersion();
       Long reserve = reserves.get(version);
       if (reserve != null && System.currentTimeMillis() < reserve) return;
-      if(savedCommits.contains(version)) return;
+      if(savedCommits.containsKey(version)) return;
       delegate.delete();
     }
 
diff --git a/lucene/solr/branches/branch-1.4/src/java/org/apache/solr/handler/ReplicationHandler.java b/lucene/solr/branches/branch-1.4/src/java/org/apache/solr/handler/ReplicationHandler.java
index 0e5a968b..7ade7073 100644
--- a/lucene/solr/branches/branch-1.4/src/java/org/apache/solr/handler/ReplicationHandler.java
+++ b/lucene/solr/branches/branch-1.4/src/java/org/apache/solr/handler/ReplicationHandler.java
@@ -278,8 +278,6 @@ private void doSnapShoot(SolrParams params, SolrQueryResponse rsp, SolrQueryRequ
     try {
       IndexDeletionPolicyWrapper delPolicy = core.getDeletionPolicy();
       IndexCommit indexCommit = delPolicy.getLatestCommit();
-      // race?
-      delPolicy.setReserveDuration(indexCommit.getVersion(), reserveCommitDuration);
       if(indexCommit == null) {
         indexCommit = req.getSearcher().getReader().getIndexCommit();
       }
@@ -791,14 +789,14 @@ public void inform(SolrCore core) {
       }
       List backup = master.getAll("backupAfter");
       boolean backupOnCommit = backup.contains("commit");
-      boolean backupOnOptimize = backup.contains("optimize");
+      boolean backupOnOptimize = !backupOnCommit && backup.contains("optimize");
       List replicateAfter = master.getAll(REPLICATE_AFTER);
       replicateOnCommit = replicateAfter.contains("commit");
-      replicateOnOptimize = replicateAfter.contains("optimize");
+      replicateOnOptimize = !replicateOnCommit && replicateAfter.contains("optimize");
 
       // if we only want to replicate on optimize, we need the deletion policy to
       // save the last optimized commit point.
-      if (replicateOnOptimize && !replicateOnCommit) {
+      if (replicateOnOptimize) {
         IndexDeletionPolicyWrapper wrapper = core.getDeletionPolicy();
         IndexDeletionPolicy policy = wrapper == null ? null : wrapper.getWrappedDeletionPolicy();
         if (policy instanceof SolrDeletionPolicy) {
@@ -825,7 +823,7 @@ public void inform(SolrCore core) {
           IndexReader reader = s==null ? null : s.get().getReader();
           if (reader!=null && reader.getIndexCommit() != null && reader.getIndexCommit().getGeneration() != 1L) {
             try {
-              if(!replicateOnCommit && replicateOnOptimize){
+              if(replicateOnOptimize){
                 Collection<IndexCommit> commits = IndexReader.listCommits(reader.directory());
                 for (IndexCommit ic : commits) {
                   if(ic.isOptimized()){
