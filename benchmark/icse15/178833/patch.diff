diff --git a/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java b/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java
index f6d7fcb6..349df8de 100644
--- a/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java
+++ b/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchAnalyzer.java
@@ -30,16 +30,14 @@
 import java.util.Map;
 
 /**
- * @author Edwin de Jonge
- *         <p/>
  *         Analyzer for Dutch language. Supports an external list of stopwords (words that
  *         will not be indexed at all), an external list of exclusions (word that will
  *         not be stemmed, but indexed) and an external list of word-stem pairs that overrule
  *         the algorithm (dictionary stemming).
  *         A default set of stopwords is used unless an alternative list is specified, the
  *         exclusion list is empty by default.
- *         As start for the Analyzer the German Analyzer was used. The stemming algorithm
- *         implemented can be found at @link
+ * 
+ * @author Edwin de Jonge
  */
 public class DutchAnalyzer extends Analyzer {
   /**
@@ -147,7 +145,8 @@ public void setStemDictionary(File stemdict) {
   /**
    * Creates a TokenStream which tokenizes all the text in the provided TextReader.
    *
-   * @return A TokenStream build from a StandardTokenizer filtered with StandardFilter, StopFilter, GermanStemFilter
+   * @return A TokenStream build from a StandardTokenizer filtered with StandardFilter,
+   * StopFilter, DutchStemFilter
    */
   public TokenStream tokenStream(String fieldName, Reader reader) {
     TokenStream result = new StandardTokenizer(reader);
diff --git a/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemFilter.java b/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemFilter.java
index beb66165..e061bf07 100644
--- a/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemFilter.java
+++ b/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemFilter.java
@@ -27,11 +27,11 @@
 import java.util.Map;
 
 /**
- * @author Edwin de Jonge
- *         <p/>
  *         A filter that stems Dutch words. It supports a table of words that should
  *         not be stemmed at all. The stemmer used can be changed at runtime after the
  *         filter object is created (as long as it is a DutchStemmer).
+ * 
+ * @author Edwin de Jonge
  */
 public final class DutchStemFilter extends TokenFilter {
   /**
diff --git a/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer.java b/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer.java
index 315bc52d..464b8c7a 100644
--- a/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer.java
+++ b/lucene/java/trunk/contrib/analyzers/src/java/org/apache/lucene/analysis/nl/DutchStemmer.java
@@ -18,12 +18,13 @@
 
 import java.util.Map;
 
-/*
- * @author Edwin de Jonge (ejne@cbs.nl)
+/**
  *
  * A stemmer for Dutch words. The algorithm is an implementation of
- * the <see cref="http://snowball.tartarus.org/dutch/stemmer.html">dutch stemming</see>
- *  algorithm in snowball. Snowball is a project of Martin Porter (does Porter Stemmer ring a bell?):
+ * the <a href="http://snowball.tartarus.org/algorithms/dutch/stemmer.html">dutch stemming</a>
+ * algorithm in Martin Porter's snowball project.
+ * 
+ * @author Edwin de Jonge (ejne at cbs.nl)
  */
 
 public class DutchStemmer {
