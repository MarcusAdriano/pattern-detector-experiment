diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/catalog/DD_Version.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/catalog/DD_Version.java
index 593b0e39..f1b24b58 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/catalog/DD_Version.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/catalog/DD_Version.java
@@ -530,6 +530,13 @@ private void handleMinorRevisionChange(TransactionController tc, DD_Version from
 		boolean isReadOnly = bootingDictionary.af.isReadOnly();
 
 		if (!isReadOnly) {
+            // Make sure all stored plans are cleared, both for triggers and
+            // for metadata queries. The plans will be recompiled automatically
+            // on the first execution after upgrade. We clear the plans because
+            // the stored format may have changed between the versions, so it
+            // might not be possible to read or execute them in this version.
+            bootingDictionary.clearSPSPlans();
+
 			// Once a database is version 10.5 we will start updating metadata SPSes
 			// on any version change,up or down.  This will ensure that metadata queries 
 			// match the version we are using.  We don't want to do this for lower 
@@ -537,10 +544,6 @@ private void handleMinorRevisionChange(TransactionController tc, DD_Version from
 			// SPSes won't be restored.
 			if (fromVersion.majorVersionNumber >= DataDictionary.DD_VERSION_DERBY_10_5)
 				bootingDictionary.updateMetadataSPSes(tc);
-			//Following make sure that the stored plans (including the ones for
-			//triggers) will get cleared during upgrade and hence we will not
-			//hold on to stale plans.
-			bootingDictionary.clearSPSPlans();
 
 			DD_Version lastRun;
 			
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java
index 0aa9ad86..7152ed82 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java
@@ -1948,4 +1948,15 @@ private void assertDERBY5289ResultsAndDelete() throws SQLException {
         s.executeUpdate("DELETE FROM D5289TABLE3");
         commit();  
     }
+
+    /**
+     * Regression test case for DERBY-6314, which caused upgrade to fail if a
+     * metadata query had been executed with the old version of the database.
+     */
+    public void testDERBY6314() throws SQLException {
+        // Simply execute a metadata query. The query itself did not use to
+        // fail, but it caused PhaseChanger to fail when moving to the
+        // PH_SOFT_UPGRADE phase or the PH_HARD_UPGRADE phase.
+        JDBC.assertDrainResults(getConnection().getMetaData().getSchemas());
+    }
 }
