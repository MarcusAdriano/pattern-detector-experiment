diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java b/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java
index 8b4eeccd..0331ebc6 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/CompactionManager.java
@@ -489,30 +489,6 @@ public int compare(Pair<T, Long> p1, Pair<T, Long> p2)
         return tablePairs;
     }
 
-    public Future submitDrop(final ColumnFamilyStore... stores)
-    {
-        Callable callable = new Callable()
-        {
-            public Object call() throws IOException
-            {
-                for (ColumnFamilyStore cfs : stores)
-                {
-                    Table.flusherLock.writeLock().lock();
-                    try
-                    {
-                        cfs.table.dropCf(cfs.metadata.cfId);
-                    }
-                    finally
-                    {
-                        Table.flusherLock.writeLock().unlock();
-                    }
-                }
-                return null;
-            }
-        };
-        return executor.submit(callable);
-    }
-    
     public Future submitIndexBuild(final ColumnFamilyStore cfs, final Table.IndexBuilder builder)
     {
         Runnable runnable = new Runnable()
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropColumnFamily.java b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropColumnFamily.java
index ca27d1cd..b00bb044 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropColumnFamily.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropColumnFamily.java
@@ -5,18 +5,15 @@
 import org.apache.cassandra.config.DatabaseDescriptor;
 import org.apache.cassandra.config.KSMetaData;
 import org.apache.cassandra.db.ColumnFamilyStore;
-import org.apache.cassandra.db.CompactionManager;
 import org.apache.cassandra.db.SystemTable;
 import org.apache.cassandra.db.Table;
 import org.apache.cassandra.db.commitlog.CommitLog;
 import org.apache.cassandra.utils.FBUtilities;
 import org.apache.cassandra.utils.UUIDGen;
 
-import java.io.IOError;
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
-import java.util.concurrent.ExecutionException;
 
 /**
  * Licensed to the Apache Software Foundation (ASF) under one
@@ -88,30 +85,13 @@ public void applyModels() throws IOException
         // reinitialize the table.
         KSMetaData existing = DatabaseDescriptor.getTableDefinition(tableName);
         CFMetaData cfm = existing.cfMetaData().get(cfName);
-        ColumnFamilyStore cfs = Table.open(cfm.tableName).getColumnFamilyStore(cfName);
         KSMetaData ksm = makeNewKeyspaceDefinition(existing);
         CFMetaData.purge(cfm);
         DatabaseDescriptor.setTableDefinition(ksm, newVersion);
         
         if (!clientMode)
         {
-            try
-            {
-                CompactionManager.instance.submitDrop(cfs).get();
-            }
-            catch (InterruptedException ex)
-            {
-                throw new IOException(ex);
-            }
-            catch (ExecutionException ex)
-            {
-                // if the compaction manager catches IOException, it wraps it in an IOError and rethrows, which should
-                // get caught be the executor and rethrown as an ExecutionException.
-                if (ex.getCause() instanceof IOException)
-                    throw (IOException)ex.getCause();
-                else
-                    throw new IOException(ex);
-            }
+            Table.open(ksm.name).dropCf(cfm.cfId);
         }
     }
     
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropKeyspace.java b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropKeyspace.java
index ef9c2057..f2d2dfac 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropKeyspace.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/migration/DropKeyspace.java
@@ -22,8 +22,6 @@
 import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.config.DatabaseDescriptor;
 import org.apache.cassandra.config.KSMetaData;
-import org.apache.cassandra.db.ColumnFamilyStore;
-import org.apache.cassandra.db.CompactionManager;
 import org.apache.cassandra.db.HintedHandOffManager;
 import org.apache.cassandra.db.SystemTable;
 import org.apache.cassandra.db.Table;
@@ -31,9 +29,7 @@
 import org.apache.cassandra.utils.FBUtilities;
 import org.apache.cassandra.utils.UUIDGen;
 
-import java.io.IOError;
 import java.io.IOException;
-import java.util.concurrent.ExecutionException;
 
 public class DropKeyspace extends Migration
 {
@@ -72,26 +68,11 @@ public void applyModels() throws IOException
         
         // remove all cfs from the table instance.
         for (CFMetaData cfm : ksm.cfMetaData().values())
+        {
             CFMetaData.purge(cfm);
-        
         if (!clientMode)
         {
-            try
-            {
-                CompactionManager.instance.submitDrop(table.getColumnFamilyStores().toArray(new ColumnFamilyStore[0])).get();
-            }
-            catch (InterruptedException ex)
-            {
-                throw new IOException(ex);
-            }
-            catch (ExecutionException ex)
-            {
-                // if the compaction manager catches IOException, it wraps it in an IOError and rethrows, which should
-                // get caught be the executor and rethrown as an ExecutionException.
-                if (ex.getCause() instanceof IOException)
-                    throw (IOException)ex.getCause();
-                else
-                    throw new IOException(ex);
+                table.dropCf(cfm.cfId);
             }
         }
                         
