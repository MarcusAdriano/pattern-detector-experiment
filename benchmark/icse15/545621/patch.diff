diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/LengthOperatorNode.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/LengthOperatorNode.java
index 32a564b3..765d3751 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/LengthOperatorNode.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/LengthOperatorNode.java
@@ -144,13 +144,13 @@ void bindParameter()
 		** According to the SQL standard, if XXX_length has a ? operand,
 		** its type is varchar with the implementation-defined maximum length
 		** for a varchar.
+		** Also, for XXX_length, it doesn't matter what is VARCHAR's collation 
+		** (since for XXX_length, no collation sensitive processing is 
+		** is required) and hence we will not worry about the collation setting
 		*/
 
 		operand.setType(DataTypeDescriptor.getBuiltInDataTypeDescriptor(parameterType, true, 
 												parameterWidth));
-		//collation of ? operand should be same as the compilation schema
-		operand.setCollationUsingCompilationSchema(
-				StringDataValue.COLLATION_DERIVATION_IMPLICIT);
 	}
 
 	/**
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java
index 1c5efb65..8c0ef92e 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java
@@ -753,6 +753,12 @@ private void commonTestingForTerritoryBasedDB(Statement s) throws SQLException{
     rs = ps.executeQuery();
     JDBC.assertEmpty(rs);
 
+    //Do parameter testing for LENGTH
+    //Following query will fail because LENGTH operator is not allowed to take
+    //a parameter. I just wanted to have a test case out for the changes that
+    //are going into engine code (ie LengthOperatorNode)
+    checkPreparedStatementError(conn, "SELECT COUNT(*) FROM CUSTOMER WHERE " +
+    		" LENGTH(?) != 0", "42X36");   
     
     //Do parameter testing with COALESCE
     //following will pass because the ? inside the COALESCE will take the 
