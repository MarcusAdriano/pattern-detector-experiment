diff --git a/db/derby/code/branches/10.1/java/drda/org/apache/derby/drda/NetworkServerControl.java b/db/derby/code/branches/10.1/java/drda/org/apache/derby/drda/NetworkServerControl.java
index 1f85851a..8f2377a4 100644
--- a/db/derby/code/branches/10.1/java/drda/org/apache/derby/drda/NetworkServerControl.java
+++ b/db/derby/code/branches/10.1/java/drda/org/apache/derby/drda/NetworkServerControl.java
@@ -87,7 +87,8 @@
 	This changes where new trace files will be placed. 
 	For sessions with tracing already turned on,  
 	trace files remain in the previous location. 
-	Default is clousdcape.system.home</LI>
+	Default is derby.system.home, if it is set. 
+	Otherwise the default is the current directory.</LI>
 
 	</UL>
 	<P>Properties can be set in the derby.properties file or on the command line.
diff --git a/db/derby/code/branches/10.1/java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java b/db/derby/code/branches/10.1/java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java
index 47f924d2..bdb6d80d 100644
--- a/db/derby/code/branches/10.1/java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java
+++ b/db/derby/code/branches/10.1/java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java
@@ -292,8 +292,8 @@
 	// constructor
 	public NetworkServerControlImpl() throws Exception
 	{
-		getPropertyInfo();
 		init();
+		getPropertyInfo();
     }
 
 
@@ -306,12 +306,12 @@ public NetworkServerControlImpl() throws Exception
 	 */
 	public NetworkServerControlImpl(InetAddress address, int portNumber) throws Exception
 	{
+		init();
 		getPropertyInfo();
 		this.hostAddress = address;
 		this.portNumber = (portNumber <= 0) ?
 			this.portNumber: portNumber;
 		this.hostArg = address.getHostAddress();
-		init();
 	}
 
     private void init() throws Exception
@@ -2456,29 +2456,51 @@ private void  getPropertyInfo() throws Exception
 															  "true"))  
 			setTraceAll(true);
 
-		setTraceDirectory(PropertyUtil.getSystemProperty( 
-			Property.DRDA_PROP_TRACEDIRECTORY));
+		//If the derby.system.home property has been set, it is the default. 
+		//Otherwise, the default is the current directory. 
+		//If derby.system.home is not set, directory will be null and trace files will get
+		//created in current directory.
+		propval = PropertyUtil.getSystemProperty(Property.DRDA_PROP_TRACEDIRECTORY,directory);
+		if(propval != null){
+			if(propval.equals(""))
+				propval = directory;
+			setTraceDirectory(propval);
+		}
 
+		//DERBY-375 If a system property is specified without any value, getProperty returns 
+		//an empty string. Use default values in such cases.
 		propval = PropertyUtil.getSystemProperty( 
 			Property.DRDA_PROP_MINTHREADS);
-		if (propval != null)
+		if (propval != null){
+			if(propval.equals(""))
+				propval = "0";
 			setMinThreads(getIntPropVal(Property.DRDA_PROP_MINTHREADS, propval));
+		}
 
 		propval = PropertyUtil.getSystemProperty( 
 			Property.DRDA_PROP_MAXTHREADS);
-		if (propval != null)
+		if (propval != null){
+			if(propval.equals(""))
+				propval = "0";
 			setMaxThreads(getIntPropVal(Property.DRDA_PROP_MAXTHREADS, propval));
+		}
 
 
 		propval = PropertyUtil.getSystemProperty( 
 			Property.DRDA_PROP_TIMESLICE);
-		if (propval != null)
+		if (propval != null){
+			if(propval.equals(""))
+				propval = "0";
 			setTimeSlice(getIntPropVal(Property.DRDA_PROP_TIMESLICE, propval));
+		}
 
 		propval = PropertyUtil.getSystemProperty( 
 			Property.DRDA_PROP_PORTNUMBER);
-		if (propval != null)
+		if (propval != null){
+			if(propval.equals(""))
+				propval = String.valueOf(NetworkServerControl.DEFAULT_PORTNUMBER);
 			portNumber = getIntPropVal(Property.DRDA_PROP_PORTNUMBER, propval);
+		}
 
 		propval = PropertyUtil.getSystemProperty( 
 			Property.DRDA_PROP_KEEPALIVE);
@@ -2488,9 +2510,12 @@ private void  getPropertyInfo() throws Exception
 		
 		propval = PropertyUtil.getSystemProperty( 
 			Property.DRDA_PROP_HOSTNAME);
-		if (propval != null)
+		if (propval != null){
+			if(propval.equals(""))
+				hostArg = DEFAULT_HOST; 
+			else
 			hostArg = propval;
-
+		}	
 		propval = PropertyUtil.getSystemProperty(
 						 NetworkServerControlImpl.DRDA_PROP_DEBUG);
 		if (propval != null  && StringUtil.SQLEqualsIgnoreCase(propval, "true"))
@@ -3222,6 +3247,11 @@ private Properties getPropertyValues()
 		retval.put(Property.DRDA_PROP_TIMESLICE, new  Integer(getTimeSlice()).toString());
 		retval.put(Property.DRDA_PROP_LOGCONNECTIONS, new Boolean(getLogConnections()).toString());
 		String startDRDA = PropertyUtil.getSystemProperty(Property.START_DRDA);
+		//DERBY-375 If a system property is specified without any value, getProperty returns 
+		//an empty string. Use default values in such cases.
+		if(startDRDA!=null && startDRDA.equals(""))
+			startDRDA = "false";
+		
 		retval.put(Property.START_DRDA, (startDRDA == null)? "false" : startDRDA);
 
 		//get the trace value for each session if tracing for all is not set
diff --git a/db/derby/code/branches/10.1/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testProperties.java b/db/derby/code/branches/10.1/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testProperties.java
index 5b484666..90a5f26a 100644
--- a/db/derby/code/branches/10.1/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testProperties.java
+++ b/db/derby/code/branches/10.1/java/testing/org/apache/derbyTesting/functionTests/tests/derbynet/testProperties.java
@@ -43,6 +43,9 @@
 	   default
 
 	   The command line should take precedence
+
+	It also tests start server by specifying system properties without values.
+	In this case the server will use default values.
 */
 
 public class testProperties
@@ -53,6 +56,21 @@
 	private static Vector vCmd;
     private static  BufferedOutputStream bos = null;
 
+    //Command to start server specifying system properties without values
+    private static String[] startServerCmd =
+					new String[] {  "-Dderby.drda.logConnections",
+    								"-Dderby.drda.traceAll",
+									"-Dderby.drda.traceDirectory",
+									"-Dderby.drda.keepAlive",
+									"-Dderby.drda.timeSlice",
+									"-Dderby.drda.host",
+									"-Dderby.drda.portNumber",
+									"-Dderby.drda.minThreads",
+									"-Dderby.drda.maxThreads",
+									"-Dderby.drda.startNetworkServer",
+									"-Dderby.drda.debug",
+									"org.apache.derby.drda.NetworkServerControl",
+									"start"};
 
 	/**
 	 * Execute the given command and dump the results to standard out
@@ -161,6 +179,14 @@ private static void waitForStart(String portString, int timeToWait) throws Excep
         }
 	}
 
+	private static void listProperties(String portString) throws Exception{
+		int port = Integer.parseInt(portString);
+		NetworkServerControl derbyServer = new NetworkServerControl( InetAddress.getByName("localhost"),
+													port);
+		Properties p = derbyServer.getCurrentProperties();
+		p.list(System.out);
+	}
+
 	public static void main (String args[]) throws Exception
 	{
 		if ((System.getProperty("java.vm.name") != null) && System.getProperty("java.vm.name").equals("J9"))
@@ -205,6 +231,22 @@ public static void main (String args[]) throws Exception
 			System.out.println("Successfully Connected");
 			//shutdown - with command line option
 			derbyServerCmd("shutdown","1530");
+
+			/**********************************************************************
+			 *  Test start server specifying system properties without values
+			 *********************************************************************/
+			System.out.println("Testing start server by specifying system properties without values");
+			System.out.println("First shutdown server started on default port by the test harness");
+
+			//Shutdown the server started by test
+			derbyServerCmd("shutdown","1527");
+			execCmd(startServerCmd);
+			waitForStart("1527",15000);
+			//check that default properties are used
+			listProperties("1527");
+			System.out.println("Successfully Connected");
+			derbyServerCmd("shutdown","1527");
+
 			System.out.println("End test");
 			bos.close();
 		}
