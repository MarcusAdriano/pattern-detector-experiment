diff --git a/aries/trunk/util/util/src/main/java/org/apache/aries/util/tracker/RecursiveBundleTracker.java b/aries/trunk/util/util/src/main/java/org/apache/aries/util/tracker/RecursiveBundleTracker.java
index b70c3bba..003ebdf9 100644
--- a/aries/trunk/util/util/src/main/java/org/apache/aries/util/tracker/RecursiveBundleTracker.java
+++ b/aries/trunk/util/util/src/main/java/org/apache/aries/util/tracker/RecursiveBundleTracker.java
@@ -77,8 +77,22 @@ public RecursiveBundleTracker(BundleContext context, int stateMask, BundleTracke
         this.tracker = tracker;
     }
 
+    /*
+     * Checks whether or not the framework supports composite bundles. The only
+     * known supporting framework is Equinox. When the Equinox specific
+     * framework property osgi.resolverMode is set to "strict", the
+     * CompositeBundleFactory service is registered, but the x-internal
+     * org.osgi.service.framework package is not exported, thus the need for
+     * the additional Class.forName check.
+     */
     private static boolean areMultipleFrameworksAvailable(BundleContext context) {
-        ServiceReference sr = context.getServiceReference("org.osgi.service.framework.CompositeBundleFactory");
+    	String compositeBundleFactory = "org.osgi.service.framework.CompositeBundleFactory";
+    	try {
+    		Class.forName(compositeBundleFactory);
+    	} catch (ClassNotFoundException e) {
+    		return false;
+    	}
+        ServiceReference sr = context.getServiceReference(compositeBundleFactory);
         return sr != null;
     }
 
