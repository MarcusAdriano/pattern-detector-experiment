diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/BlobTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/BlobTest.java
index a4692dc1..3ffede8a 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/BlobTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/BlobTest.java
@@ -125,7 +125,7 @@ public ExemptBlobMD(String methodName,Class [] params,
     //throwing a SQLException when they are called after calling free()
     //on a LOB.
     
-    private ExemptBlobMD [] emd = new ExemptBlobMD [] {
+    private static final ExemptBlobMD [] emd = new ExemptBlobMD [] {
         new ExemptBlobMD( "getBinaryStream", new Class[] { long.class,long.class }
                                                                    ,true,true ),
         new ExemptBlobMD( "setBinaryStream", new Class[] { long.class },false,true ),
@@ -169,6 +169,13 @@ public void setUp()
         buildHashSet();
     }
     
+    protected void tearDown() throws Exception {
+        blob.free();
+        blob = null;
+        excludedMethodSet = null;
+        super.tearDown();
+    }
+    
     /**
      * Builds the HashSet which will be used to test whether the given methods
      * can be exempted or not
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/CallableStatementTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/CallableStatementTest.java
index 1676da40..a40aa77f 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/CallableStatementTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/CallableStatementTest.java
@@ -71,9 +71,9 @@ protected void setUp()
      */
     protected void tearDown()
         throws Exception {
-        if (cStmt != null && !cStmt.isClosed()) {
+
             cStmt.close();
-        }
+        cStmt = null;
 
         super.tearDown();
     }
@@ -83,7 +83,6 @@ public void testNamedParametersAreNotSupported()
         DatabaseMetaData met = getConnection().getMetaData();
         assertFalse("Named parameters are not supported, but the metadata " +
                     "says they are", met.supportsNamedParameters());
-        met = null;
     }
     
     public void testGetDoubleIntOnInParameter()
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ClobTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ClobTest.java
index 73b7f29b..65c811f3 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ClobTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ClobTest.java
@@ -126,7 +126,7 @@ public ExemptClobMD(String methodName,Class [] params,
     //throwing a SQLException when they are called after calling free()
     //on a LOB.
     
-    private ExemptClobMD [] emd = new ExemptClobMD [] {
+    private static final ExemptClobMD [] emd = new ExemptClobMD [] {
         new ExemptClobMD( "getCharacterStream", new Class[] { long.class, long.class } ,true,true),
         new ExemptClobMD( "setAsciiStream",     new Class[] { long.class } ,false,true),
 	new ExemptClobMD( "setCharacterStream", new Class[] { long.class } ,true,true),
@@ -163,6 +163,13 @@ public void setUp()
         buildHashSet();
     }
     
+    protected void tearDown() throws Exception {
+        clob.free();
+        clob = null;
+        excludedMethodSet = null;
+        super.tearDown();
+    }
+    
     /**
      * Builds the HashSet which will be used to test whether the given methods
      * can be exempted or not
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/DataSourceTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/DataSourceTest.java
index e48205e9..a49fa832 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/DataSourceTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/DataSourceTest.java
@@ -62,8 +62,9 @@ public void setUp() {
      * Initialize the ds to null once the tests that need to be run have been 
      * run
      */
-    public void tearDown() {
+    public void tearDown() throws Exception {
         ds = null;
+        super.tearDown();
     }
 
     public void testIsWrapperForDataSource() throws SQLException {
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest.java
index 9d6fcc09..c2350c06 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest.java
@@ -144,12 +144,21 @@ public void tearDown()
         s.close();
         ps.close();
 
+        s = null;
+        ps = null;
+
         psFetchBlob.close();
         psFetchClob.close();
         psInsertBlob.close();
         psInsertClob.close();
         psInsertLongVarchar.close();
         
+        psFetchBlob = null;
+        psFetchClob = null;
+        psInsertBlob = null;
+        psInsertClob = null;
+        psInsertLongVarchar = null;
+
         super.tearDown();
     }
 
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java
index 98b5086c..7c530a7a 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java
@@ -94,12 +94,11 @@ protected void setUp()
     protected void tearDown()
         throws Exception {
 
-        if (rs != null) {
             rs.close();
-        }
-        if (stmt != null) {
             stmt.close();
-        }
+
+        rs = null;
+        stmt = null;
 
         super.tearDown();
     }
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestJDBC40Exception.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestJDBC40Exception.java
index 0baab9c9..7e5c8b4d 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestJDBC40Exception.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/TestJDBC40Exception.java
@@ -56,7 +56,10 @@ protected void setUp() throws SQLException {
     }
 
     protected void tearDown() throws Exception {
-        createStatement().execute("drop table EXCEPTION_TABLE1");
+        Statement s = createStatement();
+        s.execute("drop table EXCEPTION_TABLE1");
+        s.close();
+        commit();
         super.tearDown();
     }
 
