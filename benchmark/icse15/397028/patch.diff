diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/LOBTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/LOBTest.java
index 89f4ffc2..a0c5b6ff 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/LOBTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/LOBTest.java
@@ -88,7 +88,7 @@ public static void largeTest(String[] args) throws Exception{
 		System.out.println("creating");
 		s.executeUpdate("CREATE TABLE atable (a INT, b LONG VARCHAR FOR BIT DATA)");
 		conn.commit();
-		java.io.File file = new java.io.File("short.txt");
+		java.io.File file = new java.io.File("short.utf");
 		int fileLength = (int) file.length();
 
 		// first, create an input stream
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/blobclob4BLOB.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/blobclob4BLOB.java
index 6ee1d505..9e070b7d 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/blobclob4BLOB.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/blobclob4BLOB.java
@@ -86,11 +86,11 @@
 		fileLength = new long[numFiles];
         fileCRC32 = new long[numFiles];
 
-		fileName[0] = "short.txt";	// set up a short (fit in one page) blob/clob
-		fileName[1] = "littleclob.txt"; // set up a long (longer than a page) blob/clob
-		fileName[2] = "empty.txt"; // set up a blob/clob with nothing in it
-		fileName[3] = "searchclob.txt"; // set up a blob/clob to search with
-		fileName[4] = "aclob.txt"; // set up a really long (over 300K) blob/clob
+		fileName[0] = "short.utf";	// set up a short (fit in one page) blob/clob
+		fileName[1] = "littleclob.utf"; // set up a long (longer than a page) blob/clob
+		fileName[2] = "empty.utf"; // set up a blob/clob with nothing in it
+		fileName[3] = "searchclob.utf"; // set up a blob/clob to search with
+		fileName[4] = "aclob.utf"; // set up a really long (over 300K) blob/clob
 
 		for (int i = 0 ; i < numFiles; i++)
 		{
@@ -4106,20 +4106,25 @@ static void printInterval(Clob clob, long pos, int length,
 			}
 			TestUtil.dumpSQLExceptions(e,expected);
 		}
-		
-		catch (Exception e)
+		catch (StringIndexOutOfBoundsException obe)
 		{
 			// Known bug.  JCC 5914.  
-			if ((pos > clobLength) && isDerbyNet && (e.getMessage() != null &&
-													e.getMessage().indexOf("String index out of range") >= 0))
+			if ((pos > clobLength) && isDerbyNet)
+			{
 				System.out.println("EXPECTED Out of bounds exception");
+			} 
 			else
 			{
+				System.out.println("FAIL -- unexpected exception:" + obe.toString());
+				if (debug) obe.printStackTrace();
+			}
+		}
+		catch (Exception e)
+		{
 				System.out.println("FAIL -- unexpected exception:" + e.toString());
 	            if (debug) e.printStackTrace();
 			}
 		}
-    }
 
     static void printInterval(Blob blob, long pos, int length,
         int testNum, int iteration, long blobLength)
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/lobStreams.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/lobStreams.java
index 990ab46a..cbb46864 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/lobStreams.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/lobStreams.java
@@ -49,10 +49,10 @@
 
         static
         {
-//            fileName[0] = "extin" + sep + "aclob.txt";
- //           fileName[1] = "extin" + sep + "littleclob.txt";
-            fileName[0] =  "aclob.txt";
-            fileName[1] =  "littleclob.txt";
+//            fileName[0] = "extin" + sep + "aclob.utf";
+ //           fileName[1] = "extin" + sep + "littleclob.utf";
+            fileName[0] =  "aclob.utf";
+            fileName[1] =  "littleclob.utf";
         }
         
         public static void main(String[] args)
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/resultsetStream.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/resultsetStream.java
index c9d84da6..48643712 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/resultsetStream.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/resultsetStream.java
@@ -74,20 +74,20 @@ public static void main(String[] args) {
 				"insert into t2 (len, data) values (?, ?)");
 			String filePath = "extin";
 			String sep = System.getProperty("file.separator");
-			boolean exists = (new File("extin", "littleclob.txt")).exists();
+			boolean exists = (new File("extin", "littleclob.utf")).exists();
 			if (!exists)
 			{
 				String userDir = System.getProperty("user.dir");
 					filePath = userDir + sep + ".." + sep + filePath;
 			}
-			File file = new File(filePath + sep + "littleclob.txt");
+			File file = new File(filePath + sep + "littleclob.utf");
 			int fileSize = (int) file.length();
 			BufferedInputStream fileData = new BufferedInputStream(new FileInputStream(file));
 			ppw.setInt(1, fileSize);
 			ppw.setBinaryStream(2, fileData, fileSize);
 			ppw.executeUpdate();
 
-			file = new File(filePath + sep + "short.txt");
+			file = new File(filePath + sep + "short.utf");
 			fileSize = (int) file.length();
 			fileData = new BufferedInputStream(new FileInputStream(file));
 			ppw.setInt(1, fileSize);
