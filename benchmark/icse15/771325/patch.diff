diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/ConsistencyManager.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/ConsistencyManager.java
index 79473ec2..6630268f 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/ConsistencyManager.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/ConsistencyManager.java
@@ -145,16 +145,18 @@ private void handleResponses()
 			}
 		}
 	}
+
 	private static long scheduledTimeMillis_ = 600;
 	private static ICachetable<String, String> readRepairTable_ = new Cachetable<String, String>(scheduledTimeMillis_);
-	private Row row_;
-	protected List<EndPoint> replicas_;
-	
-	private ReadCommand readCommand_;
-	
-    public ConsistencyManager(Row row_, List<EndPoint> replicas_, ReadCommand readCommand)
+	private final Row row_;
+	protected final List<EndPoint> replicas_;
+	private final ReadCommand readCommand_;
+
+    public ConsistencyManager(Row row, List<EndPoint> replicas, ReadCommand readCommand)
     {
-        this.readCommand_ = readCommand;
+        row_ = row;
+        replicas_ = replicas;
+        readCommand_ = readCommand;
     }
 
 	public void run()
@@ -165,7 +167,7 @@ public void run()
 		{
 			Message messageDigestOnly = readCommandDigestOnly.makeReadMessage();
 			IAsyncCallback digestResponseHandler = new DigestResponseHandler();
-			MessagingService.getMessagingInstance().sendRR(messageDigestOnly, replicas_.toArray(new EndPoint[0]), digestResponseHandler);
+			MessagingService.getMessagingInstance().sendRR(messageDigestOnly, replicas_.toArray(new EndPoint[replicas_.size()]), digestResponseHandler);
 		}
 		catch ( IOException ex )
 		{
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
index 37f1c798..a4546046 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
@@ -549,9 +549,9 @@ public boolean isInSameDataCenter(EndPoint endpoint) throws IOException
      * sure that the N replicas are in sync. We do this in the
      * background when we do not care much about consistency.
      */
-    public void doConsistencyCheck(Row row, List<EndPoint> endpoints, ReadCommand message)
+    public void doConsistencyCheck(Row row, List<EndPoint> endpoints, ReadCommand command)
     {
-        Runnable consistencySentinel = new ConsistencyManager(row.cloneMe(), endpoints, message);
+        Runnable consistencySentinel = new ConsistencyManager(row.cloneMe(), endpoints, command);
         consistencyManager_.submit(consistencySentinel);
     }
 
