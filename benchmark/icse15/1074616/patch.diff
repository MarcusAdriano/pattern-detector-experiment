diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/CompactionManager.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/CompactionManager.java
index 5009adba..41608c7d 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/CompactionManager.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/CompactionManager.java
@@ -514,11 +514,8 @@ private void doScrub(ColumnFamilyStore cfs) throws IOException
             String compactionFileLocation = cfs.table.getDataFileLocation(sstable.length());
             if (compactionFileLocation == null)
                 throw new IOException("disk full");
-
             int expectedBloomFilterSize = Math.max(DatabaseDescriptor.getIndexInterval(),
                                                    (int)(SSTableReader.getApproximateKeyCount(Arrays.asList(sstable))));
-            if (logger.isDebugEnabled())
-              logger.debug("Expected bloom filter size : " + expectedBloomFilterSize);
 
             // loop through each row, deserializing to check for damage.
             // we'll also loop through the index at the same time, using the position from the index to recover if the
@@ -536,6 +533,8 @@ private void doScrub(ColumnFamilyStore cfs) throws IOException
             while (!dataFile.isEOF())
             {
                 long rowStart = dataFile.getFilePointer();
+                if (logger.isDebugEnabled())
+                    logger.debug("Reading row at " + rowStart);
                 DecoratedKey key = SSTableReader.decodeKey(sstable.partitioner, sstable.descriptor, ByteBufferUtil.readWithShortLength(dataFile));
                 ByteBuffer currentIndexKey = nextIndexKey;
                 nextIndexKey = indexFile.isEOF() ? null : ByteBufferUtil.readWithShortLength(indexFile);
@@ -543,6 +542,8 @@ private void doScrub(ColumnFamilyStore cfs) throws IOException
 
                 long dataSize = sstable.descriptor.hasIntRowSize ? dataFile.readInt() : dataFile.readLong();
                 long dataStart = dataFile.getFilePointer();
+                if (logger.isDebugEnabled())
+                    logger.debug(String.format("row %s is %s bytes", ByteBufferUtil.bytesToHex(key.key), dataSize));
 
                 SSTableIdentityIterator row = new SSTableIdentityIterator(sstable, dataFile, key, dataStart, dataSize, true);
                 writer.mark();
