diff --git a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/DenseMatrix.java b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/DenseMatrix.java
index 3c9d3a4b..bc4095a9 100644
--- a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/DenseMatrix.java
+++ b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/DenseMatrix.java
@@ -80,15 +80,6 @@ public double getQuick(int row, int column) {
     return values[row][column];
   }
 
-  @Override
-  public boolean haveSharedCells(Matrix other) {
-    if (other instanceof DenseMatrix) {
-      return other == this;
-    } else {
-      return other.haveSharedCells(this);
-    }
-  }
-
   @Override
   public Matrix like() {
     return like(rowSize(), columnSize());
diff --git a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/DenseVector.java b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/DenseVector.java
index ddd32a53..a0352b10 100644
--- a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/DenseVector.java
+++ b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/DenseVector.java
@@ -116,15 +116,6 @@ public Vector viewPart(int offset, int length) {
     return new VectorView(this, offset, length);
   }
 
-  @Override
-  public boolean haveSharedCells(Vector other) {
-    if (other instanceof DenseVector) {
-      return other == this;
-    } else {
-      return other.haveSharedCells(this);
-    }
-  }
-
   /**
    * Returns an iterator that traverses this Vector from 0 to cardinality-1, in that order.
    *
diff --git a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/Matrix.java b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/Matrix.java
index bb24679c..dbf0ebca 100644
--- a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/Matrix.java
+++ b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/Matrix.java
@@ -163,14 +163,6 @@
    */
   double getQuick(int row, int column);
 
-  /**
-   * Return if the other matrix and the receiver share any underlying data cells
-   *
-   * @param other a Matrix
-   * @return true if the other matrix has common data cells
-   */
-  boolean haveSharedCells(Matrix other);
-
   /**
    * Return an empty matrix of the same underlying class as the receiver
    *
diff --git a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/MatrixView.java b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/MatrixView.java
index fe423e20..084e150a 100644
--- a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/MatrixView.java
+++ b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/MatrixView.java
@@ -104,15 +104,6 @@ public Matrix viewPart(int[] offset, int[] size) {
     return new MatrixView(matrix, origin, size);
   }
 
-  @Override
-  public boolean haveSharedCells(Matrix other) {
-    if (other instanceof MatrixView) {
-      return other == this || matrix.haveSharedCells(other);
-    } else {
-      return other.haveSharedCells(matrix);
-    }
-  }
-
   @Override
   public Matrix assignColumn(int column, Vector other) {
     if (cardinality[ROW] != other.size()) {
diff --git a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/SparseColumnMatrix.java b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/SparseColumnMatrix.java
index ce98460b..8ddde248 100644
--- a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/SparseColumnMatrix.java
+++ b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/SparseColumnMatrix.java
@@ -87,14 +87,6 @@ public double getQuick(int row, int column) {
     }
   }
 
-  @Override
-  public boolean haveSharedCells(Matrix other) {
-    if (other instanceof SparseColumnMatrix) {
-      return other == this;
-    }
-    return other.haveSharedCells(this);
-  }
-
   @Override
   public Matrix like() {
     return new SparseColumnMatrix(cardinality);
diff --git a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/SparseMatrix.java b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/SparseMatrix.java
index ce950c1c..181d6464 100644
--- a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/SparseMatrix.java
+++ b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/SparseMatrix.java
@@ -81,15 +81,6 @@ public double getQuick(int row, int column) {
     }
   }
 
-  @Override
-  public boolean haveSharedCells(Matrix other) {
-    if (other instanceof SparseMatrix) {
-      return other == this;
-    } else {
-      return other.haveSharedCells(this);
-    }
-  }
-
   @Override
   public Matrix like() {
     return new SparseMatrix(cardinality);
diff --git a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/SparseRowMatrix.java b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/SparseRowMatrix.java
index ec3f0bd8..578bdda0 100644
--- a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/SparseRowMatrix.java
+++ b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/SparseRowMatrix.java
@@ -87,14 +87,6 @@ public double getQuick(int row, int column) {
     }
   }
 
-  @Override
-  public boolean haveSharedCells(Matrix other) {
-    if (other instanceof SparseRowMatrix) {
-      return other == this;
-    }
-    return other.haveSharedCells(this);
-  }
-
   @Override
   public Matrix like() {
     return new SparseRowMatrix(cardinality);
diff --git a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/SparseVector.java b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/SparseVector.java
index 338ea405..a2a2411a 100644
--- a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/SparseVector.java
+++ b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/SparseVector.java
@@ -109,15 +109,6 @@ public Vector viewPart(int offset, int length) {
     return new VectorView(this, offset, length);
   }
 
-  @Override
-  public boolean haveSharedCells(Vector other) {
-    if (other instanceof SparseVector) {
-      return other == this;
-    } else {
-      return other.haveSharedCells(this);
-    }
-  }
-
   @Override
   public SparseVector like() {
     int numValues = 256;
diff --git a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/Vector.java b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/Vector.java
index cf5a2f5c..2806587e 100644
--- a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/Vector.java
+++ b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/Vector.java
@@ -213,14 +213,6 @@
    */
   double getQuick(int index);
 
-  /**
-   * Return if the other matrix and the receiver share any underlying data cells
-   *
-   * @param other a Vector
-   * @return true if the other matrix has common data cells
-   */
-  boolean haveSharedCells(Vector other);
-
   /**
    * Return an empty matrix of the same underlying class as the receiver
    *
diff --git a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/VectorView.java b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/VectorView.java
index fd71ee3a..75a37a36 100644
--- a/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/VectorView.java
+++ b/lucene/mahout/trunk/math/src/main/java/org/apache/mahout/math/VectorView.java
@@ -97,15 +97,6 @@ public Vector viewPart(int offset, int length) {
     return new VectorView(vector, offset + this.offset, length);
   }
 
-  @Override
-  public boolean haveSharedCells(Vector other) {
-    if (other instanceof VectorView) {
-      return other == this || vector.haveSharedCells(other);
-    } else {
-      return other.haveSharedCells(vector);
-    }
-  }
-
   /** @return true if index is a valid index in the underlying Vector */
   private boolean isInView(int index) {
     return index >= offset && index < offset + cardinality;
diff --git a/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/MatrixTest.java b/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/MatrixTest.java
index 88c10480..e478914e 100644
--- a/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/MatrixTest.java
+++ b/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/MatrixTest.java
@@ -91,11 +91,6 @@ public void testGetQuick() {
     }
   }
 
-  public void testHaveSharedCells() {
-    assertTrue("same", test.haveSharedCells(test));
-    assertFalse("different", test.haveSharedCells(test.clone()));
-  }
-
   public void testLike() {
     Matrix like = test.like();
     assertEquals("type", like.getClass(), test.getClass());
diff --git a/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestDenseVector.java b/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestDenseVector.java
index 18128a1c..565f5bb8 100644
--- a/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestDenseVector.java
+++ b/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestDenseVector.java
@@ -372,23 +372,6 @@ public void testAssignBinaryFunctionCardinality() {
     }
   }
 
-  public void testThisHaveSharedCells() throws Exception {
-    assertTrue("test not shared?", test.haveSharedCells(test));
-  }
-
-  public void testViewHaveSharedCells() throws Exception {
-    Vector view = test.viewPart(1, 2);
-    assertTrue("view not shared?", view.haveSharedCells(test));
-    assertTrue("test not shared?", test.haveSharedCells(view));
-  }
-
-  public void testViewsHaveSharedCells() throws Exception {
-    Vector view1 = test.viewPart(0, 2);
-    Vector view2 = test.viewPart(1, 2);
-    assertTrue("view1 not shared?", view1.haveSharedCells(view2));
-    assertTrue("view2 not shared?", view2.haveSharedCells(view1));
-  }
-
   public void testLike() {
     assertTrue("not like", test.like() instanceof DenseVector);
   }
diff --git a/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestMatrixView.java b/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestMatrixView.java
index e3652800..cddfa8bc 100644
--- a/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestMatrixView.java
+++ b/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestMatrixView.java
@@ -96,11 +96,6 @@ public void testGetQuick() {
     }
   }
 
-  public void testHaveSharedCells() {
-    assertTrue("same", test.haveSharedCells(test));
-    assertFalse("different", test.haveSharedCells(test.clone()));
-  }
-
   public void testLike() {
     Matrix like = test.like();
     assertTrue("type", like instanceof DenseMatrix);
diff --git a/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestSparseVector.java b/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestSparseVector.java
index 7ebe2f7d..08268bba 100644
--- a/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestSparseVector.java
+++ b/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestSparseVector.java
@@ -421,23 +421,6 @@ public void testAssignBinaryFunctionCardinality() {
     }
   }
 
-  public void testThisHaveSharedCells() throws Exception {
-    assertTrue("test not shared?", test.haveSharedCells(test));
-  }
-
-  public void testViewHaveSharedCells() throws Exception {
-    Vector view = test.viewPart(1, 2);
-    assertTrue("view not shared?", view.haveSharedCells(test));
-    assertTrue("test not shared?", test.haveSharedCells(view));
-  }
-
-  public void testViewsHaveSharedCells() throws Exception {
-    Vector view1 = test.viewPart(0, 2);
-    Vector view2 = test.viewPart(1, 2);
-    assertTrue("view1 not shared?", view1.haveSharedCells(view2));
-    assertTrue("view2 not shared?", view2.haveSharedCells(view1));
-  }
-
   public void testLike() {
     Vector other = test.like();
     assertTrue("not like", other instanceof SparseVector);
diff --git a/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestVectorView.java b/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestVectorView.java
index e078a2b9..8ab5b9e5 100644
--- a/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestVectorView.java
+++ b/lucene/mahout/trunk/math/src/test/java/org/apache/mahout/math/TestVectorView.java
@@ -350,23 +350,6 @@ public void testAssignBinaryFunctionCardinality() {
     }
   }
 
-  public void testThisHaveSharedCells() throws Exception {
-    assertTrue("test not shared?", test.haveSharedCells(test));
-  }
-
-  public void testViewHaveSharedCells() throws Exception {
-    Vector view = test.viewPart(1, 2);
-    assertTrue("view not shared?", view.haveSharedCells(test));
-    assertTrue("test not shared?", test.haveSharedCells(view));
-  }
-
-  public void testViewsHaveSharedCells() throws Exception {
-    Vector view1 = test.viewPart(0, 2);
-    Vector view2 = test.viewPart(1, 2);
-    assertTrue("view1 not shared?", view1.haveSharedCells(view2));
-    assertTrue("view2 not shared?", view2.haveSharedCells(view1));
-  }
-
   public void testLike() {
     assertTrue("not like", test.like() instanceof DenseVector);
   }
