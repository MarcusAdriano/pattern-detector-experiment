diff --git a/lucene/java/trunk/src/java/org/apache/lucene/index/FieldInfos.java b/lucene/java/trunk/src/java/org/apache/lucene/index/FieldInfos.java
index 2a8188c8..96379b8f 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/index/FieldInfos.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/index/FieldInfos.java
@@ -102,7 +102,7 @@ final void add(FieldInfos other) {
     }
   }
 
-  private final void add(String name, boolean isIndexed) {
+  final void add(String name, boolean isIndexed) {
     FieldInfo fi = fieldInfo(name);
     if (fi == null)
       addInternal(name, isIndexed);
diff --git a/lucene/java/trunk/src/test/org/apache/lucene/SearchTest.java b/lucene/java/trunk/src/test/org/apache/lucene/SearchTest.java
index 3df3692b..22911c8e 100644
--- a/lucene/java/trunk/src/test/org/apache/lucene/SearchTest.java
+++ b/lucene/java/trunk/src/test/org/apache/lucene/SearchTest.java
@@ -113,7 +113,7 @@ public static void main(String[] args) {
       //DateFilter filter = DateFilter.Before("modified", Time(1997,00,01));
       //System.out.println(filter);
 
-	hits = searcher.search(query, null);
+	hits = searcher.search(query);
 
 	System.out.println(hits.length() + " total results");
 	for (int i = 0 ; i < hits.length() && i < 10; i++) {
diff --git a/lucene/java/trunk/src/test/org/apache/lucene/SearchTestForDuplicates.java b/lucene/java/trunk/src/test/org/apache/lucene/SearchTestForDuplicates.java
index 9b5920be..893d5a0d 100644
--- a/lucene/java/trunk/src/test/org/apache/lucene/SearchTestForDuplicates.java
+++ b/lucene/java/trunk/src/test/org/apache/lucene/SearchTestForDuplicates.java
@@ -98,7 +98,7 @@ public static void main(String[] args) {
       Query query = parser.parse(HIGH_PRIORITY);
       System.out.println("Query: " + query.toString(PRIORITY_FIELD));
 
-      hits = searcher.search(query, null);
+      hits = searcher.search(query);
       printHits(hits);
 
       searcher.close();
@@ -112,7 +112,7 @@ public static void main(String[] args) {
       query = parser.parse(HIGH_PRIORITY + " OR " + MED_PRIORITY);
       System.out.println("Query: " + query.toString(PRIORITY_FIELD));
 
-      hits = searcher.search(query, null);
+      hits = searcher.search(query);
       printHits(hits);
 
       searcher.close();
diff --git a/lucene/java/trunk/src/test/org/apache/lucene/StoreTest.java b/lucene/java/trunk/src/test/org/apache/lucene/StoreTest.java
index 1503f026..889a8e87 100644
--- a/lucene/java/trunk/src/test/org/apache/lucene/StoreTest.java
+++ b/lucene/java/trunk/src/test/org/apache/lucene/StoreTest.java
@@ -87,7 +87,7 @@ public static void test(int count, boolean ram)
     if (ram)
       store = new RAMDirectory();
     else
-      store = new FSDirectory("test.store", true);
+      store = FSDirectory.getDirectory("test.store", true);
 
     final int LENGTH_MASK = 0xFFF;
 
@@ -116,7 +116,7 @@ public static void test(int count, boolean ram)
     start = new Date();
 
     if (!ram)
-      store = new FSDirectory("test.store", false);
+      store = FSDirectory.getDirectory("test.store", false);
 
     for (i = 0; i < count; i++) {
       String name = i + ".dat";
diff --git a/lucene/java/trunk/src/test/org/apache/lucene/index/TermInfosTest.java b/lucene/java/trunk/src/test/org/apache/lucene/index/TermInfosTest.java
index 318daf31..5c8ce5a2 100644
--- a/lucene/java/trunk/src/test/org/apache/lucene/index/TermInfosTest.java
+++ b/lucene/java/trunk/src/test/org/apache/lucene/index/TermInfosTest.java
@@ -122,7 +122,7 @@ public static void test()
 
     start = new Date();
 
-    Directory store = new FSDirectory("test.store", true);
+    Directory store = FSDirectory.getDirectory("test.store", true);
     FieldInfos fis = new FieldInfos();
 
     TermInfosWriter writer = new TermInfosWriter(store, "words", fis);
diff --git a/lucene/java/trunk/src/test/org/apache/lucene/util/PriorityQueueTest.java b/lucene/java/trunk/src/test/org/apache/lucene/util/PriorityQueueTest.java
index cddd9188..8217cdcf 100644
--- a/lucene/java/trunk/src/test/org/apache/lucene/util/PriorityQueueTest.java
+++ b/lucene/java/trunk/src/test/org/apache/lucene/util/PriorityQueueTest.java
@@ -64,8 +64,19 @@ public static void main(String[] args) {
     test(10000);
   }
 
+  private static class IntegerQueue extends PriorityQueue {
+    public IntegerQueue(int count) { 
+      super();
+      initialize(count);
+    }
+
+    protected boolean lessThan(Object a, Object b) {
+      return ((Integer) a).intValue() < ((Integer) b).intValue();
+    }
+  }
+
   public static void test(int count) {
-    PriorityQueue pq = new PriorityQueue(count);
+    PriorityQueue pq = new IntegerQueue(count);
     Random gen = new Random();
     int i;
     
