diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/ColumnMetaData.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/ColumnMetaData.java
index bb4605d1..1aaf514d 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/ColumnMetaData.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/ColumnMetaData.java
@@ -313,7 +313,13 @@ public int getColumnDisplaySize(int column) throws SQLException {
             case Types.VARBINARY:
             case Types.LONGVARBINARY:
             case Types.BLOB:
-                return (int) (2 * sqlLength_[column - 1]); // eg. "FF" represents just one byte
+		// Derby-2425. For long length values, size overflows the int 
+		// range. In such cases, the size is limited to the max. int value
+		// This behavior is consistent with the same in Embedded mode.
+		int size = (int) (2 * sqlLength_[column - 1]);  // eg. "FF" represents just one byte
+		if ( size < 0 )
+		    size = Integer.MAX_VALUE;
+                return size;
             default:
                 throw new SqlException(logWriter_, 
                 		new ClientMessageId (SQLState.UNSUPPORTED_TYPE));
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ResultSetMiscTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ResultSetMiscTest.java
index 1e60e514..7f9a3041 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ResultSetMiscTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ResultSetMiscTest.java
@@ -437,9 +437,6 @@ public void testResultSetMetaData() throws SQLException {
         assertFalse(met.isCurrency(16));
         assertEquals(ResultSetMetaData.columnNullable, met.isNullable(16));
         assertFalse(met.isSigned(16));
-        // DERBY-2425 Client returns negative value for getColumnDisplaySize()
-        // enable for client once fixed.
-        if (usingEmbedded())
             assertEquals(2147483647, met.getColumnDisplaySize(16));
         assertEquals("BL", met.getColumnLabel(16));
         assertEquals("BL", met.getColumnName(16));
