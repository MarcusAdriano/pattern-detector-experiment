diff --git a/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/VectorHelper.java b/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/VectorHelper.java
index 26946dc8..ef4e47a6 100644
--- a/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/VectorHelper.java
+++ b/mahout/trunk/integration/src/main/java/org/apache/mahout/utils/vectors/VectorHelper.java
@@ -80,12 +80,16 @@ public static String buildJson(Iterable<Pair<String, Double>> iterable, StringBu
   }
 
   public static List<Pair<Integer, Double>> topEntries(Vector vector, int maxEntries) {
+
     // Get the size of nonZero elements in the input vector
     int sizeOfNonZeroElementsInVector = Iterables.size(vector.nonZeroes());
-    // If the sizeOfNonZeroElementsInVector < maxEntries then set maxEntries to sizeOfNonZeroElementsInVector
-    // else the call to queue.pop() returns a Pair(null, null) and the subsequent
-    // call to pair.getFirst() throws a NullPointerException
-    maxEntries = (sizeOfNonZeroElementsInVector < maxEntries) ? sizeOfNonZeroElementsInVector : maxEntries;
+
+    // If the sizeOfNonZeroElementsInVector < maxEntries then set maxEntries = sizeOfNonZeroElementsInVector
+    // otherwise the call to queue.pop() returns a Pair(null, null) and the subsequent call
+    // to pair.getFirst() throws a NullPointerException
+    if (sizeOfNonZeroElementsInVector < maxEntries)
+      maxEntries = sizeOfNonZeroElementsInVector;
+
     PriorityQueue<Pair<Integer, Double>> queue = new TDoublePQ<Integer>(-1, maxEntries);
     for (Element e : vector.nonZeroes()) {
       queue.insertWithOverflow(Pair.of(e.index(), e.get()));
diff --git a/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/VectorHelperTest.java b/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/VectorHelperTest.java
index 6c0a2081..9b125a26 100644
--- a/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/VectorHelperTest.java
+++ b/mahout/trunk/integration/src/test/java/org/apache/mahout/utils/vectors/VectorHelperTest.java
@@ -63,10 +63,11 @@ public void testTopEntries() throws Exception {
     v.set(1, 0.0);
     v.set(3, 0.0);
     v.set(8, 2.7);
+    // check if sizeOFNonZeroElementsInVector = maxEntries
     assertEquals(6, VectorHelper.topEntries(v, 6).size());
-    // when sizeOfNonZeroElementsInVector < maxEntries
+    // check if sizeOfNonZeroElementsInVector < maxEntries
     assertTrue(VectorHelper.topEntries(v, 9).size() < 9);
-    // when sizeOfNonZeroElementsInVector > maxEntries
+    // check if sizeOfNonZeroElementsInVector > maxEntries
     assertTrue(VectorHelper.topEntries(v, 5).size() < Iterables.size(v.nonZeroes()));
   }
 
@@ -83,5 +84,4 @@ public void testTopEntriesWhenAllZeros() throws Exception {
     v.set(8, 0.0);
     assertEquals(0, VectorHelper.topEntries(v, 6).size());
   }
-
 }
