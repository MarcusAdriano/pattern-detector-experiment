diff --git a/aries/trunk/spi-fly/spi-fly-core/src/main/java/org/apache/aries/spifly/BaseActivator.java b/aries/trunk/spi-fly/spi-fly-core/src/main/java/org/apache/aries/spifly/BaseActivator.java
index 98ee4cf8..78361b51 100644
--- a/aries/trunk/spi-fly/spi-fly-core/src/main/java/org/apache/aries/spifly/BaseActivator.java
+++ b/aries/trunk/spi-fly/spi-fly-core/src/main/java/org/apache/aries/spifly/BaseActivator.java
@@ -73,7 +73,7 @@ public synchronized void start(BundleContext context, final String consumerHeade
         providerBundleTracker.open();
 
         consumerBundleTracker = new BundleTracker(context,
-                Bundle.INSTALLED, new ConsumerBundleTrackerCustomizer(this, consumerHeaderName));
+                Bundle.INSTALLED | Bundle.RESOLVED | Bundle.STARTING | Bundle.ACTIVE, new ConsumerBundleTrackerCustomizer(this, consumerHeaderName));
         consumerBundleTracker.open();
 
         for (Bundle bundle : context.getBundles()) {
diff --git a/aries/trunk/spi-fly/spi-fly-core/src/main/java/org/apache/aries/spifly/Util.java b/aries/trunk/spi-fly/spi-fly-core/src/main/java/org/apache/aries/spifly/Util.java
index da36d9ca..f315b1e2 100644
--- a/aries/trunk/spi-fly/spi-fly-core/src/main/java/org/apache/aries/spifly/Util.java
+++ b/aries/trunk/spi-fly/spi-fly-core/src/main/java/org/apache/aries/spifly/Util.java
@@ -24,6 +24,7 @@
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
+import java.util.ListIterator;
 import java.util.Map;
 import java.util.ServiceLoader;
 
@@ -112,7 +113,14 @@ private static ClassLoader getBundleClassLoader(Bundle b) {
         // In 4.3 this can be done much easier by using the BundleWiring, but we want this code to
         // be 4.2 compliant.
         // Here we're just finding any class in the bundle, load that and then use its classloader.
-        Enumeration<String> paths = b.getEntryPaths("/");
+        
+        List<String> rootPaths = new ArrayList<String>();
+        rootPaths.add("/");
+        
+        while(rootPaths.size() > 0) {            
+            String rootPath = rootPaths.remove(0);
+            
+            Enumeration<String> paths = b.getEntryPaths(rootPath);
         while(paths.hasMoreElements()) {
             String path = paths.nextElement();
             if (path.endsWith(".class")) {
@@ -127,6 +135,9 @@ private static ClassLoader getBundleClassLoader(Bundle b) {
                 } catch (ClassNotFoundException e) {
                     // try the next class
                 }
+                } else if (path.endsWith("/")) {
+                    rootPaths.add(path);
+                }
             }
         }
         throw new RuntimeException("Could not obtain classloader for bundle " + b);
