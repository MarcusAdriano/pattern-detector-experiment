diff --git a/db/derby/code/branches/10.5/java/engine/org/apache/derby/impl/sql/compile/BetweenOperatorNode.java b/db/derby/code/branches/10.5/java/engine/org/apache/derby/impl/sql/compile/BetweenOperatorNode.java
index 0be2a23c..e502904b 100644
--- a/db/derby/code/branches/10.5/java/engine/org/apache/derby/impl/sql/compile/BetweenOperatorNode.java
+++ b/db/derby/code/branches/10.5/java/engine/org/apache/derby/impl/sql/compile/BetweenOperatorNode.java
@@ -127,11 +127,17 @@ ValueNode eliminateNots(boolean underNotNode)
 		/* Set type info for the operator node */
 		leftBCO.bindComparisonOperator();
 
+        // DERBY-4388: If leftOperand is a ColumnReference, it may be remapped
+        // during optimization, and that requires the less-than node and the
+        // greater-than node to have separate objects.
+        ValueNode leftClone = (leftOperand instanceof ColumnReference) ?
+            leftOperand.getClone() : leftOperand;
+
 		/* leftO > rightOList.elementAt(1) */
 		rightBCO = (BinaryComparisonOperatorNode) 
 					nodeFactory.getNode(
 								C_NodeTypes.BINARY_GREATER_THAN_OPERATOR_NODE,
-								leftOperand, 
+								leftClone,
 								rightOperandList.elementAt(1),
 								cm);
 		/* Set type info for the operator node */
