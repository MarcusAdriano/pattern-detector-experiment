diff --git a/cassandra/trunk/src/java/org/apache/cassandra/io/DeletionService.java b/cassandra/trunk/src/java/org/apache/cassandra/io/DeletionService.java
index ae8a2712..5213be66 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/io/DeletionService.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/io/DeletionService.java
@@ -26,8 +26,8 @@
 import java.util.concurrent.ExecutionException;
 import java.util.concurrent.ExecutorService;
 
+
 import org.apache.cassandra.concurrent.JMXEnabledThreadPoolExecutor;
-import org.apache.cassandra.concurrent.NamedThreadFactory;
 import org.apache.cassandra.io.util.FileUtils;
 import org.apache.cassandra.utils.WrappedRunnable;
 
@@ -54,41 +54,4 @@ public static void waitFor() throws InterruptedException, ExecutionException
     {
         executor.submit(new Runnable() { public void run() { }}).get();
     }
-
-    public static void submitDeleteWithRetry(String file)
-    {
-        submitDeleteWithRetry(file, 0);
-    }
-
-    private static void submitDeleteWithRetry(final String file, final int retryCount)
-    {
-        Runnable deleter = new WrappedRunnable()
-        {
-            @Override
-            protected void runMayThrow() throws IOException
-            {
-                if (!new File(file).delete())
-                {
-                    if (retryCount > MAX_RETRIES)
-                        throw new IOException("Unable to delete " + file + " after " + MAX_RETRIES + " tries");
-                    new Thread(new Runnable()
-                    {
-                        public void run()
-                        {
-                            try
-                            {
-                                Thread.sleep(10000);
-                            }
-                            catch (InterruptedException e)
-                            {
-                                throw new AssertionError(e);
-                            }
-                            submitDeleteWithRetry(file, retryCount + 1);
-                        }
-                    }, "Delete submission: " + file).start();
-                }
-            }
-        };
-        executor.submit(deleter);
-    }
 }
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/net/MessagingService.java b/cassandra/trunk/src/java/org/apache/cassandra/net/MessagingService.java
index e0329c78..bdc968ed 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/net/MessagingService.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/net/MessagingService.java
@@ -20,7 +20,6 @@
 
 import org.apache.cassandra.concurrent.*;
 import org.apache.cassandra.config.DatabaseDescriptor;
-import org.apache.cassandra.gms.FailureDetector;
 import org.apache.cassandra.gms.IFailureDetectionEventListener;
 import org.apache.cassandra.io.util.DataOutputBuffer;
 import org.apache.cassandra.net.io.SerializerType;
@@ -55,8 +54,6 @@
 
     /** we preface every message with this number so the recipient can validate the sender is sane */
     public static final int PROTOCOL_MAGIC = 0xCA552DFA;
-    /* Verb Handler for the Response */
-    public static final String responseVerbHandler_ = "RESPONSE";
 
     /* This records all the results mapped by message Id */
     private static ExpiringMap<String, IAsyncCallback> callbackMap_;
@@ -79,11 +76,6 @@
     
     private SocketThread socketThread;
 
-    public static int getVersion()
-    {
-        return version_;
-    }
-
     public Object clone() throws CloneNotSupportedException
     {
         //Prevents the singleton from being cloned
@@ -402,11 +394,6 @@ public static void validateMagic(int magic) throws IOException
             throw new IOException("invalid protocol header");
     }
     
-    public static boolean isEqual(byte digestA[], byte digestB[])
-    {
-        return MessageDigest.isEqual(digestA, digestB);
-    }
-
     public static int getBits(int x, int p, int n)
     {
         return x >>> (p + 1) - n & ~(-1 << n);
