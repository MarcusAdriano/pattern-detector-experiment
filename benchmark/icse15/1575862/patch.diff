diff --git a/db/derby/code/branches/10.10/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GeneratedColumnsTest.java b/db/derby/code/branches/10.10/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GeneratedColumnsTest.java
index 16489f00..17dd04a4 100644
--- a/db/derby/code/branches/10.10/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GeneratedColumnsTest.java
+++ b/db/derby/code/branches/10.10/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GeneratedColumnsTest.java
@@ -5637,7 +5637,7 @@ public void test_6361_compilationSchemaDoesNotExist() throws SQLException {
         conn.setAutoCommit(false);
 
         // Verify that the user does not have a schema.
-        JDBC.assertEmpty(conn.getMetaData().getSchemas(null, user));
+        assertFalse(schemaExists(conn, user));
 
         Statement s = conn.createStatement();
 
@@ -5656,12 +5656,28 @@ public void test_6361_compilationSchemaDoesNotExist() throws SQLException {
                 new String[][] {{"1", "-1", "2"}, {"2", "-2", "3"}});
 
         // Verify that the user still does not have a schema.
-        JDBC.assertEmpty(conn.getMetaData().getSchemas(null, user));
+        assertFalse(schemaExists(conn, user));
 
         s.close();
         JDBC.cleanup(conn);
     }
 
+    private static boolean schemaExists(Connection conn, String name) throws SQLException {
+        ResultSet rs = conn.getMetaData().getSchemas();
+
+        try {
+            while (rs.next()) {
+                if (name.equals(rs.getString("TABLE_SCHEM"))) {
+                    return true;
+                }
+            }
+        } finally {
+            rs.close();
+        }
+
+        return false;
+    }
+
     /**
      * Verify that generated columns work even if the compilation schema at
      * the time of adding the generated columns is dropped. Regression test
