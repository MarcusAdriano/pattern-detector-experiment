diff --git a/lucene/dev/branches/lucene_solr_4_2/solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java b/lucene/dev/branches/lucene_solr_4_2/solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java
index d427a619..b7358ee9 100644
--- a/lucene/dev/branches/lucene_solr_4_2/solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java
+++ b/lucene/dev/branches/lucene_solr_4_2/solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java
@@ -47,6 +47,7 @@
   protected class CacheValue {
     public Directory directory;
     public int refCnt = 1;
+    public boolean closed;
     public String path;
     public boolean doneWithDir = false;
     @Override
@@ -166,10 +167,15 @@ private void close(Directory directory) throws IOException {
         closeDirectory(cacheValue);
         
         byDirectoryCache.remove(directory);
+        
+        // if it's been closed, it's path is now
+        // owned by another Directory instance
+        if (!cacheValue.closed) {
         byPathCache.remove(cacheValue.path);
       }
     }
   }
+  }
 
   private void closeDirectory(CacheValue cacheValue) {
     List<CloseListener> listeners = closeListeners.remove(cacheValue.directory);
@@ -259,6 +265,10 @@ public final Directory get(String path,  DirContext dirContext, String rawLockTy
             }
           }
           
+          // close the entry, it will be owned by the new dir
+          // we count on it being released by directory
+          cacheValue.closed = true;
+          
         }
       }
       
diff --git a/lucene/dev/branches/lucene_solr_4_2/solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory.java b/lucene/dev/branches/lucene_solr_4_2/solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory.java
index 300dc354..87c25adb 100644
--- a/lucene/dev/branches/lucene_solr_4_2/solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory.java
+++ b/lucene/dev/branches/lucene_solr_4_2/solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory.java
@@ -60,6 +60,7 @@ public boolean isAbsolute(String path) {
   
   @Override
   public void remove(Directory dir) throws IOException {
+    synchronized (this) {
     CacheValue val = byDirectoryCache.get(dir);
     if (val == null) {
       throw new IllegalArgumentException("Unknown directory " + dir);
@@ -67,6 +68,7 @@ public void remove(Directory dir) throws IOException {
     File dirFile = new File(val.path);
     FileUtils.deleteDirectory(dirFile);
   }
+  }
 
   @Override
   public void remove(String path) throws IOException {
diff --git a/lucene/dev/branches/lucene_solr_4_2/solr/core/src/test/org/apache/solr/core/CachingDirectoryFactoryTest.java b/lucene/dev/branches/lucene_solr_4_2/solr/core/src/test/org/apache/solr/core/CachingDirectoryFactoryTest.java
index dc2bdb63..81a4d914 100644
--- a/lucene/dev/branches/lucene_solr_4_2/solr/core/src/test/org/apache/solr/core/CachingDirectoryFactoryTest.java
+++ b/lucene/dev/branches/lucene_solr_4_2/solr/core/src/test/org/apache/solr/core/CachingDirectoryFactoryTest.java
@@ -38,6 +38,7 @@
 
 public class CachingDirectoryFactoryTest extends SolrTestCaseJ4 {
   private Map<String,Tracker> dirs = new HashMap<String,Tracker>();
+  private List<Tracker> oldDirs = new ArrayList<Tracker>();
   private volatile boolean stop = false;
   
   private class Tracker {
@@ -90,6 +91,17 @@ public void stressTest() throws Exception {
           }
         }
       }
+      sz = oldDirs.size();
+      if (sz > 0) {
+        for (Tracker tracker : oldDirs) {
+          int cnt = tracker.refCnt.get();
+          for (int i = 0; i < cnt; i++) {
+            tracker.refCnt.decrementAndGet();
+            df.release(tracker.dir);
+          }
+        }
+      }
+      
     }
     
     df.close();
@@ -163,8 +175,19 @@ public void run() {
               tracker.dir = df.get(path, DirContext.DEFAULT, null);
               dirs.put(path, tracker);
             } else {
+              if (random.nextInt(10) > 6) {
+                Tracker oldTracker = new Tracker();
+                oldTracker.refCnt = new AtomicInteger(tracker.refCnt.get());
+                oldTracker.path = tracker.path;
+                oldTracker.dir = tracker.dir;
+                oldDirs.add(oldTracker);
+                
+                tracker.dir = df.get(path, DirContext.DEFAULT, null, true);
+                tracker.refCnt = new AtomicInteger(0);
+              } else {
               tracker.dir = df.get(path, DirContext.DEFAULT, null);
             }
+            }
             tracker.refCnt.incrementAndGet();
           }
           
diff --git a/lucene/dev/branches/lucene_solr_4_2/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java b/lucene/dev/branches/lucene_solr_4_2/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java
index a9d9b9dc..26a26820 100644
--- a/lucene/dev/branches/lucene_solr_4_2/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java
+++ b/lucene/dev/branches/lucene_solr_4_2/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java
@@ -1316,7 +1316,7 @@ public void waitForThingsToLevelOut(int waitForRecTimeSeconds) throws Exception
         retry  = true;
       }
       cnt++;
-      if (cnt > 10) break;
+      if (cnt > 20) break;
       Thread.sleep(2000);
     } while (retry);
   }
