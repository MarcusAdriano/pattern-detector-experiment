diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/Config.java b/cassandra/trunk/src/java/org/apache/cassandra/config/Config.java
index daf41099..44bd3712 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/Config.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/Config.java
@@ -43,7 +43,9 @@
     
     public String rpc_address;
     public Integer rpc_port = 9160;
-    public Boolean thrift_framed_transport = false;
+
+    public Integer thrift_max_message_length_in_mb = 16;
+    public Integer thrift_framed_transport_size_in_mb = 15;
     public Boolean snapshot_before_compaction = false;
     
     public Integer binary_memtable_throughput_in_mb = 256;
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/Converter.java b/cassandra/trunk/src/java/org/apache/cassandra/config/Converter.java
index 0ff1de46..86a975a9 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/Converter.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/Converter.java
@@ -185,9 +185,10 @@ private static void loadPreviousConfig(String config) throws ConfigurationExcept
                 conf.rpc_port = Integer.parseInt(port);
             
             String framedRaw = xmlUtils.getNodeValue("/Storage/ThriftFramedTransport");
-            if (framedRaw != null)
+            if (framedRaw != null && Boolean.valueOf(framedRaw))
             {
-                conf.thrift_framed_transport = Boolean.valueOf(framedRaw);
+                conf.thrift_framed_transport_size_in_mb = 15;
+                System.out.println("TFramedTransport will have a maximum frame size of 15MB");
             }
             
             conf.endpoint_snitch = xmlUtils.getNodeValue("/Storage/EndpointSnitch");
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java b/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
index 37f75766..8d684416 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
@@ -263,6 +263,11 @@ else if (conf.memtable_flush_writers == null)
             if (conf.rpc_address != null)
                 rpcAddress = InetAddress.getByName(conf.rpc_address);
             
+            if (conf.thrift_framed_transport_size_in_mb > 0 && conf.thrift_max_message_length_in_mb < conf.thrift_framed_transport_size_in_mb)
+            {
+                throw new ConfigurationException("thrift_max_message_length_in_mb must be greater than thrift_framed_transport_size_in_mb when using TFramedTransport");
+            }
+            
             /* end point snitch */
             if (conf.endpoint_snitch == null)
             {
@@ -626,7 +631,17 @@ public static IAuthenticator getAuthenticator()
 
     public static boolean isThriftFramed()
     {
-        return conf.thrift_framed_transport;
+        return conf.thrift_framed_transport_size_in_mb > 0;
+    }
+    
+    public static int getThriftMaxMessageLength()
+    {
+        return conf.thrift_max_message_length_in_mb * 1024 * 1024;
+    }
+    
+    public static int getThriftFramedTransportSize() 
+    {
+        return conf.thrift_framed_transport_size_in_mb * 1024 * 1024;
     }
 
     public static AbstractType getComparator(String compareWith) throws ConfigurationException
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/thrift/CassandraDaemon.java b/cassandra/trunk/src/java/org/apache/cassandra/thrift/CassandraDaemon.java
index 8540d310..ede1b228 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/thrift/CassandraDaemon.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/thrift/CassandraDaemon.java
@@ -153,14 +153,18 @@ public void uncaughtException(Thread t, Throwable e)
         logger.info(String.format("Binding thrift service to %s:%s", listenAddr, listenPort));
 
         // Protocol factory
-        TProtocolFactory tProtocolFactory = new TBinaryProtocol.Factory();
+        TProtocolFactory tProtocolFactory = new TBinaryProtocol.Factory(false, 
+                                                                        true, 
+                                                                        DatabaseDescriptor.getThriftMaxMessageLength());
         
         // Transport factory
         TTransportFactory inTransportFactory, outTransportFactory;
         if (DatabaseDescriptor.isThriftFramed())
         {
-            inTransportFactory = new TFramedTransport.Factory();
-            outTransportFactory = new TFramedTransport.Factory();
+            int tFramedTransportSize = DatabaseDescriptor.getThriftFramedTransportSize();
+            inTransportFactory = new TFramedTransport.Factory(tFramedTransportSize);
+            outTransportFactory = new TFramedTransport.Factory(tFramedTransportSize);
+            logger.info("Using TFramedTransport with a max frame size of {} bytes.", tFramedTransportSize);
             
         }
         else
