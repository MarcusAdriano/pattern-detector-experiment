diff --git a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java
index 75b1c041..4f4ef4bf 100644
--- a/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java
+++ b/db/derby/code/trunk/java/drda/org/apache/derby/impl/drda/NetworkServerControlImpl.java
@@ -50,6 +50,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import java.util.Vector;
 
 import org.apache.derby.drda.NetworkServerControl;
+import org.apache.derby.iapi.error.StandardException;
 import org.apache.derby.iapi.jdbc.DRDAServerStarter;
 import org.apache.derby.iapi.reference.Attribute;
 import org.apache.derby.iapi.reference.DRDAConstants;
@@ -662,12 +663,15 @@ public Object run() throws Exception
 				// If we can't shutdown cloudscape. Perhaps authentication is
 				// set to true or some other reason. We will just print a
 				// message to the console and proceed.
-				if (((EmbedSQLException)sqle).getMessageId() !=
-				  SQLState.CLOUDSCAPE_SYSTEM_SHUTDOWN)
+				String expectedState =
+					StandardException.getSQLStateFromIdentifier(
+							SQLState.CLOUDSCAPE_SYSTEM_SHUTDOWN);
+				if (!expectedState.equals(sqle.getSQLState())) {
 					consolePropertyMessage("DRDA_ShutdownWarning.I",
 										   sqle.getMessage());
 			}
 		}
+		}
 
 		consolePropertyMessage("DRDA_ShutdownSuccess.I", new String [] 
 						        {att_srvclsnm, versionString, 
@@ -1555,7 +1559,8 @@ private void sendSQLMessage(DDMWriter writer, SQLException se, int type)
 		//localize message if necessary
 		while (se != null)
 		{
-			if (currentSession != null && currentSession.langUtil != null)
+			if (currentSession != null && currentSession.langUtil != null &&
+				se instanceof EmbedSQLException)
 			{
 				locMsg.append(se.getSQLState()+":"+ 
 					MessageService.getLocalizedMessage(
@@ -3235,7 +3240,10 @@ private void shutdownDatabase(DDMWriter writer, String database, String user,
 			conn.close();
 	  	} catch (SQLException se) {
 			//ignore shutdown error
-			if (!(((EmbedSQLException)se).getMessageId() == SQLState.SHUTDOWN_DATABASE))
+			String expectedState =
+				StandardException.
+					getSQLStateFromIdentifier(SQLState.SHUTDOWN_DATABASE);
+			if (!expectedState.equals(se.getSQLState()))
 			{
 				sendSQLMessage(writer, se, SQLERROR);
 				return;
