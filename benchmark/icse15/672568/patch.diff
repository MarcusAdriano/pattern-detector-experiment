diff --git a/lucene/java/trunk/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java b/lucene/java/trunk/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java
index ddeb9f43..0054b905 100644
--- a/lucene/java/trunk/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java
+++ b/lucene/java/trunk/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/InstantiatedIndexReader.java
@@ -294,7 +294,7 @@ public Document document(int n) throws IOException {
 
   public void norms(String field, byte[] bytes, int offset) throws IOException {
     byte[] norms = getIndex().getNormsByFieldNameAndDocumentNumber().get(field);
-    System.arraycopy(norms, offset, bytes, 0, norms.length);
+    System.arraycopy(norms, 0, bytes, offset, norms.length);
   }
 
   protected void doSetNorm(int doc, String field, byte value) throws IOException {
diff --git a/lucene/java/trunk/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java b/lucene/java/trunk/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java
index a0ec2485..6e05aeaf 100644
--- a/lucene/java/trunk/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java
+++ b/lucene/java/trunk/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestIndicesEquals.java
@@ -252,6 +252,20 @@ protected void testEquals(Directory aprioriIndex, InstantiatedIndex testIndex) t
       }
 
 
+      // test norms as used by multireader
+
+      aprioriNorms = new byte[aprioriReader.maxDoc() + 10];
+      aprioriReader.norms((String) field, aprioriNorms, 10);
+
+      testNorms = new byte[testReader.maxDoc() + 10];
+      testReader.norms((String) field, testNorms, 10);
+
+      assertEquals(aprioriNorms.length, testNorms.length);
+
+      for (int i = 0; i < aprioriNorms.length; i++) {
+        assertEquals("norms does not equals for field " + field + " in document " + i, aprioriNorms[i], testNorms[i]);
+      }
+
     }
 
     for (int docIndex = 0; docIndex < aprioriReader.numDocs(); docIndex++) {
