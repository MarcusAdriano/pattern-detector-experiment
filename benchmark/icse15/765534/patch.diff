diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanPrefUser.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanPrefUser.java
index 46e6865a..00882906 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanPrefUser.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanPrefUser.java
@@ -23,6 +23,7 @@
 import org.apache.mahout.cf.taste.impl.common.ArrayIterator;
 
 import java.io.Serializable;
+import java.util.Arrays;
 
 /**
  * A variant of {@link GenericUser} which is appropriate when users express only a "yes" preference for
@@ -64,6 +65,7 @@ public Preference getPreferenceFor(Object itemID) {
       result[i] = buildPreference(itemID);
       i++;
     }
+    Arrays.sort(result, ByItemPreferenceComparator.getInstance());
     return result;
   }
 
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/file/FileDataModel.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/file/FileDataModel.java
index e52d1ce0..9f987ea1 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/file/FileDataModel.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/file/FileDataModel.java
@@ -360,7 +360,7 @@ public void refresh(Collection<Refreshable> alreadyRefreshed) {
    *  are in fact {@link BooleanPreference}s
    */
   protected User buildUser(String id, List<Preference> prefs) {
-    if (!prefs.isEmpty() || prefs.get(0) instanceof BooleanPreference) {
+    if (!prefs.isEmpty() && prefs.get(0) instanceof BooleanPreference) {
       // If first is a BooleanPreference, assuming all are, so, want to use BooleanPrefUser
       FastSet<Object> itemIDs = new FastSet<Object>(prefs.size());
       for (Preference pref : prefs) {
