diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/db/marshal/UTF8Type.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/db/marshal/UTF8Type.java
index d119fa1b..7e16e5e1 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/db/marshal/UTF8Type.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/db/marshal/UTF8Type.java
@@ -21,31 +21,29 @@
  */
 
 
-import java.io.UnsupportedEncodingException;
+import java.nio.ByteBuffer;
+import java.nio.charset.CharacterCodingException;
+import java.nio.charset.Charset;
+import java.nio.charset.CharsetDecoder;
+import java.util.Arrays;
 
-public class UTF8Type extends AbstractType
+public class UTF8Type extends BytesType
 {
-    public int compare(byte[] o1, byte[] o2)
+    private static final CharsetDecoder utf8Decoder;
+    static
     {
-        try
-        {
-            return new String(o1, "UTF-8").compareTo(new String(o2, "UTF-8"));
-        }
-        catch (UnsupportedEncodingException e)
-        {
-            throw new RuntimeException(e);
-        }
+        utf8Decoder = Charset.forName("UTF-8").newDecoder();
     }
 
     public String getString(byte[] bytes)
     {
         try
         {
-            return new String(bytes, "UTF-8");
+            return utf8Decoder.decode(ByteBuffer.wrap(bytes)).toString();
         }
-        catch (UnsupportedEncodingException e)
+        catch (CharacterCodingException e)
         {
-            throw new RuntimeException(e);
+            throw new MarshalException("invalid UTF8 bytes " + Arrays.toString(bytes));
         }
     }
 }
