diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.java
index a4ed0597..16a2b2a7 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/loader/XMLLoader.java
@@ -381,7 +381,7 @@ public SolrInputDocument readDoc(XMLStreamReader parser) throws XMLStreamExcepti
     float boost = 1.0f;
     boolean isNull = false;
     String update = null;
-    Map<String, Map<String, List<Object>>> updateMap = null;
+    Map<String, Map<String, Object>> updateMap = null;
     boolean complete = false;
     while (!complete) {
       int event = parser.next();
@@ -400,18 +400,27 @@ public SolrInputDocument readDoc(XMLStreamReader parser) throws XMLStreamExcepti
           } else if ("field".equals(parser.getLocalName())) {
             Object v = isNull ? null : text.toString();
             if (update != null) {
-              if (updateMap == null) updateMap = new HashMap<String, Map<String, List<Object>>>();
-              Map<String, List<Object>> extendedValues = updateMap.get(name);
+              if (updateMap == null) updateMap = new HashMap<String, Map<String, Object>>();
+              Map<String, Object> extendedValues = updateMap.get(name);
               if (extendedValues == null) {
-                extendedValues = new HashMap<String, List<Object>>(1);
+                extendedValues = new HashMap<String, Object>(1);
                 updateMap.put(name, extendedValues);
               }
-              List<Object> values = extendedValues.get(update);
-              if (values == null) {
-                values = new ArrayList<Object>();
+              Object val = extendedValues.get(update);
+              if (val == null) {
+                extendedValues.put(update, v);
+              } else {
+                // multiple val are present
+                if (val instanceof List) {
+                  List list = (List) val;
+                  list.add(v);
+                } else {
+                  List<Object> values = new ArrayList<Object>();
+                  values.add(val);
+                  values.add(v);
                 extendedValues.put(update, values);
               }
-              values.add(v);
+              }
               break;
             }
             doc.addField(name, v, boost);
@@ -450,9 +459,9 @@ public SolrInputDocument readDoc(XMLStreamReader parser) throws XMLStreamExcepti
     }
 
     if (updateMap != null)  {
-      for (Map.Entry<String, Map<String, List<Object>>> entry : updateMap.entrySet()) {
+      for (Map.Entry<String, Map<String, Object>> entry : updateMap.entrySet()) {
         name = entry.getKey();
-        Map<String, List<Object>> value = entry.getValue();
+        Map<String, Object> value = entry.getValue();
         doc.addField(name, value, 1.0f);
       }
     }
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest.java b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest.java
index 09b2c47a..ff0819f5 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/test/org/apache/solr/cloud/ShardRoutingTest.java
@@ -118,7 +118,7 @@ public void doTest() throws Exception {
 
       doHashingTest();
       doTestNumRequests();
-      // doAtomicUpdate();  TODO: this currently fails!
+      doAtomicUpdate();
 
       testFinished = true;
     } finally {
