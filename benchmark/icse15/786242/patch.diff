diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/BinaryVerbHandler.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/BinaryVerbHandler.java
index a1a21dbe..feb8acec 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/BinaryVerbHandler.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/BinaryVerbHandler.java
@@ -21,7 +21,6 @@
 import org.apache.cassandra.db.RowMutationVerbHandler.RowMutationContext;
 import org.apache.cassandra.net.IVerbHandler;
 import org.apache.cassandra.net.Message;
-import org.apache.cassandra.service.StorageService;
 import org.apache.cassandra.utils.LogUtil;
 import org.apache.log4j.Logger;
 
@@ -54,7 +53,7 @@ public void doVerb(Message message)
             RowMutationMessage rmMsg = RowMutationMessage.serializer().deserialize(rowMutationCtx.buffer_);
             RowMutation rm = rmMsg.getRowMutation();            	                
             rowMutationCtx.row_.key(rm.key());
-            rm.load(rowMutationCtx.row_);
+            rm.applyBinary(rowMutationCtx.row_);
 	
 	    }        
 	    catch ( Exception e )
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Row.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Row.java
index 709d42ff..71ee8885 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Row.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Row.java
@@ -23,7 +23,6 @@
 import java.io.IOException;
 import java.util.Collection;
 import java.util.HashMap;
-import java.util.Hashtable;
 import java.util.Map;
 import java.util.Set;
 import java.util.Arrays;
@@ -47,7 +46,7 @@ static RowSerializer serializer()
 
     private String key_;
 
-    private Map<String, ColumnFamily> columnFamilies_ = new Hashtable<String, ColumnFamily>();
+    private Map<String, ColumnFamily> columnFamilies_ = new HashMap<String, ColumnFamily>();
 
     protected Row()
     {
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/RowMutation.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/RowMutation.java
index 503a0c27..69122f72 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/RowMutation.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/RowMutation.java
@@ -252,16 +252,17 @@ void apply(Row emptyRow) throws IOException
      * This is equivalent to calling commit. Applies the changes to
      * to the table that is obtained by calling Table.open().
     */
-    void load(Row row) throws IOException, ExecutionException, InterruptedException
+    void applyBinary(Row emptyRow) throws IOException, ExecutionException, InterruptedException
     {
+        assert emptyRow.getColumnFamilies().size() == 0;
         Table table = Table.open(table_);
         Set<String> cfNames = modifications_.keySet();
         for (String cfName : cfNames)
         {
             assert table.isValidColumnFamily(cfName);
-            row.addColumnFamily(modifications_.get(cfName));
+            emptyRow.addColumnFamily(modifications_.get(cfName));
         }
-        table.load(row);
+        table.load(emptyRow);
     }
 
     public Message makeRowMutationMessage() throws IOException
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Table.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Table.java
index 62168e70..aad31162 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Table.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/Table.java
@@ -822,10 +822,10 @@ public void flush(boolean fRecovery) throws IOException
         }
     }
 
+    // for binary load path.  skips commitlog.
     void load(Row row) throws IOException
     {
         String key = row.key();
-        /* Add row to the commit log. */
         long start = System.currentTimeMillis();
                 
         for (ColumnFamily columnFamily : row.getColumnFamilies())
