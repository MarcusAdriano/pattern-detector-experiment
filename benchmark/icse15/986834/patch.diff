diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java
index a6f30b35..200d7394 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/J2EEDataSourceTest.java
@@ -2116,19 +2116,27 @@ public void testConnectionFlowCommit()
      * queries.
      */
     public void testDerby2026LoginTimeout() throws SQLException {
-        DataSource jds = JDBCDataSource.getDataSource();
+        DataSource jds = null;
+        try {
+            jds = JDBCDataSource.getDataSource();
         jds.setLoginTimeout(10);
         Connection conn = jds.getConnection();
         CallableStatement cs = conn.prepareCall("CALL TESTROUTINE.SLEEP(20000)");
         cs.execute();
         //rollback to make sure our connection is ok.
         conn.rollback();
+        } finally {
+            if (jds != null)
+                jds.setLoginTimeout(0);
+        }
         
-        ConnectionPoolDataSource cpds = J2EEDataSource.getConnectionPoolDataSource();        
+        ConnectionPoolDataSource cpds = null;
+        try {
+            cpds = J2EEDataSource.getConnectionPoolDataSource();        
         cpds.setLoginTimeout(10);
         PooledConnection pc = cpds.getPooledConnection();
-        conn = pc.getConnection();
-        cs = conn.prepareCall("CALL TESTROUTINE.SLEEP(20000)");
+            Connection conn = pc.getConnection();
+            CallableStatement cs = conn.prepareCall("CALL TESTROUTINE.SLEEP(20000)");
         cs.execute();
         //rollback to make sure our connection is ok.
         conn.rollback();
@@ -2141,13 +2149,18 @@ public void testDerby2026LoginTimeout() throws SQLException {
         cs.execute();
         //rollback to make sure our connection is ok.
         conn.rollback();
+        } finally {
+            if (cpds != null)
+                cpds.setLoginTimeout(0);
+        }
         
-        
-        XADataSource xads = J2EEDataSource.getXADataSource();        
+        XADataSource xads = null;
+        try {
+            xads = J2EEDataSource.getXADataSource();        
         xads.setLoginTimeout(10);
         XAConnection xac = xads.getXAConnection();
-        conn = pc.getConnection();
-        cs = conn.prepareCall("CALL TESTROUTINE.SLEEP(20000)");
+            Connection conn = xac.getConnection();
+            CallableStatement cs = conn.prepareCall("CALL TESTROUTINE.SLEEP(20000)");
         cs.execute();
         //rollback to make sure our connection is ok.
         conn.rollback();
@@ -2155,12 +2168,15 @@ public void testDerby2026LoginTimeout() throws SQLException {
         // Close the logical connection and get a new one.
         // This will invoke reset which also needs its timeout reset
         conn.close();
-        conn = pc.getConnection();
+            conn = xac.getConnection();
         cs = conn.prepareCall("CALL TESTROUTINE.SLEEP(20000)");
         cs.execute();
         //rollback to make sure our connection is ok.
         conn.rollback();
-        
+        } finally {
+            if (xads != null)
+                xads.setLoginTimeout(0);
+        }
     }
     
     /**
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ConnectTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ConnectTest.java
index 9e80ad7e..2af7cbda 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ConnectTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ConnectTest.java
@@ -156,6 +156,7 @@ public void testGrantAndRevoke() throws SQLException {
     public void clientTestDerby2026LoginTimeout() throws SQLException  {
         String url = "jdbc:derby://" + TestConfiguration.getCurrent().getHostName() +":" +
         TestConfiguration.getCurrent().getPort() + "/" + TestConfiguration.getCurrent().getDefaultDatabaseName();
+        try {
         DriverManager.setLoginTimeout(10);
         //System.out.println(url);
         try {
@@ -169,6 +170,9 @@ public void clientTestDerby2026LoginTimeout() throws SQLException  {
         cs.execute();
         //rollback to make sure our connection is ok.
         conn.rollback();
+        } finally {
+            DriverManager.setLoginTimeout(0);
+        }
     }
     
 }
