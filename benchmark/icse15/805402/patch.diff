diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericBooleanPrefDataModel.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericBooleanPrefDataModel.java
index 01efdcea..b924c110 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericBooleanPrefDataModel.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericBooleanPrefDataModel.java
@@ -112,7 +112,7 @@ public GenericBooleanPrefDataModel(DataModel dataModel) throws TasteException {
     return data;
   }
 
-  public static FastByIDMap<FastIDSet> toDataMap(FastByIDMap<PreferenceArray> data) throws TasteException {
+  public static FastByIDMap<FastIDSet> toDataMap(FastByIDMap<PreferenceArray> data) {
     for (Map.Entry<Long, Object> entry : ((FastByIDMap<Object>) (FastByIDMap<?>) data).entrySet()) {
       PreferenceArray prefArray = (PreferenceArray) entry.getValue();
       int size = prefArray.length();
@@ -180,7 +180,7 @@ public PreferenceArray getPreferencesForItem(long itemID) throws NoSuchItemExcep
   }
 
   @Override
-  public Float getPreferenceValue(long userID, long itemID) throws NoSuchUserException, NoSuchItemException {
+  public Float getPreferenceValue(long userID, long itemID) throws NoSuchUserException {
     FastIDSet itemIDs = preferenceFromUsers.get(userID);
     if (itemIDs == null) {
       throw new NoSuchUserException();
@@ -219,17 +219,18 @@ public int getNumUsersWithPreferenceFor(long... itemIDs) throws NoSuchItemExcept
         throw new NoSuchItemException();
       }
       intersection.retainAll(userIDs);
+      i++;
     }
     return intersection.size();
   }
 
   @Override
-  public void removePreference(long userID, long itemID) throws NoSuchUserException {
+  public void removePreference(long userID, long itemID) {
     throw new UnsupportedOperationException();
   }
 
   @Override
-  public void setPreference(long userID, long itemID, float value) throws NoSuchUserException {
+  public void setPreference(long userID, long itemID, float value) {
     throw new UnsupportedOperationException();
   }
 
