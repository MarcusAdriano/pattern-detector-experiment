diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
index 9b6cc883..b446ac52 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
@@ -513,10 +513,12 @@ else if (XMLUtils.getAttributeValue(columnFamily, "CompareSubcolumnsWith") != nu
             }
 
             // Hardcoded system tables
+            tables_.add(Table.SYSTEM_TABLE);
             Map<String, CFMetaData> systemMetadata = new HashMap<String, CFMetaData>();
 
             CFMetaData data = new CFMetaData();
-            data.comparator = new AsciiType();
+            data.columnType = "Standard";
+            data.comparator = new UTF8Type();
             systemMetadata.put(SystemTable.LOCATION_CF, data);
 
             data = new CFMetaData();
@@ -524,8 +526,8 @@ else if (XMLUtils.getAttributeValue(columnFamily, "CompareSubcolumnsWith") != nu
             data.comparator = new UTF8Type();
             data.subcolumnComparator = new BytesType();
             systemMetadata.put(HintedHandOffManager.HINTS_CF, data);
-
-            tableToCFMetaDataMap_.put("system", systemMetadata);
+            tableToCFMetaDataMap_.put(Table.SYSTEM_TABLE, systemMetadata);
+            tableKeysCachedFractions_.put(Table.SYSTEM_TABLE, 0.01);
 
             /* make sure we have a directory for each table */
             createTableDirectories();
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/CommitLog.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/CommitLog.java
index 3e644de9..1774f4cc 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/CommitLog.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/CommitLog.java
@@ -289,12 +289,6 @@ void recover(File[] clogs) throws IOException
                 /* remove column families that have already been flushed */
                 for (ColumnFamily columnFamily : columnFamilies)
                 {
-                    /* TODO: Remove this to not process Hints */
-                    if (!DatabaseDescriptor.isApplicationColumnFamily(columnFamily.name()))
-                    {
-                        row.removeColumnFamily(columnFamily);
-                        continue;
-                    }
                     int id = table.getColumnFamilyId(columnFamily.name());
                     if (!clHeader.isDirty(id) || reader.getFilePointer() < clHeader.getPosition(id))
                     {
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/SystemTable.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/SystemTable.java
index cb5776d3..5bdd8ad6 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/SystemTable.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/db/SystemTable.java
@@ -27,9 +27,10 @@
 import org.apache.cassandra.dht.Token;
 import org.apache.cassandra.dht.IPartitioner;
 import org.apache.cassandra.utils.BasicUtilities;
-import org.apache.cassandra.db.filter.NamesQueryFilter;
+import org.apache.cassandra.db.filter.IdentityQueryFilter;
 import org.apache.cassandra.db.filter.QueryPath;
 import org.apache.cassandra.db.filter.QueryFilter;
+import org.apache.cassandra.db.filter.NamesQueryFilter;
 
 /**
  * Author : Avinash Lakshman ( alakshman@facebook.com) & Prashant Malik ( pmalik@facebook.com )
@@ -88,7 +89,7 @@ public static StorageMetadata initMetadata() throws IOException
     {
         /* Read the system table to retrieve the storage ID and the generation */
         Table table = Table.open(Table.SYSTEM_TABLE);
-        QueryFilter filter = new NamesQueryFilter(LOCATION_KEY, new QueryPath(LOCATION_CF), GENERATION);
+        QueryFilter filter = new IdentityQueryFilter(LOCATION_KEY, new QueryPath(LOCATION_CF));
         ColumnFamily cf = table.getColumnFamilyStore(LOCATION_CF).getColumnFamily(filter);
 
         IPartitioner p = StorageService.getPartitioner();
diff --git a/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/SSTableReader.java b/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/SSTableReader.java
index 21d224aa..71b51a97 100644
--- a/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/SSTableReader.java
+++ b/incubator/cassandra/trunk/src/java/org/apache/cassandra/io/SSTableReader.java
@@ -333,10 +333,7 @@ public AbstractType getColumnComparator()
 
     public ColumnFamily makeColumnFamily()
     {
-        return new ColumnFamily(getColumnFamilyName(),
-                                DatabaseDescriptor.getColumnType(getTableName(), getColumnFamilyName()),
-                                getColumnComparator(),
-                                DatabaseDescriptor.getSubComparator(getTableName(), getColumnFamilyName()));
+        return ColumnFamily.create(getTableName(), getColumnFamilyName());
     }
 
     public static void deleteAll() throws IOException
