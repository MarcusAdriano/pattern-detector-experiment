diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/derbyStress.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/derbyStress.java
index 5c1e3e5b..53b5d220 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/derbyStress.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/derbyStress.java
@@ -53,6 +53,9 @@ public static void main(String[] args) {
 				 System.out.println("PASS -- Prepared statement test");
 				 conn.close();
 			}
+
+			reExecuteStatementTest();
+
 			System.out.println("Test derbyStress finished.");
 		} catch (SQLException se) {
 			TestUtil.dumpSQLExceptions(se);
@@ -85,6 +88,9 @@ private static void createTables(Connection conn, int numRows) throws SQLExcepti
 	// user (DERBY-210)
 	private static void prepStmtTest(Connection conn, int numRows, int numPreparedStmts) throws Exception
 	{
+		// Don't run under DerbyNetClient until DERBY-210 is fixed
+		if (TestUtil.isDerbyNetClientFramework()) return;
+
 		PreparedStatement ps = null;
 		ResultSet rs = null;
 		conn.setAutoCommit(false);
@@ -117,4 +123,19 @@ private static void prepStmtTest(Connection conn, int numRows, int numPreparedSt
 			conn.rollback();
 		}
 	}
+
+	// Tests re-execution of a statement without closing the result
+	// set (DERBY-557).
+	private static void reExecuteStatementTest() throws Exception {
+		System.out.print("DERBY-557: reExecuteStatementTest() ");
+		Connection conn = ij.startJBMS();
+		Statement stmt = conn.createStatement();
+		for (int i = 0; i < 50000; i++) {
+			ResultSet rs = stmt.executeQuery("values(1)");
+			// How silly! I forgot to close the result set.
+		}
+		stmt.close();
+		conn.close();
+		System.out.println("PASSED");
+	}
 }
