diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/TransactionTable.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/TransactionTable.java
index ea900cd7..68343ba6 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/TransactionTable.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/xact/TransactionTable.java
@@ -337,10 +337,10 @@ void prepareTransaction(TransactionId id)
     /**
      * Find a transaction in the table by Global transaction id.
      * <p>
-     * Only called by XactXAResourceManager.find() during offline recovery
-     * of in-doubt transactions, we do not expect this to be called often 
-     * so performance is not critical.  Just to linear search of id's. 
-     * <p>
+     * This routine use to be only called during offline recovery so performance
+     * was not critical.  Since that time more calls have been made, including
+     * one in startGlobalTransaction() so a linear search may no longer
+     * be appropriate.  See DERBY-828.
      *
 	 * @return The ContextManager of the transaction being searched for.
      *
@@ -359,13 +359,17 @@ public ContextManager findTransactionContextByGlobalId(
                 TransactionTableEntry entry = 
                     (TransactionTableEntry) e.nextElement();
 
-                if (entry.getGid() != null && 
-					entry.getGid().equals(global_id))
+                if (entry != null)
+                {
+                    GlobalTransactionId entry_gid = entry.getGid();
+
+                    if (entry_gid != null && entry_gid.equals(global_id))
                 {
                     cm = entry.getXact().getContextManager();
                     break;
                 }
             }
+        }
         }
               
 		return(cm);
