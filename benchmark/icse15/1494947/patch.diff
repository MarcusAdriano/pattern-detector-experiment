diff --git a/db/derby/code/branches/10.9/java/engine/org/apache/derby/jdbc/AutoloadedDriver.java b/db/derby/code/branches/10.9/java/engine/org/apache/derby/jdbc/AutoloadedDriver.java
index 1eb54c50..517b3962 100644
--- a/db/derby/code/branches/10.9/java/engine/org/apache/derby/jdbc/AutoloadedDriver.java
+++ b/db/derby/code/branches/10.9/java/engine/org/apache/derby/jdbc/AutoloadedDriver.java
@@ -27,18 +27,17 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import java.sql.DriverPropertyInfo;
 import java.sql.SQLException;
 
-import java.io.PrintStream;
+import java.security.AccessControlException;
 import java.security.AccessController;
 import java.security.PrivilegedActionException;
 import java.security.PrivilegedExceptionAction;
 import java.util.Properties;
 
 import org.apache.derby.iapi.reference.MessageId;
-import org.apache.derby.iapi.reference.Attribute;
 import org.apache.derby.iapi.reference.SQLState;
 import org.apache.derby.iapi.services.i18n.MessageService;
 import org.apache.derby.iapi.services.sanity.SanityManager;
-import org.apache.derby.iapi.jdbc.JDBCBoot;
+import org.apache.derby.iapi.services.monitor.Monitor;
 import org.apache.derby.impl.jdbc.Util;
 
 
@@ -281,6 +280,14 @@ public Object run() throws SQLException {
             });
         } catch (PrivilegedActionException pae) {
             throw (SQLException) pae.getCause();
+        } catch (AccessControlException ace) {
+            // Since no permission was needed for deregisterDriver() before
+            // Java 8, applications may be surprised to find that engine
+            // shutdown fails because of it. For backward compatibility,
+            // don't fail shutdown if the permission is missing. Instead,
+            // log a message saying the driver could not be deregistered.
+            Monitor.logTextMessage(MessageId.CONN_DEREGISTER_NOT_PERMITTED);
+            Monitor.logThrowable(ace);
         }
     }
 
diff --git a/db/derby/code/branches/10.9/java/shared/org/apache/derby/shared/common/reference/MessageId.java b/db/derby/code/branches/10.9/java/shared/org/apache/derby/shared/common/reference/MessageId.java
index 68e01bfd..31d2afcc 100644
--- a/db/derby/code/branches/10.9/java/shared/org/apache/derby/shared/common/reference/MessageId.java
+++ b/db/derby/code/branches/10.9/java/shared/org/apache/derby/shared/common/reference/MessageId.java
@@ -174,6 +174,9 @@ Licensed to the Apache Software Foundation (ASF) under one or more
     String CONN_XA_TRANSACTION_TIMED_OUT                    = "J135";
     String CONN_CLOSE_XA_TRANSACTION_ROLLED_BACK            = "J136";
 
+    /** Shutdown couldn't deregister driver because of missing permission. */
+    String CONN_DEREGISTER_NOT_PERMITTED = "J137";
+
 	/*
 	** Authentication
 	*/
diff --git a/db/derby/code/branches/10.9/java/testing/org/apache/derbyTesting/functionTests/tests/engine/ShutdownWithoutDeregisterPermissionTest.java b/db/derby/code/branches/10.9/java/testing/org/apache/derbyTesting/functionTests/tests/engine/ShutdownWithoutDeregisterPermissionTest.java
index 3f24d583..678f8de5 100644
--- a/db/derby/code/branches/10.9/java/testing/org/apache/derbyTesting/functionTests/tests/engine/ShutdownWithoutDeregisterPermissionTest.java
+++ b/db/derby/code/branches/10.9/java/testing/org/apache/derbyTesting/functionTests/tests/engine/ShutdownWithoutDeregisterPermissionTest.java
@@ -1 +1,84 @@
   + native
+/*
+
+   Derby - Class org.apache.derbyTesting.functionTests.tests.engine.ShutdownWithoutDeregisterPermissionTest
+
+   Licensed to the Apache Software Foundation (ASF) under one or more
+   contributor license agreements.  See the NOTICE file distributed with
+   this work for additional information regarding copyright ownership.
+   The ASF licenses this file to You under the Apache License, Version 2.0
+   (the "License"); you may not use this file except in compliance with
+   the License.  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+
+ */
+
+package org.apache.derbyTesting.functionTests.tests.engine;
+
+import java.sql.Driver;
+import java.sql.DriverManager;
+import java.sql.SQLException;
+import java.util.Enumeration;
+import junit.framework.Test;
+import org.apache.derbyTesting.junit.BaseJDBCTestCase;
+import org.apache.derbyTesting.junit.JDBC;
+import org.apache.derbyTesting.junit.SecurityManagerSetup;
+import org.apache.derbyTesting.junit.TestConfiguration;
+
+/**
+ * Test that shutdown works even if derby.jar does not have permission to
+ * deregister the JDBC driver. Regression test case for DERBY-6224.
+ */
+public class ShutdownWithoutDeregisterPermissionTest extends BaseJDBCTestCase {
+    public ShutdownWithoutDeregisterPermissionTest(String name) {
+        super(name);
+    }
+
+    public static Test suite() {
+        return new SecurityManagerSetup(
+                TestConfiguration.embeddedSuite(
+                        ShutdownWithoutDeregisterPermissionTest.class),
+                "org/apache/derbyTesting/functionTests/tests/engine/" +
+                "noDeregisterPermission.policy");
+    }
+
+    public void testShutdownWithoutPermission() throws SQLException {
+        // First get a connection to make sure the engine is booted.
+        getConnection().close();
+
+        // Shut down the engine. This used to fail with an
+        // AccessControlException on Java 8 before DERBY-6224.
+        TestConfiguration config = TestConfiguration.getCurrent();
+        config.shutdownEngine();
+
+        // Test whether shutdown deregistered the driver. On versions prior
+        // to Java 8/JDBC 4.2, we expect the driver to be deregistered even
+        // though the permission is missing, and the call to getDrivers()
+        // should not return any instance of AutoloadedDriver.
+        // On Java 8/JDBC 4.2 and higher, we expect AutoloadedDriver to
+        // be in the list of registered drivers.
+
+        Enumeration drivers = DriverManager.getDrivers();
+        Driver found = null;
+        while (found == null && drivers.hasMoreElements()) {
+            Driver driver = (Driver) drivers.nextElement();
+            if (driver.getClass().getName().startsWith(
+                    "org.apache.derby.jdbc.AutoloadedDriver")) {
+                found = driver;
+            }
+        }
+
+        if (JDBC.vmSupportsJDBC42()) {
+            assertNotNull("Expected driver to be registered", found);
+        } else {
+            assertNull("Expected driver to be deregistered", found);
+        }
+    }
+}
diff --git a/db/derby/code/branches/10.9/java/testing/org/apache/derbyTesting/functionTests/tests/engine/_Suite.java b/db/derby/code/branches/10.9/java/testing/org/apache/derbyTesting/functionTests/tests/engine/_Suite.java
index 5676e5e6..98098c00 100644
--- a/db/derby/code/branches/10.9/java/testing/org/apache/derbyTesting/functionTests/tests/engine/_Suite.java
+++ b/db/derby/code/branches/10.9/java/testing/org/apache/derbyTesting/functionTests/tests/engine/_Suite.java
@@ -24,6 +24,7 @@ Licensed to the Apache Software Foundation (ASF) under one
 import junit.framework.Test;
 import junit.framework.TestSuite;
 import org.apache.derbyTesting.junit.BaseTestCase;
+import org.apache.derbyTesting.junit.JDBC;
 
 /**
  * Suite to run all JUnit tests in this package:
@@ -52,6 +53,10 @@ public static Test suite() throws Exception {
         if (!(isIBMJVM() && isJava7()))
             suite.addTest(RestrictiveFilePermissionsTest.suite());
         suite.addTest(ModuleLoadingTest.suite());
+        if (JDBC.vmSupportsJDBC3()) {
+            // Test that requires DriverManager.
+            suite.addTest(ShutdownWithoutDeregisterPermissionTest.suite());
+        }
 
         return suite;
     }
