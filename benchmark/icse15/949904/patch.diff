diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/Config.java b/cassandra/trunk/src/java/org/apache/cassandra/config/Config.java
index 91ade14b..53bb62e7 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/Config.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/Config.java
@@ -34,6 +34,7 @@
     public Integer concurrent_reads = 8;
     public Integer concurrent_writes = 32;
     
+    public Integer memtable_flush_writers = null; // will get set to the length of data dirs in DatabaseDescriptor
     
     public Double flush_data_buffer_size_in_mb = new Double(32);
     public Double flush_index_buffer_size_in_mb = new Double(8);
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java b/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
index 84d1213e..a6685ddd 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
@@ -219,6 +219,16 @@ else if (conf.disk_access_mode == Config.DiskAccessMode.mmap_index_only)
                 throw new ConfigurationException("concurrent_writes must be at least 2");
             }
             
+            /* Memtable flush writer threads */
+            if (conf.memtable_flush_writers != null && conf.memtable_flush_writers < 1)
+            {
+                throw new ConfigurationException("memtable_flush_writers must be at least 1");
+            }
+            else if (conf.memtable_flush_writers == null)
+            {
+                conf.memtable_flush_writers = conf.data_file_directories.length;
+            }
+
             /* Local IP or hostname to bind services to */
             if (conf.listen_address != null)
             {
@@ -780,6 +790,11 @@ public static int getConcurrentWriters()
         return conf.concurrent_writes;
     }
 
+    public static int getFlushWriters()
+    {
+            return conf.memtable_flush_writers;
+    }
+
     public static long getRowWarningThreshold()
     {
         return conf.row_warning_threshold_in_mb * 1024 * 1024;
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java b/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
index 79b00de6..44129b3a 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
@@ -87,10 +87,10 @@
                                                new NamedThreadFactory("FLUSH-SORTER-POOL"));
     private static ExecutorService flushWriter_
             = new JMXEnabledThreadPoolExecutor(1,
-                                               DatabaseDescriptor.getAllDataFileLocations().length,
+                                               DatabaseDescriptor.getFlushWriters(),
                                                StageManager.KEEPALIVE,
                                                TimeUnit.SECONDS,
-                                               new LinkedBlockingQueue<Runnable>(DatabaseDescriptor.getAllDataFileLocations().length),
+                                               new LinkedBlockingQueue<Runnable>(DatabaseDescriptor.getFlushWriters()),
                                                new NamedThreadFactory("FLUSH-WRITER-POOL"));
     private static ExecutorService commitLogUpdater_ = new JMXEnabledThreadPoolExecutor("MEMTABLE-POST-FLUSHER");
 
