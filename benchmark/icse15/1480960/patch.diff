diff --git a/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/store/ClobReclamationTest.java b/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/store/ClobReclamationTest.java
index 695e8215..fe972a69 100644
--- a/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/store/ClobReclamationTest.java
+++ b/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/store/ClobReclamationTest.java
@@ -27,15 +27,13 @@
 import java.sql.SQLException;
 import java.sql.Statement;
 
-import java.util.Properties;
-
 import junit.framework.Test;
 
+import org.apache.derby.iapi.services.sanity.SanityManager;
 import org.apache.derbyTesting.functionTests.util.Formatters;
 import org.apache.derbyTesting.junit.BaseJDBCTestCase;
 import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
 import org.apache.derbyTesting.junit.JDBC;
-import org.apache.derbyTesting.junit.SystemPropertyTestSetup;
 import org.apache.derbyTesting.junit.TestConfiguration;
 
 /**
@@ -282,17 +280,17 @@ public void testBlobLinkedListReclamationOnRollback() throws SQLException {
     }
     
     public static Test suite() {
-
-        Properties sysProps = new Properties();
-        sysProps.put("derby.debug.true", "DaemonTrace");
         Test suite = TestConfiguration.embeddedSuite(ClobReclamationTest.class);
-        return new CleanDatabaseTestSetup(new SystemPropertyTestSetup(suite,
-                sysProps, true)) {
+        return new CleanDatabaseTestSetup(suite) {
             /**
              * Creates the table used in the test cases.
              * 
              */
             protected void decorateSQL(Statement s) throws SQLException {
+                if (SanityManager.DEBUG) {
+                    SanityManager.DEBUG_SET("DaemonTrace");
+                }
+
                 Connection conn = s.getConnection();
                 s
                         .executeUpdate("CREATE TABLE CLOBTAB (I INT  PRIMARY KEY NOT NULL, c CLOB)");
@@ -308,6 +306,13 @@ protected void decorateSQL(Statement s) throws SQLException {
                 s.executeUpdate("CREATE TABLE CLOBTAB3 (I INT, C CLOB)");                
             }
 
+            protected void tearDown() throws Exception {
+                if (SanityManager.DEBUG) {
+                    SanityManager.DEBUG_CLEAR("DaemonTrace");
+                }
+                super.tearDown();
+            }
+
         };
 
     }
