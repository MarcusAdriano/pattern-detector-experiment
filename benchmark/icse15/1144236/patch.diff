diff --git a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestSpanQueryFilter.java b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestSpanQueryFilter.java
index 57d334b9..01f75a90 100644
--- a/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestSpanQueryFilter.java
+++ b/lucene/dev/trunk/lucene/src/test/org/apache/lucene/search/TestSpanQueryFilter.java
@@ -47,13 +47,12 @@ public void testFilterWorks() throws Exception {
     writer.close();
     AtomicReaderContext[] leaves = ReaderUtil.leaves(reader.getTopReaderContext());
     int subIndex = ReaderUtil.subIndex(number, leaves); // find the reader with this document in it
-    
     SpanTermQuery query = new SpanTermQuery(new Term("field", English.intToEnglish(number).trim()));
     SpanQueryFilter filter = new SpanQueryFilter(query);
     SpanFilterResult result = filter.bitSpans(leaves[subIndex]);
     DocIdSet docIdSet = result.getDocIdSet();
     assertTrue("docIdSet is null and it shouldn't be", docIdSet != null);
-    assertContainsDocId("docIdSet doesn't contain docId 10", docIdSet, number);
+    assertContainsDocId("docIdSet doesn't contain docId 10", docIdSet, number - leaves[subIndex].docBase);
     List<SpanFilterResult.PositionInfo> spans = result.getPositions();
     assertTrue("spans is null and it shouldn't be", spans != null);
     int size = getDocIdSetSize(docIdSet);
