diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/execute/ScrollInsensitiveResultSet.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/execute/ScrollInsensitiveResultSet.java
index 2ee0b690..9ad5fc25 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/execute/ScrollInsensitiveResultSet.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/execute/ScrollInsensitiveResultSet.java
@@ -1125,11 +1125,14 @@ public void markRowAsDeleted() throws StandardException  {
 	 * @exception StandardException on error
 	 */
 	public boolean isDeleted() throws StandardException  {
+		if (currentPosition <= positionInSource && currentPosition > 0) {
 		positionInHashTable.setValue(currentPosition);
 		DataValueDescriptor[] hashRowArray = (DataValueDescriptor[]) 
 				ht.get(positionInHashTable);
 		return hashRowArray[POS_ROWDELETED].getBoolean();
 	}
+		return false;
+	}
 
 	/**
 	 * Returns TRUE if the row was been updated within the transaction,
@@ -1140,11 +1143,14 @@ public boolean isDeleted() throws StandardException  {
 	 * @exception StandardException on error
 	 */
 	public boolean isUpdated() throws StandardException {
+		if (currentPosition <= positionInSource && currentPosition > 0) {
 		positionInHashTable.setValue(currentPosition);
 		DataValueDescriptor[] hashRowArray = (DataValueDescriptor[]) 
 				ht.get(positionInHashTable);
 		return hashRowArray[POS_ROWUPDATED].getBoolean();			
 	}
+		return false;
+	}
 
 	public boolean isForUpdate() {
 		return source.isForUpdate();
