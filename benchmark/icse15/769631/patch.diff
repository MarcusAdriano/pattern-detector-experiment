diff --git a/incubator/cassandra/trunk/src/org/apache/cassandra/net/SelectorManager.java b/incubator/cassandra/trunk/src/org/apache/cassandra/net/SelectorManager.java
index f8443a5d..c63087a5 100644
--- a/incubator/cassandra/trunk/src/org/apache/cassandra/net/SelectorManager.java
+++ b/incubator/cassandra/trunk/src/org/apache/cassandra/net/SelectorManager.java
@@ -52,7 +52,6 @@ private SelectorManager(String name)
         }
 
         setDaemon(false);
-        start();
     }
 
     /**
diff --git a/incubator/cassandra/trunk/src/org/apache/cassandra/service/StorageService.java b/incubator/cassandra/trunk/src/org/apache/cassandra/service/StorageService.java
index 7bc79881..cb33edbb 100644
--- a/incubator/cassandra/trunk/src/org/apache/cassandra/service/StorageService.java
+++ b/incubator/cassandra/trunk/src/org/apache/cassandra/service/StorageService.java
@@ -82,8 +82,9 @@
 import org.apache.cassandra.net.IVerbHandler;
 import org.apache.cassandra.net.Message;
 import org.apache.cassandra.net.MessagingService;
-import org.apache.cassandra.net.io.StreamContextManager;
+import org.apache.cassandra.net.SelectorManager;
 import org.apache.cassandra.net.http.HttpConnection;
+import org.apache.cassandra.net.io.StreamContextManager;
 import org.apache.cassandra.locator.IEndPointSnitch;
 import org.apache.cassandra.locator.TokenMetadata;
 import org.apache.cassandra.locator.IReplicaPlacementStrategy;
@@ -427,11 +428,8 @@ public void registerComponentForShutdown(IComponentShutdown component)
     
     public void start() throws IOException
     {
-        /* Start the DB */
         storageMetadata_ = DBManager.instance().start();  
-        /* Set up TCP endpoint */
         tcpAddr_ = new EndPoint(DatabaseDescriptor.getStoragePort());
-        /* Set up UDP endpoint */
         udpAddr_ = new EndPoint(DatabaseDescriptor.getControlPort());
         /* Listen for application messages */
         MessagingService.getMessagingInstance().listen(tcpAddr_, false);
@@ -439,6 +437,10 @@ public void start() throws IOException
         MessagingService.getMessagingInstance().listenUDP(udpAddr_);
         /* Listen for HTTP messages */
         MessagingService.getMessagingInstance().listen( new EndPoint(DatabaseDescriptor.getHttpPort() ), true );
+
+        SelectorManager.getSelectorManager().start();
+        SelectorManager.getUdpSelectorManager().start();
+
         /* start the analytics context package */
         AnalyticsContext.instance().start();
         /* starts a load timer thread */
