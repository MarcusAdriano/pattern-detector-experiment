diff --git a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xCodec.java b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xCodec.java
index 4936d2a4..e09509e8 100644
--- a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xCodec.java
+++ b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xCodec.java
@@ -68,12 +68,7 @@ public Lucene3xCodec() {
   static final String COMPOUND_FILE_STORE_EXTENSION = "cfx";
   
   // TODO: this should really be a different impl
-  private final LiveDocsFormat liveDocsFormat = new Lucene40LiveDocsFormat() {
-    @Override
-    public void writeLiveDocs(MutableBits bits, Directory dir, SegmentInfoPerCommit info, int newDelCount, IOContext context) throws IOException {
-      throw new UnsupportedOperationException("this codec can only be used for reading");
-    }
-  };
+  private final LiveDocsFormat liveDocsFormat = new Lucene40LiveDocsFormat();
   
   // 3.x doesn't support docvalues
   private final DocValuesFormat docValuesFormat = new DocValuesFormat() {
diff --git a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java
index 0323ac3c..858f3560 100644
--- a/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java
+++ b/lucene/dev/branches/branch_4x/lucene/core/src/java/org/apache/lucene/index/SegmentInfos.java
@@ -380,12 +380,13 @@ private void write(Directory directory) throws IOException {
 
           if (!segmentWasUpgraded(directory, si)) {
 
+            String markerFileName = IndexFileNames.segmentFileName(si.name, "upgraded", Lucene3xSegmentInfoFormat.UPGRADED_SI_EXTENSION);
+            si.addFile(markerFileName);
+
             final String segmentFileName = write3xInfo(directory, si, IOContext.DEFAULT);
             upgradedSIFiles.add(segmentFileName);
             directory.sync(Collections.singletonList(segmentFileName));
 
-            String markerFileName = IndexFileNames.segmentFileName(si.name, "upgraded", Lucene3xSegmentInfoFormat.UPGRADED_SI_EXTENSION);
-
             // Write separate marker file indicating upgrade
             // is completed.  This way, if there is a JVM
             // kill/crash, OS crash, power loss, etc. while
diff --git a/lucene/dev/branches/branch_4x/lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility.java b/lucene/dev/branches/branch_4x/lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility.java
index d5ace549..1debbe26 100644
--- a/lucene/dev/branches/branch_4x/lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility.java
+++ b/lucene/dev/branches/branch_4x/lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility.java
@@ -302,6 +302,51 @@ public void testIndexOldIndex() throws IOException {
     }
   }
 
+  /** @deprecated 3.x transition mechanism */
+  @Deprecated
+  public void testDeleteOldIndex() throws IOException {
+    for (String name : oldNames) {
+      if (VERBOSE) {
+        System.out.println("TEST: oldName=" + name);
+      }
+      
+      // Try one delete:
+      Directory dir = newDirectory(oldIndexDirs.get(name));
+
+      IndexReader ir = DirectoryReader.open(dir);       
+      assertEquals(35, ir.numDocs());
+      ir.close();
+
+      IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));
+      iw.deleteDocuments(new Term("id", "3"));
+      iw.close();
+
+      ir = DirectoryReader.open(dir);
+      assertEquals(34, ir.numDocs());
+      ir.close();
+
+      // Delete all but 1 document:
+      iw = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, null));
+      for(int i=0;i<35;i++) {
+        iw.deleteDocuments(new Term("id", ""+i));
+      }
+
+      // Verify NRT reader takes:
+      ir = DirectoryReader.open(iw, true);
+      iw.close();
+      
+      assertEquals("index " + name, 1, ir.numDocs());
+      ir.close();
+
+      // Verify non-NRT reader takes:
+      ir = DirectoryReader.open(dir);
+      assertEquals("index " + name, 1, ir.numDocs());
+      ir.close();
+
+      dir.close();
+    }
+  }
+
   private void doTestHits(ScoreDoc[] hits, int expectedCount, IndexReader reader) throws IOException {
     final int hitCount = hits.length;
     assertEquals("wrong number of hits", expectedCount, hitCount);
diff --git a/lucene/dev/branches/branch_4x/lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWCodec.java b/lucene/dev/branches/branch_4x/lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWCodec.java
index 8694ba90..3b4718b5 100644
--- a/lucene/dev/branches/branch_4x/lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWCodec.java
+++ b/lucene/dev/branches/branch_4x/lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWCodec.java
@@ -38,8 +38,6 @@
   private final TermVectorsFormat termVectors = new PreFlexRWTermVectorsFormat();
   private final SegmentInfoFormat segmentInfos = new PreFlexRWSegmentInfoFormat();
   private final StoredFieldsFormat storedFields = new PreFlexRWStoredFieldsFormat();
-  // TODO: this should really be a different impl
-  private final LiveDocsFormat liveDocs = new Lucene40LiveDocsFormat();
   
   @Override
   public PostingsFormat postingsFormat() {
@@ -86,15 +84,6 @@ public TermVectorsFormat termVectorsFormat() {
     }
   }
 
-  @Override
-  public LiveDocsFormat liveDocsFormat() {
-    if (LuceneTestCase.PREFLEX_IMPERSONATION_IS_ACTIVE) {
-      return liveDocs;
-    } else {
-      return super.liveDocsFormat();
-    }
-  }
-
   @Override
   public StoredFieldsFormat storedFieldsFormat() {
     if (LuceneTestCase.PREFLEX_IMPERSONATION_IS_ACTIVE) {
