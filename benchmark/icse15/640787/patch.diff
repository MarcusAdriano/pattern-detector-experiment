diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedCallableStatement.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedCallableStatement.java
index 5c9fe95c..8ad7dabc 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedCallableStatement.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedCallableStatement.java
@@ -150,6 +150,7 @@ protected final boolean executeStatement(Activation a,
 					throw EmbedResultSet.noStateChangeException(e);
 				}
 				finally {
+					results.close();
 					results = null;
 				}
 
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java
index c6289138..21d16df4 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/CallableTest.java
@@ -292,6 +292,16 @@ public void testNoInOneOutFunc() throws SQLException
 
     }
 
+    public void testIsolationLevelChangeAfterFunctionCall()
+            throws SQLException {
+        CallableStatement cs = prepareCall("? = CALL NO_IN_ONE_OUT_FUNC()");
+        cs.registerOutParameter(1, java.sql.Types.INTEGER);
+        cs.execute();
+        assertEquals(55, cs.getInt(1));
+        getConnection().setTransactionIsolation(
+            Connection.TRANSACTION_SERIALIZABLE);
+    }
+
     /**
      * Calls a SQL procedure that outputs a message with System.out.println.
      * Converted from the original test, but initially disabled because of the
