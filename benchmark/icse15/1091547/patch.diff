diff --git a/cassandra/trunk/src/java/org/apache/cassandra/streaming/IncomingStreamReader.java b/cassandra/trunk/src/java/org/apache/cassandra/streaming/IncomingStreamReader.java
index eeeef6cb..cc2c7cdb 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/streaming/IncomingStreamReader.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/streaming/IncomingStreamReader.java
@@ -108,6 +108,11 @@ protected long readnwrite(long length, long bytesRead, long offset, FileChannel
     {
         long toRead = Math.min(FileStreamTask.CHUNK_SIZE, length - bytesRead);
         long lastRead = fc.transferFrom(socketChannel, offset + bytesRead, toRead);
+	// if the other side fails, we will not get an exception, but instead transferFrom will constantly return 0 byte read
+	// and we would thus enter an infinite loop. So intead, if no bytes are tranferred we assume the other side is dead and 
+	// raise an exception (that will be catch belove and 'the right thing' will be done).
+	if (lastRead == 0)
+		throw new IOException("Transfer failed for remote file " + remoteFile);
         bytesRead += lastRead;
         remoteFile.progress += lastRead;
         return bytesRead;
