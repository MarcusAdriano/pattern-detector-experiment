diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GrantRevokeTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GrantRevokeTest.java
index 7f4c2f18..823be7ee 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GrantRevokeTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/GrantRevokeTest.java
@@ -1045,7 +1045,7 @@ public void assertInsertPrivilege(boolean hasPrivilege, String user, String sche
     	// NOTE - getColumns returns empty result set if schema / table names not capitalized.
         // TODO - should implement asserting insert privilege on a subset of columns at some point
     	
-    	Connection c = openUserConnection(users[0]);
+    	Connection c = openUserConnection(user);
 
     	Statement s = c.createStatement();
     	try {
@@ -1063,13 +1063,12 @@ public void assertInsertPrivilege(boolean hasPrivilege, String user, String sche
             rs.close();
             command.append(")");
     	    int i = s.executeUpdate(command.toString());
-            // DERBY-2893 INSERT seems to succeed.
-            //if (!hasPrivilege)
-            //    fail("expected no INSERT permission on table");
+            if (!hasPrivilege)
+               fail("expected no INSERT permission on table");
 
     	} catch (SQLException e) {
     		if (!hasPrivilege) {
-    			assertSQLState("42502", e);
+    			assertSQLState("42500", e);
     		} else {
     			fail("Unexpected lack of insert privilege on " + schema + "." + table + " by " + user);
     		}
@@ -1130,9 +1129,8 @@ public void assertUpdatePrivilege(boolean hasPrivilege, String user, String sche
         	        assertEquals(columnCount, actualCount);
         	    }
                 
-                // DERBY-2893 UPDATE seems to succeed.
-                //if (!hasPrivilege)
-                //    fail("expected no UPDATE permission on table");
+                if (!hasPrivilege)
+                  fail("expected no UPDATE permission on table");
 
     		} catch (SQLException e) {
         		if (!hasPrivilege) {
