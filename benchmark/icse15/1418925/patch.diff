diff --git a/lucene/dev/branches/branch_4x/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.java b/lucene/dev/branches/branch_4x/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.java
index 4d8a37a5..7c6105c3 100644
--- a/lucene/dev/branches/branch_4x/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.java
+++ b/lucene/dev/branches/branch_4x/lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.java
@@ -179,6 +179,7 @@ public void run() {
         reader.setErrorHandler(this);
         while(!stopped){
           final InputStream localFileIS = is;
+          if (localFileIS != null) { // null means fileIS was closed on us 
           try {
             // To work around a bug in XERCES (XERCESJ-1257), we assume the XML is always UTF8, so we simply provide reader.
             CharsetDecoder decoder = IOUtils.CHARSET_UTF_8.newDecoder()
@@ -194,8 +195,9 @@ public void run() {
                 throw ioe;
             }
           }
+          }
           synchronized(this) {
-            if (!forever) {
+            if (stopped || !forever) {
               nmde = new NoMoreDataException();
               notify();
               return;
@@ -292,11 +294,11 @@ private final static int getElementType(String elem) {
   @Override
   public void close() throws IOException {
     synchronized (EnwikiContentSource.this) {
+      parser.stop();
       if (is != null) {
         is.close();
         is = null;
       }
-      parser.stop();
     }
   }
   
