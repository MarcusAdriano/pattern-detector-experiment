diff --git a/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java b/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
index e470b891..d8c0fca7 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
@@ -554,8 +554,10 @@ public static void loadSchemas() throws IOException
         CFMetaData.fixMaxId();
     }
 
-    public static void readTablesFromXml() throws ConfigurationException
+    /** reads xml. doesn't populate any internal structures. */
+    public static Collection<KSMetaData> readTablesFromXml() throws ConfigurationException
     {
+        List<KSMetaData> defs = new ArrayList<KSMetaData>();
         XMLUtils xmlUtils = null;
         try
         {
@@ -741,9 +743,7 @@ else if (XMLUtils.getAttributeValue(columnFamily, "CompareSubcolumnsWith") != nu
                     // insert it into the table dictionary.
                     cfDefs[j] = new CFMetaData(tableName, cfName, columnType, comparator, subcolumnComparator, comment, rowCacheSize, keyCacheSize, readRepairChance);
                 }
-
-                KSMetaData meta = new KSMetaData(ksName, strategyClass, replicationFactor, snitch, cfDefs);
-                tables.put(meta.name, meta);
+                defs.add(new KSMetaData(ksName, strategyClass, replicationFactor, snitch, cfDefs));
             }
         }
         catch (XPathExpressionException e)
@@ -758,8 +758,7 @@ else if (XMLUtils.getAttributeValue(columnFamily, "CompareSubcolumnsWith") != nu
             ex.initCause(e);
             throw ex;
         }
-        if (DatabaseDescriptor.listenAddress != null)
-            defsVersion = UUIDGen.makeType1UUIDFromHost(FBUtilities.getLocalAddress());
+        return defs;
     }
 
     public static IAuthenticator getAuthenticator()
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
index 4a4da3a3..038326bc 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/service/StorageService.java
@@ -35,8 +35,10 @@
 import org.apache.cassandra.concurrent.*;
 import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.config.DatabaseDescriptor;
+import org.apache.cassandra.config.KSMetaData;
 import org.apache.cassandra.db.*;
 import org.apache.cassandra.db.commitlog.CommitLog;
+import org.apache.cassandra.db.migration.AddKeyspace;
 import org.apache.cassandra.db.migration.Migration;
 import org.apache.cassandra.dht.*;
 import org.apache.cassandra.gms.*;
@@ -1582,7 +1584,9 @@ public void loadSchemaFromXML() throws ConfigurationException, IOException
         // blow up if there is a schema saved.
         if (DatabaseDescriptor.getDefsVersion().timestamp() > 0 || Migration.getLastMigrationId() != null)
             throw new ConfigurationException("Cannot load from XML on top of pre-existing schemas.");
-        DatabaseDescriptor.readTablesFromXml();
+        for (KSMetaData table : DatabaseDescriptor.readTablesFromXml())
+            new AddKeyspace(table).apply();
+        
         assert DatabaseDescriptor.getDefsVersion().timestamp() > 0;
         DefsTable.dumpToStorage(DatabaseDescriptor.getDefsVersion());
         // flush system and definition tables.
diff --git a/cassandra/trunk/test/unit/org/apache/cassandra/SchemaLoader.java b/cassandra/trunk/test/unit/org/apache/cassandra/SchemaLoader.java
index 73add5a0..da9d6efe 100644
--- a/cassandra/trunk/test/unit/org/apache/cassandra/SchemaLoader.java
+++ b/cassandra/trunk/test/unit/org/apache/cassandra/SchemaLoader.java
@@ -20,6 +20,7 @@
 
 import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.config.DatabaseDescriptor;
+import org.apache.cassandra.config.KSMetaData;
 import org.junit.BeforeClass;
 
 public class SchemaLoader
@@ -31,7 +32,8 @@ public static void loadSchemaFromXml()
     {
         try
         {
-            DatabaseDescriptor.readTablesFromXml();
+            for (KSMetaData ksm : DatabaseDescriptor.readTablesFromXml())
+                DatabaseDescriptor.setTableDefinition(ksm, DatabaseDescriptor.getDefsVersion());
         }
         catch (ConfigurationException e)
         {
diff --git a/cassandra/trunk/test/unit/org/apache/cassandra/service/EmbeddedCassandraServiceTest.java b/cassandra/trunk/test/unit/org/apache/cassandra/service/EmbeddedCassandraServiceTest.java
index 58904ee7..a3b63005 100644
--- a/cassandra/trunk/test/unit/org/apache/cassandra/service/EmbeddedCassandraServiceTest.java
+++ b/cassandra/trunk/test/unit/org/apache/cassandra/service/EmbeddedCassandraServiceTest.java
@@ -26,6 +26,7 @@
 
 import org.apache.cassandra.config.ConfigurationException;
 import org.apache.cassandra.config.DatabaseDescriptor;
+import org.apache.cassandra.config.KSMetaData;
 import org.apache.cassandra.thrift.Cassandra;
 import org.apache.cassandra.thrift.ColumnOrSuperColumn;
 import org.apache.cassandra.thrift.ColumnPath;
@@ -70,7 +71,8 @@ public static void setup() throws TTransportException, IOException, InterruptedE
         // Tell cassandra where the configuration files are.
         // Use the test configuration file.
         System.setProperty("storage-config", "test/conf");
-        DatabaseDescriptor.readTablesFromXml();
+        for (KSMetaData table : DatabaseDescriptor.readTablesFromXml())
+            DatabaseDescriptor.setTableDefinition(table, DatabaseDescriptor.getDefsVersion());
 
         cassandra = new EmbeddedCassandraService();
         cassandra.init();
