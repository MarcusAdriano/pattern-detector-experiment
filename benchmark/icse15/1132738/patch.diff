diff --git a/db/derby/code/branches/10.8/java/engine/org/apache/derby/iapi/sql/dictionary/ConglomerateDescriptor.java b/db/derby/code/branches/10.8/java/engine/org/apache/derby/iapi/sql/dictionary/ConglomerateDescriptor.java
index 719bce9e..78155c38 100644
--- a/db/derby/code/branches/10.8/java/engine/org/apache/derby/iapi/sql/dictionary/ConglomerateDescriptor.java
+++ b/db/derby/code/branches/10.8/java/engine/org/apache/derby/iapi/sql/dictionary/ConglomerateDescriptor.java
@@ -598,8 +598,15 @@ public ConglomerateDescriptor describeSharedConglomerate(
 			}
 
 			// Skip if ignoreThis is true and it describes "this".
+			// DERBY-5249. We need to check both the UUID and the
+			// conglomerateName to see if this is a match, because
+			// databases prior to the DERBY-655 fix may have a 
+			// duplicate conglomerateID
 			if (ignoreThis &&
-				getUUID().equals(descriptors[i].getUUID()))
+				getUUID().equals(descriptors[i].getUUID()) &&
+				getConglomerateName().equals(descriptors[i].
+							getConglomerateName())
+				)
 			{
 				continue;
 			}
diff --git a/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java b/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java
index ff423e37..f9c42def 100644
--- a/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java
+++ b/db/derby/code/branches/10.8/java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/BasicSetup.java
@@ -1,6 +1,6 @@
 /*
 
-Derby - Class org.apache.derbyTesting.functionTests.tests.upgradeTests.BasicSetup
+Derby - Class org.apache.dertbyTesting.functionTests.tests.upgradeTests.BasicSetup
 
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
@@ -267,6 +267,60 @@ public void noConnectionAfterHardUpgrade()
             break;
         }
     }
+ 
+    
+    /**
+     * DERBY-5249 table created with primary and foreign key can't be dropped
+     * Test currently disabled. Remove the x from the name to enable the 
+     * test once the bug is fixed.
+     * 
+     */
+    public void testDropTableAfterUpgradeWithConstraint() throws SQLException {
+        final int phase = getPhase();
+
+        Statement s = createStatement();
+
+        switch (phase) {
+        case PH_CREATE:
+            s.executeUpdate("CREATE SCHEMA S");
+            s.executeUpdate("CREATE TABLE S.RS (R_TYPE_ID VARCHAR(64) "
+                    + "NOT NULL)");
+            s.executeUpdate("ALTER TABLE S.RS ADD CONSTRAINT PK_RS "
+                    + "PRIMARY KEY (R_TYPE_ID)");
+            s.executeUpdate("CREATE TABLE S.R_TYPE_ID (R_TYPE_ID "
+                    + "VARCHAR(64) NOT NULL)");
+            s.executeUpdate("ALTER TABLE S.R_TYPE_ID ADD CONSTRAINT "
+                    + "PK_R_TYPE_ID PRIMARY KEY (R_TYPE_ID)");
+            s.executeUpdate("ALTER TABLE S.RS ADD CONSTRAINT "
+                    + "FK_RS_TYPEID FOREIGN KEY (R_TYPE_ID) REFERENCES "
+                    + "S.R_TYPE_ID (R_TYPE_ID) ON DELETE CASCADE ON "
+                    + "UPDATE NO ACTION");
+            /*
+             * With 10.0 and early 10.1 releases a duplicate conglomerate entry
+             * shows in sys.sysconglomerates for the primary key PK_RS. It can
+             * be seen with this query.
+             
+                Utilities.showResultSet(s.executeQuery(
+                        "select c.constraintname, c.constraintid,  cong.conglomerateid, cong.conglomeratename  from sys.sysconglomerates cong, sys.syskeys k, sys.sysconstraints c where c.constraintname = 'PK_RS' and c.constraintid =k.constraintid and k.conglomerateid = cong.conglomerateid "
+              ));
+            */
+            break;
+        case PH_SOFT_UPGRADE:
+            s.executeUpdate("ALTER TABLE S.RS DROP CONSTRAINT FK_RS_TYPEID");
+            s.executeUpdate("ALTER TABLE S.R_TYPE_ID DROP CONSTRAINT "
+                    + "PK_R_TYPE_ID");
+            s.executeUpdate("ALTER TABLE S.RS DROP CONSTRAINT PK_RS");
+            s.executeUpdate("DROP TABLE S.RS");
+            s.executeUpdate("DROP TABLE S.R_TYPE_ID");
+            s.executeUpdate("DROP SCHEMA S RESTRICT");
+            break;
+        case PH_POST_SOFT_UPGRADE:
+            break;
+        case PH_HARD_UPGRADE:
+            break;
+        }
+
+    }
     final   int TEST_COUNT = 0;
     final   int FAILURES = TEST_COUNT + 1;
     final   String  A_COL = "a";
