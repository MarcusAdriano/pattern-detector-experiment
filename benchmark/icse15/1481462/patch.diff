diff --git a/db/derby/code/branches/10.9/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoloadTest.java b/db/derby/code/branches/10.9/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoloadTest.java
index d512055b..b283692d 100644
--- a/db/derby/code/branches/10.9/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoloadTest.java
+++ b/db/derby/code/branches/10.9/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AutoloadTest.java
@@ -21,6 +21,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 package org.apache.derbyTesting.functionTests.tests.jdbcapi;
 
+import java.net.InetAddress;
 import java.sql.Driver;
 import java.sql.Connection;
 import java.sql.DriverManager;
@@ -226,21 +227,6 @@ private static Test baseAutoLoadSuite(String which)
      * </ul>
      */
     static Test fullAutoloadSuite() {
-        if (!TestConfiguration.getCurrent().isDefaultBasePort())
-        {
-            // DERBY-6178
-            //     test is not currently coded to work properly when calling
-            //     system is depending on setting -Dderby.tests.basePort=3500
-            //     to avoid conflict on concurrent tests starting and stopping
-            //     network server.
-
-            // for now just skip this test if tests are setting a non-default
-            // base port.
-            return new TestSuite(
-                    "empty: test not supported with non-default base port: " + 
-                    TestConfiguration.getCurrent().getBasePort());
-        }
-
         TestSuite suite = new TestSuite("AutoloadTest:All");
         suite.addTest(new AutoloadTest(AutoloadTest.class));
         suite.addTest(new AutoloadTest(JDBCDriversEmbeddedTest.class));
@@ -261,16 +247,30 @@ protected void setUp() {
      * Run {@code AutoloadTest} in a separate JVM.
      */
     public void spawnProcess() throws Exception {
+        if (TestConfiguration.isDefaultBasePort()) {
         String[] cmd = {
             "junit.textui.TestRunner", spawnedTestClass.getName()
         };
-
-        SpawnedProcess proc =
-            new SpawnedProcess(execJavaCmd(cmd), spawnedTestClass.getName());
-
+            SpawnedProcess proc = new SpawnedProcess
+                    (execJavaCmd(cmd), spawnedTestClass.getName());
+            if (proc.complete() != 0) {
+                fail(proc.getFailMessage("Test process failed"));
+            }
+        }
+        else 
+        {
+            // if we're not using the default port of 1527, ensure we're
+            // passing on the baseport value to the spawned process.
+            String[] cmd = {
+                    "-Dderby.tests.basePort=" + TestConfiguration.getBasePort(),
+                    "junit.textui.TestRunner", spawnedTestClass.getName()
+            };            
+            SpawnedProcess proc = new SpawnedProcess
+                    (execJavaCmd(cmd), spawnedTestClass.getName());
         if (proc.complete() != 0) {
             fail(proc.getFailMessage("Test process failed"));
         }
+    }
     }
 
 	// ///////////////////////////////////////////////////////////
@@ -517,7 +517,9 @@ public void testAutoNetworkServerBoot() throws Exception
         
         String user = getTestConfiguration().getUserName();
         String pw = getTestConfiguration().getUserPassword();
-        NetworkServerControl control = new NetworkServerControl(user, pw);
+        int port = TestConfiguration.getBasePort();
+        final InetAddress host = InetAddress.getByName(TestConfiguration.getCurrent().getHostName());
+        NetworkServerControl control = new NetworkServerControl(host, port, user, pw);
 
         if (!serverShouldBeUp) {
             // If we expect the server not to come up, wait a little before
diff --git a/db/derby/code/branches/10.9/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/JDBCDriversEmbeddedTest.java b/db/derby/code/branches/10.9/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/JDBCDriversEmbeddedTest.java
index f56fa38c..1d824108 100644
--- a/db/derby/code/branches/10.9/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/JDBCDriversEmbeddedTest.java
+++ b/db/derby/code/branches/10.9/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/JDBCDriversEmbeddedTest.java
@@ -36,6 +36,14 @@ public static Test suite() throws Exception
         // when this property is set and the embedded driver
         // is autoloaded by jdbc.drivers
         System.setProperty("derby.drda.startNetworkServer", "true");
+        // if the property derby.tests.basePort has been set, we need to
+        // ensure we specify the portNumber as well, because we're then
+        // not using 1527 for checks and shutting down.
+        String portNumberString = System.getProperty("derby.tests.basePort");
+        if (portNumberString != null )
+        {
+            System.setProperty("derby.drda.portNumber", portNumberString);
+        } 
  
         return getSuite("org.apache.derby.jdbc.EmbeddedDriver");
     }
