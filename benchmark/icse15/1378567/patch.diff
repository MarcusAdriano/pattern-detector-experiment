diff --git a/lucene/dev/branches/branch_4x/lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.java b/lucene/dev/branches/branch_4x/lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.java
index 74cccbb5..45168f40 100644
--- a/lucene/dev/branches/branch_4x/lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.java
+++ b/lucene/dev/branches/branch_4x/lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.java
@@ -244,10 +244,6 @@ public void setNextReader(AtomicReaderContext context) throws IOException {
       segmentTotalCount = 0;
 
       segmentGroupedFacetHits.clear();
-      if (facetFieldDocTermOrds.isEmpty()) {
-        return;
-      }
-
       for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {
         int groupOrd = groupFieldTermsIndex.binarySearchLookup(groupedFacetHit.groupValue, spare);
         if (groupOrd < 0) {
diff --git a/lucene/dev/branches/branch_4x/lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest.java b/lucene/dev/branches/branch_4x/lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest.java
index d281bc16..5a44c2a0 100644
--- a/lucene/dev/branches/branch_4x/lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest.java
+++ b/lucene/dev/branches/branch_4x/lucene/grouping/src/test/org/apache/lucene/search/grouping/GroupFacetCollectorTest.java
@@ -235,6 +235,7 @@ public void testMVGroupedFacetingWithDeletes() throws Exception {
     addField(doc, "x", "x", useDv);
     w.addDocument(doc);
 
+    // 1
     doc = new Document();
     addField(doc, groupField, "a", useDv);
     addField(doc, "airport", "ams", useDv);
@@ -243,37 +244,43 @@ public void testMVGroupedFacetingWithDeletes() throws Exception {
     w.commit();
     w.deleteDocuments(new TermQuery(new Term("airport", "ams")));
 
-    // 0
+    // 2
     doc = new Document();
     addField(doc, groupField, "a", useDv);
     addField(doc, "airport", "ams", useDv);
     w.addDocument(doc);
 
-    // 1
+    // 3
     doc = new Document();
     addField(doc, groupField, "a", useDv);
     addField(doc, "airport", "dus", useDv);
     w.addDocument(doc);
 
-    // 2
+    // 4
     doc = new Document();
     addField(doc, groupField, "b", useDv);
     addField(doc, "airport", "ams", useDv);
     w.addDocument(doc);
 
-    // 3
+    // 5
     doc = new Document();
     addField(doc, groupField, "b", useDv);
     addField(doc, "airport", "ams", useDv);
     w.addDocument(doc);
 
-    // 4
+    // 6
     doc = new Document();
     addField(doc, groupField, "b", useDv);
     addField(doc, "airport", "ams", useDv);
     w.addDocument(doc);
+    w.commit();
 
+    // 7
+    doc = new Document();
+    addField(doc, "x", "x", useDv);
+    w.addDocument(doc);
     w.commit();
+
     w.close();
     IndexSearcher indexSearcher = new IndexSearcher(DirectoryReader.open(dir));
     AbstractGroupFacetCollector groupedAirportFacetCollector = createRandomCollector(groupField, "airport", null, true, useDv);
