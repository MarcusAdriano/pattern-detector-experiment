diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/vectors/ConstantValueEncoder.java b/mahout/trunk/core/src/main/java/org/apache/mahout/vectors/ConstantValueEncoder.java
index 54670fa5..a8a7ba4b 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/vectors/ConstantValueEncoder.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/vectors/ConstantValueEncoder.java
@@ -34,7 +34,7 @@ public void addToVector(byte[] originalForm, double weight, Vector data) {
     for (int i = 0; i < probes; i++) {
       int n = hashForProbe(originalForm, data.size(), name, i);
       if(isTraceEnabled()){
-        trace(name, n);                
+        trace((String) null, n);                
       }
       data.set(n, data.get(n) + getWeight(originalForm,weight));
     }
diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/vectors/ContinuousValueEncoder.java b/mahout/trunk/core/src/main/java/org/apache/mahout/vectors/ContinuousValueEncoder.java
index 4c83b48b..1f0847f5 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/vectors/ContinuousValueEncoder.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/vectors/ContinuousValueEncoder.java
@@ -42,7 +42,7 @@ public void addToVector(byte[] originalForm, double weight, Vector data) {
     for (int i = 0; i < probes; i++) {
       int n = hashForProbe(originalForm, data.size(), name, i);
       if(isTraceEnabled()){
-        trace(name.getBytes(Charsets.UTF_8), n);        
+        trace((String) null, n);        
       }
       data.set(n, data.get(n) + getWeight(originalForm,weight));
     }
diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/vectors/FeatureVectorEncoder.java b/mahout/trunk/core/src/main/java/org/apache/mahout/vectors/FeatureVectorEncoder.java
index 1586665d..5cc62c65 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/vectors/FeatureVectorEncoder.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/vectors/FeatureVectorEncoder.java
@@ -33,10 +33,11 @@
  * dictionary.
  */
 public abstract class FeatureVectorEncoder {
-
   protected static final int CONTINUOUS_VALUE_HASH_SEED = 1;
   protected static final int WORD_LIKE_VALUE_HASH_SEED = 100;
 
+  private static final byte[] EMPTY_ARRAY = new byte[0];;
+
   private final String name;
   private int probes;
 
@@ -272,7 +273,11 @@ public void setTraceDictionary(Map<String, Set<Integer>> traceDictionary) {
     this.traceDictionary = traceDictionary;
   }
 
-  protected byte[] bytesForString(String x){
+  protected byte[] bytesForString(String x) {
+    if (x != null) {
     return x.getBytes(Charsets.UTF_8);
+    } else {
+      return EMPTY_ARRAY;
+    }
   }
 }
