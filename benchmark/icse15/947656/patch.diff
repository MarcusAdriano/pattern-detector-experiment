diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/BooleanValuesTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/BooleanValuesTest.java
index 82d376da..f0d34c72 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/BooleanValuesTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/BooleanValuesTest.java
@@ -57,6 +57,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more
     //
     ///////////////////////////////////////////////////////////////////////////////////
 
+    private boolean _supportsXML;
+
     ///////////////////////////////////////////////////////////////////////////////////
     //
     // CONSTRUCTOR
@@ -71,6 +73,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more
     public BooleanValuesTest(String name)
     {
         super(name);
+
+        _supportsXML = XML.classpathMeetsXMLReqs();
     }
 
     ///////////////////////////////////////////////////////////////////////////////////
@@ -85,16 +89,9 @@ public BooleanValuesTest(String name)
      */
     public static Test suite()
     {
-        TestSuite suite = new TestSuite("BooleanValuesTest");
-
-        // The test uses XML columns, so it should only run if we have the
-        // required libraries.
-        if (XML.classpathMeetsXMLReqs()) {
-            suite.addTest(
-                    TestConfiguration.defaultSuite(BooleanValuesTest.class));
-        }
+        Test result = (TestSuite) TestConfiguration.defaultSuite(BooleanValuesTest.class);
 
-        return suite;
+        return result;
     }
 
     protected void    setUp()
@@ -116,9 +113,14 @@ protected void    setUp()
         }
         if ( !tableExists( conn, "ALL_TYPES" ) )
         {
-            goodStatement
+            StringBuffer buffer;
+
+            //
+            // create table
+            //
+            buffer = new StringBuffer();
+            buffer.append
                 (
-                 conn,
                  "create table all_types\n" +
                  "(\n" +
                  "    key_col int,\n" +
@@ -139,14 +141,21 @@ protected void    setUp()
                  "    time_col  TIME,\n" +
                  "    timestamp_col  TIMESTAMP,\n" +
                  "    varchar_col  VARCHAR(10),\n" +
-                 "    varchar_for_bit_data_col  VARCHAR (10) FOR BIT DATA,\n" +
-                 "    xml_col  xml\n" +
-                 ")\n"
+                "    varchar_for_bit_data_col  VARCHAR (10) FOR BIT DATA\n"
                  );
-
-            goodStatement
+            if ( _supportsXML )
+            {
+                buffer.append( "    ,xml_col  xml\n" );
+            }
+            buffer.append( ")\n" );
+            goodStatement( conn, buffer.toString() );
+
+            //
+            // populate table
+            //
+            buffer = new StringBuffer();
+            buffer.append
                 (
-                 conn,
                  "insert into all_types\n" +
                  "(\n" +
                  "    key_col,\n" +
@@ -167,8 +176,14 @@ protected void    setUp()
                  "    time_col,\n" +
                  "    timestamp_col,\n" +
                  "    varchar_col,\n" +
-                 "    varchar_for_bit_data_col,\n" +
-                 "    xml_col\n" +
+                 "    varchar_for_bit_data_col\n"
+                 );
+            if ( _supportsXML )
+            {
+                buffer.append( "    ,xml_col\n" );
+            }
+            buffer.append
+                (
                  ")\n" +
                  "values\n" +
                  "(\n" +
@@ -190,8 +205,14 @@ protected void    setUp()
                  "    time('15:09:02'),\n" +
                  "    timestamp('1962-09-23 03:23:34.234'),\n" +
                  "    '0',\n" +
-                 "    X'DE',\n" +
-                 "    xmlparse( document '<?xml version=\"1.0\" encoding=\"UTF-8\"?> <html/>' preserve whitespace )\n" +
+                 "    X'DE'\n"
+                 );
+            if ( _supportsXML )
+            {
+                buffer.append( "    , xmlparse( document '<?xml version=\"1.0\" encoding=\"UTF-8\"?> <html/>' preserve whitespace )\n" );
+            }
+            buffer.append
+                (
                  "),\n" +
                  "(\n" +
                  "    1,\n" +
@@ -212,8 +233,14 @@ protected void    setUp()
                  "    time('15:09:02'),\n" +
                  "    timestamp('1962-09-23 03:23:34.234'),\n" +
                  "    '1',\n" +
-                 "    X'DE',\n" +
-                 "    xmlparse( document '<?xml version=\"1.0\" encoding=\"UTF-8\"?> <html/>' preserve whitespace )\n" +
+                 "    X'DE'\n"
+                 );
+            if ( _supportsXML )
+            {
+                buffer.append( "    , xmlparse( document '<?xml version=\"1.0\" encoding=\"UTF-8\"?> <html/>' preserve whitespace )\n"  );
+            }
+            buffer.append
+                 (
                  "),\n" +
                  "(\n" +
                  "    2,\n" +
@@ -234,8 +261,14 @@ protected void    setUp()
                  "    time('15:09:02'),\n" +
                  "    timestamp('1962-09-23 03:23:34.234'),\n" +
                  "    '2',\n" +
-                 "    X'DE',\n" +
-                 "    xmlparse( document '<?xml version=\"1.0\" encoding=\"UTF-8\"?> <html/>' preserve whitespace )\n" +
+                 "    X'DE'\n"
+                  );
+            if ( _supportsXML )
+            {
+                buffer.append( "    , xmlparse( document '<?xml version=\"1.0\" encoding=\"UTF-8\"?> <html/>' preserve whitespace )\n" );
+            }
+            buffer.append
+                (
                  "),\n" +
                  "(\n" +
                  "    3,\n" +
@@ -256,13 +289,21 @@ protected void    setUp()
                  "    time('15:09:02'),\n" +
                  "    timestamp('1962-09-23 03:23:34.234'),\n" +
                  "    'baffle',\n" +
-                 "    X'DE',\n" +
-                 "    xmlparse( document '<?xml version=\"1.0\" encoding=\"UTF-8\"?> <html/>' preserve whitespace )\n" +
+                 "    X'DE'\n"
+                 );
+            if ( _supportsXML )
+            {
+                buffer.append( "    , xmlparse( document '<?xml version=\"1.0\" encoding=\"UTF-8\"?> <html/>' preserve whitespace )\n" );
+            }
+            buffer.append
+                (
                  ")\n"
                  );
+            goodStatement( conn, buffer.toString() );
         }
     }
 
+
     ///////////////////////////////////////////////////////////////////////////////////
     //
     // TESTS
@@ -354,12 +395,19 @@ public void test_04_undefinedAndIllegal() throws Exception
      */
     public void test_05_undefinedIllegalOutliers() throws Exception
     {
+        //
+        // We don't test the XML datatype on JDK 1.4 because the Xalan
+        // packages are in the wrong location there.
+        //
+        if ( _supportsXML )
+        {
         expectCompilationError
             (
              ILLEGAL_XML_SELECTION,
              makeQuery( "XML_COL" )
              );
     }
+    }
     /**
      * <p>
      * Test that ResultSet.getBoolean() returns  the correct value. Expects to
