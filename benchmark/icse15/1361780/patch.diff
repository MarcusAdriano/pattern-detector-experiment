diff --git a/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/di/MapRecipe.java b/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/di/MapRecipe.java
index 6bba98c4..8ddd3723 100644
--- a/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/di/MapRecipe.java
+++ b/aries/trunk/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/di/MapRecipe.java
@@ -98,12 +98,16 @@ protected Object internalCreate() throws ComponentDefinitionException {
             throw new ComponentDefinitionException("Specified map type does not implement the Map interface: " + mapType.getName());
         }
 
-        ReifiedType convertKeyType = getType(keyType);
-        ReifiedType convertValueType = getType(valueType);
+        ReifiedType defaultConvertKeyType = getType(keyType);
+        ReifiedType defaultConvertValueType = getType(valueType);
+                
         // add map entries
         try {
             for (Recipe[] entry : entries) {
+                ReifiedType convertKeyType = workOutConversionType(entry[0], defaultConvertKeyType);
                 Object key = convert(entry[0].create(), convertKeyType);
+                // Each entry may have its own types
+                ReifiedType convertValueType = workOutConversionType(entry[1], defaultConvertValueType);
                 Object value = entry[1] != null ? convert(entry[1].create(), convertValueType) : null;
                 instance.put(key, value);
             }
@@ -113,6 +117,16 @@ protected Object internalCreate() throws ComponentDefinitionException {
         return instance;
     }
 
+   protected ReifiedType workOutConversionType(Recipe entry, ReifiedType defaultType) {
+       if (entry instanceof ValueRecipe)
+       {
+          return getType(((ValueRecipe) entry).getValueType());
+       } else 
+       {
+          return defaultType;
+       }
+   }
+
     public void put(Recipe key, Recipe value) {
         if (key == null) throw new NullPointerException("key is null");
         entries.add(new Recipe[] { key, value});
diff --git a/aries/trunk/blueprint/blueprint-core/src/test/java/org/apache/aries/blueprint/WiringTest.java b/aries/trunk/blueprint/blueprint-core/src/test/java/org/apache/aries/blueprint/WiringTest.java
index 39d0454f..fa343ae9 100644
--- a/aries/trunk/blueprint/blueprint-core/src/test/java/org/apache/aries/blueprint/WiringTest.java
+++ b/aries/trunk/blueprint/blueprint-core/src/test/java/org/apache/aries/blueprint/WiringTest.java
@@ -22,11 +22,16 @@
 import java.net.URI;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.GregorianCalendar;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
+import java.util.Properties;
 import java.util.Set;
+import java.util.TimeZone;
 
 import junit.framework.Assert;
 
@@ -317,9 +322,42 @@ public void testConstructor() throws Exception {
         Object obj12 = repository.create("multipleFactoryTypedNull");
         testMultiple(obj12, "hello-boolean", -1, null);
 
-        // TODO: check the below tests when the incoherence between TCK / spec is solved
-//        Object obj13 = graph.create("mapConstruction");
-//        Object obj14 = graph.create("propsConstruction");
+        Object obj13 = repository.create("mapConstruction");
+        Map<String, String> constructionMap = new HashMap<String, String>();
+        constructionMap.put("a", "b");
+        testMultiple(obj13, constructionMap);
+        Object obj14 = repository.create("propsConstruction");
+        Properties constructionProperties = new Properties();
+        constructionProperties.put("a", "b");
+        testMultiple(obj14,  constructionProperties);
+
+        Object obja = repository.create("mapConstructionWithDefaultType");
+        Map<String, Date> mapa = new HashMap<String, Date>();
+        // Months are 0-indexed
+        Calendar calendar = new GregorianCalendar(2012, 0, 6);
+        calendar.setTimeZone(TimeZone.getTimeZone("GMT"));
+        mapa.put("date", new Date(calendar.getTimeInMillis()));
+        testMultiple(obja, mapa);
+
+        Object objc = repository.create("mapConstructionWithTypedEntries");
+        Map mapc = new HashMap();
+        mapc.put("boolean", Boolean.TRUE);
+        mapc.put("double", 1.23);
+        mapc.put("date", new Date(calendar.getTimeInMillis()));
+        testMultiple(objc, mapc);
+
+        Object objb = repository.create("mapConstructionWithNonDefaultTypedEntries");
+        Map mapb = new HashMap();
+        mapb.put("boolean", Boolean.TRUE);
+        mapb.put("double", 3.45);
+        mapb.put("otherdouble", 10.2);
+        testMultiple(objb, mapb);
+  
+        Object objd = repository.create("mapConstructionWithNonDefaultTypedKeys");
+        Map mapd = new HashMap();
+        mapd.put(Boolean.TRUE, "boolean");
+        mapd.put(42.42, "double");
+        testMultiple(objd, mapd);
 
         BeanF obj15 = (BeanF) repository.create("booleanWrapped");
         assertNotNull(obj15.getWrapped());
@@ -349,6 +387,18 @@ private void testMultiple(Object obj, String stringValue, int intValue, Integer
         assertEquals(integerValue, ((Multiple)obj).getInteger());        
     }
 
+    private void testMultiple(Object obj, Map map) {
+       assertNotNull(obj);
+       assertTrue(obj instanceof Multiple);
+       assertEquals(map, ((Multiple)obj).getMap());
+   }
+
+    private void testMultiple(Object obj, Properties map) {
+       assertNotNull(obj);
+       assertTrue(obj instanceof Multiple);
+       assertEquals(map, ((Multiple)obj).getProperties());
+   }
+
     public void testGenerics() throws Exception {
         ComponentDefinitionRegistryImpl registry = parse("/test-generics.xml");
         Repository repository = new TestBlueprintContainer(registry).getRepository();
diff --git a/aries/trunk/blueprint/blueprint-core/src/test/java/org/apache/aries/blueprint/pojos/Multiple.java b/aries/trunk/blueprint/blueprint-core/src/test/java/org/apache/aries/blueprint/pojos/Multiple.java
index 7dd729c4..4f2346e9 100644
--- a/aries/trunk/blueprint/blueprint-core/src/test/java/org/apache/aries/blueprint/pojos/Multiple.java
+++ b/aries/trunk/blueprint/blueprint-core/src/test/java/org/apache/aries/blueprint/pojos/Multiple.java
@@ -36,7 +36,7 @@ public Multiple(Map map) {
         this.map = map;
     }
 
-    public Multiple(Properties props) {
+    public Multiple(Properties props, String disambiguator) {
         this.properties = props;
     }
 
