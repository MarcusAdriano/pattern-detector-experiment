diff --git a/db/derby/code/trunk/java/client/org/apache/derby/jdbc/ClientBaseDataSource.java b/db/derby/code/trunk/java/client/org/apache/derby/jdbc/ClientBaseDataSource.java
index 165e12c2..927d3b9a 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/jdbc/ClientBaseDataSource.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/jdbc/ClientBaseDataSource.java
@@ -566,8 +566,11 @@ private void addBeanProperties(Reference ref)
 
                 try {
                     Object ov = m.invoke(this, null);
-                    String value = ov == null ? null : ov.toString();
-                    ref.add(new StringRefAddr(propertyName, value));
+                    // Need to check if property value is null, otherwise
+                    // "null" string gets stored.
+                    if (ov != null) {
+                        ref.add(new StringRefAddr(propertyName, ov.toString()));
+                    }
                 } catch (IllegalAccessException iae) {
                 } catch (InvocationTargetException ite) {
                 }
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/XAJNDITest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/XAJNDITest.java
index a16cec04..9292e95b 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/XAJNDITest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/XAJNDITest.java
@@ -106,27 +106,28 @@ public void testCompareXADataSourcewithJNDIDataSource()
             ic.rebind("cn=compareDS, o=" + dnString, xads);
             javax.sql.XADataSource ads =
                 (javax.sql.XADataSource)ic.lookup("cn=compareDS, o=" + dnString);
-            // At this point, the directly created xads should be matching the looked up one.
+
+            // Embedded data sources implement equals(), so use it to check
+            // that the two data sources are equal.
             if (usingEmbedded())
             {
                 assertEquals(xads, ads);
             }
-            else
-            {
-                // DERBY-3669; with DerbyNetClient, the original and looked-up
-                // xadatasource are not the same...So, compare piece by piece:
-                // When fixed, rest of else can be replaced by uncommenting 
-                // next line
-                //assertEquals(xads,ads);
+
+            // Client data sources don't implement equals(), so compare each
+            // property manually. And by the way, we don't trust that equals()
+            // in embedded data sources checks all the properties, so do a
+            // full check for embedded as well.
                 String[] orgprops = getPropertyBeanList(xads);
                 String[] bindprops = getPropertyBeanList(ads);
                 assertEquals(orgprops.length, bindprops.length);
-                // following is actually checked in DataSourceReferenceTest
+
+            // Check that all properties are equal.
                 for (int i=0;i<orgprops.length;i++){
                     assertEquals(orgprops[i], bindprops[i]);
-                }
-                // We have the same properties, now compare the values
-                assertEqualPropValues(xads,ads, orgprops);
+                assertEquals(
+                        JDBCDataSource.getBeanProperty(xads, orgprops[i]),
+                        JDBCDataSource.getBeanProperty(ads, bindprops[i]));
             }
             
             // modify something essential of the original XADataSource
@@ -136,32 +137,6 @@ public void testCompareXADataSourcewithJNDIDataSource()
             assertFalse(xads.equals(ads));
     }
 
-    public void assertEqualPropValues(
-            XADataSource orgds, XADataSource lookedupds, String[] props)
-    throws Exception {
-        for (int i=0;i<props.length;i++){
-            if (JDBCDataSource.getBeanProperty(orgds, props[i]) != null && 
-                    JDBCDataSource.getBeanProperty(lookedupds, props[i]) != null)
-            {
-                assertEquals(
-                        JDBCDataSource.getBeanProperty(orgds, props[i]),
-                        JDBCDataSource.getBeanProperty(lookedupds, props[i])
-                );
-            }
-            else {
-                if (JDBCDataSource.getBeanProperty(lookedupds,props[i]) != null)
-                {
-                    assertNull(JDBCDataSource.getBeanProperty(orgds,props[i]));
-                }
-                else
-                {
-                    assertNull(JDBCDataSource.getBeanProperty(orgds,props[i]));
-                    assertNull(JDBCDataSource.getBeanProperty(lookedupds,props[i]));
-                }
-            }
-        }
-    }
-    
     /**
      * Obtains a list of bean properties through reflection.
      * 
