diff --git a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/util/packed/Packed64.java b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/util/packed/Packed64.java
index 6b4eb2be..674756db 100644
--- a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/util/packed/Packed64.java
+++ b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/util/packed/Packed64.java
@@ -153,7 +153,7 @@ public int get(int index, long[] arr, int off, int len) {
 
     // bulk get
     assert index % decoder.longValueCount() == 0;
-    int blockIndex = (int) ((long) index * bitsPerValue) >>> BLOCK_BITS;
+    int blockIndex = (int) (((long) index * bitsPerValue) >>> BLOCK_BITS);
     assert (((long)index * bitsPerValue) & MOD_MASK) == 0;
     final int iterations = len / decoder.longValueCount();
     decoder.decode(blocks, blockIndex, arr, off, iterations);
@@ -217,7 +217,7 @@ public int set(int index, long[] arr, int off, int len) {
 
     // bulk set
     assert index % encoder.longValueCount() == 0;
-    int blockIndex = (int) ((long) index * bitsPerValue) >>> BLOCK_BITS;
+    int blockIndex = (int) (((long) index * bitsPerValue) >>> BLOCK_BITS);
     assert (((long)index * bitsPerValue) & MOD_MASK) == 0;
     final int iterations = len / encoder.longValueCount();
     encoder.encode(arr, off, blocks, blockIndex, iterations);
diff --git a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java
index 3de07a9f..934ef1ea 100644
--- a/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java
+++ b/lucene/dev/trunk/lucene/core/src/java/org/apache/lucene/util/packed/PackedInts.java
@@ -1138,7 +1138,9 @@ public static void copy(Reader src, int srcPos, Mutable dest, int destPos, int l
       }
       while (remaining > 0) {
         final int written = dest.set(destPos, buf, 0, remaining);
+        destPos += written;
         remaining -= written;
+        System.arraycopy(buf, written, buf, 0, remaining);
       }
     }
   }
