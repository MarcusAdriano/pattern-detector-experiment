diff --git a/aries/branches/0.2-incubating-RCx/application/application-utils/src/main/java/org/apache/aries/application/utils/manifest/ManifestHeaderProcessor.java b/aries/branches/0.2-incubating-RCx/application/application-utils/src/main/java/org/apache/aries/application/utils/manifest/ManifestHeaderProcessor.java
index efcafb6b..b3a049e8 100644
--- a/aries/branches/0.2-incubating-RCx/application/application-utils/src/main/java/org/apache/aries/application/utils/manifest/ManifestHeaderProcessor.java
+++ b/aries/branches/0.2-incubating-RCx/application/application-utils/src/main/java/org/apache/aries/application/utils/manifest/ManifestHeaderProcessor.java
@@ -467,21 +467,27 @@ public static String generateFilter(Map<String, String> attribs) {
 				VersionRange vr = ManifestHeaderProcessor
 						.parseVersionRange(attrib.getValue());
 
-				filter.append("(" + attribName + ">=" + vr.getMinimumVersion());
+				// The RFC of OSGi Bundle Repository (OBR) is still under discussion.
+				// According to section "5.11.3 Require-Bundle" in the current version 
+				// of this RFC (Jan. 2011), we need use version rather than bundle-version
+				// in the filter for the "require-bundle" requirement.
+				String versionAttribName = "version";
+				
+				filter.append("(" + versionAttribName + ">=" + vr.getMinimumVersion());
 
 				if (vr.getMaximumVersion() != null) {
-					filter.append(")(" + attribName + "<=");
+					filter.append(")(" + versionAttribName + "<=");
 					filter.append(vr.getMaximumVersion());
 				}
 
 				if (vr.getMaximumVersion() != null && vr.isMinimumExclusive()) {
-					filter.append(")(!(" + attribName + "=");
+					filter.append(")(!(" + versionAttribName + "=");
 					filter.append(vr.getMinimumVersion());
 					filter.append(")");
 				}
 
 				if (vr.getMaximumVersion() != null && vr.isMaximumExclusive()) {
-					filter.append(")(!(" + attribName + "=");
+					filter.append(")(!(" + versionAttribName + "=");
 					filter.append(vr.getMaximumVersion());
 					filter.append(")");
 				}
