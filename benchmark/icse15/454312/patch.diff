diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/PreparedStatement.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/PreparedStatement.java
index cf857b99..1ccfa4a4 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/PreparedStatement.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/PreparedStatement.java
@@ -405,7 +405,8 @@ public void setNull(int parameterIndex, int jdbcType) throws SQLException {
                     agent_.logWriter_.traceEntry(this, "setNull", parameterIndex, jdbcType);
                 }
                 
-                final int paramType = getColumnMetaDataX().getColumnType(parameterIndex) ;
+                final int paramType = 
+                    getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult(parameterIndex) ) ;
                 
                 if( ! PossibleTypes.getPossibleTypesForNull( paramType ).checkType( jdbcType )){
                     
@@ -465,7 +466,8 @@ public void setBoolean(int parameterIndex, boolean x) throws SQLException {
                     agent_.logWriter_.traceEntry(this, "setBoolean", parameterIndex, x);
                 }
                 
-                final int paramType = getColumnMetaDataX().getColumnType(parameterIndex);
+                final int paramType = 
+                    getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) );
 
                 if( ! PossibleTypes.POSSIBLE_TYPES_IN_SET_GENERIC_SCALAR.checkType(paramType) ) {
                     
@@ -494,7 +496,8 @@ public void setByte(int parameterIndex, byte x) throws SQLException {
                     agent_.logWriter_.traceEntry(this, "setByte", parameterIndex, x);
                 }
                 
-                final int paramType = getColumnMetaDataX().getColumnType(parameterIndex);
+                final int paramType = 
+                    getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) );
                 
                 if( ! PossibleTypes.POSSIBLE_TYPES_IN_SET_GENERIC_SCALAR.checkType( paramType ) ){
                     
@@ -523,7 +526,8 @@ public void setShort(int parameterIndex, short x) throws SQLException {
                     agent_.logWriter_.traceEntry(this, "setShort", parameterIndex, x);
                 }
                 
-                final int paramType = getColumnMetaDataX().getColumnType(parameterIndex);
+                final int paramType = 
+                    getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) );
 
                 if( ! PossibleTypes.POSSIBLE_TYPES_IN_SET_GENERIC_SCALAR.checkType(paramType) ){
                     
@@ -559,7 +563,8 @@ public void setInt(int parameterIndex, int x) throws SQLException {
                     agent_.logWriter_.traceEntry(this, "setInt", parameterIndex, x);
                 }
                 
-                final int paramType = getColumnMetaDataX().getColumnType(parameterIndex);
+                final int paramType = 
+                    getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) );
 
                 if( ! PossibleTypes.POSSIBLE_TYPES_IN_SET_GENERIC_SCALAR.checkType(paramType) ){
                     
@@ -593,7 +598,8 @@ public void setLong(int parameterIndex, long x) throws SQLException {
                     agent_.logWriter_.traceEntry(this, "setLong", parameterIndex, x);
                 }
                 
-                final int paramType = getColumnMetaDataX().getColumnType(parameterIndex);
+                final int paramType = 
+                    getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) );
                 
                 if( ! PossibleTypes.POSSIBLE_TYPES_IN_SET_GENERIC_SCALAR.checkType(paramType) ){
                     
@@ -621,7 +627,8 @@ public void setFloat(int parameterIndex, float x) throws SQLException {
                     agent_.logWriter_.traceEntry(this, "setFloat", parameterIndex, x);
                 }
                 
-                final int paramType = getColumnMetaDataX().getColumnType(parameterIndex);
+                final int paramType = 
+                    getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) );
 
                 if( ! PossibleTypes.POSSIBLE_TYPES_IN_SET_GENERIC_SCALAR.checkType(paramType) ){
                     
@@ -650,7 +657,8 @@ public void setDouble(int parameterIndex, double x) throws SQLException {
                     agent_.logWriter_.traceEntry(this, "setDouble", parameterIndex, x);
                 }
                 
-                final int paramType = getColumnMetaDataX().getColumnType(parameterIndex);
+                final int paramType = 
+                    getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) );
                 
                 if( ! PossibleTypes.POSSIBLE_TYPES_IN_SET_GENERIC_SCALAR.checkType(paramType) ){
                     
@@ -679,7 +687,8 @@ public void setBigDecimal(int parameterIndex, java.math.BigDecimal x) throws SQL
                     agent_.logWriter_.traceEntry(this, "setBigDecimal", parameterIndex, x);
                 }
                 
-                final int paramType = getColumnMetaDataX().getColumnType(parameterIndex);
+                final int paramType = 
+                    getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) );
 
                 if( ! PossibleTypes.POSSIBLE_TYPES_IN_SET_GENERIC_SCALAR.checkType( paramType ) ){
                     
@@ -713,7 +722,8 @@ public void setDate(int parameterIndex, java.sql.Date x) throws SQLException {
                     agent_.logWriter_.traceEntry(this, "setDate", parameterIndex, x);
                 }
                 
-                final int paramType = getColumnMetaDataX().getColumnType(parameterIndex);
+                final int paramType = 
+                    getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) );
                 
                 if( ! PossibleTypes.POSSIBLE_TYPES_IN_SET_DATE.checkType(paramType) ){
                     
@@ -781,7 +791,8 @@ public void setTime(int parameterIndex, java.sql.Time x) throws SQLException {
                     agent_.logWriter_.traceEntry(this, "setTime", parameterIndex, x);
                 }
                 
-                final int paramType = getColumnMetaDataX().getColumnType(parameterIndex);
+                final int paramType = 
+                    getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) );
 
                 if( ! PossibleTypes.POSSIBLE_TYPES_IN_SET_TIME.checkType( paramType ) ){
                     
@@ -848,7 +859,8 @@ public void setTimestamp(int parameterIndex, java.sql.Timestamp x) throws SQLExc
                     agent_.logWriter_.traceEntry(this, "setTimestamp", parameterIndex, x);
                 }
                 
-                final int paramType = getColumnMetaDataX().getColumnType(parameterIndex);
+                final int paramType = 
+                    getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) );
 
                 if( ! PossibleTypes.POSSIBLE_TYPES_IN_SET_TIMESTAMP.checkType( paramType ) ) {
                     
@@ -922,7 +934,8 @@ public void setString(int parameterIndex, String x) throws SQLException {
                     agent_.logWriter_.traceEntry(this, "setString", parameterIndex, x);
                 }
                 
-                final int paramType = getColumnMetaDataX().getColumnType(parameterIndex);
+                final int paramType = 
+                    getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) );
 
                 if( ! PossibleTypes.POSSIBLE_TYPES_IN_SET_STRING.checkType( paramType ) ){
                     PossibleTypes.throw22005Exception(agent_.logWriter_ ,
@@ -958,7 +971,8 @@ public void setBytes(int parameterIndex, byte[] x) throws SQLException {
                     agent_.logWriter_.traceEntry(this, "setBytes", parameterIndex, x);
                 }
                 
-                final int paramType = getColumnMetaDataX().getColumnType(parameterIndex);
+                final int paramType = 
+                    getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) );
                 
                 if( ! PossibleTypes.POSSIBLE_TYPES_IN_SET_BYTES.checkType( paramType ) ){
                     
@@ -1007,7 +1021,8 @@ public void setBinaryStream(int parameterIndex,
                     agent_.logWriter_.traceEntry(this, "setBinaryStream", parameterIndex, "<input stream>", new Long(length));
                 }
                 
-                final int paramType = getColumnMetaDataX().getColumnType(parameterIndex);
+                final int paramType = 
+                    getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) );
 
                 if ( ! PossibleTypes.POSSIBLE_TYPES_IN_SET_BINARYSTREAM.checkType( paramType ) ){
                     PossibleTypes.throw22005Exception(agent_.logWriter_,
@@ -1085,7 +1100,7 @@ public void setAsciiStream(int parameterIndex,
                     agent_.logWriter_.traceEntry(this, "setAsciiStream", parameterIndex, "<input stream>", new Long(length));
                 }
                 
-                checkTypeForSetAsciiStream(getColumnMetaDataX().getColumnType(parameterIndex),
+                checkTypeForSetAsciiStream(getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) ),
                                            agent_.logWriter_);
 
                 parameterIndex = checkSetterPreconditions(parameterIndex);
@@ -1213,7 +1228,7 @@ public void setCharacterStream(int parameterIndex, Reader x)
             }
             try {
                 
-                checkTypeForSetCharacterStream(getColumnMetaDataX().getColumnType(parameterIndex),
+                checkTypeForSetCharacterStream(getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) ),
                                                agent_.logWriter_);
                 
                 parameterIndex = checkSetterPreconditions(parameterIndex);
@@ -1252,7 +1267,7 @@ public void setCharacterStream(int parameterIndex,
                     agent_.logWriter_.traceEntry(this, "setCharacterStream", parameterIndex, x, new Long(length));
                 }
 
-                checkTypeForSetCharacterStream(getColumnMetaDataX().getColumnType(parameterIndex),
+                checkTypeForSetCharacterStream(getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) ),
                                                agent_.logWriter_);
                 
                 parameterIndex = checkSetterPreconditions(parameterIndex);
@@ -1316,7 +1331,7 @@ public void setBlob(int parameterIndex, java.sql.Blob x) throws SQLException {
                     agent_.logWriter_.traceEntry(this, "setBlob", parameterIndex, x);
                 }
                 
-                checkTypeForSetBlob(getColumnMetaDataX().getColumnType(parameterIndex),
+                checkTypeForSetBlob(getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) ),
                                     agent_.logWriter_);
                     
                 setBlobX(parameterIndex, x);
@@ -1347,7 +1362,7 @@ public void setClob(int parameterIndex, java.sql.Clob x) throws SQLException {
                     agent_.logWriter_.traceEntry(this, "setClob", parameterIndex, x);
                 }
                 
-                checkTypeForSetClob(getColumnMetaDataX().getColumnType(parameterIndex),
+                checkTypeForSetClob(getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) ),
                                     agent_.logWriter_);
                 
                 setClobX(parameterIndex, x);
@@ -2666,7 +2681,7 @@ public void setClob(int parameterIndex, Reader reader)
             
             try {
                 
-                checkTypeForSetClob(getColumnMetaDataX().getColumnType(parameterIndex),
+                checkTypeForSetClob(getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) ),
                                 agent_.logWriter_);
                 
                 checkForClosedStatement();
@@ -2736,7 +2751,7 @@ public void setBlob(int parameterIndex, InputStream inputStream)
             }
 
             try {
-                checkTypeForSetBlob(getColumnMetaDataX().getColumnType(parameterIndex),
+                checkTypeForSetBlob(getColumnMetaDataX().getColumnType( checkForEscapedCallWithResult( parameterIndex ) ),
                                     agent_.logWriter_);
                 
                 setBinaryStreamX(parameterIndex, inputStream, -1);
