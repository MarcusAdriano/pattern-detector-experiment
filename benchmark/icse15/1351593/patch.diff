diff --git a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/BasicAppManagerTest.java b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/BasicAppManagerTest.java
index d17a1ad4..648cef01 100644
--- a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/BasicAppManagerTest.java
+++ b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/BasicAppManagerTest.java
@@ -38,6 +38,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.ops4j.pax.exam.Option;
+import org.ops4j.pax.exam.container.def.PaxRunnerOptions;
 import org.ops4j.pax.exam.junit.JUnit4TestRunner;
 
 @RunWith(JUnit4TestRunner.class)
@@ -140,8 +141,7 @@ public void testAppStore() throws Exception {
   }
 
   
-  @org.ops4j.pax.exam.junit.Configuration
-  public static Option[] configuration() {
+  private static Option[] generalConfiguration() {
     return testOptions(
         paxLogging("DEBUG"),
 
@@ -160,7 +160,7 @@ public void testAppStore() throws Exception {
         mavenBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint"), 
         mavenBundle("org.ow2.asm", "asm-all"),
         mavenBundle("org.apache.aries.proxy", "org.apache.aries.proxy"),
-        mavenBundle("org.osgi", "org.osgi.compendium"),
+        mavenBundle("org.osgi", "org.osgi.compendium"));
         
         
         /* For debugging, uncomment the next two lines
@@ -172,6 +172,25 @@ public void testAppStore() throws Exception {
         import static org.ops4j.pax.exam.container.def.PaxRunnerOptions.vmOption;
         */
 
-        equinox().version("3.5.0"));
   }
+
+  @org.ops4j.pax.exam.junit.Configuration
+  public static Option[] equinox35Options()
+  {
+	  return testOptions(
+			  generalConfiguration(),
+	          equinox().version("3.5.0")
+	          );
+  }
+
+  @org.ops4j.pax.exam.junit.Configuration
+  public static Option[] equinox37Options()
+  {
+	  return testOptions(
+			  generalConfiguration(),
+			  PaxRunnerOptions.rawPaxRunnerOption("config", "classpath:ss-runner.properties"),          
+	          equinox().version("3.7.0.v20110613")
+	          );
+  }
+
 }
diff --git a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/BasicNoOpResolverTest.java b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/BasicNoOpResolverTest.java
index b57dfb2d..cfff130f 100644
--- a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/BasicNoOpResolverTest.java
+++ b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/BasicNoOpResolverTest.java
@@ -37,6 +37,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.ops4j.pax.exam.Option;
+import org.ops4j.pax.exam.container.def.PaxRunnerOptions;
 import org.ops4j.pax.exam.junit.JUnit4TestRunner;
 
 @RunWith(JUnit4TestRunner.class)
@@ -115,8 +116,7 @@ public void testAppWithApplicationManifest() throws Exception {
   }
 
   
-  @org.ops4j.pax.exam.junit.Configuration
-  public static Option[] configuration() {
+  private static Option[] generalConfiguration() {
     return testOptions(
         paxLogging("DEBUG"),
 
@@ -134,7 +134,7 @@ public void testAppWithApplicationManifest() throws Exception {
         mavenBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint"), 
         mavenBundle("org.ow2.asm", "asm-all"),
         mavenBundle("org.apache.aries.proxy", "org.apache.aries.proxy"),
-        mavenBundle("org.osgi", "org.osgi.compendium"),
+        mavenBundle("org.osgi", "org.osgi.compendium"));
         
         
         /* For debugging, uncomment the next two lines
@@ -146,6 +146,25 @@ public void testAppWithApplicationManifest() throws Exception {
         import static org.ops4j.pax.exam.container.def.PaxRunnerOptions.vmOption;
         */
 
-        equinox().version("3.5.0"));
   }
+
+  @org.ops4j.pax.exam.junit.Configuration
+  public static Option[] equinox35Options()
+  {
+	  return testOptions(
+			  generalConfiguration(),
+	          equinox().version("3.5.0")
+	          );
+  }
+
+  @org.ops4j.pax.exam.junit.Configuration
+  public static Option[] equinox37Options()
+  {
+	  return testOptions(
+			  generalConfiguration(),
+			  PaxRunnerOptions.rawPaxRunnerOption("config", "classpath:ss-runner.properties"),          
+	          equinox().version("3.7.0.v20110613")
+	          );
+  }
+
 }
diff --git a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedCfgAdminRuntimeTest.java b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedCfgAdminRuntimeTest.java
index 1776803a..21a2bea4 100644
--- a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedCfgAdminRuntimeTest.java
+++ b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedCfgAdminRuntimeTest.java
@@ -57,6 +57,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.ops4j.pax.exam.Option;
+import org.ops4j.pax.exam.container.def.PaxRunnerOptions;
 import org.ops4j.pax.exam.junit.JUnit4TestRunner;
 import org.ops4j.pax.exam.options.MavenArtifactProvisionOption;
 import org.osgi.framework.BundleContext;
@@ -359,8 +360,7 @@ private void uninstallApplication(Context ctx) throws Exception {
      * @return the various required options
      * @throws Exception
      */
-    @org.ops4j.pax.exam.junit.Configuration
-    public static Option[] configuration() throws Exception {
+    private static Option[] generalConfiguration() throws Exception {
         return testOptions(
                 repository("http://repository.ops4j.org/maven2"),
                 paxLogging("DEBUG"),
@@ -384,9 +384,27 @@ private void uninstallApplication(Context ctx) throws Exception {
                 mavenBundle("org.apache.aries.application", "org.apache.aries.application.runtime.repository"),
                 mavenBundle("org.apache.felix", "org.apache.felix.configadmin"),
                 mavenBundle("org.apache.geronimo.specs", "geronimo-jta_1.1_spec"),
-                mavenBundle("org.ops4j.pax.url", "pax-url-mvn"),
+                mavenBundle("org.ops4j.pax.url", "pax-url-mvn"));
                 //vmOption("-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5006"), 
-                equinox().version("3.5.0"));
+    }
+
+    @org.ops4j.pax.exam.junit.Configuration
+    public static Option[] equinox35Options() throws Exception
+    {
+  	  return testOptions(
+  			  generalConfiguration(),
+  	          equinox().version("3.5.0")
+  	          );
+    }
+
+    @org.ops4j.pax.exam.junit.Configuration
+    public static Option[] equinox37Options() throws Exception
+    {
+  	  return testOptions(
+  			  generalConfiguration(),
+  			  PaxRunnerOptions.rawPaxRunnerOption("config", "classpath:ss-runner.properties"),          
+  	          equinox().version("3.7.0.v20110613")
+  	          );
     }
 
     /**
diff --git a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedRuntimeTest.java b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedRuntimeTest.java
index 08fd6350..e27c4858 100644
--- a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedRuntimeTest.java
+++ b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedRuntimeTest.java
@@ -50,6 +50,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.ops4j.pax.exam.Option;
+import org.ops4j.pax.exam.container.def.PaxRunnerOptions;
 import org.ops4j.pax.exam.junit.JUnit4TestRunner;
 import org.osgi.framework.Bundle;
 import org.osgi.framework.BundleEvent;
@@ -300,13 +301,12 @@ private void assertHelloWorldService(String appName) throws Exception
   private void assertHelloWorldService(String appName, String message) throws Exception
   {
     HelloWorld hw = IsolationTestUtils.findHelloWorldService(bundleContext, appName);
-    assertNotNull(hw);
+    assertNotNull("The Hello World service could not be found.", hw);
     assertEquals(message, hw.getMessage());
   }
   
-  @org.ops4j.pax.exam.junit.Configuration
-  public static Option[] configuration() {
-    return testOptions(
+  private static Option[] generalConfiguration() {
+    return flatOptions(
         repository( "http://repository.ops4j.org/maven2" ),
         
         paxLogging("DEBUG"),
@@ -331,7 +331,7 @@ private void assertHelloWorldService(String appName, String message) throws Exce
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.runtime.framework.management"),
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.runtime.repository"),
         mavenBundle("org.osgi", "org.osgi.compendium"),
-        mavenBundle("org.apache.geronimo.specs","geronimo-jta_1.1_spec"),
+        mavenBundle("org.apache.geronimo.specs","geronimo-jta_1.1_spec")
 
         /* For debugging, uncommenting the following two lines and add the imports */
         /*
@@ -343,6 +343,26 @@ private void assertHelloWorldService(String appName, String message) throws Exce
         import static org.ops4j.pax.exam.CoreOptions.waitForFrameworkStartup;
         import static org.ops4j.pax.exam.container.def.PaxRunnerOptions.vmOption;
          */
-        equinox().version("3.5.0"));
+          );
+  }
+  
+  @org.ops4j.pax.exam.junit.Configuration
+  public static Option[] equinox35Options()
+  {
+	  return testOptions(
+			  generalConfiguration(),
+	          equinox().version("3.5.0")
+	          );
   }
+
+  @org.ops4j.pax.exam.junit.Configuration
+  public static Option[] equinox37Options()
+  {
+	  return testOptions(
+			  generalConfiguration(),
+			  PaxRunnerOptions.rawPaxRunnerOption("config", "classpath:ss-runner.properties"),          
+	          equinox().version("3.7.0.v20110613")
+	          );
+  }
+
 }
diff --git a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/MinimumImportsTest.java b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/MinimumImportsTest.java
index f5b96f82..fcf5d7a8 100644
--- a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/MinimumImportsTest.java
+++ b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/MinimumImportsTest.java
@@ -43,6 +43,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.ops4j.pax.exam.Option;
+import org.ops4j.pax.exam.container.def.PaxRunnerOptions;
 import org.ops4j.pax.exam.junit.JUnit4TestRunner;
 import org.osgi.framework.Constants;
 import org.osgi.framework.ServiceRegistration;
@@ -164,8 +165,7 @@ public void testAppUsingAriesApplicationManager() throws Exception {
     sr.unregister();
   }
 
-  @org.ops4j.pax.exam.junit.Configuration
-  public static Option[] configuration() {
+  public static Option[] generalConfiguration() {
     return testOptions(
         paxLogging("DEBUG"),
 
@@ -184,7 +184,7 @@ public void testAppUsingAriesApplicationManager() throws Exception {
         mavenBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint"), 
         mavenBundle("org.ow2.asm", "asm-all"),
         mavenBundle("org.apache.aries.proxy", "org.apache.aries.proxy"),
-        mavenBundle("org.osgi", "org.osgi.compendium"),
+        mavenBundle("org.osgi", "org.osgi.compendium")
 
         /* For debugging, uncomment the next two lines*/
         /*vmOption ("-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5007"),
@@ -195,6 +195,26 @@ public void testAppUsingAriesApplicationManager() throws Exception {
           import static org.ops4j.pax.exam.container.def.PaxRunnerOptions.vmOption;*/
 
 
-        equinox().version("3.5.0"));
+        );
+  }
+  
+  @org.ops4j.pax.exam.junit.Configuration
+  public static Option[] equinox35Options()
+  {
+	  return testOptions(
+			  generalConfiguration(),
+	          equinox().version("3.5.0")
+	          );
   }
+
+  @org.ops4j.pax.exam.junit.Configuration
+  public static Option[] equinox37Options()
+  {
+	  return testOptions(
+			  generalConfiguration(),
+			  PaxRunnerOptions.rawPaxRunnerOption("config", "classpath:ss-runner.properties"),          
+	          equinox().version("3.7.0.v20110613")
+	          );
+  }
+
 }
diff --git a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRAppManagerTest.java b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRAppManagerTest.java
index ef4aef20..fd203202 100644
--- a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRAppManagerTest.java
+++ b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRAppManagerTest.java
@@ -44,6 +44,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.ops4j.pax.exam.Option;
+import org.ops4j.pax.exam.container.def.PaxRunnerOptions;
 import org.ops4j.pax.exam.junit.JUnit4TestRunner;
 
 @RunWith(JUnit4TestRunner.class)
@@ -146,8 +147,7 @@ public void testAppWithApplicationManifest() throws Exception {
 	    manager.uninstall(ctx);
 	  }
 
-  @org.ops4j.pax.exam.junit.Configuration
-  public static Option[] configuration() {
+  public static Option[] generalConfiguration() {
     return testOptions(
         paxLogging("DEBUG"),
 
@@ -167,7 +167,7 @@ public void testAppWithApplicationManifest() throws Exception {
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.runtime"),
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.runtime.itest.interfaces"),
 
-        mavenBundle("org.osgi", "org.osgi.compendium"),
+        mavenBundle("org.osgi", "org.osgi.compendium")
 
         //        /* For debugging, uncomment the next two lines
         //        vmOption ("-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"),
@@ -179,6 +179,26 @@ public void testAppWithApplicationManifest() throws Exception {
         import static org.ops4j.pax.exam.container.def.PaxRunnerOptions.vmOption;
          */
 
-        equinox().version("3.5.0"));
+        );
+  }
+  
+  @org.ops4j.pax.exam.junit.Configuration
+  public static Option[] equinox35Options()
+  {
+	  return testOptions(
+			  generalConfiguration(),
+	          equinox().version("3.5.0")
+	          );
+  }
+
+  @org.ops4j.pax.exam.junit.Configuration
+  public static Option[] equinox37Options()
+  {
+	  return testOptions(
+			  generalConfiguration(),
+			  PaxRunnerOptions.rawPaxRunnerOption("config", "classpath:ss-runner.properties"),          
+	          equinox().version("3.7.0.v20110613")
+	          );
   }
+
 }
diff --git a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverAdvancedTest.java b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverAdvancedTest.java
index 8a428bea..67379d93 100644
--- a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverAdvancedTest.java
+++ b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverAdvancedTest.java
@@ -66,6 +66,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.ops4j.pax.exam.Option;
+import org.ops4j.pax.exam.container.def.PaxRunnerOptions;
 import org.ops4j.pax.exam.junit.JUnit4TestRunner;
 import org.osgi.framework.Bundle;
 import org.osgi.framework.Constants;
@@ -529,8 +530,7 @@ public void clearRepository() {
     }
   }
 
-  @org.ops4j.pax.exam.junit.Configuration
-  public static Option[] configuration() {
+  private static Option[] generalConfiguration() {
     return testOptions(
         paxLogging("DEBUG"),
         
@@ -549,7 +549,7 @@ public void clearRepository() {
         mavenBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint"),
         mavenBundle("org.ow2.asm", "asm-all"),
         mavenBundle("org.apache.aries.proxy", "org.apache.aries.proxy"),
-        mavenBundle("org.osgi", "org.osgi.compendium"),
+        mavenBundle("org.osgi", "org.osgi.compendium")
 
         /* For debugging, uncomment the next two lines  */
         /*vmOption ("-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5010"),
@@ -560,6 +560,26 @@ public void clearRepository() {
         import static org.ops4j.pax.exam.container.def.PaxRunnerOptions.vmOption;
         */
 
-        equinox().version("3.5.0"));
+        );
+  }
+  
+  @org.ops4j.pax.exam.junit.Configuration
+  public static Option[] equinox35Options()
+  {
+	  return testOptions(
+			  generalConfiguration(),
+	          equinox().version("3.5.0")
+	          );
+  }
+
+  @org.ops4j.pax.exam.junit.Configuration
+  public static Option[] equinox37Options()
+  {
+	  return testOptions(
+			  generalConfiguration(),
+			  PaxRunnerOptions.rawPaxRunnerOption("config", "classpath:ss-runner.properties"),          
+	          equinox().version("3.7.0.v20110613")
+	          );
   }
+
 }
diff --git a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverTest.java b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverTest.java
index 9548d194..dc09ced2 100644
--- a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverTest.java
+++ b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverTest.java
@@ -65,6 +65,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.ops4j.pax.exam.Option;
+import org.ops4j.pax.exam.container.def.PaxRunnerOptions;
 import org.ops4j.pax.exam.junit.JUnit4TestRunner;
 import org.osgi.framework.Bundle;
 
@@ -314,8 +315,7 @@ private void generateOBRRepoXML(String ... bundleFiles) throws Exception
     }
 
 
-  @org.ops4j.pax.exam.junit.Configuration
-  public static Option[] configuration() {
+  private static Option[] generalConfiguration() {
     return testOptions(
         paxLogging("DEBUG"),
         
@@ -334,7 +334,7 @@ private void generateOBRRepoXML(String ... bundleFiles) throws Exception
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.management"),
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.runtime"),
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.runtime.itest.interfaces"),
-        mavenBundle("org.osgi", "org.osgi.compendium"),
+        mavenBundle("org.osgi", "org.osgi.compendium")
 
         /* For debugging, uncomment the next two lines */
         // vmOption ("-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=7777"),
@@ -345,6 +345,26 @@ private void generateOBRRepoXML(String ... bundleFiles) throws Exception
         import static org.ops4j.pax.exam.container.def.PaxRunnerOptions.vmOption;
         */
 
-        equinox().version("3.5.0"));
+        );
+  }
+  
+  @org.ops4j.pax.exam.junit.Configuration
+  public static Option[] equinox35Options()
+  {
+	  return testOptions(
+			  generalConfiguration(),
+	          equinox().version("3.5.0")
+	          );
+  }
+
+  @org.ops4j.pax.exam.junit.Configuration
+  public static Option[] equinox37Options()
+  {
+	  return testOptions(
+			  generalConfiguration(),
+			  PaxRunnerOptions.rawPaxRunnerOption("config", "classpath:ss-runner.properties"),          
+	          equinox().version("3.7.0.v20110613")
+	          );
   }
+
 }
diff --git a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/UpdateAppTest.java b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/UpdateAppTest.java
index 45a98d01..4b44c0b6 100644
--- a/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/UpdateAppTest.java
+++ b/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/UpdateAppTest.java
@@ -58,6 +58,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.ops4j.pax.exam.Option;
+import org.ops4j.pax.exam.container.def.PaxRunnerOptions;
 import org.ops4j.pax.exam.junit.JUnit4TestRunner;
 import org.osgi.framework.Bundle;
 import org.osgi.framework.BundleContext;
@@ -246,8 +247,7 @@ private void assertAppMessage(String message) throws Exception {
     assertEquals(message, hw.getMessage());
   }
 
-  @org.ops4j.pax.exam.junit.Configuration
-  public static Option[] configuration() {
+  private static Option[] generalConfiguration() {
     return testOptions(
         paxLogging("DEBUG"),
         
@@ -273,7 +273,7 @@ private void assertAppMessage(String message) throws Exception {
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.runtime.repository"),
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.runtime.isolated"),
         mavenBundle("org.osgi", "org.osgi.compendium"),
-        mavenBundle("org.apache.geronimo.specs","geronimo-jta_1.1_spec"),
+        mavenBundle("org.apache.geronimo.specs","geronimo-jta_1.1_spec")
 
         // new VMOption("-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5011"),
 
@@ -282,6 +282,26 @@ private void assertAppMessage(String message) throws Exception {
         import static org.ops4j.pax.exam.CoreOptions.waitForFrameworkStartup;
         import static org.ops4j.pax.exam.container.def.PaxRunnerOptions.vmOption;
          */
-        equinox().version("3.5.0"));
+        );
+  }
+  
+  @org.ops4j.pax.exam.junit.Configuration
+  public static Option[] equinox35Options()
+  {
+	  return testOptions(
+			  generalConfiguration(),
+	          equinox().version("3.5.0")
+	          );
   }
+
+  @org.ops4j.pax.exam.junit.Configuration
+  public static Option[] equinox37Options()
+  {
+	  return testOptions(
+			  generalConfiguration(),
+			  PaxRunnerOptions.rawPaxRunnerOption("config", "classpath:ss-runner.properties"),          
+	          equinox().version("3.7.0.v20110613")
+	          );
+  }
+
 }
diff --git a/aries/trunk/util/util/src/main/java/org/apache/aries/util/tracker/RecursiveBundleTracker.java b/aries/trunk/util/util/src/main/java/org/apache/aries/util/tracker/RecursiveBundleTracker.java
index 2342dcc6..ebfef7a5 100644
--- a/aries/trunk/util/util/src/main/java/org/apache/aries/util/tracker/RecursiveBundleTracker.java
+++ b/aries/trunk/util/util/src/main/java/org/apache/aries/util/tracker/RecursiveBundleTracker.java
@@ -42,6 +42,7 @@
             Bundle.INSTALLED | Bundle.RESOLVED | Bundle.STARTING | Bundle.ACTIVE | Bundle.STOPPING;
 
     private final BundleTracker tracker;
+    private final BundleTracker compositeTracker;
 
     /**
      * Constructor
@@ -54,6 +55,7 @@
      *                                  flags
      */
     public RecursiveBundleTracker(BundleContext context, int stateMask, BundleTrackerCustomizer customizer) {
+        //This test only makes sense for composite bundles, but in the interests of more consistent behavior lets leave it.
         // We always need INSTALLED events so we can recursively listen to the frameworks
         if ((stateMask & COMPOSITE_BUNDLE_MASK) != COMPOSITE_BUNDLE_MASK)
             throw new IllegalArgumentException();
@@ -63,15 +65,15 @@ public RecursiveBundleTracker(BundleContext context, int stateMask, BundleTracke
             tracker = new BundleHookBundleTracker(context, stateMask, customizer);
         } catch (Throwable e) {
         }
-        if (tracker == null) {
             if (areMultipleFrameworksAvailable(context)) {
-                //not sure if this ever happens, non R43 composite bundles
-                tracker = new InternalRecursiveBundleTracker(context, stateMask, customizer);
+            compositeTracker = new InternalRecursiveBundleTracker(context, stateMask, customizer, tracker == null);
             } else {
+            compositeTracker = null;
+        }
+        if (tracker == null && compositeTracker == null) {
                 //R42
                 tracker = new BundleTracker(context, stateMask, customizer);
             }
-        }
         this.tracker = tracker;
     }
 
@@ -86,8 +88,13 @@ private static boolean areMultipleFrameworksAvailable(BundleContext context) {
      * @see BundleTracker#open()
      */
     public void open() {
+        if (tracker != null) {
         tracker.open();
     }
+        if (compositeTracker != null) {
+            compositeTracker.open();
+        }
+    }
 
     /**
      * Stop the tracking of bundles
@@ -95,7 +102,12 @@ public void open() {
      * @see BundleTracker#close()
      */
     public void close() {
+        if (tracker != null) {
         tracker.close();
     }
+        if (compositeTracker != null) {
+            compositeTracker.close();
+        }
+    }
 
 }
diff --git a/aries/trunk/util/util/src/test/java/org/apache/aries/util/RecursiveBundleTrackerTest.java b/aries/trunk/util/util/src/test/java/org/apache/aries/util/RecursiveBundleTrackerTest.java
index d2de9c3a..1c7f51b1 100644
--- a/aries/trunk/util/util/src/test/java/org/apache/aries/util/RecursiveBundleTrackerTest.java
+++ b/aries/trunk/util/util/src/test/java/org/apache/aries/util/RecursiveBundleTrackerTest.java
@@ -118,7 +118,7 @@ private void makeSUT() {
         BundleTrackerCustomizer customizer = Skeleton.newMock(BundleTrackerCustomizer.class);
 
         sut = new InternalRecursiveBundleTracker(context, 
-                Bundle.INSTALLED | Bundle.STARTING | Bundle.ACTIVE | Bundle.STOPPING, customizer);
+                Bundle.INSTALLED | Bundle.STARTING | Bundle.ACTIVE | Bundle.STOPPING, customizer, true);
         
         sut.open();
     }
diff --git a/aries/trunk/util/util-r42/src/main/java/org/apache/aries/util/tracker/InternalRecursiveBundleTracker.java b/aries/trunk/util/util-r42/src/main/java/org/apache/aries/util/tracker/InternalRecursiveBundleTracker.java
index fa8a2dbf..96fd8321 100644
--- a/aries/trunk/util/util-r42/src/main/java/org/apache/aries/util/tracker/InternalRecursiveBundleTracker.java
+++ b/aries/trunk/util/util-r42/src/main/java/org/apache/aries/util/tracker/InternalRecursiveBundleTracker.java
@@ -44,12 +44,15 @@
 
   private final BundleTrackerCustomizer customizer;
 
+  private final boolean nested;
+
   public InternalRecursiveBundleTracker(BundleContext context, int stateMask,
-      BundleTrackerCustomizer customizer)
+      BundleTrackerCustomizer customizer, boolean nested)
   {
     super(context, stateMask, null);
     mask = stateMask;
     this.customizer = customizer;
+    this.nested = nested;
   }
 
   /*
@@ -64,7 +67,7 @@ public Object addingBundle(Bundle b, BundleEvent event)
     if (b instanceof CompositeBundle) {
       customizedProcessBundle(this, b, event, false);
       o = b;
-    } else {
+    } else if (nested) {
       // Delegate to our customizer for normal bundles
       if (customizer != null) {
         o = customizer.addingBundle(b, event);
@@ -154,7 +157,7 @@ private synchronized void openTracker(BundleTrackerCustomizer btc, CompositeBund
 
       // let's track each of the bundle in the CompositeBundle
       BundleTracker bt = new InternalRecursiveBundleTracker(compositeBundleContext, stateMask,
-          customizer);
+          customizer, true);
       bt.open();
       BundleTrackerFactory.registerBundleTracker(bundleScope, bt);
     }
