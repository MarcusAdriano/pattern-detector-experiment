diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/ColumnFamilyStore.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
index 6888845e..5bd726f0 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/ColumnFamilyStore.java
@@ -682,8 +682,12 @@ void switchBinaryMemtable(DecoratedKey key, ByteBuffer buffer)
     public void forceFlushIfExpired()
     {
         if (memtable.isExpired())
+        {
+            logger.info("Memtable for {} has reached memtable_flush_after_mins {}, enqueueing flush",
+                        memtable.cfs.getColumnFamilyName(), memtable.cfs.getMemtableFlushAfterMins());
             forceFlush();
     }
+    }
 
     public Future<?> forceFlush()
     {
diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/Memtable.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/Memtable.java
index 41dc9c88..fbba0866 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/Memtable.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/db/Memtable.java
@@ -99,7 +99,20 @@ public int getCurrentOperations()
 
     boolean isThresholdViolated()
     {
-        return currentThroughput.get() >= this.THRESHOLD || currentOperations.get() >= this.THRESHOLD_COUNT;
+        if (currentThroughput.get() >= THRESHOLD)
+        {
+            logger.info("Memtable for CF {} has reached memtable_throughput_in_mb {}, enqueueing flush",
+                        cfs.getColumnFamilyName(), THRESHOLD);
+            return true;
+        }
+        if (currentOperations.get() >= THRESHOLD_COUNT)
+        {
+            logger.info("Memtable for CF {} has reached memtable_operations_in_millions {}, enqueueing flush",
+                        cfs.getColumnFamilyName(), THRESHOLD_COUNT);
+            return true;
+        }
+        // default case, threshold is not violated.
+        return false;
     }
 
     boolean isFrozen()
