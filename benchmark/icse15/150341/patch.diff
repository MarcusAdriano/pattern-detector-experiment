diff --git a/lucene/java/trunk/src/java/org/apache/lucene/index/MultiReader.java b/lucene/java/trunk/src/java/org/apache/lucene/index/MultiReader.java
index fc0f45ef..e4990377 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/index/MultiReader.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/index/MultiReader.java
@@ -78,8 +78,7 @@ private void initialize(IndexReader[] subReaders) throws IOException{
    *  in a given vectorized field.
    *  If no such fields existed, the method returns null.
    */
-  public TermFreqVector[] getTermFreqVectors(int n)
-          throws IOException {
+  public TermFreqVector[] getTermFreqVectors(int n) throws IOException {
     int i = readerIndex(n);			  // find segment num
     return subReaders[i].getTermFreqVectors(n - starts[i]); // dispatch to segment
   }
@@ -370,8 +369,7 @@ public boolean next() throws IOException {
   }
 
   /** Optimized implementation. */
-  public int read(final int[] docs, final int[] freqs)
-      throws IOException {
+  public int read(final int[] docs, final int[] freqs) throws IOException {
     while (true) {
       while (current == null) {
 	if (pointer < readers.length) {		  // try next segment
@@ -430,8 +428,7 @@ public MultiTermPositions(IndexReader[] r, int[] s) {
     super(r,s);
   }
 
-  protected SegmentTermDocs termDocs(IndexReader reader)
-       throws IOException {
+  protected SegmentTermDocs termDocs(IndexReader reader) throws IOException {
     return (SegmentTermDocs)reader.termPositions();
   }
 
