diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ExistsWithSubqueriesTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ExistsWithSubqueriesTest.java
index 77062788..1c77ad10 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ExistsWithSubqueriesTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/ExistsWithSubqueriesTest.java
@@ -594,7 +594,7 @@ public void testDerby6408() throws SQLException {
                 + "where (not (not exists (select * from onerow))) is null"));
 
         // Similar problems were seen in IN subqueries that were rewritten
-        // to an EXISTS subqueries internally. For example, this query used
+        // to EXISTS subqueries internally. For example, this query used
         // to return NULL.
         JDBC.assertSingleValueResultSet(
                 s.executeQuery("values 1 in (select j from onerow)"), "false");
