diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/config/DatabaseDescriptor.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
index f7062320..45324074 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/config/DatabaseDescriptor.java
@@ -23,6 +23,7 @@
 import java.lang.reflect.InvocationTargetException;
 import java.net.InetAddress;
 import java.net.URL;
+import java.net.URI;
 import java.net.UnknownHostException;
 import java.util.*;
 import javax.xml.parsers.ParserConfigurationException;
@@ -123,7 +124,7 @@
     private static int gcGraceInSeconds = 10 * 24 * 3600; // 10 days
 
     // the path qualified config file (storage-conf.xml) name
-    private static String configFileName;
+    private static URI configFileURI;
     /* initial token in the ring */
     private static String initialToken = null;
 
@@ -167,16 +168,33 @@ public static int getCompactionPriority()
     /**
      * Try the storage-config system property, and then inspect the classpath.
      */
-    static String getStorageConfigPath()
+    static URI getStorageConfigURI()
     {
-        String scp = System.getProperty("storage-config") + File.separator + STORAGE_CONF_FILE;
-        if (new File(scp).exists())
-            return scp;
+	String confdir = System.getProperty("storage-config");
+	if (confdir != null) {
+	    String scp = confdir + File.separator + STORAGE_CONF_FILE;
+	    File scpf = new File(scp);
+	    if (scpf.exists()) {
+		return scpf.toURI();
+	    }
+	}
+
         // try the classpath
         ClassLoader loader = DatabaseDescriptor.class.getClassLoader();
         URL scpurl = loader.getResource(STORAGE_CONF_FILE);
-        if (scpurl != null)
-            return scpurl.getFile();
+	if (scpurl != null) {
+	    String s = scpurl.toString();
+	    URI u;
+	    try {
+		u = new URI(s);
+	    }
+	    catch (java.net.URISyntaxException e)
+	    {
+		throw new RuntimeException(e);
+	    }
+	    return u;
+	}
+
         throw new RuntimeException("Cannot locate " + STORAGE_CONF_FILE + " via storage-config system property or classpath lookup.");
     }
 
@@ -184,10 +202,11 @@ static String getStorageConfigPath()
     {
         try
         {
-            configFileName = getStorageConfigPath();
+	    configFileURI = getStorageConfigURI();
+
             if (logger.isDebugEnabled())
-                logger.debug("Loading settings from " + configFileName);
-            XMLUtils xmlUtils = new XMLUtils(configFileName);
+                logger.debug("Loading settings from " + configFileURI);
+            XMLUtils xmlUtils = new XMLUtils(configFileURI);
 
             /* Cluster Name */
             clusterName = xmlUtils.getNodeValue("/Storage/ClusterName");
@@ -590,7 +609,7 @@ private static void readTablesFromXml() throws ConfigurationException
         XMLUtils xmlUtils = null;
         try
         {
-            xmlUtils = new XMLUtils(configFileName);
+            xmlUtils = new XMLUtils(configFileURI);
         }
         catch (ParserConfigurationException e)
         {
@@ -958,7 +977,7 @@ public static String getClusterName()
     }
 
     public static String getConfigFileName() {
-        return configFileName;
+        return configFileURI.toString();
     }
 
     public static String getJobJarLocation()
diff --git a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/utils/XMLUtils.java b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/utils/XMLUtils.java
index eb7a1cc1..d65ad63a 100644
--- a/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/utils/XMLUtils.java
+++ b/cassandra/branches/cassandra-0.6/src/java/org/apache/cassandra/utils/XMLUtils.java
@@ -27,6 +27,7 @@
 import javax.xml.xpath.XPathExpressionException;
 import javax.xml.xpath.XPathFactory;
 import java.io.*;
+import java.net.URI;
 import org.w3c.dom.*;
 import org.xml.sax.*;
 
@@ -46,6 +47,17 @@ public XMLUtils(String xmlSrc) throws FileNotFoundException, ParserConfiguration
         xpath_ = xpathFactory.newXPath();
     }
 
+    public XMLUtils(URI xmlURI) throws FileNotFoundException, ParserConfigurationException, SAXException, IOException
+    {
+        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
+        DocumentBuilder db = dbf.newDocumentBuilder();
+	InputStream stream = xmlURI.toURL().openStream();
+        document_ = db.parse(stream);
+
+        XPathFactory xpathFactory = XPathFactory.newInstance();
+        xpath_ = xpathFactory.newXPath();
+    }
+
 	public String getNodeValue(String xql) throws XPathExpressionException
 	{
         String value = xpath_.compile(xql).evaluate(document_);
