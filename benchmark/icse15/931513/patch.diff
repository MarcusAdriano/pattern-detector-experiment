diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanItemPreferenceArray.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanItemPreferenceArray.java
index 446abaaf..5a5a5d7e 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanItemPreferenceArray.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanItemPreferenceArray.java
@@ -41,20 +41,21 @@
   private long id;
   
   public BooleanItemPreferenceArray(int size) {
-    if (size < 1) {
-      throw new IllegalArgumentException("size is less than 1");
-    }
     this.IDs = new long[size];
+    this.id = Long.MIN_VALUE; // as a sort of 'unspecified' value
   }
   
   public BooleanItemPreferenceArray(List<Preference> prefs, boolean forOneUser) {
     this(prefs.size());
-    for (int i = 0; i < prefs.size(); i++) {
+    int size = prefs.size();
+    for (int i = 0; i < size; i++) {
       Preference pref = prefs.get(i);
       IDs[i] = forOneUser ? pref.getItemID() : pref.getUserID();
     }
+    if (size > 0) {
     id = forOneUser ? prefs.get(0).getUserID() : prefs.get(0).getItemID();
   }
+  }
   
   /**
    * This is a private copy constructor for clone().
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanUserPreferenceArray.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanUserPreferenceArray.java
index c55b6b04..86085222 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanUserPreferenceArray.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/BooleanUserPreferenceArray.java
@@ -41,20 +41,21 @@
   private long id;
   
   public BooleanUserPreferenceArray(int size) {
-    if (size < 1) {
-      throw new IllegalArgumentException("size is less than 1");
-    }
     this.IDs = new long[size];
+    this.id = Long.MIN_VALUE; // as a sort of 'unspecified' value
   }
   
   public BooleanUserPreferenceArray(List<Preference> prefs) {
     this(prefs.size());
-    for (int i = 0; i < prefs.size(); i++) {
+    int size = prefs.size();
+    for (int i = 0; i < size; i++) {
       Preference pref = prefs.get(i);
       IDs[i] = pref.getItemID();
     }
+    if (size > 0) {
     id = prefs.get(0).getUserID();
   }
+  }
   
   /**
    * This is a private copy constructor for clone().
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericItemPreferenceArray.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericItemPreferenceArray.java
index 61909c82..eb8b39a3 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericItemPreferenceArray.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericItemPreferenceArray.java
@@ -45,22 +45,23 @@
   private final float[] values;
   
   public GenericItemPreferenceArray(int size) {
-    if (size < 1) {
-      throw new IllegalArgumentException("size is less than 1");
-    }
     this.IDs = new long[size];
     values = new float[size];
+    this.id = Long.MIN_VALUE; // as a sort of 'unspecified' value
   }
   
   public GenericItemPreferenceArray(List<Preference> prefs) {
     this(prefs.size());
-    for (int i = 0; i < prefs.size(); i++) {
+    int size = prefs.size();
+    for (int i = 0; i < size; i++) {
       Preference pref = prefs.get(i);
       IDs[i] = pref.getUserID();
       values[i] = pref.getValue();
     }
+    if (size > 0) {
     id = prefs.get(0).getItemID();
   }
+  }
   
   /**
    * This is a private copy constructor for clone().
diff --git a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericUserPreferenceArray.java b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericUserPreferenceArray.java
index 73880ac1..d6f94129 100644
--- a/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericUserPreferenceArray.java
+++ b/lucene/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/model/GenericUserPreferenceArray.java
@@ -46,22 +46,23 @@
   private final float[] values;
   
   public GenericUserPreferenceArray(int size) {
-    if (size < 1) {
-      throw new IllegalArgumentException("size is less than 1");
-    }
     this.IDs = new long[size];
     values = new float[size];
+    this.id = Long.MIN_VALUE; // as a sort of 'unspecified' value
   }
   
   public GenericUserPreferenceArray(List<Preference> prefs) {
     this(prefs.size());
-    for (int i = 0; i < prefs.size(); i++) {
+    int size = prefs.size();
+    for (int i = 0; i < size; i++) {
       Preference pref = prefs.get(i);
       IDs[i] = pref.getItemID();
       values[i] = pref.getValue();
     }
+    if (size > 0) {
     id = prefs.get(0).getUserID();
   }
+  }
   
   /**
    * This is a private copy constructor for clone().
