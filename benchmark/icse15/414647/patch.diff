diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/RAFContainer.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/RAFContainer.java
index abb26c01..1429e8c4 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/RAFContainer.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/raw/data/RAFContainer.java
@@ -352,10 +352,13 @@ protected void writePage(long pageNumber, byte[] pageData, boolean syncPage)
 		synchronized(this)
 		{
 
+			if (getCommittedDropState())
+            {
 			// committed and dropped, do nothing.
 			// This file container may only be a stub
-			if (getCommittedDropState())
+
 				return;
+            }
 
 		///////////////////////////////////////////////////
 		//
@@ -368,18 +371,6 @@ protected void writePage(long pageNumber, byte[] pageData, boolean syncPage)
 
 			long pageOffset = pageNumber * pageSize;
 
-			try
-			{
-				fileData.seek(pageOffset);
-
-				/**
-					On EPOC (www.symbian.com) a seek beyond the end of
-					a file just moves the file pointer to the end of the file.
-
-				*/
-				if (fileData.getFilePointer() != pageOffset)
-					padFile(fileData, pageOffset);
-
                 byte [] encryptionBuf = null; 
                 if (dataFactory.databaseEncrypted() 
 					&& pageNumber != FIRST_ALLOC_PAGE_NUMBER)
@@ -392,10 +383,20 @@ On EPOC (www.symbian.com) a seek beyond the end of
                     encryptionBuf = getEncryptionBuffer();
                 }
 
-				byte[] dataToWrite = updatePageArray(pageNumber, 
-                                                     pageData, 
-                                                     encryptionBuf, 
-                                                     false);
+            byte[] dataToWrite = 
+                updatePageArray(pageNumber, pageData, encryptionBuf, false);
+
+			try
+			{
+				fileData.seek(pageOffset);
+
+				/**
+					On EPOC (www.symbian.com) a seek beyond the end of
+					a file just moves the file pointer to the end of the file.
+
+				*/
+				if (fileData.getFilePointer() != pageOffset)
+					padFile(fileData, pageOffset);
 
 				dataFactory.writeInProgress();
 				try
@@ -421,13 +422,17 @@ On EPOC (www.symbian.com) a seek beyond the end of
 					throw ioe;	// not writing beyond EOF, rethrow exception
 
 				if (SanityManager.DEBUG)
-					SanityManager.ASSERT(fileData.length() >= pageOffset,
+                {
+					SanityManager.ASSERT(
+                        fileData.length() >= pageOffset,
 										 "failed to blank filled missing pages");
+                }
+
 				fileData.seek(pageOffset);
 				dataFactory.writeInProgress();
 				try
 				{
-					fileData.write(pageData, 0, pageSize);
+					fileData.write(dataToWrite, 0, pageSize);
 				}
 				finally
 				{
@@ -478,7 +483,8 @@ On EPOC (www.symbian.com) a seek beyond the end of
             // space
             writeHeader(pageData);
 
-            if (SanityManager.DEBUG) {
+            if (SanityManager.DEBUG) 
+            {
                 if (FormatIdUtil.readFormatIdInteger(pageData) != AllocPage.FORMAT_NUMBER)
                     SanityManager.THROWASSERT(
                             "expect " +
@@ -489,7 +495,8 @@ On EPOC (www.symbian.com) a seek beyond the end of
 
             return pageData;
 
-        } else 
+        } 
+        else 
         {
             if (dataFactory.databaseEncrypted() || encryptWithNewEngine) 
            {
@@ -497,10 +504,13 @@ On EPOC (www.symbian.com) a seek beyond the end of
                                    pageSize, 
                                    encryptionBuf, 
                                    encryptWithNewEngine);
-            } else
+            } 
+            else
+            {
                 return pageData;
         }
     }
+    }
 
 
 	/**
