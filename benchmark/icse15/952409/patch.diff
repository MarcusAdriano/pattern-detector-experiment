diff --git a/incubator/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/AbstractIntegrationTest.java b/incubator/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/AbstractIntegrationTest.java
index c880c70a..bfcb800c 100644
--- a/incubator/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/AbstractIntegrationTest.java
+++ b/incubator/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/AbstractIntegrationTest.java
@@ -16,6 +16,7 @@
  */
 package org.apache.aries.application.runtime.itests;
 
+import static org.junit.Assert.assertNotNull;
 import static org.ops4j.pax.exam.CoreOptions.options;
 import static org.ops4j.pax.exam.CoreOptions.wrappedBundle;
 import static org.ops4j.pax.exam.OptionUtils.combine;
@@ -23,6 +24,8 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import org.apache.aries.application.management.AriesApplicationResolver;
+import org.apache.aries.blueprint.BlueprintConstants;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.runner.RunWith;
@@ -33,6 +36,7 @@
 import org.ops4j.pax.exam.options.MavenArtifactProvisionOption;
 import org.osgi.framework.Bundle;
 import org.osgi.framework.BundleContext;
+import org.osgi.framework.BundleException;
 import org.osgi.framework.Constants;
 import org.osgi.framework.Filter;
 import org.osgi.framework.FrameworkUtil;
@@ -150,4 +154,25 @@ public static MavenArtifactProvisionOption mavenBundle(String groupId,
     }
   }
 
+  /**
+   * Checks if the OBR Resolver is available. If this test succeeds, it starts 
+   * the 'org.apache.aries.application.runtime' bundle. Of course this method 
+   * can only work properly if org.apache.aries.application.runtime was added
+   * to Pax Exam configuration with 'noStart()'. 
+   * @throws BundleException 
+   */
+  protected void startApplicationRuntimeBundle() throws BundleException{
+    // Need to make sure that the OBR resolver was made available. This 
+    // resolver is registered by the org.apache.aries.application.resolver.obr
+    // bundle with osgi.service.blueprint.compname=obr-resolver.
+    getOsgiService(AriesApplicationResolver.class, "(" + 
+        BlueprintConstants.COMPONENT_NAME_PROPERTY + "=obr-resolver)", 
+        DEFAULT_TIMEOUT);
+    // If we reached this point, initialization of the OBR resolver has been
+    // finished. Let's start the org.apache.aries.application.runtime bundle.
+    Bundle appRuntimeBundle = getBundle("org.apache.aries.application.runtime");
+    assertNotNull(appRuntimeBundle);
+    appRuntimeBundle.start();
+  }
+
 }
diff --git a/incubator/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRAppManagerTest.java b/incubator/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRAppManagerTest.java
index 9db3441a..aeb68bb7 100644
--- a/incubator/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRAppManagerTest.java
+++ b/incubator/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRAppManagerTest.java
@@ -107,6 +107,8 @@ public static void createApplications() throws Exception {
 
   @Test
   public void testAppWithApplicationManifest() throws Exception {
+    startApplicationRuntimeBundle();
+
     RepositoryAdmin repositoryAdmin = getOsgiService(RepositoryAdmin.class);
     
     repositoryAdmin.addRepository(new File("repository.xml").toURI().toURL());
@@ -160,7 +162,7 @@ public void testAppWithApplicationManifest() throws Exception {
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.api"),
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.utils"),
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.management"),
-        mavenBundle("org.apache.aries.application", "org.apache.aries.application.runtime"),
+        mavenBundle("org.apache.aries.application", "org.apache.aries.application.runtime").noStart(),
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.resolver.obr"),
         mavenBundle("org.apache.felix", "org.apache.felix.bundlerepository"),
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.runtime.itest.interfaces"),
diff --git a/incubator/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverTest.java b/incubator/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverTest.java
index b9092c2c..3fe3a3ea 100644
--- a/incubator/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverTest.java
+++ b/incubator/aries/trunk/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverTest.java
@@ -67,8 +67,8 @@
 {
   public static final String CORE_BUNDLE_BY_VALUE = "core.bundle.by.value";
   public static final String CORE_BUNDLE_BY_REFERENCE = "core.bundle.by.reference";
-  public static final String TRANSITIVE_BUNDLE_BY_VALUE = "transitive.bundle.by.reference";
-  public static final String TRANSITIVE_BUNDLE_BY_REFERENCE = "transitive.bundle.by.value";
+  public static final String TRANSITIVE_BUNDLE_BY_VALUE = "transitive.bundle.by.value";
+  public static final String TRANSITIVE_BUNDLE_BY_REFERENCE = "transitive.bundle.by.reference";
   
   
   /* Use @Before not @BeforeClass so as to ensure that these resources
@@ -142,6 +142,8 @@ public static void createApplications() throws Exception
   @Test(expected=ResolverException.class)
   public void testBlogAppResolveFail() throws ResolverException, Exception
   {
+    startApplicationRuntimeBundle();
+
     generateOBRRepoXML(TRANSITIVE_BUNDLE_BY_REFERENCE + ".jar", CORE_BUNDLE_BY_REFERENCE + "_0.0.0.jar");
     
     RepositoryAdmin repositoryAdmin = getOsgiService(RepositoryAdmin.class);
@@ -163,6 +165,8 @@ public void testBlogAppResolveFail() throws ResolverException, Exception
   @Test
   public void testBlogApp() throws Exception 
   {
+    startApplicationRuntimeBundle();
+
     generateOBRRepoXML(TRANSITIVE_BUNDLE_BY_REFERENCE + ".jar", CORE_BUNDLE_BY_REFERENCE + ".jar");
     
     RepositoryAdmin repositoryAdmin = getOsgiService(RepositoryAdmin.class);
@@ -257,7 +261,7 @@ private BundleInfo createBundleInfo(String urlToBundle) throws Exception
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.api"),
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.utils"),
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.management"),
-        mavenBundle("org.apache.aries.application", "org.apache.aries.application.runtime"),
+        mavenBundle("org.apache.aries.application", "org.apache.aries.application.runtime").noStart(),
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.resolver.obr"),
         mavenBundle("org.apache.felix", "org.apache.felix.bundlerepository"),
         mavenBundle("org.apache.aries.application", "org.apache.aries.application.runtime.itest.interfaces"),
