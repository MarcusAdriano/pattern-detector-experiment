diff --git a/cassandra/trunk/src/java/org/apache/cassandra/streaming/StreamIn.java b/cassandra/trunk/src/java/org/apache/cassandra/streaming/StreamIn.java
index f210bbca..fb371ebc 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/streaming/StreamIn.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/streaming/StreamIn.java
@@ -45,6 +45,7 @@ public static void requestRanges(InetAddress source, String tableName, Collectio
     {
         if (logger.isDebugEnabled())
             logger.debug("Requesting from " + source + " ranges " + StringUtils.join(ranges, ", "));
+        StreamInManager.initContect(source);
         StreamRequestMetadata streamRequestMetadata = new StreamRequestMetadata(FBUtilities.getLocalAddress(), ranges, tableName);
         Message message = StreamRequestMessage.makeStreamRequestMessage(new StreamRequestMessage(streamRequestMetadata));
         MessagingService.instance.sendOneWay(message, source);
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/streaming/StreamInManager.java b/cassandra/trunk/src/java/org/apache/cassandra/streaming/StreamInManager.java
index b5ca085f..2ea3a2bc 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/streaming/StreamInManager.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/streaming/StreamInManager.java
@@ -42,6 +42,15 @@
 
     public static final Multimap<InetAddress, PendingFile> activeStreams = Multimaps.synchronizedMultimap(HashMultimap.<InetAddress, PendingFile>create());
 
+    public synchronized static void initContect(InetAddress key)
+    {
+        List<PendingFile> context = ctxBag_.get(key);
+        if (context == null)
+        {
+            context = new ArrayList<PendingFile>();
+            ctxBag_.put(key, context);
+        }
+    }
     /**
      * gets the next file to be received given a host key.
      * @param key
