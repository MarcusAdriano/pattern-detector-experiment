diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CreateTableNode.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CreateTableNode.java
index 16eb69ab..38c4d077 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CreateTableNode.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/CreateTableNode.java
@@ -330,7 +330,8 @@ public void bindStatement() throws StandardException
 				//has collation of territory based. This is not supported and
 				//hence we will throw an exception below for the query above in
 				//a territory based database. 
-				if (dtd.getCollationType() != schemaCollationType)
+				if (dtd.getTypeId().isStringTypeId() && 
+						dtd.getCollationType() != schemaCollationType)
 				{
 					String schemaCollationName =
 			        	(schemaCollationType == 
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/access/btree/index/B2I.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/access/btree/index/B2I.java
index fe98612e..a14bde6c 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/access/btree/index/B2I.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/store/access/btree/index/B2I.java
@@ -996,7 +996,7 @@ public StaticCompiledOpenConglomInfo getStaticCompiledConglomInfo(
 	*/
 	public int getTypeFormatId() 
     {
-		return StoredFormatIds.ACCESS_B2I_V3_ID;
+		return StoredFormatIds.ACCESS_B2I_V4_ID;
 	}
 
 
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java
index 2d2a6566..63ae9472 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CollationTest.java
@@ -946,6 +946,21 @@ private void commonTestingForTerritoryBasedDB(Statement s) throws SQLException{
     //territory based
     assertStatementError("42ZA3", s, "CREATE TABLE T AS SELECT TABLENAME " +
     		" FROM SYS.SYSTABLES WITH NO DATA");
+    //But following will work because there is no character string type
+    //involved.
+    s.executeUpdate("CREATE TABLE T AS SELECT COLUMNNUMBER FROM " +
+    		" SYS.SYSCOLUMNS WITH NO DATA");
+    
+    //DERBY-2951
+    //Following was giving Assert failure in store code because we were not
+    //writing and reading the collation information from the disk.
+    s.execute("create table assoc (x char(10) not null primary key, "+
+    		" y char(100))");
+    s.execute("create table assocout(x char(10))");
+    ps = conn.prepareStatement("insert into assoc values (?, 'hello')");
+    ps.setString(1, new Integer(10).toString());
+    ps.executeUpdate();     
+
 }
 
 private void setUpTable(Statement s) throws SQLException {
