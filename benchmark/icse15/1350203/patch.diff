diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader.java
index 2825f72b..ec28eb0d 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader.java
@@ -96,9 +96,6 @@ public void update(SolrInputDocument document, UpdateRequest updateRequest) {
         update = new JavaBinUpdateRequestCodec().unmarshal(in, handler);
       } catch (EOFException e) {
         break; // this is expected
-      } catch (Exception e) {
-        log.error("Exception while processing update request", e);
-        break;
       }
       if (update.getDeleteById() != null || update.getDeleteQuery() != null) {
         delete(req, update, processor);
diff --git a/lucene/dev/branches/branch_4x/solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java b/lucene/dev/branches/branch_4x/solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
index 33f9fb61..b7155739 100644
--- a/lucene/dev/branches/branch_4x/solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
+++ b/lucene/dev/branches/branch_4x/solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests.java
@@ -20,6 +20,7 @@
 
 import java.io.IOException;
 import java.io.StringWriter;
+import java.lang.reflect.Field;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.List;
@@ -30,6 +31,7 @@
 import org.apache.lucene.util._TestUtil;
 import org.apache.solr.SolrJettyTestBase;
 import org.apache.solr.client.solrj.impl.BinaryResponseParser;
+import org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer;
 import org.apache.solr.client.solrj.impl.HttpSolrServer;
 import org.apache.solr.client.solrj.impl.XMLResponseParser;
 import org.apache.solr.client.solrj.request.DirectXmlRequest;
@@ -67,6 +69,9 @@
  */
 abstract public class SolrExampleTests extends SolrJettyTestBase
 {
+  static {
+    ignoreException("uniqueKey");
+  }
   /**
    * query the example
    */
@@ -499,9 +504,38 @@ public void testErrorHandling() throws Exception
     catch(Throwable t) {
       t.printStackTrace();
       Assert.fail("should have thrown a SolrException! not: "+t);
+
     }
-  }
+    SolrInputDocument doc = new SolrInputDocument();
+    doc.addField("id", "DOCID", 1.0f);
+    doc.addField("id", "DOCID2", 1.0f);
+    doc.addField("name", "hello", 1.0f);
 
+    if (server instanceof HttpSolrServer) {
+      try {
+        server.add(doc);
+        fail("Should throw exception!");
+      } catch (SolrException ex) {
+        assertEquals(400, ex.code());
+        assertTrue(ex.getMessage().indexOf(
+            "contains multiple values for uniqueKey") > 0); // The reason should get passed through
+      } catch (Throwable t) {
+        Assert.fail("should have thrown a SolrException! not: " + t);
+      }
+    } else if (server instanceof ConcurrentUpdateSolrServer) {
+      //XXX concurrentupdatesolrserver reports errors differently
+      ConcurrentUpdateSolrServer cs = (ConcurrentUpdateSolrServer) server;
+      Field field = cs.getClass().getDeclaredField("lastError");
+      field.setAccessible(true);
+      field.set(cs,  null);
+      cs.add(doc);
+      cs.blockUntilFinished();
+      Throwable lastError = (Throwable)field.get(cs);
+      assertNotNull("Should throw exception!", lastError); //XXX 
+    } else {
+      log.info("Ignorig update test for client:" + server.getClass().getName());
+    }
+  }
 
   @Test
   public void testAugmentFields() throws Exception
@@ -1104,7 +1138,6 @@ public void testChineseDefaults() throws Exception {
     assertEquals(1, rsp.getResults().getNumFound());
   }
   
-
   @Test
   public void testRealtimeGet() throws Exception
   {    
diff --git a/lucene/dev/branches/branch_4x/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingBinaryTest.java b/lucene/dev/branches/branch_4x/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingBinaryTest.java
index 80d3e2bc..850f4fb8 100644
--- a/lucene/dev/branches/branch_4x/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingBinaryTest.java
+++ b/lucene/dev/branches/branch_4x/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingBinaryTest.java
@@ -17,39 +17,18 @@
  * limitations under the License.
  */
 
-import org.apache.solr.client.solrj.SolrExampleTests;
 import org.apache.solr.client.solrj.SolrServer;
 import org.apache.solr.client.solrj.impl.BinaryRequestWriter;
 import org.apache.solr.client.solrj.impl.BinaryResponseParser;
 import org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer;
-import org.apache.solr.util.ExternalPaths;
-import org.junit.BeforeClass;
 
-public class SolrExampleStreamingBinaryTest extends SolrExampleTests {
-  @BeforeClass
-  public static void beforeTest() throws Exception {
-    createJetty(ExternalPaths.EXAMPLE_HOME, null, null);
-  }
+public class SolrExampleStreamingBinaryTest extends SolrExampleStreamingTest {
 
   @Override
-  public SolrServer createNewSolrServer()
-  {
-    try {
-      // setup the server...
-      String url = "http://localhost:"+port+context;
-      // smaller queue size hits locks more often
-      ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {
-        @Override
-        public void handleError(Throwable ex) {
-          ex.printStackTrace();
-        }
-      };
+  public SolrServer createNewSolrServer() {
+    ConcurrentUpdateSolrServer s = (ConcurrentUpdateSolrServer)super.createNewSolrServer();
       s.setParser(new BinaryResponseParser());
       s.setRequestWriter(new BinaryRequestWriter());
       return s;
     }
-    catch( Exception ex ) {
-      throw new RuntimeException( ex );
-    }
-  }
 }
diff --git a/lucene/dev/branches/branch_4x/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest.java b/lucene/dev/branches/branch_4x/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest.java
index 6ad04b0d..73d457f2 100644
--- a/lucene/dev/branches/branch_4x/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest.java
+++ b/lucene/dev/branches/branch_4x/solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingTest.java
@@ -21,6 +21,8 @@
 import org.apache.solr.client.solrj.SolrExampleTests;
 import org.apache.solr.client.solrj.SolrServer;
 import org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer;
+import org.apache.solr.client.solrj.impl.XMLResponseParser;
+import org.apache.solr.client.solrj.request.RequestWriter;
 import org.apache.solr.util.ExternalPaths;
 import org.junit.BeforeClass;
 
@@ -44,13 +46,18 @@ public SolrServer createNewSolrServer()
       String url = "http://localhost:"+port+context;       // smaller queue size hits locks more often
       ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {
 
+        public Throwable lastError = null;
 		@Override
         public void handleError(Throwable ex) {
-          // do something...    TODO?
+          lastError = ex;
         }
       };
+
+      s.setParser(new XMLResponseParser());
+      s.setRequestWriter(new RequestWriter());
       return s;
     }
+    
     catch( Exception ex ) {
       throw new RuntimeException( ex );
     }
