diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnSerializer.java b/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnSerializer.java
index 4bd9b525..e12fe05f 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnSerializer.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/ColumnSerializer.java
@@ -84,7 +84,7 @@ public Column deserialize(DataInput dis) throws IOException
         {
             long timestampOfLastDelete = dis.readLong();
             ByteBuffer pc = FBUtilities.readShortByteArray(dis);
-            byte[] partitionedCounter = Arrays.copyOfRange(pc.array(), pc.position() + pc.arrayOffset(), pc.limit());
+            byte[] partitionedCounter = ByteBufferUtil.getArray(pc);
             long timestamp = dis.readLong();
             ByteBuffer value = FBUtilities.readByteArray(dis);
             return new CounterColumn(name, value, timestamp, partitionedCounter, timestampOfLastDelete);
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/CounterColumn.java b/cassandra/trunk/src/java/org/apache/cassandra/db/CounterColumn.java
index f1d109ad..c0468266 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/CounterColumn.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/CounterColumn.java
@@ -110,8 +110,8 @@ public IColumn diff(IColumn column)
     @Override
     public void updateDigest(MessageDigest digest)
     {
-        digest.update(name.array(),name.position()+name.arrayOffset(),name.remaining());
-        digest.update(value.array(),value.position()+name.arrayOffset(),value.remaining());
+        digest.update(name.duplicate());
+        digest.update(value.duplicate());
         digest.update(FBUtilities.toByteArray(timestamp));
         digest.update(partitionedCounter);
         digest.update(FBUtilities.toByteArray(timestampOfLastDelete));
diff --git a/cassandra/trunk/src/java/org/apache/cassandra/utils/FBUtilities.java b/cassandra/trunk/src/java/org/apache/cassandra/utils/FBUtilities.java
index 3f8ceab0..bbb060e7 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/utils/FBUtilities.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/utils/FBUtilities.java
@@ -198,6 +198,9 @@ public static int byteArrayToInt(byte[] bytes, int offset)
     /**
      * Convert a byte buffer to an integer.
      * Does not change the byte buffer position.
+     *
+     * @param bytes byte buffer to convert to integer
+     * @return int representation of the byte buffer
      */
     public static int byteBufferToInt(ByteBuffer bytes)
     {
@@ -209,7 +212,7 @@ public static int byteBufferToInt(ByteBuffer bytes)
         for (int i = 0; i < 4; ++i)
         {
             n <<= 8;
-            n |= bytes.array()[bytes.position() + bytes.arrayOffset() + i] & 0xFF;
+            n |= bytes.get(bytes.position() + i) & 0xFF;
         }
         return n;
     }
