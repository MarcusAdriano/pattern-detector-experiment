diff --git a/cassandra/branches/cassandra-0.7/contrib/stress/src/org/apache/cassandra/contrib/stress/Session.java b/cassandra/branches/cassandra-0.7/contrib/stress/src/org/apache/cassandra/contrib/stress/Session.java
index f833f47b..56071f3c 100644
--- a/cassandra/branches/cassandra-0.7/contrib/stress/src/org/apache/cassandra/contrib/stress/Session.java
+++ b/cassandra/branches/cassandra-0.7/contrib/stress/src/org/apache/cassandra/contrib/stress/Session.java
@@ -164,7 +164,7 @@ public Session(String[] arguments) throws IllegalArgumentException
                 columnFamilyType = ColumnFamilyType.valueOf(cmd.getOptionValue("y"));
 
             if (cmd.hasOption("k"))
-                ignoreErrors = Boolean.parseBoolean(cmd.getOptionValue("k"));
+                ignoreErrors = true;
 
             if (cmd.hasOption("i"))
                 progressInterval = Integer.parseInt(cmd.getOptionValue("i"));
diff --git a/cassandra/branches/cassandra-0.7/contrib/stress/src/org/apache/cassandra/contrib/stress/tests/Reader.java b/cassandra/branches/cassandra-0.7/contrib/stress/src/org/apache/cassandra/contrib/stress/tests/Reader.java
index 6a1000e6..530d1637 100644
--- a/cassandra/branches/cassandra-0.7/contrib/stress/src/org/apache/cassandra/contrib/stress/tests/Reader.java
+++ b/cassandra/branches/cassandra-0.7/contrib/stress/src/org/apache/cassandra/contrib/stress/tests/Reader.java
@@ -75,9 +75,12 @@ private void runSuperColumnReader(SlicePredicate predicate)
                     List<ColumnOrSuperColumn> columns;
                     columns = client.get_slice(key, parent, predicate, session.getConsistencyLevel());
 
-                    if (columns == null)
+                    if (columns.size() == 0)
                     {
-                        throw new RuntimeException(String.format("Key %s not found.", superColumn));
+                        System.err.println(String.format("Key %s not found.", superColumn));
+
+                        if (!session.ignoreErrors())
+                            break;
                     }
                 }
                 catch (Exception e)
@@ -111,9 +114,12 @@ private void runColumnReader(SlicePredicate predicate)
                 List<ColumnOrSuperColumn> columns;
                 columns = client.get_slice(keyBuffer, parent, predicate, session.getConsistencyLevel());
 
-                if (columns == null)
+                if (columns.size() == 0)
                 {
-                    throw new RuntimeException(String.format("Key %s not found.", key.toString()));
+                    System.err.println(String.format("Key %s not found.", new String(key)));
+
+                    if (!session.ignoreErrors())
+                        break;
                 }
             }
             catch (Exception e)
diff --git a/cassandra/branches/cassandra-0.7/contrib/stress/src/org/apache/cassandra/contrib/stress/util/OperationThread.java b/cassandra/branches/cassandra-0.7/contrib/stress/src/org/apache/cassandra/contrib/stress/util/OperationThread.java
index d51b9764..4d08aa48 100644
--- a/cassandra/branches/cassandra-0.7/contrib/stress/src/org/apache/cassandra/contrib/stress/util/OperationThread.java
+++ b/cassandra/branches/cassandra-0.7/contrib/stress/src/org/apache/cassandra/contrib/stress/util/OperationThread.java
@@ -101,7 +101,7 @@ public OperationThread(int idx)
      */
     private byte[] generateGaussKey()
     {
-        String format = "%0" + session.getTotalKeysLength() + "f";
+        String format = "%0" + session.getTotalKeysLength() + "d";
 
         for (;;)
         {
@@ -109,7 +109,7 @@ public OperationThread(int idx)
 
             if (0 <= token && token < session.getNumKeys())
             {
-                return String.format(format, token).getBytes();
+                return String.format(format, (int) token).getBytes();
             }
         }
     }
