diff --git a/lucene/dev/branches/branch_4x/lucene/facet/src/java/org/apache/lucene/facet/associations/SumFloatAssociationFacetsAggregator.java b/lucene/dev/branches/branch_4x/lucene/facet/src/java/org/apache/lucene/facet/associations/SumFloatAssociationFacetsAggregator.java
index ce527027..f31a334a 100644
--- a/lucene/dev/branches/branch_4x/lucene/facet/src/java/org/apache/lucene/facet/associations/SumFloatAssociationFacetsAggregator.java
+++ b/lucene/dev/branches/branch_4x/lucene/facet/src/java/org/apache/lucene/facet/associations/SumFloatAssociationFacetsAggregator.java
@@ -54,10 +54,7 @@ public void aggregate(MatchingDocs matchingDocs, CategoryListParams clp, FacetAr
     int doc = 0;
     while (doc < length && (doc = matchingDocs.bits.nextSetBit(doc)) != -1) {
       dv.get(doc, bytes);
-      if (bytes.length == 0) {
-        continue; // no associations for this document
-      }
-
+      if (bytes.length > 0) {
       // aggreate float association values for ordinals
       int bytesUpto = bytes.offset + bytes.length;
       int pos = bytes.offset;
@@ -70,7 +67,7 @@ public void aggregate(MatchingDocs matchingDocs, CategoryListParams clp, FacetAr
 
         values[ordinal] += Float.intBitsToFloat(value);
       }
-      
+      }
       ++doc;
     }
   }
diff --git a/lucene/dev/branches/branch_4x/lucene/facet/src/java/org/apache/lucene/facet/associations/SumIntAssociationFacetsAggregator.java b/lucene/dev/branches/branch_4x/lucene/facet/src/java/org/apache/lucene/facet/associations/SumIntAssociationFacetsAggregator.java
index 03d035e0..22c44c81 100644
--- a/lucene/dev/branches/branch_4x/lucene/facet/src/java/org/apache/lucene/facet/associations/SumIntAssociationFacetsAggregator.java
+++ b/lucene/dev/branches/branch_4x/lucene/facet/src/java/org/apache/lucene/facet/associations/SumIntAssociationFacetsAggregator.java
@@ -53,10 +53,7 @@ public void aggregate(MatchingDocs matchingDocs, CategoryListParams clp, FacetAr
     int doc = 0;
     while (doc < length && (doc = matchingDocs.bits.nextSetBit(doc)) != -1) {
       dv.get(doc, bytes);
-      if (bytes.length == 0) {
-        continue; // no associations for this document
-      }
-
+      if (bytes.length > 0) {
       // aggreate association values for ordinals
       int bytesUpto = bytes.offset + bytes.length;
       int pos = bytes.offset;
@@ -69,7 +66,7 @@ public void aggregate(MatchingDocs matchingDocs, CategoryListParams clp, FacetAr
 
         values[ordinal] += value;
       }
-      
+      }
       ++doc;
     }
   }
diff --git a/lucene/dev/branches/branch_4x/lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest.java b/lucene/dev/branches/branch_4x/lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest.java
index 3d91a4ee..7eaabe7e 100644
--- a/lucene/dev/branches/branch_4x/lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest.java
+++ b/lucene/dev/branches/branch_4x/lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest.java
@@ -68,15 +68,19 @@ public static void beforeClassAssociationsFacetRequestTest() throws Exception {
     AssociationsFacetFields assocFacetFields = new AssociationsFacetFields(taxoWriter);
     
     // index documents, 50% have only 'b' and all have 'a'
-    for (int i = 0; i < 100; i++) {
+    for (int i = 0; i < 110; i++) {
       Document doc = new Document();
       CategoryAssociationsContainer associations = new CategoryAssociationsContainer();
+      // every 11th document is added empty, this used to cause the association
+      // aggregators to go into an infinite loop
+      if (i % 11 != 0) {
       associations.setAssociation(aint, new CategoryIntAssociation(2));
       associations.setAssociation(afloat, new CategoryFloatAssociation(0.5f));
       if (i % 2 == 0) { // 50
         associations.setAssociation(bint, new CategoryIntAssociation(3));
         associations.setAssociation(bfloat, new CategoryFloatAssociation(0.2f));
       }
+      }
       assocFacetFields.addFields(doc, associations);
       writer.addDocument(doc);
     }
