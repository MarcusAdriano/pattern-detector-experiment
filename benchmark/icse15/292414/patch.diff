diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/ResultSet.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/ResultSet.java
index e06bfd51..ebaa9f22 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/ResultSet.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/ResultSet.java
@@ -879,13 +879,10 @@ public String getString(int column) throws SqlException {
         checkGetterPreconditions(column);
         java.io.InputStream result = null;
         if (wasNonNullSensitiveUpdate(column)) {
-            try {
+		
                 result = new java.io.ByteArrayInputStream
-                        (((String) agent_.crossConverters_.setObject(java.sql.Types.CHAR,
-                                updatedColumns_[column - 1])).getBytes("US-ASCII"));
-            } catch (java.io.UnsupportedEncodingException e) {
-                throw new SqlException(agent_.logWriter_, e, e.getMessage());
-            }
+			(convertToAsciiByteArray((String) agent_.crossConverters_.setObject(java.sql.Types.CHAR,
+											    updatedColumns_[column - 1])));
         } else {
             result = isNull(column) ? null : cursor_.getAsciiStream(column);
         }
@@ -3882,4 +3879,23 @@ private void resetRowsetSqlca() {
             }
         }
     }
+
+	
+	private static byte[] convertToAsciiByteArray(String original){
+
+		byte[] result = new byte[original.length()];
+
+		for(int i = 0;
+		    i < original.length();
+		    i ++){
+			
+			if(original.charAt(i) <= 0x00ff)
+				result[i] = (byte) original.charAt(i);
+			else
+				result[i] = 0x003f;
+		}
+
+		return result;
+
+	}
 }
