diff --git a/db/derby/code/branches/10.4/java/client/org/apache/derby/client/am/Statement.java b/db/derby/code/branches/10.4/java/client/org/apache/derby/client/am/Statement.java
index 50ec047e..ff4cbd7f 100644
--- a/db/derby/code/branches/10.4/java/client/org/apache/derby/client/am/Statement.java
+++ b/db/derby/code/branches/10.4/java/client/org/apache/derby/client/am/Statement.java
@@ -2357,27 +2357,16 @@ void parseSqlAndSetSqlModes(String sql) throws SqlException {
      * @return identifier or unmodified string
      */
     private String isolateAnyInitialIdentifier (String sql) {
-        int idx = 0;
-        int length = sql.length();
-
-        if (length == 0) {
-            return sql;
-        }
-
-        char next = sql.charAt(idx);
-
-        if (!Character.isLetter(next)) {
-            return sql;
-        }
-
-        while (idx < length) {
-            if (!Character.isLetter(next)) {
+        int idx;
+        for (idx = 0; idx < sql.length(); idx++) {
+            char ch = sql.charAt(idx);
+            if (!Character.isLetter(ch)) {
+                // first non-token char found
                 break;
             }
-            next = sql.charAt(++idx);
         }
-
-        return sql.substring(0, idx);
+        // return initial token if one is found, or the entire string otherwise
+        return (idx > 0) ? sql.substring(0, idx) : sql;
     }
 
     /**
diff --git a/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CommentTest.java b/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CommentTest.java
index 4d549848..61bf299c 100644
--- a/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CommentTest.java
+++ b/db/derby/code/branches/10.4/java/testing/org/apache/derbyTesting/functionTests/tests/lang/CommentTest.java
@@ -22,8 +22,6 @@ Licensed to the Apache Software Foundation (ASF) under one
 package org.apache.derbyTesting.functionTests.tests.lang;
 
 import java.sql.Connection;
-import java.sql.DatabaseMetaData;
-import java.sql.ResultSet;
 import java.sql.SQLException;
 import java.sql.Statement;
 import java.sql.PreparedStatement;
@@ -31,15 +29,13 @@ Licensed to the Apache Software Foundation (ASF) under one
 
 import junit.framework.Assert;
 import junit.framework.Test;
-import junit.framework.TestSuite;
 
 import org.apache.derbyTesting.junit.BaseJDBCTestCase;
-import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
 import org.apache.derbyTesting.junit.JDBC;
 import org.apache.derbyTesting.junit.TestConfiguration;
 
 /**
- * Test for comments.
+ * Test for comments, and a few tests related to parsing non-comment SQL.
  */
 public final class CommentTest extends BaseJDBCTestCase {
 
@@ -216,6 +212,10 @@ public void testWrongKeywordLexing_derby4338() throws Exception
             s.executeQuery("select'a' from sys.systables"));
         JDBC.assertDrainResults(
             s.executeQuery("select\"TABLEID\" from sys.systables"));
+
+        // Added for DERBY-4748.
+        assertCompileError("42X01", "commit");
+        assertCompileError("42X01", "commit;");
     }
 
     /**
