diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/similarity/AbstractSimilarity.java b/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/similarity/AbstractSimilarity.java
index 6ccd8c6c..2a989d5f 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/similarity/AbstractSimilarity.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/cf/taste/impl/similarity/AbstractSimilarity.java
@@ -221,6 +221,8 @@ public double userSimilarity(long userID1, long userID2) throws TasteException {
     }
     
     // "Center" the data. If my math is correct, this'll do it.
+    double result;
+    if (centerData) {
     double n = count;
     double meanX = sumX / n;
     double meanY = sumY / n;
@@ -230,8 +232,10 @@ public double userSimilarity(long userID1, long userID2) throws TasteException {
     double centeredSumX2 = sumX2 - meanX * sumX;
     // double centeredSumY2 = sumY2 - 2.0 * meanY * sumY + n * meanY * meanY;
     double centeredSumY2 = sumY2 - meanY * sumY;
-    
-    double result = computeResult(count, centeredSumXY, centeredSumX2, centeredSumY2, sumXYdiff2);
+      result = computeResult(count, centeredSumXY, centeredSumX2, centeredSumY2, sumXYdiff2);
+    } else {
+      result = computeResult(count, sumXY, sumX2, sumY2, sumXYdiff2);
+    }
     
     if (similarityTransform != null) {
       result = similarityTransform.transformSimilarity(userID1, userID2, result);
