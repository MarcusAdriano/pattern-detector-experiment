diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/derbyStress.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/derbyStress.java
index 263e0f6d..9b3cc0f4 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/derbyStress.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/derbyStress.java
@@ -150,11 +150,10 @@ public static void testDerby3316() throws Exception {
           ps.setString(1,"hello");
           ps.executeUpdate();
           ps.close();
-          ResultSet rs = null;
           for (int i = 0; i < 2000; i++)
           {
                   s = conn.createStatement();
-                  rs = s.executeQuery("SELECT * from tab");
+                  ResultSet rs = s.executeQuery("SELECT * from tab");
                   // drain the resultset
                   while (rs.next());
                   // With DERBY-3316, If I don't explicitly close the resultset or 
@@ -162,14 +161,14 @@ public static void testDerby3316() throws Exception {
                   //rs.close();
                   //s.close();
           }    
-          // close the final ResultSet and gc() so we won't have a 
-          // ResultSet reference when we try to drop the table.
-          rs.close();
-          rs = null;
-          System.gc();
+          // close the connection to free up all the result sets that our sloppy 
+          // user didn't close.
+          conn.close();
+          conn = ij.startJBMS();
           s = conn.createStatement();
           s.executeUpdate("DROP TABLE TAB");
           s.close();
+          conn.close();
        }
       
 }
