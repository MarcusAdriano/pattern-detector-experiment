diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/reflect/JarLoader.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/reflect/JarLoader.java
index d63305ae..23c0fdd1 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/reflect/JarLoader.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/reflect/JarLoader.java
@@ -30,8 +30,10 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import java.io.InputStream;
 import java.io.IOException;
 
+import java.security.AccessController;
 import java.security.CodeSource;
 import java.security.GeneralSecurityException;
+import java.security.PrivilegedActionException;
 import java.security.SecureClassLoader;
 import java.security.cert.Certificate;
 import java.security.cert.X509Certificate;
@@ -102,7 +104,20 @@ void initialize() {
 					schemaName, sqlName);
 
 			if (installedJar instanceof File) {
-				jar = new JarFile((File) installedJar);
+                try {
+                    jar = (JarFile) AccessController.doPrivileged
+                    (new java.security.PrivilegedExceptionAction(){
+
+                        public Object run() throws IOException {
+                        return new JarFile((File) installedJar);
+
+                        }
+
+                    }
+                     );
+                } catch (PrivilegedActionException pae) {
+                    throw (IOException) pae.getException();
+                }
 				return;
 			}
 
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/DatabaseClassLoadingTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/DatabaseClassLoadingTest.java
index 50e99d23..e421ca46 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/DatabaseClassLoadingTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/DatabaseClassLoadingTest.java
@@ -82,57 +82,35 @@ public static Test suite()
         Test test = suite;
         if (JDBC.vmSupportsJDBC3()) {
         
-          suite.addTest(new DatabaseClassLoadingTest("testJarHandling"));
-        
-          suite.addTest(new DatabaseClassLoadingTest("testWithNoInstalledJars"));
-          suite.addTest(new DatabaseClassLoadingTest("testWithNoClasspath"));
- 
-          suite.addTest(
-                SecurityManagerSetup.noSecurityManager(
-                        new DatabaseClassLoadingTest("testSetClasspath")));
-        
-          
-           suite.addTest(SecurityManagerSetup.noSecurityManager(
-                new DatabaseClassLoadingTest("testAddContact")));
-        
-           suite.addTest(SecurityManagerSetup.noSecurityManager(
-                new DatabaseClassLoadingTest("testGetResource")));
-           
-           suite.addTest(SecurityManagerSetup.noSecurityManager(
-                   new DatabaseClassLoadingTest("testAlterTable")));
-
-           suite.addTest(SecurityManagerSetup.noSecurityManager(
-                   new DatabaseClassLoadingTest("testClassPathRollback")));
-           
-           suite.addTest(SecurityManagerSetup.noSecurityManager(
-                   new DatabaseClassLoadingTest("testReplaceJar")));        
-           
-           suite.addTest(SecurityManagerSetup.noSecurityManager(
-                   new DatabaseClassLoadingTest("testReplacedClass")));
-           suite.addTest(SecurityManagerSetup.noSecurityManager(
-                   new DatabaseClassLoadingTest("testSecondJar")));
-           suite.addTest(SecurityManagerSetup.noSecurityManager(
-                   new DatabaseClassLoadingTest("testSignedJar")));
-           
-           suite.addTest(new DatabaseClassLoadingTest("testCreateDatabaseJar"));
-           
-           suite.addTest(SecurityManagerSetup.noSecurityManager(
-                   new DatabaseClassLoadingTest("testHackedJarReplacedClass")));
-           suite.addTest(SecurityManagerSetup.noSecurityManager(
-                   new DatabaseClassLoadingTest("testInvalidJar")));           
-           suite.addTest(SecurityManagerSetup.noSecurityManager(
-                   new DatabaseClassLoadingTest("testRemoveJar"))); 
+            String[] orderedTests = {
+                "testJarHandling",
+                "testWithNoInstalledJars",
+                "testWithNoClasspath",
+                "testSetClasspath",
+                "testAddContact",
+                "testGetResource",          
+                "testAlterTable",
+                "testClassPathRollback",
+                "testReplaceJar",      
+                "testReplacedClass",
+                "testSecondJar",
+                "testSignedJar",
+                "testCreateDatabaseJar",
+                "testHackedJarReplacedClass",
+                "testInvalidJar",
+                "testRemoveJar",
+                "testLoadJavaClassIndirectly",
+                "testLoadJavaClassDirectly",
+                "testLoadJavaClassDirectly2",
+                "testLoadJavaClassDirectly3",
+                "testLoadDerbyClassIndirectly",
+        
+            };
            
-           suite.addTest(SecurityManagerSetup.noSecurityManager(
-                   new DatabaseClassLoadingTest("testLoadJavaClassIndirectly"))); 
-           suite.addTest(SecurityManagerSetup.noSecurityManager(
-                   new DatabaseClassLoadingTest("testLoadJavaClassDirectly")));
-           suite.addTest(SecurityManagerSetup.noSecurityManager(
-                   new DatabaseClassLoadingTest("testLoadJavaClassDirectly2")));
-           suite.addTest(SecurityManagerSetup.noSecurityManager(
-                   new DatabaseClassLoadingTest("testLoadJavaClassDirectly3")));
-           suite.addTest(SecurityManagerSetup.noSecurityManager(
-                   new DatabaseClassLoadingTest("testLoadDerbyClassIndirectly")));
+            for (int i = 0; i < orderedTests.length; i++)
+            {
+                suite.addTest(new DatabaseClassLoadingTest(orderedTests[i]));
+            }
        
            suite.addTest(SecurityManagerSetup.noSecurityManager(
                    new DatabaseClassLoadingTest("testDatabaseInJar"))); 
