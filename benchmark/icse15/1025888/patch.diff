diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/reflect/DatabaseClasses.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/reflect/DatabaseClasses.java
index b8c49607..ff704e4d 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/reflect/DatabaseClasses.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/services/reflect/DatabaseClasses.java
@@ -57,6 +57,9 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.Serializable;
+import java.security.AccessController;
+import java.security.PrivilegedActionException;
+import java.security.PrivilegedExceptionAction;
 
 /**
 
@@ -181,13 +184,23 @@ private static void WriteClassFile(String fullyQualifiedName, ByteArray bytecode
 		Object env = Monitor.getMonitor().getEnvironment();
 		File dir = env instanceof File ? (File) env : null;
 
-		File classFile = FileUtil.newFile(dir,filename);
+		final File classFile = FileUtil.newFile(dir,filename);
 
 		// find the error stream
 		HeaderPrintWriter errorStream = Monitor.getStream();
 
 		try {
-			FileOutputStream fis = new FileOutputStream(classFile);
+            FileOutputStream fis;
+            try {
+                fis = (FileOutputStream) AccessController.doPrivileged(
+                        new PrivilegedExceptionAction() {
+                            public Object run() throws IOException {
+                                return new FileOutputStream(classFile);
+                            }
+                        });
+            } catch (PrivilegedActionException pae) {
+                throw (IOException) pae.getCause();
+            }
 			fis.write(bytecode.getArray(),
 				bytecode.getOffset(), bytecode.getLength());
 			fis.flush();
@@ -197,7 +210,7 @@ private static void WriteClassFile(String fullyQualifiedName, ByteArray bytecode
 			fis.close();
 		} catch (IOException e) {
 			if (SanityManager.DEBUG)
-				SanityManager.THROWASSERT("Unable to write .class file");
+				SanityManager.THROWASSERT("Unable to write .class file", e);
 		}
 	}
 
