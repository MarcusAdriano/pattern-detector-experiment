diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/similarity/RowSimilarityJob.java b/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/similarity/RowSimilarityJob.java
index 4a6b0d80..d321243f 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/similarity/RowSimilarityJob.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/similarity/RowSimilarityJob.java
@@ -32,6 +32,7 @@
 import org.apache.hadoop.mapreduce.Reducer;
 import org.apache.hadoop.mapreduce.lib.input.SequenceFileInputFormat;
 import org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat;
+import org.apache.hadoop.mapreduce.lib.partition.HashPartitioner;
 import org.apache.hadoop.util.ToolRunner;
 import org.apache.mahout.common.AbstractJob;
 import org.apache.mahout.math.RandomAccessSparseVector;
@@ -167,7 +168,7 @@ public int run(String[] args) throws IOException, ClassNotFoundException, Interr
                                IntWritable.class,
                                VectorWritable.class,
                                SequenceFileOutputFormat.class);
-      asMatrix.setPartitionerClass(SimilarityMatrixEntryKey.SimilarityMatrixEntryKeyPartitioner.class);
+      asMatrix.setPartitionerClass(HashPartitioner.class);
       asMatrix.setGroupingComparatorClass(SimilarityMatrixEntryKey.SimilarityMatrixEntryKeyGroupingComparator.class);
       asMatrix.getConfiguration().setInt(MAX_SIMILARITIES_PER_ROW, maxSimilaritiesPerRow);
       asMatrix.waitForCompletion(true);
diff --git a/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/similarity/SimilarityMatrixEntryKey.java b/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/similarity/SimilarityMatrixEntryKey.java
index 42a86392..0d6f71ed 100644
--- a/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/similarity/SimilarityMatrixEntryKey.java
+++ b/mahout/trunk/core/src/main/java/org/apache/mahout/math/hadoop/similarity/SimilarityMatrixEntryKey.java
@@ -23,9 +23,7 @@
 
 import org.apache.hadoop.io.WritableComparable;
 import org.apache.hadoop.io.WritableComparator;
-import org.apache.hadoop.mapreduce.Partitioner;
 import org.apache.mahout.math.Varint;
-import org.apache.mahout.math.hadoop.DistributedRowMatrix.MatrixEntryWritable;
 import org.apache.mahout.math.hadoop.similarity.RowSimilarityJob.EntriesToVectorsReducer;
 
 /**
@@ -114,14 +112,6 @@ protected static int compare(double a, double b) {
     }
   }
 
-  public static class SimilarityMatrixEntryKeyPartitioner
-      extends Partitioner<SimilarityMatrixEntryKey,MatrixEntryWritable> {
-    @Override
-    public int getPartition(SimilarityMatrixEntryKey key, MatrixEntryWritable value, int numPartitions) {
-      return (key.hashCode() * 127) % numPartitions;
-    }
-  }
-
   public static class SimilarityMatrixEntryKeyGroupingComparator extends WritableComparator {
 
     protected SimilarityMatrixEntryKeyGroupingComparator() {
