diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedClob.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedClob.java
index 1919d462..a4bd56de 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedClob.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/EmbedClob.java
@@ -206,7 +206,7 @@ public long length() throws SQLException
                 for (;;)
                 {
                     long size = clobReader.skip(32 * 1024);
-                    if (size == -1)
+                    if (size == 0L)
                         break;
                     clobLength += size;
                 }
@@ -396,7 +396,7 @@ private UTF8Reader getCharacterStreamAtPos(long position, Object synchronization
         long remainToSkip = position - 1;
         while (remainToSkip > 0) {
             long skipBy = clobReader.skip(remainToSkip);
-            if (skipBy == -1)
+            if (skipBy == 0L)
                 return null;
 
             remainToSkip -= skipBy;
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/UTF8Reader.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/UTF8Reader.java
index 7f678ef4..60f6d43f 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/UTF8Reader.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/jdbc/UTF8Reader.java
@@ -144,6 +144,10 @@ public int read(char[] cbuf, int off, int len) throws IOException
 	}
 
 	public long skip(long len) throws IOException {
+		if (len < 0) {
+			throw new IllegalArgumentException(
+				"Number of characters to skip must be positive:" + len);
+		}
 		synchronized (lock) {
 			// check if closed..
 			if (noMoreReads)
@@ -152,7 +156,7 @@ public long skip(long len) throws IOException {
 			if (readPositionInBuffer >= charactersInBuffer) {
 				// do somthing
 				if (fillBuffer()) {
-					return -1;
+					return 0L;
 				}
 				readPositionInBuffer = 0;
 			}
