diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/services/property/PropertyValidation.java b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/services/property/PropertyValidation.java
index d04c27e3..c7884e95 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/iapi/services/property/PropertyValidation.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/iapi/services/property/PropertyValidation.java
@@ -61,6 +61,9 @@ public Serializable doValidateApplyAndMap(TransactionController tc,
 					if (!psc.validate(key, value, d))
 						continue;
 
+					if (mappedValue == null)
+ 						mappedValue = psc.map(key, value, d);
+
 					// if this property should not be used then
 					// don't call apply. This depends on where
 					// the old value comes from
@@ -77,8 +80,6 @@ public Serializable doValidateApplyAndMap(TransactionController tc,
 					Serviceable s;
 					if ((s = psc.apply(key,value,d)) != null)
 						((TransactionManager) tc).addPostCommitWork(s);
-					if (mappedValue == null)
- 						mappedValue = psc.map(key, value, d);
 				}
 			}
 		}
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java
index 17a9596f..1339e93e 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/AuthenticationTest.java
@@ -121,6 +121,9 @@ public static Test baseSuite(String name) {
         test = new AuthenticationTest("testDefaultHashAlgorithm");
         setBaseProps(suite, test);
 
+        test = new AuthenticationTest("testDerby5507PlaintextPassword");
+        setBaseProps(suite, test);
+
         // The test cases below test the configurable hash authentication
         // mechanism added in DERBY-4483. Set the property that specifies the
         // hash algorithm to some valid value for these tests. Not all tests
@@ -1215,6 +1218,25 @@ public void testInvalidAlgorithmName() throws SQLException {
         }
     }
     
+    /**
+     * DERBY-5507: Setting a user's password as a database property, when
+     * that user's password is already set as a system property, used to make
+     * the password getting stored in plaintext in the database.
+     */
+    public void testDerby5507PlaintextPassword() throws SQLException {
+        // This user account is defined in a system property
+        String key = "derby.user.mickey";
+
+        // Now define the account in a database property
+        String pw = "M0u$e";
+        setDatabaseProperty(key, pw);
+
+        // This used to return the plaintext password, but it should
+        // return a hashed token
+        String pwToken = getDatabaseProperty(key);
+        assertFalse("Password stored in plaintext", pwToken.equals(pw));
+    }
+    
     protected void assertFailSetDatabaseProperty(
         String propertyName, String value, Connection conn) 
     throws SQLException {
