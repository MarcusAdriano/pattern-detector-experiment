diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/PredicateList.java b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/PredicateList.java
index 9e01c5d9..368d5bff 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/PredicateList.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/impl/sql/compile/PredicateList.java
@@ -2037,7 +2037,10 @@ else if (operator instanceof BinaryComparisonOperatorNode)
 				ValueNode left = bcon.getLeftOperand();
 				ValueNode right = bcon.getRightOperand();
 
-				if (left instanceof ColumnReference && right instanceof ConstantNode)
+				// RESOLVE: Consider using variant type of the expression, instead of
+				// ConstantNode or ParameterNode in the future.
+				if (left instanceof ColumnReference && 
+					  (right instanceof ConstantNode || right instanceof ParameterNode))
 				{
 					searchClauses.addElement(predicate);
 				}
@@ -2077,8 +2080,14 @@ else if (right instanceof ConstantNode && left instanceof ColumnReference)
 			else
 			{
 				searchCR = (ColumnReference) ((BinaryComparisonOperatorNode) ro).getLeftOperand();
+
+				// Don't get value for parameterNode since not known yet.
+				if (((BinaryComparisonOperatorNode) ro).getRightOperand() instanceof ConstantNode)
+				{
 				ConstantNode currCN = (ConstantNode) ((BinaryComparisonOperatorNode) ro).getRightOperand();
 				searchODV = (DataValueDescriptor) currCN.getValue();
+			}
+				else searchODV = null;
 			}
 			// Cache the table and column numbers of searchCR
 			int tableNumber = searchCR.getTableNumber();
@@ -2152,9 +2161,13 @@ else if (rightCR.getTableNumber() == tableNumber &&
 					else
 					{
 						searchCR2 = (ColumnReference) ((BinaryComparisonOperatorNode) ro2).getLeftOperand();
+						if (((BinaryComparisonOperatorNode) ro2).getRightOperand() instanceof ConstantNode)
+						{
 						ConstantNode currCN = (ConstantNode) ((BinaryComparisonOperatorNode) ro2).getRightOperand();
 						currODV = (DataValueDescriptor) currCN.getValue();
 					}
+						else currODV = null;
+					}
 
 					/* Is this a match? A match is a search clause with
 					 * the same operator on the same column with a comparison against
