diff --git a/cassandra/trunk/test/unit/org/apache/cassandra/cli/CliTest.java b/cassandra/trunk/test/unit/org/apache/cassandra/cli/CliTest.java
index b6b08ac3..a66f58dd 100644
--- a/cassandra/trunk/test/unit/org/apache/cassandra/cli/CliTest.java
+++ b/cassandra/trunk/test/unit/org/apache/cassandra/cli/CliTest.java
@@ -38,6 +38,7 @@
     private String[] statements = {
         "use TestKeySpace;",
         "create column family CF1 with comparator=UTF8Type and column_metadata=[{ column_name:world, validation_class:IntegerType, index_type:0, index_name:IdxName }, { column_name:world2, validation_class:LongType, index_type:KEYS, index_name:LongIdxName}];",
+        "assume CF1 keys as utf8;",
         "set CF1[hello][world] = 123848374878933948398384;",
         "get CF1[hello][world];",
         "set CF1[hello][world2] = 15;",
@@ -46,11 +47,13 @@
         "get Cf1 where world2 = long(15);",
         "set CF1['hello'][time_spent_uuid] = timeuuid(a8098c1a-f86e-11da-bd1a-00112444be1e);",
         "create column family CF2 with comparator=IntegerType;",
+        "assume CF2 keys as utf8;",
         "set CF2['key'][98349387493847748398334] = 'some text';",
         "get CF2['key'][98349387493847748398334];",
         "set CF2['key'][98349387493] = 'some text other';",
         "get CF2['key'][98349387493];",
         "create column family CF3 with comparator=UTF8Type and column_metadata=[{column_name:'big world', validation_class:LongType}];",
+        "assume CF3 keys as utf8;",
         "set CF3['hello']['big world'] = 3748;",
         "get CF3['hello']['big world'];",
         "list CF3;",
@@ -59,6 +62,7 @@
         "list CF3 limit 10;",
         "list CF3[h:] limit 10;",
         "create column family CF4 with comparator=IntegerType and column_metadata=[{column_name:9999, validation_class:LongType}];",
+        "assume CF4 keys as utf8;",
         "set CF4['hello'][9999] = 1234;",
         "get CF4['hello'][9999];",
         "get CF4['hello'][9999] as Long;",
@@ -69,6 +73,7 @@
         "del CF4['hello'][9999];",
         "get CF4['hello'][9999];",
         "create column family SCF1 with column_type=Super and comparator=IntegerType and subcomparator=LongType and column_metadata=[{column_name:9999, validation_class:LongType}];",
+        "assume SCF1 keys as utf8;",
         "set SCF1['hello'][1][9999] = 1234;",
         "get SCF1['hello'][1][9999];",
         "get SCF1['hello'][1][9999] as Long;",
@@ -89,6 +94,7 @@
         "assume CF1 validator as lexicaluuid;",
         "assume CF1 keys as timeuuid;",
         "create column family CF7;",
+        "assume CF7 keys as utf8;",
         "set CF7[1][timeuuid()] = utf8(test1);",
         "set CF7[2][lexicaluuid()] = utf8('hello world!');",
         "set CF7[3][lexicaluuid(550e8400-e29b-41d4-a716-446655440000)] = utf8(test2);",
@@ -110,6 +116,7 @@
         "create keyspace TESTIN;",
         "drop keyspace tesTIN;",
         "create column family myCF with column_type='Super' and comparator='UTF8Type' AND subcomparator='UTF8Type';",
+        "assume myCF keys as utf8;",
         "create column family Countries with comparator=UTF8Type and column_metadata=[ {column_name: name, validation_class: UTF8Type} ];",
         "set Countries[1][name] = USA;",
         "get Countries[1][name];",
