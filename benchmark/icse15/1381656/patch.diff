diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
index cdc87407..f8469464 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler.java
@@ -444,9 +444,13 @@ protected boolean handleCustomAction(SolrQueryRequest req, SolrQueryResponse rsp
    * @throws SolrException in case of a configuration error.
    */
   protected boolean handleCreateAction(SolrQueryRequest req, SolrQueryResponse rsp) throws SolrException {
-    try {
       SolrParams params = req.getParams();
       String name = params.get(CoreAdminParams.NAME);
+    if (null == name || "".equals(name)) {
+      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,
+                              "Core name is mandatory to CREATE a SolrCore");
+    }
+    try {
       
       //for now, do not allow creating new core with same name when in cloud mode
       //XXX perhaps it should just be unregistered from cloud before readding it?, 
@@ -520,7 +524,8 @@ protected boolean handleCreateAction(SolrQueryRequest req, SolrQueryResponse rsp
       return coreContainer.isPersistent();
     } catch (Exception ex) {
       throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,
-              "Error executing default implementation of CREATE", ex);
+                              "Error CREATEing SolrCore '" + name + "': " +
+                              ex.getMessage(), ex);
     }
   }
 
