diff --git a/lucene/solr/trunk/src/java/org/apache/solr/common/params/RequiredSolrParams.java b/lucene/solr/trunk/src/java/org/apache/solr/common/params/RequiredSolrParams.java
index 5931d729..869d20df 100644
--- a/lucene/solr/trunk/src/java/org/apache/solr/common/params/RequiredSolrParams.java
+++ b/lucene/solr/trunk/src/java/org/apache/solr/common/params/RequiredSolrParams.java
@@ -51,6 +51,39 @@ public String get(String param) {
     return val;
   }
 
+  @Override
+  public String getFieldParam(final String field, final String param) {
+    final String fpname = fpname(field,param);
+    String val = params.get(fpname);
+    if (null == val) {
+      // don't call this.get, we want a specified exception message
+      val = params.get(param);
+      if (null == val)  {
+        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,
+                                 "Missing required parameter: "+fpname+
+                                 " (or default: "+param+")" );
+      }
+    }
+    return val;
+  }
+
+  @Override
+  public String[] getFieldParams(final String field, final String param) {
+    final String fpname = fpname(field,param);
+    String[] val = params.getParams(fpname);
+    if (null == val) {
+      // don't call this.getParams, we want a specified exception message
+      val = params.getParams(param);
+      if (null == val)  {
+        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,
+                                 "Missing required parameter: "+fpname+
+                                 " (or default: "+param+")" );
+      }
+    }
+    return val;
+  }
+
+  
   @Override
   public String[] getParams(String param) {
     String[] vals = params.getParams(param);
diff --git a/lucene/solr/trunk/src/test/org/apache/solr/common/params/SolrParamTest.java b/lucene/solr/trunk/src/test/org/apache/solr/common/params/SolrParamTest.java
index 2627f3de..27be0731 100644
--- a/lucene/solr/trunk/src/test/org/apache/solr/common/params/SolrParamTest.java
+++ b/lucene/solr/trunk/src/test/org/apache/solr/common/params/SolrParamTest.java
@@ -127,7 +127,11 @@ public void testGetParams() {
     // field value present
     assertEquals( pbool  , required.getFieldBool(  "fl", "bool" ) );
     // field defaulting (fall through to non-field-specific value)
-    //assertEquals( pint   , required.getFieldInt( "fff",  "int"      ) );
+    assertEquals( pstr   , required.getFieldParams("fakefield", "str")[0] );
+    assertEquals( pstr   , required.getFieldParam( "fakefield", "str"   ) );
+    assertEquals( pbool  , required.getFieldBool(  "fakefield", "bool"  ) );
+    assertEquals( pint   , required.getFieldInt(   "fakefield", "int"   ) );
+    assertEquals( pfloat , required.getFieldFloat( "fakefield", "float" ) );
     
     // Required params which are missing: These should throw a 400
     assertEquals( 400, getReturnCode( new Runnable() { public void run() { required.get( "aaaa" ); } } ) );
