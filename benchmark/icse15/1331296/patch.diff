diff --git a/lucene/dev/branches/lucene_solr_3_6/lucene/core/src/java/org/apache/lucene/search/BooleanScorer.java b/lucene/dev/branches/lucene_solr_3_6/lucene/core/src/java/org/apache/lucene/search/BooleanScorer.java
index d81b156b..c8ded8f1 100644
--- a/lucene/dev/branches/lucene_solr_3_6/lucene/core/src/java/org/apache/lucene/search/BooleanScorer.java
+++ b/lucene/dev/branches/lucene_solr_3_6/lucene/core/src/java/org/apache/lucene/search/BooleanScorer.java
@@ -333,7 +333,7 @@ public String toString() {
   }
   
   @Override
-  protected void visitSubScorers(Query parent, Occur relationship, ScorerVisitor<Query, Query, Scorer> visitor) {
+  public void visitSubScorers(Query parent, Occur relationship, ScorerVisitor<Query, Query, Scorer> visitor) {
     super.visitSubScorers(parent, relationship, visitor);
     final Query q = weight.getQuery();
     SubScorer sub = scorers;
diff --git a/lucene/dev/branches/lucene_solr_3_6/lucene/core/src/java/org/apache/lucene/search/BooleanScorer2.java b/lucene/dev/branches/lucene_solr_3_6/lucene/core/src/java/org/apache/lucene/search/BooleanScorer2.java
index 2bdab977..43022164 100644
--- a/lucene/dev/branches/lucene_solr_3_6/lucene/core/src/java/org/apache/lucene/search/BooleanScorer2.java
+++ b/lucene/dev/branches/lucene_solr_3_6/lucene/core/src/java/org/apache/lucene/search/BooleanScorer2.java
@@ -321,7 +321,7 @@ public int advance(int target) throws IOException {
   }
 
   @Override
-  protected void visitSubScorers(Query parent, Occur relationship, ScorerVisitor<Query, Query, Scorer> visitor) {
+  public void visitSubScorers(Query parent, Occur relationship, ScorerVisitor<Query, Query, Scorer> visitor) {
     super.visitSubScorers(parent, relationship, visitor);
     final Query q = weight.getQuery();
     for (Scorer s : optionalScorers) {
diff --git a/lucene/dev/branches/lucene_solr_3_6/lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer.java b/lucene/dev/branches/lucene_solr_3_6/lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer.java
index b54f730c..2028fce0 100644
--- a/lucene/dev/branches/lucene_solr_3_6/lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer.java
+++ b/lucene/dev/branches/lucene_solr_3_6/lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer.java
@@ -186,4 +186,13 @@ private void heapRemoveRoot() {
     }
   }
 
+  @Override
+  public void visitSubScorers(Query parent, BooleanClause.Occur relationship, ScorerVisitor<Query, Query, Scorer> visitor) {
+    super.visitSubScorers(parent, relationship, visitor);
+    final Query q = weight.getQuery();
+    for (int i = 0; i < numScorers; i++) {
+      subScorers[i].visitSubScorers(q, BooleanClause.Occur.SHOULD, visitor);
+    }
+  }
+
 }
diff --git a/lucene/dev/branches/lucene_solr_3_6/lucene/core/src/java/org/apache/lucene/search/Scorer.java b/lucene/dev/branches/lucene_solr_3_6/lucene/core/src/java/org/apache/lucene/search/Scorer.java
index 44779d6e..522890b3 100644
--- a/lucene/dev/branches/lucene_solr_3_6/lucene/core/src/java/org/apache/lucene/search/Scorer.java
+++ b/lucene/dev/branches/lucene_solr_3_6/lucene/core/src/java/org/apache/lucene/search/Scorer.java
@@ -198,7 +198,7 @@ public void visitScorers(ScorerVisitor<Query, Query, Scorer> visitor) {
    * 
    * @lucene.experimental
    */
-  protected void visitSubScorers(Query parent, Occur relationship,
+  public void visitSubScorers(Query parent, Occur relationship,
       ScorerVisitor<Query, Query, Scorer> visitor) {
     if (weight == null)
       throw new UnsupportedOperationException();
