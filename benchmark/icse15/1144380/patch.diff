diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/DatacenterReadCallback.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/DatacenterReadCallback.java
index 9f41fdc8..9083d0ea 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/DatacenterReadCallback.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/DatacenterReadCallback.java
@@ -22,6 +22,7 @@
 
 
 import java.net.InetAddress;
+import java.util.ArrayList;
 import java.util.List;
 
 import org.apache.cassandra.config.DatabaseDescriptor;
@@ -47,6 +48,20 @@ public DatacenterReadCallback(IResponseResolver resolver, ConsistencyLevel consi
         super(resolver, consistencyLevel, command, endpoints);
     }
 
+    @Override
+    protected List<InetAddress> preferredEndpoints(List<InetAddress> endpoints)
+    {
+        ArrayList<InetAddress> preferred = new ArrayList<InetAddress>(blockfor);
+        for (InetAddress endpoint : endpoints)
+        {
+            if (localdc.equals(snitch.getDatacenter(endpoint)))
+                preferred.add(endpoint);
+            if (preferred.size() == blockfor)
+                break;
+        }
+        return preferred;
+    }
+
     @Override
     protected boolean waitingFor(Message message)
     {
@@ -88,7 +103,7 @@ public void assureSufficientLiveNodes() throws UnavailableException
                     if (localdc.equals(snitch.getDatacenter(endpoint)))
                         builder.append(endpoint).append(",");
                 }
-                builder.append("] are insufficient to satisfy LOCAL_QUORUM requirement of ").append(blockfor).append(" live nodes");
+                builder.append("] are insufficient to satisfy LOCAL_QUORUM requirement of ").append(blockfor).append(" live nodes in '").append(localdc).append("'");
                 logger.debug(builder.toString());
             }
 
diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/ReadCallback.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/ReadCallback.java
index abe53b21..8d3f6e89 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/ReadCallback.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/service/ReadCallback.java
@@ -80,13 +80,18 @@ public ReadCallback(IResponseResolver<T> resolver, ConsistencyLevel consistencyL
         boolean repair = randomlyReadRepair();
         this.endpoints = repair || resolver instanceof RowRepairResolver
                        ? endpoints
-                       : endpoints.subList(0, Math.min(endpoints.size(), blockfor)); // min so as to not throw exception until assureSufficient is called
+                       : preferredEndpoints(endpoints);
 
         if (logger.isDebugEnabled())
             logger.debug(String.format("Blockfor/repair is %s/%s; setting up requests to %s",
                                        blockfor, repair, StringUtils.join(this.endpoints, ",")));
     }
     
+    protected List<InetAddress> preferredEndpoints(List<InetAddress> endpoints)
+    {
+        return endpoints.subList(0, Math.min(endpoints.size(), blockfor)); // min so as to not throw exception until assureSufficient is called
+    }
+
     private boolean randomlyReadRepair()
     {
         if (resolver instanceof RowDigestResolver)
