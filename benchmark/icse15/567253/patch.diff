diff --git a/lucene/java/trunk/src/java/org/apache/lucene/index/FieldsReader.java b/lucene/java/trunk/src/java/org/apache/lucene/index/FieldsReader.java
index cd0c7e1c..a37ce178 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/index/FieldsReader.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/index/FieldsReader.java
@@ -66,10 +66,13 @@
   }
 
   FieldsReader(Directory d, String segment, FieldInfos fn, int readBufferSize, int docStoreOffset, int size) throws IOException {
+    boolean success = false;
+
+    try {
     fieldInfos = fn;
 
     cloneableFieldsStream = d.openInput(segment + ".fdt", readBufferSize);
-    fieldsStream = (IndexInput)cloneableFieldsStream.clone();
+      fieldsStream = (IndexInput) cloneableFieldsStream.clone();
     indexStream = d.openInput(segment + ".fdx", readBufferSize);
 
     if (docStoreOffset != -1) {
@@ -79,11 +82,23 @@
 
       // Verify the file is long enough to hold all of our
       // docs
-      assert ((int) (indexStream.length()/8)) >= size + this.docStoreOffset;
+        assert ((int) (indexStream.length() / 8)) >= size + this.docStoreOffset;
     } else {
       this.docStoreOffset = 0;
       this.size = (int) (indexStream.length() >> 3);
     }
+
+      success = true;
+    } finally {
+      // With lock-less commits, it's entirely possible (and
+      // fine) to hit a FileNotFound exception above. In
+      // this case, we want to explicitly close any subset
+      // of things that were opened so that we don't have to
+      // wait for a GC to do so.
+      if (!success) {
+        close();
+      }
+    }
   }
 
   /**
@@ -103,9 +118,15 @@ protected final void ensureOpen() throws AlreadyClosedException {
    */
   final void close() throws IOException {
     if (!closed) {
+      if (fieldsStream != null) {
       fieldsStream.close();
+      }
+      if (cloneableFieldsStream != null) {
       cloneableFieldsStream.close();
+      }
+      if (indexStream != null) {
       indexStream.close();
+      }
       IndexInput localFieldsStream = (IndexInput) fieldsStreamTL.get();
       if (localFieldsStream != null) {
         localFieldsStream.close();
diff --git a/lucene/java/trunk/src/java/org/apache/lucene/index/TermInfosReader.java b/lucene/java/trunk/src/java/org/apache/lucene/index/TermInfosReader.java
index 89e2d2ef..7dbdafbb 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/index/TermInfosReader.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/index/TermInfosReader.java
@@ -48,17 +48,31 @@
 
   TermInfosReader(Directory dir, String seg, FieldInfos fis, int readBufferSize)
        throws CorruptIndexException, IOException {
+    boolean success = false;
+
+    try {
     directory = dir;
     segment = seg;
     fieldInfos = fis;
 
-    origEnum = new SegmentTermEnum(directory.openInput(segment + ".tis", readBufferSize),
-                                   fieldInfos, false);
+      origEnum = new SegmentTermEnum(directory.openInput(segment + ".tis",
+          readBufferSize), fieldInfos, false);
     size = origEnum.size;
 
-    indexEnum =
-      new SegmentTermEnum(directory.openInput(segment + ".tii", readBufferSize),
-			  fieldInfos, true);
+      indexEnum = new SegmentTermEnum(directory.openInput(segment + ".tii",
+          readBufferSize), fieldInfos, true);
+
+      success = true;
+    } finally {
+      // With lock-less commits, it's entirely possible (and
+      // fine) to hit a FileNotFound exception above. In
+      // this case, we want to explicitly close any subset
+      // of things that were opened so that we don't have to
+      // wait for a GC to do so.
+      if (!success) {
+        close();
+      }
+    }
   }
 
   public int getSkipInterval() {
diff --git a/lucene/java/trunk/src/java/org/apache/lucene/index/TermVectorsReader.java b/lucene/java/trunk/src/java/org/apache/lucene/index/TermVectorsReader.java
index 8b774cc0..dcfeced7 100644
--- a/lucene/java/trunk/src/java/org/apache/lucene/index/TermVectorsReader.java
+++ b/lucene/java/trunk/src/java/org/apache/lucene/index/TermVectorsReader.java
@@ -53,6 +53,9 @@
     
   TermVectorsReader(Directory d, String segment, FieldInfos fieldInfos, int readBufferSize, int docStoreOffset, int size)
     throws CorruptIndexException, IOException {
+    boolean success = false;
+
+    try {
     if (d.fileExists(segment + TermVectorsWriter.TVX_EXTENSION)) {
       tvx = d.openInput(segment + TermVectorsWriter.TVX_EXTENSION, readBufferSize);
       checkValidFormat(tvx);
@@ -68,11 +71,22 @@
         this.size = size;
         // Verify the file is long enough to hold all of our
         // docs
-        assert ((int) (tvx.length()/8)) >= size + docStoreOffset;
+          assert ((int) (tvx.length() / 8)) >= size + docStoreOffset;
       }
     }
 
     this.fieldInfos = fieldInfos;
+      success = true;
+    } finally {
+      // With lock-less commits, it's entirely possible (and
+      // fine) to hit a FileNotFound exception above. In
+      // this case, we want to explicitly close any subset
+      // of things that were opened so that we don't have to
+      // wait for a GC to do so.
+      if (!success) {
+        close();
+      }
+    }
   }
   
   private int checkValidFormat(IndexInput in) throws CorruptIndexException, IOException
