diff --git a/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/display/DisplayCanopy.java b/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/display/DisplayCanopy.java
index 9e4c0977..e45b6df6 100644
--- a/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/display/DisplayCanopy.java
+++ b/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/display/DisplayCanopy.java
@@ -17,14 +17,9 @@
 
 package org.apache.mahout.clustering.display;
 
-import java.awt.BasicStroke;
-import java.awt.Color;
-import java.awt.Graphics;
-import java.awt.Graphics2D;
-import java.util.List;
-
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.Path;
+import org.apache.hadoop.fs.PathFilter;
 import org.apache.mahout.clustering.Cluster;
 import org.apache.mahout.clustering.canopy.CanopyDriver;
 import org.apache.mahout.common.HadoopUtil;
@@ -32,6 +27,9 @@
 import org.apache.mahout.common.distance.ManhattanDistanceMeasure;
 import org.apache.mahout.math.DenseVector;
 
+import java.awt.*;
+import java.util.List;
+
 /**
  * Java desktop graphics class that runs canopy clustering and displays the results.
  * This class generates random data and clusters it.
@@ -81,7 +79,13 @@ public static void main(String[] args) throws Exception {
     //boolean b = true;
     //if (b) {
     CanopyDriver.buildClusters(conf, samples, output, new ManhattanDistanceMeasure(), T1, T2, 0, true);
-    loadClusters(output);
+    loadClusters(output, new PathFilter() {
+      @Override
+      public boolean accept(Path path) {
+        String pathString = path.toString();
+        return pathString.contains("/clusters-");
+      }
+    });
     //} else {
     //  List<Vector> points = new ArrayList<Vector>();
     //  for (VectorWritable sample : SAMPLE_DATA) {
diff --git a/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/display/DisplayClustering.java b/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/display/DisplayClustering.java
index 2577e8c5..7c1eca5b 100644
--- a/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/display/DisplayClustering.java
+++ b/mahout/trunk/examples/src/main/java/org/apache/mahout/clustering/display/DisplayClustering.java
@@ -38,6 +38,7 @@
 import org.apache.hadoop.fs.FileStatus;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
+import org.apache.hadoop.fs.PathFilter;
 import org.apache.hadoop.io.SequenceFile;
 import org.apache.hadoop.io.Text;
 import org.apache.hadoop.io.Writable;
@@ -273,6 +274,15 @@ protected static void loadClusters(Path output) throws IOException {
     }
   }
 
+  protected static void loadClusters(Path output, PathFilter filter) throws IOException {
+    Configuration conf = new Configuration();
+    FileSystem fs = FileSystem.get(output.toUri(), conf);
+    for (FileStatus s : fs.listStatus(output, filter)) {
+      List<Cluster> clusters = readClusters(s.getPath());
+      CLUSTERS.add(clusters);
+    }
+  }
+
   /**
    * Generate random samples and add them to the sampleData
    * 
