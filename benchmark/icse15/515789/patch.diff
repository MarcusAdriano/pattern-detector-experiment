diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/AliasInfo.java b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/AliasInfo.java
index 75b4dd21..a4745085 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/AliasInfo.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/AliasInfo.java
@@ -23,9 +23,9 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 /**
  *
- * An interface for describing an alias in Cloudscape systems.
+ * An interface for describing an alias in Derby systems.
  * 
- * In a Cloudscape system, an alias can be one of the following:
+ * In a Derby system, an alias can be one of the following:
  * <ul>
  * <li>method alias
  * <li>class alias
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/DefaultInfo.java b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/DefaultInfo.java
index ab61c57f..4af9ab2d 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/DefaultInfo.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/DefaultInfo.java
@@ -22,7 +22,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 package org.apache.derby.catalog;
 
 /**
- <p>An interface for describing a default for a column or parameter in Cloudscape systems.</p>
+ <p>An interface for describing a default for a column or parameter in Derby systems.</p>
  */
 public interface DefaultInfo
 {
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/GetProcedureColumns.java b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/GetProcedureColumns.java
index 412c6809..1630e826 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/GetProcedureColumns.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/GetProcedureColumns.java
@@ -76,8 +76,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more
       <LI> procedureNullableUnknown - nullability unknown
       </UL>
         <LI><B>REMARKS</B> String => comment describing parameter/column
-        <LI><B>METHOD_ID</B> Short => cloudscape extra column (overloading)
-        <LI><B>PARAMETER_ID</B> Short => cloudscape extra column (output order)
+        <LI><B>METHOD_ID</B> Short => Derby extra column (overloading)
+        <LI><B>PARAMETER_ID</B> Short => Derby extra column (output order)
   </OL>
 
 */
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/Statistics.java b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/Statistics.java
index 3329d9f2..f64d9721 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/Statistics.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/Statistics.java
@@ -26,7 +26,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
  <P>
  This interface is used in the column SYS.SYSSTATISTICS.STATISTICS. It
  encapsulates information collected by the UPDATE STATISTICS command
- and is used internally by the Cloudscape optimizer to estimate cost 
+ and is used internally by the Derby optimizer to estimate cost 
  and selectivity of different query plans.
  <p>
 */
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/SystemProcedures.java b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/SystemProcedures.java
index 76e8effd..a498587c 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/SystemProcedures.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/SystemProcedures.java
@@ -78,7 +78,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
     public  static String SQLERRMC_MESSAGE_DELIMITER = new String(new char[] {(char)20,(char)20,(char)20});
 
 	/**
-	  Method used by Cloudscape Network Server to get localized message (original call
+	  Method used by Derby Network Server to get localized message (original call
 	  from jcc.
 
 	  @param sqlcode	sqlcode, not used.
@@ -181,7 +181,7 @@ private static Connection getDefaultConn()throws SQLException
 
 	/**
 	 *  Get the DatabaseMetaData for the current connection for use in
-	 *  mapping the jcc SYSIBM.* calls to the Cloudscape DatabaseMetaData methods 
+	 *  mapping the jcc SYSIBM.* calls to the Derby DatabaseMetaData methods 
 	 *
 	 *  @return The DatabaseMetaData object of the current connection
 	 */
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/TypeDescriptor.java b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/TypeDescriptor.java
index 912aaded..12c812f9 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/TypeDescriptor.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/TypeDescriptor.java
@@ -23,7 +23,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 /**
  *
- * An interface for describing types in Cloudscape systems.
+ * An interface for describing types in Derby systems.
  *	
  *	
  *	<p>The values in system catalog DATATYPE columns are of type
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/UUID.java b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/UUID.java
index 7526726f..756e2a26 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/catalog/UUID.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/catalog/UUID.java
@@ -23,7 +23,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 /**
 
- An interface for accessing Cloudscape UUIDs, unique identifiers.
+ An interface for accessing Derby UUIDs, unique identifiers.
 		
 	<p>The values in the
 	system catalog held in ID columns with a type of CHAR(36) are the
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/database/Database.java b/db/derby/code/trunk/java/engine/org/apache/derby/database/Database.java
index da49611b..487339e3 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/database/Database.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/database/Database.java
@@ -22,10 +22,9 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 package org.apache.derby.database;
 
 /*
-  The org.apache.derby.iapi.db.Database interface is all the externally available
-  methods on a database.  These are methods that might be called from an
-  SQL-J CALL statement. It is extended by com.ibm.db2j.impl.Database.DatabaseInterface.Database
-  which adds internal methods which are only called from within cloudscape code.
+  The org.apache.derby.iapi.db.Database interface is all the externally 
+  available methods on a database.  These are methods that might be called from 
+  an SQL-J CALL statement. 
 
   The Javadoc comment that follows is for external consumption.
 */
@@ -131,7 +130,7 @@ public void disableLogArchiveMode(boolean deleteOnlineArchivedLogFiles)
 
 	/**
 	  * Freeze the database temporarily so a backup can be taken.
-	  * <P>Please see Cloudscape on line documentation on backup and restore.
+	  * <P>Please see the Derby documentation on backup and restore.
 	  *
 	  * @exception SQLException Thrown on error
 	  */
@@ -139,7 +138,7 @@ public void disableLogArchiveMode(boolean deleteOnlineArchivedLogFiles)
 
 	/**
 	  * Unfreeze the database after a backup has been taken.
-	  * <P>Please see Cloudscape on line documentation on backup and restore.
+	  * <P>Please see the Derby documentation on backup and restore.
 	  *
 	  * @exception SQLException Thrown on error
 	  */
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/database/UserUtility.java b/db/derby/code/trunk/java/engine/org/apache/derby/database/UserUtility.java
index 2485ab99..4ab54916 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/database/UserUtility.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/database/UserUtility.java
@@ -33,7 +33,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import org.apache.derby.iapi.error.PublicAPI;
 
 /**
-  This utility class provides static methods for managing user authorization in a Cloudscape database.
+  This utility class provides static methods for managing user authorization in a Derby database.
   
    <p>This class can only be used within an SQL-J statement, a Java procedure or a server side Java method.
    <p>This class can be accessed using the class alias <code> USERUTILITY </code> in SQL-J statements.
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/diag/ErrorMessages.java b/db/derby/code/trunk/java/engine/org/apache/derby/diag/ErrorMessages.java
index 58c9e66a..12478c82 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/diag/ErrorMessages.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/diag/ErrorMessages.java
@@ -58,7 +58,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
  * (The code returned by getSQLState() in SQLException.)</LI>
  * <LI>MESSAGE--VARCHAR(32672) - nullable.  The error message<br>
  * (The code returned by getMessage() in SQLException.)</LI>
- * <LI>SEVERITY--INTEGER - nullable.  The Cloudscape code for the severity.<br>
+ * <LI>SEVERITY--INTEGER - nullable.  The Derby code for the severity.<br>
  * (The code returned by getErrorCode() in SQLException.)</LI>
  * </UL>
  * 
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/diag/LockTable.java b/db/derby/code/trunk/java/engine/org/apache/derby/diag/LockTable.java
index 380e631f..52a76e5a 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/diag/LockTable.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/diag/LockTable.java
@@ -108,7 +108,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 		The normal way of instantiating a LockTable, equivalent to
 		LockTable(org.apache.derby.diag.LockTable->TABLE_AND_ROWLOCK).
 		Only shows row and table lock and not latches.  Latches are generally
-		held for very short duration and are not of interest to Cloudscape
+		held for very short duration and are not of interest to Derby 
 		users.  Only under abnormal circumstances will one be interested in
 		looking at latches.
 	 */
@@ -138,7 +138,7 @@ public ResultSetMetaData getMetaData()
 	/**
 		@see java.sql.ResultSet#next
 		@exception SQLException if no transaction context can be found, or other
-		Cloudscape internal errors are encountered.
+		Derby internal errors are encountered.
 	 */
 	public boolean next() throws SQLException
 	{
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/diag/StatementCache.java b/db/derby/code/trunk/java/engine/org/apache/derby/diag/StatementCache.java
index 1d763b6a..d8a41a47 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/diag/StatementCache.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/diag/StatementCache.java
@@ -64,7 +64,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 	</UL>
 	<P>
-	The internal identifier of a cached statement matches the toString() method of a PreparedStatement object for a Cloudscape database.
+	The internal identifier of a cached statement matches the toString() method of a PreparedStatement object for a Derby database.
 
 	<P>
 	This class also provides a static method to empty the statement cache, StatementCache.emptyCache()
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/diag/TransactionTable.java b/db/derby/code/trunk/java/engine/org/apache/derby/diag/TransactionTable.java
index e66525f4..6cd320f0 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/diag/TransactionTable.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/diag/TransactionTable.java
@@ -63,9 +63,9 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 	<LI>GLOBAL_XID varchar(140) - nullable.  The global transaction id, only
 	set if this transaction is a participant in a distributed transaction.</LI>
 	<LI>USERNAME varchar(128) - nullable.  The user name, or APP by default.
-	May appear null if the transaction is started by Cloudscape.</LI>
+	May appear null if the transaction is started by Derby.</LI>
 	<LI>TYPE varchar(30) - not nullable. UserTransaction or an internal
-	transaction spawned by Cloudscape.</LI>
+	transaction spawned by Derby.</LI>
 	<LI>STATUS varchar(8) - not nullable.  IDLE or ACTIVE.  A transaction is
 	IDLE only when it is first created or right after it commits.  Any
 	transaction that holds or has held any resource in the database is ACTIVE.
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/EmbeddedSimpleDataSource.java b/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/EmbeddedSimpleDataSource.java
index 29daecfc..c07ef302 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/EmbeddedSimpleDataSource.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/EmbeddedSimpleDataSource.java
@@ -99,7 +99,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 	private String shutdownDatabase;
 
 	/**
-	 * Cloudscape specific connection attributes.
+	 * Derby specific connection attributes.
 	 * 
 	 * @serial
 	 */
@@ -111,7 +111,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 	transient private int loginTimeout;
 
 	// Unlike a DataSource, LocalDriver is shared by all
-	// Cloudscape databases in the same jvm.
+	// Derby databases in the same jvm.
 	transient private InternalDriver driver;
 
 	transient private String jdbcurl;
@@ -148,7 +148,7 @@ public int getLoginTimeout() throws SQLException {
 	 * specifies that there is no timeout. When a data source object is created,
 	 * the login timeout is initially zero.
 	 * <P>
-	 * Cloudscape ignores this property.
+	 * Derby ignores this property.
 	 * 
 	 * @param seconds
 	 *            the data source login time limit
@@ -327,7 +327,7 @@ public final String getShutdownDatabase() {
 	}
 
 	/**
-	 * Set this property to pass in more Cloudscape specific connection URL
+	 * Set this property to pass in more Derby specific connection URL
 	 * attributes.
 	<BR>
    Any attributes that can be set using a property of this DataSource implementation
@@ -336,7 +336,7 @@ public final String getShutdownDatabase() {
    unexpected behaviour. 
    	 * 
 	 * @param prop
-	 *            set to the list of Cloudscape connection attributes separated
+	 *            set to the list of Derby connection attributes separated
 	 *            by semi-colons. E.g., to specify an encryption bootPassword of
 	 *            "x8hhk2adf", and set upgrade to true, do the following:
 	 * 
@@ -346,14 +346,14 @@ public final String getShutdownDatabase() {
 	 * 
 	 * </PRE>
 	 * 
-	 * See Cloudscape's documentation for complete list.
+	 * See Derby's documentation for complete list.
 	 */
 	public final void setConnectionAttributes(String prop) {
 		connectionAttributes = prop;
 		update();
 	}
 
-	/** @return Cloudscape specific connection URL attributes */
+	/** @return Derby specific connection URL attributes */
 	public final String getConnectionAttributes() {
 		return connectionAttributes;
 	}
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/EmbeddedXADataSource.java b/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/EmbeddedXADataSource.java
index 2e2c0b06..15d7a58c 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/EmbeddedXADataSource.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/EmbeddedXADataSource.java
@@ -147,7 +147,7 @@ private void setupResourceAdapter(String user, String password, boolean requestP
 					Database database = null;
 
 					// if monitor is never setup by any ModuleControl, getMonitor
-					// returns null and no cloudscape database has been booted. 
+					// returns null and no Derby database has been booted. 
 					if (Monitor.getMonitor() != null)
 						database = (Database)
 							Monitor.findService(Property.DATABASE_MODULE, dbName);
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/InternalDriver.java b/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/InternalDriver.java
index 4106beba..05b479eb 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/InternalDriver.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/InternalDriver.java
@@ -154,7 +154,7 @@ public Connection connect(String url, Properties info)
 				return connContext.getNestedConnection(false);
 				
 			}
-			// there is no cloudscape connection, so
+			// there is no Derby connection, so
 			// return null, as we are not the driver to handle this
 			return null;
 		}
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/ReferenceableDataSource.java b/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/ReferenceableDataSource.java
index e58d5249..6b44dff6 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/ReferenceableDataSource.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/ReferenceableDataSource.java
@@ -43,9 +43,9 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 
 /** 
 
-	Cloudscape DataSource implementation base class.
+        Derby DataSource implementation base class.
 	ReferenceableDataSource provides support for JDBC standard DataSource attributes and acts
-	as the ObjectFactory to generate Cloudscape DataSource implementations.
+	as the ObjectFactory to generate Derby DataSource implementations.
 	<P>
 	The standard attributes provided by this class are:
 	<UL>
@@ -56,7 +56,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 	<LI>user
 	</UL>
 	<BR>
-	See the specific Cloudscape DataSource implementation for details on their meaning.
+	See the specific Derby DataSource implementation for details on their meaning.
 	<BR>
 	See the JDBC 3.0 specification for more details.
 
@@ -198,7 +198,7 @@ public int getLoginTimeout() throws SQLException
 	 * When a data source object is created, the login timeout is
 	 * initially zero.
 	 <P>
-		Cloudscape ignores this property.
+		Derby ignores this property.
 	 * @param seconds the data source login time limit
 	 * @exception SQLException if a database access error occurs.
 	 */
@@ -259,7 +259,7 @@ public void setLogWriter(PrintWriter out) throws SQLException
 	 */
 
 	/**
-		Re-Create Cloudscape datasource given a reference.
+		Re-Create Derby datasource given a reference.
 
 		@param obj The possibly null object containing location or reference
 		information that can be used in creating an object. 
@@ -270,7 +270,7 @@ public void setLogWriter(PrintWriter out) throws SQLException
 		@param environment The possibly null environment that is used in
 		creating the object. 
 
-		@return One of the Cloudscape datasource object created; null if an
+		@return One of the Derby datasource object created; null if an
 		object cannot be created. 
 
 		@exception Exception  if this object factory encountered an exception
@@ -388,7 +388,7 @@ void update() {
 	}
 
 	/**
-		Return a connection for the Cloudscape family of data source implementations.
+		Return a connection for the Derby family of data source implementations.
 	*/
 	java.sql.Connection getConnection(String username, String password, boolean requestPassword) throws SQLException {
 		return null;
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/XATransactionState.java b/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/XATransactionState.java
index ff1dfed9..68ac1a43 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/XATransactionState.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/jdbc/XATransactionState.java
@@ -53,7 +53,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 	final XAXactId			xid;	
 	/**
 		When an XAResource suspends a transaction (end(TMSUSPEND)) it must be resumed
-		using the same XAConnection. This has been the traditional Cloudscape behaviour,
+		using the same XAConnection. This has been the traditional Cloudscape/Derby behaviour,
 		though there does not seem to be a specific reference to this behaviour in
 		the JTA spec. Note that while the transaction is suspended by this XAResource,
 		another XAResource may join the transaction and suspend it after the join.
diff --git a/db/derby/code/trunk/java/engine/org/apache/derby/vti/DeferModification.java b/db/derby/code/trunk/java/engine/org/apache/derby/vti/DeferModification.java
index 35e0ca6f..76298b6c 100644
--- a/db/derby/code/trunk/java/engine/org/apache/derby/vti/DeferModification.java
+++ b/db/derby/code/trunk/java/engine/org/apache/derby/vti/DeferModification.java
@@ -160,7 +160,7 @@ public boolean subselectRequiresDefer( int statementType,
         throws SQLException;
 
     /**
-     * This VTI method is called by Cloudscape when a VTI modification (insert, update, or delete)
+     * This VTI method is called by Derby when a VTI modification (insert, update, or delete)
      * is executed. It is called after the VTI has been instantiated but before any rows are read,
      * inserted, updated, or deleted.
      *
