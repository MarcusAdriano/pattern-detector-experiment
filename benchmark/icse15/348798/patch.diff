diff --git a/db/derby/code/trunk/java/client/org/apache/derby/client/am/Cursor.java b/db/derby/code/trunk/java/client/org/apache/derby/client/am/Cursor.java
index 940fe326..db444c84 100644
--- a/db/derby/code/trunk/java/client/org/apache/derby/client/am/Cursor.java
+++ b/db/derby/code/trunk/java/client/org/apache/derby/client/am/Cursor.java
@@ -142,6 +142,9 @@ public boolean next() throws SqlException {
         // mark the start of a new row.
         makeNextRowPositionCurrent();
 
+        // Moving out of the hole, set isUpdateDeleteHole to false
+        isUpdateDeleteHole_ = false;
+
         // Drive the CNTQRY outside of calculateColumnOffsetsForRow() if the dataBuffer_
         // contains no data since it has no abilities to handle replies other than
         // the QRYDTA, i.e. ENDQRYRM when the result set contains no more rows.
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/updatableResultSet.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/updatableResultSet.java
index 7adcb285..d1bbbaee 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/updatableResultSet.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/functionTests/tests/lang/updatableResultSet.java
@@ -879,6 +879,11 @@ public static void main(String[] args) {
 			}
       System.out.println("Position the ResultSet with next()");
 			rs.next();
+                        //Derby-718 check that column values are not null after next()
+                        if (rs.getInt(1) == 0) {
+                            System.out.println("First column should not be 0");
+                        }
+                        // Derby-718
       System.out.println("Should be able to deletRow() on the current row now");
 			rs.deleteRow();
 			//have to close the resultset because by default, resultsets are held open over commit
@@ -1031,6 +1036,11 @@ public static void main(String[] args) {
 			rs.next();
 			rs.deleteRow();
 			rs.next();
+                        //Derby-718 check that column values are not null after next()
+                        if (rs.getInt(1) == 0) {
+                            System.out.println("Column c21 should not be 0");
+                        }
+                        // Derby-718
 			rs.deleteRow();
 			System.out.println("As expected, no rows in temp table after deleteRow");
 			dumpRS(stmt.executeQuery("select * from SESSION.t2"));
