diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/unitTests/store/T_Util.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/unitTests/store/T_Util.java
index 0e1f7337..d9f3f9ef 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/unitTests/store/T_Util.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/unitTests/store/T_Util.java
@@ -35,7 +35,6 @@ Licensed to the Apache Software Foundation (ASF) under one or more
 import org.apache.derby.iapi.services.context.ContextManager;
 import org.apache.derby.iapi.services.locks.*;
 import org.apache.derby.iapi.services.sanity.SanityManager;
-import org.apache.derby.shared.common.sanity.AssertFailure;
 
 import org.apache.derby.iapi.error.StandardException;
 
@@ -1163,12 +1162,15 @@ public void run() {
 			if (!se.getMessageId().equals("08000")) {
 				throw se;
 			}
-		} catch (AssertFailure af) {
+		} catch (RuntimeException e) {
 			// When running in sane mode, an AssertFailure will be thrown if we
-			// try to double latch a page.
+			// try to double latch a page. The AssertFailure class is not
+			// available in insane jars, so we cannot reference the class
+			// directly.
 			if (!(SanityManager.DEBUG &&
-				  af.getMessage().endsWith("Attempted to latch page twice"))) {
-				throw af;
+				  e.getClass().getName().endsWith(".sanity.AssertFailure") &&
+				  e.getMessage().endsWith("Attempted to latch page twice"))) {
+				throw e;
 			}
 		}
 
