diff --git a/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/UpdateSensitiveBlobLocatorInputStream.java b/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/UpdateSensitiveBlobLocatorInputStream.java
index c8f00f1c..d8c13bc8 100644
--- a/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/UpdateSensitiveBlobLocatorInputStream.java
+++ b/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/UpdateSensitiveBlobLocatorInputStream.java
@@ -42,7 +42,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
      * and and calls the super class constructors with 
      * appropriate initializers.
      *
-     * @param connection connection to be used to read the
+     * @param con connection to be used to read the
      *        <code>Blob</code> value from the server
      * @param blob <code>Blob</code> object that contains locator for
      *        the <code>Blob</code> value on the server.
@@ -59,7 +59,7 @@ public UpdateSensitiveBlobLocatorInputStream(Connection con, Blob blob)
     /**
      * Creates an instance of the BlobLocatorInputStream.
      *
-     * @param connection connection to be used to read the
+     * @param con connection to be used to read the
      *        <code>Blob</code> value from the server
      * @param blob <code>Blob</code> object that contains locator for
      *        the <code>Blob</code> value on the server.
diff --git a/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/UpdateSensitiveClobLocatorInputStream.java b/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/UpdateSensitiveClobLocatorInputStream.java
index 9ea146b5..653e7cea 100644
--- a/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/UpdateSensitiveClobLocatorInputStream.java
+++ b/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/UpdateSensitiveClobLocatorInputStream.java
@@ -42,7 +42,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
      * wrapped in a BufferedInputStream and and calls the 
      * super class constructor with appropriate initializers.
      *
-     * @param connection connection to be used to read the
+     * @param con connection to be used to read the
      *        <code>Clob</code> value from the server
      * @param clob <code>Clob</code> object that contains locator for
      *        the <code>Clob</code> value on the server.
diff --git a/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/UpdateSensitiveClobLocatorReader.java b/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/UpdateSensitiveClobLocatorReader.java
index 09d68885..1babc936 100644
--- a/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/UpdateSensitiveClobLocatorReader.java
+++ b/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/UpdateSensitiveClobLocatorReader.java
@@ -62,12 +62,10 @@ Licensed to the Apache Software Foundation (ASF) under one or more
      * Initializes the Reader, updateCount, currentPos
      * and the connection to the appropriate values.
      *
-     * @param connection connection to be used to read the
+     * @param con connection to be used to read the
      *        <code>Clob</code> value from the server
      * @param clob the <code>Clob</code> object associated with
      *            this stream.
-     * @param r a <code>Reader</code> that contains an instance
-     *          of <code>ClobLocatorReader</code>.
      */
     protected UpdateSensitiveClobLocatorReader(Connection con, Clob clob) 
     throws SqlException {
@@ -96,12 +94,10 @@ protected UpdateSensitiveClobLocatorReader(Connection con, Clob clob)
      * Initializes the Reader, updateCount, currentPos,
      * length and the connection to the appropriate values.
      *
-     * @param connection connection to be used to read the
+     * @param con connection to be used to read the
      *        <code>Clob</code> value from the server
      * @param clob the <code>Clob</code> object associated with
      *             this reader.
-     * @param r an <code>Reader</code> that contains the
-     *           <code>ClobLocatorReader</code> instance.
      * @param pos the position from which the first read begins.
      * @param len the length in bytes of the partial value to be
      *            retrieved.
diff --git a/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/UpdateSensitiveLOBLocatorInputStream.java b/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/UpdateSensitiveLOBLocatorInputStream.java
index 20d93652..9f0f3b83 100644
--- a/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/UpdateSensitiveLOBLocatorInputStream.java
+++ b/db/derby/code/branches/10.3/java/client/org/apache/derby/client/am/UpdateSensitiveLOBLocatorInputStream.java
@@ -77,7 +77,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more
      * Initializes the InputStream, updateCount, currentPos
      * and the connection to the appropriate values.
      *
-     * @param connection connection to be used to read the
+     * @param con connection to be used to read the
      *        <code>Lob</code> value from the server
      * @param lob <code>Lob</code> object which could be a
      *            <code>Blob</code> or a <code>Clob</code>.
@@ -109,7 +109,7 @@ protected UpdateSensitiveLOBLocatorInputStream(Connection con, Lob lob,
      * Initializes the InputStream, updateCount, currentPos,
      * length and the connection to the appropriate values.
      *
-     * @param connection connection to be used to read the
+     * @param con connection to be used to read the
      *        <code>Lob</code> value from the server
      * @param lob <code>Lob</code> object which could be a
      *            <code>Blob</code> or a <code>Clob</code>.
diff --git a/db/derby/code/branches/10.3/java/engine/org/apache/derby/jdbc/EmbedXAResource.java b/db/derby/code/branches/10.3/java/engine/org/apache/derby/jdbc/EmbedXAResource.java
index 8ab66582..4c4441b2 100644
--- a/db/derby/code/branches/10.3/java/engine/org/apache/derby/jdbc/EmbedXAResource.java
+++ b/db/derby/code/branches/10.3/java/engine/org/apache/derby/jdbc/EmbedXAResource.java
@@ -523,9 +523,6 @@ public synchronized boolean setTransactionTimeout(int seconds)
 
     /** Returns the default value for the transaction timeout in milliseconds
      *  setted up by the system properties.
-     *
-     *  @see Property.PROP_XA_TRANSACTION_TIMEOUT
-     *  @see Property.DEFAULT_XA_TRANSACTION_TIMEOUT
      */
     private long getDefaultXATransactionTimeout() throws XAException {
         try {
diff --git a/db/derby/code/branches/10.3/java/engine/org/apache/derby/jdbc/XATransactionState.java b/db/derby/code/branches/10.3/java/engine/org/apache/derby/jdbc/XATransactionState.java
index eae8821a..0881d3fc 100644
--- a/db/derby/code/branches/10.3/java/engine/org/apache/derby/jdbc/XATransactionState.java
+++ b/db/derby/code/branches/10.3/java/engine/org/apache/derby/jdbc/XATransactionState.java
@@ -331,7 +331,7 @@ synchronized void xa_rollback() throws SQLException {
 
    /**
      * Commit the global transaction and cancel the timeout task.
-     * @param onPhase Indicates whether to use one phase commit protocol.
+     * @param onePhase Indicates whether to use one phase commit protocol.
      *                Otherwise two phase commit protocol will be used.
      */
     synchronized void xa_commit(boolean onePhase) throws SQLException {
