diff --git a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/cli/CliUtils.java b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/cli/CliUtils.java
index 1f646d6b..6bd8ea41 100644
--- a/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/cli/CliUtils.java
+++ b/cassandra/branches/cassandra-0.7/src/java/org/apache/cassandra/cli/CliUtils.java
@@ -6,6 +6,7 @@
 import org.apache.cassandra.thrift.CfDef;
 import org.apache.cassandra.thrift.IndexOperator;
 import org.apache.cassandra.thrift.KsDef;
+import org.apache.commons.lang.StringEscapeUtils;
 /*
  * 
  * Licensed to the Apache Software Foundation (ASF) under one
@@ -38,70 +39,16 @@
      */
     public static String unescapeSQLString(String b)
     {
-        int j = 1;
-        final char start = b.charAt(0);
-        final char end = b.charAt(b.length() - 1);
-
-        if (start != '\'' && end != '\'')
-        {
-            j = 0;
-        }
-
-        StringBuilder sb = new StringBuilder(b.length());
-
-        for (int i = j; ((j == 0) ? i : i + 1) < b.length(); i++)
-        {
-            if (b.charAt(i) == '\\' && i + 2 < b.length())
-            {
-                char n = b.charAt(i + 1);
-                switch (n)
-                {
-                    case '0':
-                        sb.append("\0");
-                        break;
-                    case '\'':
-                        sb.append("'");
-                        break;
-                    case '"':
-                        sb.append("\"");
-                        break;
-                    case 'b':
-                        sb.append("\b");
-                        break;
-                    case 'n':
-                        sb.append("\n");
-                        break;
-                    case 'r':
-                        sb.append("\r");
-                        break;
-                    case 't':
-                        sb.append("\t");
-                        break;
-                    case 'Z':
-                        sb.append("\u001A");
-                        break;
-                    case '\\':
-                        sb.append("\\");
-                        break;
-                    case '%':
-                        sb.append("%");
-                        break;
-                    case '_':
-                        sb.append("_");
-                        break;
-                    default:
-                        sb.append(n);
-                }
-            }
-            else
-            {
-                sb.append(b.charAt(i));
-            }
+        if (b.charAt(0) == '\'' && b.charAt(b.length()-1) == '\'')
+            b = b.substring(1, b.length()-1);
+        return StringEscapeUtils.unescapeJava(b);
         }
 
-        return sb.toString();
+    public static String escapeSQLString(String b)
+    {
+        // single quotes are not escaped in java, need to be for cli
+        return StringEscapeUtils.escapeJava(b).replace("\'", "\\'");
     }
-
     /**
      * Returns IndexOperator from string representation
      * @param operator - string representing IndexOperator (=, >=, >, <, <=)
diff --git a/cassandra/branches/cassandra-0.7/test/unit/org/apache/cassandra/cli/CliTest.java b/cassandra/branches/cassandra-0.7/test/unit/org/apache/cassandra/cli/CliTest.java
index 25d75876..50903018 100644
--- a/cassandra/branches/cassandra-0.7/test/unit/org/apache/cassandra/cli/CliTest.java
+++ b/cassandra/branches/cassandra-0.7/test/unit/org/apache/cassandra/cli/CliTest.java
@@ -215,4 +215,17 @@ else if (statement.startsWith("assume "))
             errStream.reset(); // no errors to the end user.
         }
     }
+
+    @Test
+    public void testEscape()
+    {
+        //escaped is the string read from the cli.
+        String escaped = "backspace \\b tab \\t linefeed \\n form feed \\f carriage return \\r duble quote \\\" " +
+                "single quote \\' backslash \\\\";
+        String unescaped = "backspace \b tab \t linefeed \n form feed \f carriage return \r duble quote \" " +
+                "single quote ' backslash \\";
+        // when read from the cli may have single quotes around it
+        assertEquals(unescaped, CliUtils.unescapeSQLString("'" + escaped + "'"));
+        assertEquals(escaped, CliUtils.escapeSQLString(unescaped));
+    }
 }
