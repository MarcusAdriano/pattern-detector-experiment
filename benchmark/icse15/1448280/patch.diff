diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java
index 695f798d..e663d679 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/BaseTestCase.java
@@ -591,9 +591,15 @@ public static Process execJavaCmd(
             // also add the setting for emma.active so any tests
             // that fork will work correctly. See DERBY-5558.
             String emmaactive=getSystemProperty("emma.active");
-            if (emmaactive != null)
+            if (emmaactive != null) {
                 cmdlist.add("-Demma.active=" + emmaactive);            
 	    }
+            // Do the same for jacoco.active, see DERBY-6079.
+            String jacocoactive = getSystemProperty("jacoco.active");
+            if (jacocoactive != null) {
+                cmdlist.add("-Djacoco.active=" + jacocoactive);
+            }
+	    }
 
         if (isCVM()) {
             // DERBY-5642: The default maximum heap size on CVM is very low.
diff --git a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/SecurityManagerSetup.java b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/SecurityManagerSetup.java
index f2501b93..c5380afa 100644
--- a/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/SecurityManagerSetup.java
+++ b/db/derby/code/trunk/java/testing/org/apache/derbyTesting/junit/SecurityManagerSetup.java
@@ -89,6 +89,14 @@
         
 	}
 
+    static {
+        // Work around bug in weme6.2 (DERBY-5558 and DERBY-6079).
+        if (BaseTestCase.isJ9Platform()) {
+            BaseTestCase.setSystemProperty("emma.active", "");
+            BaseTestCase.setSystemProperty("jacoco.active", "");
+        }
+    }
+
     static final boolean jacocoEnabled = checkIfJacocoIsRunning();
     private static boolean checkIfJacocoIsRunning() {
         return ((Boolean)AccessController.doPrivileged(new PrivilegedAction() {
