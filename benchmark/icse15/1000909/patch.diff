diff --git a/cassandra/trunk/src/java/org/apache/cassandra/db/ExpiringColumn.java b/cassandra/trunk/src/java/org/apache/cassandra/db/ExpiringColumn.java
index 12f7801a..d9813ff6 100644
--- a/cassandra/trunk/src/java/org/apache/cassandra/db/ExpiringColumn.java
+++ b/cassandra/trunk/src/java/org/apache/cassandra/db/ExpiringColumn.java
@@ -113,4 +113,17 @@ public String getString(AbstractType comparator)
         sb.append(timeToLive);
         return sb.toString();
     }
+
+    @Override
+    public IClock getMarkedForDeleteAt()
+    {
+        if (isMarkedForDelete())
+        {
+            return clock;
+        }
+        else
+        {
+            throw new IllegalStateException("column is not marked for delete");
+        }
+    }
 }
diff --git a/cassandra/trunk/test/unit/org/apache/cassandra/db/RowTest.java b/cassandra/trunk/test/unit/org/apache/cassandra/db/RowTest.java
index 2e028d17..f23c68d9 100644
--- a/cassandra/trunk/test/unit/org/apache/cassandra/db/RowTest.java
+++ b/cassandra/trunk/test/unit/org/apache/cassandra/db/RowTest.java
@@ -24,6 +24,7 @@
 import org.junit.Test;
 
 import static junit.framework.Assert.assertEquals;
+import static junit.framework.Assert.fail;
 import org.apache.cassandra.db.marshal.AsciiType;
 import static org.apache.cassandra.Util.column;
 
@@ -71,4 +72,24 @@ public void testResolve()
         assert Arrays.equals(cf1.getColumn("one".getBytes()).value(), "B".getBytes());
         assert Arrays.equals(cf1.getColumn("two".getBytes()).value(), "C".getBytes());
     }
+
+    @Test
+    public void testExpiringColumnExpiration()
+    {
+        Column c = new ExpiringColumn("one".getBytes(), "A".getBytes(), new TimestampClock(0), 1);
+        assert !c.isMarkedForDelete();
+
+        try
+        {
+            // Because we keep the local deletion time with a precision of a
+            // second, we could have to wait 2 seconds in worst case scenario.
+            Thread.sleep(2000);
+        }
+        catch (InterruptedException e)
+        {
+            fail("Cannot test column expiration if you wake me up too early");
+        }
+
+        assert c.isMarkedForDelete() && c.getMarkedForDeleteAt().equals(new TimestampClock(0));
+    }
 }
