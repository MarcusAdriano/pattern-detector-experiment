diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java
index c376d50c..751da93d 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java
@@ -51,6 +51,7 @@
   protected class CacheValue {
     public Directory directory;
     public int refCnt = 1;
+    public boolean closed;
     public String path;
     public boolean doneWithDir = false;
     @Override
@@ -181,7 +182,10 @@ private void close(Directory directory) throws IOException {
         closeDirectory(cacheValue);
         
         byDirectoryCache.remove(directory);
-        if (cacheValue.path != null) {
+        
+        // if it's been closed, it's path is now
+        // owned by another Directory instance
+        if (!cacheValue.closed) {
           byPathCache.remove(cacheValue.path);
         }
       }
@@ -276,9 +280,9 @@ public final Directory get(String path,  DirContext dirContext, String rawLockTy
             }
           }
           
-          // kill the path, it will be owned by the new dir
+          // close the entry, it will be owned by the new dir
           // we count on it being released by directory
-          cacheValue.path = null;
+          cacheValue.closed = true;
           
         }
       }
diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory.java
index 74992088..cbdee7c2 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/StandardDirectoryFactory.java
@@ -60,16 +60,15 @@ public boolean isAbsolute(String path) {
   
   @Override
   public void remove(Directory dir) throws IOException {
-    CacheValue val;
     synchronized (this) {
-      val = byDirectoryCache.get(dir);
-    }
+      CacheValue val = byDirectoryCache.get(dir);
     if (val == null) {
       throw new IllegalArgumentException("Unknown directory " + dir);
     }
-    if (val.path != null) {
+      
       File dirFile = new File(val.path);
       FileUtils.deleteDirectory(dirFile);
+
     }
   }
 
