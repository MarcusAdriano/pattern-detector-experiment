diff --git a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredConnection.java b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredConnection.java
index 908cceee..ccc14eea 100644
--- a/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredConnection.java
+++ b/incubator/derby/code/trunk/java/engine/org/apache/derby/iapi/jdbc/BrokeredConnection.java
@@ -19,8 +19,6 @@
 import java.sql.SQLException;
 import java.sql.SQLWarning;
 
-import org.apache.derby.iapi.services.io.StoredFormatIds;
-import org.apache.derby.iapi.services.io.Formatable;
 import org.apache.derby.impl.jdbc.Util;
 
 import java.io.ObjectOutput;
@@ -28,12 +26,7 @@
 
 /**
  * This is a rudimentary connection that delegates
- * EVERYTHING to Connection.  Its sole purpose is to
- * provide a way to replicate connections.  It has special
- * logic to reconstitute a connection on a server other
- * than where it was first run.
- *
- * @author jamie
+ * EVERYTHING to Connection.
  */
 public class BrokeredConnection implements Connection
 {
@@ -43,7 +36,7 @@
 
 	private static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_2002_2004;
 
-	protected BrokeredConnectionControl control;
+	protected final BrokeredConnectionControl control;
 	private boolean isClosed;
 
 	/**
@@ -60,13 +53,6 @@
 	//
 	/////////////////////////////////////////////////////////////////////////
 
-	/**
-	 *	Public niladic constructor to satisfy Formatable interface.
-	 */
-	public	BrokeredConnection()
-	{
-	}
-
 	public	BrokeredConnection(BrokeredConnectionControl control)
 	{
 		this.control = control;
@@ -379,6 +365,7 @@ protected final Connection getRealConnection() throws SQLException {
 	}
 
 	protected final void notifyException(SQLException sqle) {
+		if (!isClosed)
 		control.notifyException(sqle);
 	}
 
