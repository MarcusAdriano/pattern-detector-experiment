diff --git a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java
index 05a9f5e0..d16f0c84 100644
--- a/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java
+++ b/lucene/dev/branches/branch_4x/solr/core/src/java/org/apache/solr/core/CachingDirectoryFactory.java
@@ -139,7 +139,7 @@ public void close() throws IOException {
           }
           
           assert val.refCnt == 0 : val.refCnt;
-          log.info("Closing directory when closing factory:" + val.path);
+          log.info("Closing directory when closing factory: " + val.path);
           closeDirectory(val);
         } catch (Throwable t) {
           SolrException.log(log, "Error closing directory", t);
@@ -160,12 +160,11 @@ private void close(Directory directory) throws IOException {
         throw new IllegalArgumentException("Unknown directory: " + directory
             + " " + byDirectoryCache);
       }
-      log.info("Releasing directory:" + cacheValue.path);
+      log.debug("Releasing directory: " + cacheValue.path);
 
       cacheValue.refCnt--;
 
       if (cacheValue.refCnt == 0 && cacheValue.doneWithDir) {
-        log.info("Closing directory:" + cacheValue.path);
         closeDirectory(cacheValue);
         
         byDirectoryCache.remove(directory);
@@ -186,7 +185,7 @@ private void closeDirectory(CacheValue cacheValue) {
       }
     }
     try {
-      log.info("Closing directory:" + cacheValue.path);
+      log.info("Closing directory: " + cacheValue.path);
       cacheValue.directory.close();
     } catch (Throwable t) {
       SolrException.log(log, "Error closing directory", t);
@@ -278,7 +277,7 @@ public final Directory get(String path,  DirContext dirContext, String rawLockTy
         
         byDirectoryCache.put(directory, newCacheValue);
         byPathCache.put(fullPath, newCacheValue);
-        log.info("return new directory for " + fullPath + " forceNew:" + forceNew);
+        log.info("return new directory for " + fullPath + " forceNew: " + forceNew);
       } else {
         cacheValue.refCnt++;
       }
